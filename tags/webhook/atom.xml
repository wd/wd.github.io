<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Webhook on wd and cc</title><link>https://wdicc.com/tags/webhook/</link><description>Recent content in Webhook on wd and cc</description><generator>Hugo</generator><language>en</language><copyright>wd © 2025</copyright><lastBuildDate>Sun, 28 Aug 2022 09:38:59 +0800</lastBuildDate><atom:link href="https://wdicc.com/tags/webhook/atom.xml" rel="self" type="application/rss+xml"/><item><title>Webhooks in Kubernetes</title><link>https://wdicc.com/webhooks-in-kubernetes/</link><pubDate>Sun, 28 Aug 2022 09:38:59 +0800</pubDate><guid>https://wdicc.com/webhooks-in-kubernetes/</guid><description>&lt;p&gt;
Kubernetes allows us to hook on API request chain to do some specific checks or modifies.&lt;/p&gt;
&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
Kubernetes API access control
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
There are two types of control. One is to control which user(token, group) is allowed to access, the other one is to control which resource a user could access. The kube-apiserver has two arguments to allow users to define that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Authentication: &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication"&gt;–authentication-token-webhook-config-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Authorization: &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/webhook/"&gt;–authorization-webhook-config-file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-headline-2" class="outline-2"&gt;
&lt;h2 id="headline-2"&gt;
Admission webhook
&lt;/h2&gt;
&lt;div id="outline-text-headline-2" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#what-are-admission-webhooks"&gt;Here&lt;/a&gt; is the definition about what admission webhook could do.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Admission webhooks are HTTP callbacks that receive admission requests and do something with them. You can define two types of admission webhooks, validating admission webhook and mutating admission webhook. Mutating admission webhooks are invoked first, and can modify objects sent to the API server to enforce custom defaults. After all object modifications are complete, and after the incoming object is validated by the API server, validating admission webhooks are invoked and can reject requests to enforce custom policies.&lt;/p&gt;</description></item></channel></rss>