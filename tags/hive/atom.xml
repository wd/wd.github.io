<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hive on wd and cc</title>
    <link>https://wdicc.com/tags/hive/</link>
    <description>Recent content in Hive on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 03 May 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/hive/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hive 里面不能 drop table</title>
      <link>https://wdicc.com/cant-drop-table-in-hive/</link>
      <pubDate>Tue, 03 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cant-drop-table-in-hive/</guid>
      <description>之前部署 hive 0.6 的时候，发现用 postgress 存 metadb 的时候，不能 drop table，一执行就卡住了。当时试过 mysql，好像是有个什么问题，就没用了，后来只好用 hive 0.5 完事。

前几天有个别的事情工作不正常，以为可能是版本的问题，毕竟现在都 0.7 了。所以尝试了下直接升级到 0.7。在 0.6 版本的 hive 里面，自带了一个 postgress 用的升级 sql，但是 0.7 的没有。执行这个 sql 后，hive 0.7 能查询，但是同样的，也遇到了不能 drop table 的问题。

后来发现 drop table 的时候，hive 在尝试去查一个不存在的表，然后就卡在了这个 sql 上面，也不报错，也不超时，不知道是不是 jdbc 的问题。

然后把 mysql 用的升级 sql 迁移到了 postgress，这样 hive 0.7 在 postgress 里面也没问题了。

升级 sql 和邮件列表的主题在 http://www.mail-archive.com/user@hive.apache.org/msg01293.html 。升级的时候要注意，新建的表的 owner 需要是 hive 使用的用户。</description>
    </item>
    
    <item>
      <title>hive 里面的 UDTF</title>
      <link>https://wdicc.com/udf-in-hive/</link>
      <pubDate>Sun, 24 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/udf-in-hive/</guid>
      <description>hive 支持 UDF， UDAF， UDTF，这几个让你使用 hive 更加便捷。
UDF
udf 就是一个自定义的 function，输入一个或多个参数，返回一个返回值，类似 substr/trim 之类。写起来比较简单，重构 UDF 类的 evaluate 方法就可以了。可以参考 http://richiehu.blog.51cto.com/2093113/386112 。
这是一个 urldecode 函数。
import org.apache.hadoop.hive.ql.exec.UDF; import java.net.URLDecoder; public final class urldecode extends UDF { public String evaluate(final String s) { if (s == null) { return null; } return getString(s); } public static String getString(String s) { String a; try { a = URLDecoder.decode(s); } catch ( Exception e) { a = &#34;</description>
    </item>
    
  </channel>
</rss>