<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Proxy on wd and cc</title>
    <link>https://wdicc.com/tags/proxy/atom/index.xml</link>
    <description>Recent content in Proxy on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://wdicc.com/tags/proxy/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ssh 之穿越与反穿越</title>
      <link>https://wdicc.com/ssh-proxy/</link>
      <pubDate>Thu, 21 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ssh-proxy/</guid>
      <description>&lt;p&gt;有时候我们不得不和网管对着干，去想办法去穿越某些防火墙，访问到我们要访问的资源。例如下面的情况，A 和 C 之间是有个墙的，不通。可有个 B 能访问到 C，而 A 又能访问到 B ，那我们可以通过你 ssh 做代理穿越那个墙。&lt;/p&gt;&lt;p&gt;A -&amp;gt; | -&amp;gt; C&lt;br /&gt; \-&amp;gt; B -&amp;gt; C&lt;/p&gt;&lt;p&gt;在A 上面执行下面的命令&lt;/p&gt;&lt;p&gt;ssh -f -N -g -L 8888:C_ip:80 B_ip&lt;br /&gt;参数的含义：-f 放到后台&lt;br /&gt;-N 不在对方机器请求 shell&lt;br /&gt;-g 能使得别的机器能连接 A 的那个端口&lt;br /&gt;-L 就是代理，具体看 man &lt;/p&gt;&lt;p&gt;这样，在 A 上面访问 8888 端口，就能访问到 C 的 80 端口了。&lt;/p&gt;&lt;p&gt;那如果是下面的网络情况，那怎么办？A 能访问到 C，但是 C 不能直接访问 A。&lt;/p&gt;&lt;p&gt;A -&amp;gt; C&lt;br /&gt;C-&amp;gt; | -&amp;gt; A&lt;/p&gt;&lt;p&gt;在 A 上面执行下面的命令&lt;/p&gt;&lt;p&gt;ssh -f -N -R 9999:A_ip:80 C_ip&lt;br /&gt;-R 是反向代理, -g 在这里好像不好用不知道为什么&lt;/p&gt;&lt;p&gt;从 C 上面访问自己的 9999 端口，就会访问到 A 的 80 端口。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>