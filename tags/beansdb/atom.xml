<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Beansdb on wd and cc</title><link>https://wdicc.com/tags/beansdb/</link><description>Recent content in Beansdb on wd and cc</description><generator>Hugo</generator><language>en</language><copyright>wd © 2025</copyright><lastBuildDate>Mon, 26 Dec 2016 18:36:11 +0800</lastBuildDate><atom:link href="https://wdicc.com/tags/beansdb/atom.xml" rel="self" type="application/rss+xml"/><item><title>Beansdb merge tools</title><link>https://wdicc.com/beansdb-merge-tools/</link><pubDate>Mon, 26 Dec 2016 18:36:11 +0800</pubDate><guid>https://wdicc.com/beansdb-merge-tools/</guid><description>&lt;p&gt;Beansdb 是豆瓣开源出来的一个高效的支持 memcached 协议的文件存储 db。按 key 查找的时候，会有索引定位到磁盘位置。不过貌似前段时间看到说他们搞了一个新的替代这个，我找了一下没找到链接。&lt;/p&gt;
&lt;p&gt;使用 beansdb 的时候，有 2 个问题需要解决&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冗余问题&lt;/li&gt;
&lt;li&gt;数据过期删除问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="数据冗余问题"&gt;数据冗余问题&lt;/h2&gt;
&lt;p&gt;先说第一个问题。beansdb 本身不提供分布式 hash 逻辑，它就是个单机的程序。冗余需要你自己搞定，如果你使用标准的 memcache 协议，可以有多 server 的配置，读的时候其中一个失败会自动找下一个 server，写的时候就不会了，需要你自己写到多个 server。如果你所有的 server 都是一模一样的，那多写就可以了。如果不一样，你还需要考虑自己的 hash 策略。&lt;/p&gt;</description></item></channel></rss>