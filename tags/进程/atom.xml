<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>进程 on wd and cc</title>
    <link>https://wdicc.com/tags/%E8%BF%9B%E7%A8%8B/</link>
    <description>Recent content in 进程 on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 Apr 2007 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/%E8%BF%9B%E7%A8%8B/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>unix 进程</title>
      <link>https://wdicc.com/unix-process/</link>
      <pubDate>Wed, 11 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/unix-process/</guid>
      <description>看了 Speaking UNIX, Part 8: UNIX processes 之后做一点笔记。
A real multitasker
在unix、linux、freebsd、mac os x、windows等系统里面，计算任务都表现为进程。unix 看上去可以同时运行很多任务，因为每个进程都只占用一部分cpu时间。
进程就像一个容器，包括运行的程序，环境变量，程序的输入输出等。可以把进程想像为一个国家，有自己的边界，资源和产品。
每个进程也都有自己的owner（属组），owner通常是运行这个程序的人，有些系统服务的owner或许会是某个特殊的用户，或者是root。例如，为了安全，某个Apache server的owner可能是属于一个叫www的用户的，这个用户有权限来存取web服务需要的文件，这些文件别的用户是不能访问的。
一个进程的owner可能会改变，但是一个进程在同一个时间只能有一个owner。
setuid和setgid可以让一个进程获得比owner更高的权限。
一个setuid进程，例如top，运行的时候使用的是owner的权限。因此，当你运行top的时候，你的权限就被提升为root了。类似的，一个setgid进程，运行的时候具有的是group owner的权限。
例如，在Mac osx里面的wall命令（就是write all的缩写），因为他需要给每个物理或者虚拟的终端设备写信息，所以他被setgid tty。
Taking inventory
类似其他系统资源，unix系统里面的进程id总数虽然多，但是是有限的（实际上，一个系统几乎从来都不会出现进程id数不够的情况）。每一个新的进程，例如运行vi或者xclock，都会立刻分配一个进程id。在unix系统里面可以用ps命令查看进程。
ps -a -w -x 可以显示所有进程列表。-a显示所有在tty设备上面运行的进程，-x显示所有不是在tty设备上面运行的程序，-w使用“宽”模式显示，用来查看进程一些长的项目。
-o 还可以指定输出信息的列表。比如 -o pid,uname,command,state,stime,time 。
Daddy, where do processes come from?
在unix系统里面，有些进程会从系统启动到关闭整个过程中一直运行。大部分进程从任务开始到结束都很快。
每个新的unix进程都是从已经存在的进程产生的。另外，每个新的进程（子进程）都克隆自他的父进程。at least for an instant, until the child continues execution independently.如果每个进程都来自一个已经存在的进程，那么“第一个进程来自哪里？”，先有鸡还是先有蛋的问题。
第一个进程是由kernel在启动过程中产生的，叫做init。ps -l 1命令可以查看。
F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD</description>
    </item>
    
  </channel>
</rss>