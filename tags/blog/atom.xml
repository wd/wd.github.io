<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on wd and cc</title>
    <link>https://wdicc.com/tags/blog/atom/index.xml</link>
    <description>Recent content in Blog on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://wdicc.com/tags/blog/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Migrate blog to hugo</title>
      <link>https://wdicc.com/Migrate-blog-to-hugo/</link>
      <pubDate>Sat, 11 Mar 2017 16:29:40 +0800</pubDate>
      
      <guid>https://wdicc.com/Migrate-blog-to-hugo/</guid>
      <description>&lt;p&gt;折腾了好几天，把 blog 从 hexo 迁移到了 &lt;a href=&#34;http://gohugo.io/&#34;&gt;hugo&lt;/a&gt; 上面。hexo 是使用 nodejs 写出来的，hugo 是使用的 go。主要基于下面几个原因吧。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;个人不太喜欢 nodejs 那一坨依赖。&lt;/li&gt;
&lt;li&gt;hugo 也比 nodejs 速度快很多。&lt;/li&gt;
&lt;li&gt;hugo 用起来比较简洁。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;首先写了一个迁移工具 &lt;a href=&#34;https://github.com/wd/hexo2hugo&#34;&gt;hexo2hugo&lt;/a&gt;。网上还有一个 nodejs 版本的&lt;a href=&#34;http://nodejh.com/post/Migrate-to-Hugo-from-Hexo/&#34;&gt;迁移工具&lt;/a&gt;可以参考。其实就是简单的把头部信息处理一下就可以。我还有一些特殊需求，比如把老早以前的一些 html 格式的文档顺道处理一下格式，还有一些小的修正和兼容工作，所以自己写了一个。另外也主要是好久没有写代码了，熟悉下。。&lt;/p&gt;

&lt;p&gt;把文档迁移过去之后，找了几个主题看了一下，发现没有很喜欢的，就本着蛋疼的原则，把原来用的主题也&lt;a href=&#34;https://github.com/wd/hugo-fabric&#34;&gt;迁移过来了&lt;/a&gt;，这个花的时间比较长一点。主要还得熟悉 hugo 的模板语法，还得想办法适配 hugo 的体系。比如 hugo 里面没有 archive 一说，不过通过万能的 google 搜索到了一个解决办法，也勉强还好。&lt;/p&gt;

&lt;p&gt;目前这个 blog 已经是由 hugo 产生了，和以前外观，访问地址完全一模一样，rss 地址都一样。我测试了 google 里面的搜索结果，是都可以跳转的。今天算是基本都迁移完毕了。&lt;/p&gt;

&lt;p&gt;这几天没事也总想记录一点想法，但是无奈新本子上面的 hexo 挂了，又不想搞 nodejs 那一坨依赖，就折腾了这个事情。不过折腾完毕之后发现想记录的事情都忘记了，nnd。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何不花钱建立一个支持 https 的 blog</title>
      <link>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</link>
      <pubDate>Sun, 10 Apr 2016 10:18:28 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</guid>
      <description>&lt;p&gt;早年的时候要搞 blog 还得弄一个空间，现在，免费的东西越来越多了，感觉共产主义的实现还要靠资本家啊，不过羊毛出在羊身上。。。&lt;/p&gt;

&lt;p&gt;要想弄一个免费的 blog，首先你的 blog 内容最好是纯静态网页，如果是类似 php 什么的，那就难找了。使用 jeklly, hexo 这些都可以把 markdown 文件渲染成 html。&lt;/p&gt;

&lt;p&gt;然后注册一个 github 或者 gitcafe 等等支持 pages 服务的空间，搞定之后就能得到一个类似于 &lt;a href=&#34;http://wd.github.io&#34;&gt;http://wd.github.io&lt;/a&gt; 这样的地址。&lt;/p&gt;

&lt;p&gt;然后你注册一个域名（发现标题没起好，这个还是要收费的。。），然后注册 cloudflare，把你的域名的 dns 使用 cloudflare 的，然后在 cloudflare 配置一个 cname 到 wd.github.io。然后建立一个 page rule，强制你的域名使用 ssl。&lt;/p&gt;

&lt;p&gt;ok 拉，整个过程就是域名花钱了。可以访问下 &lt;a href=&#34;http://wdicc.com&#34;&gt;http://wdicc.com&lt;/a&gt; 看看效果，会自动跳转到 &lt;a href=&#34;https://wdicc.com&#34;&gt;https://wdicc.com&lt;/a&gt; :D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>把 blog 迁移了一下</title>
      <link>https://wdicc.com/move-blog-to-an-other-isp/</link>
      <pubDate>Fri, 19 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/move-blog-to-an-other-isp/</guid>
      <description>最早的时候是在自己管的服务器上面，离职后，就买了一个盘古的空间，那会好像是几十块钱买的，着实的便宜，不过便宜没好货啊，呵呵。后来慢的实在不行，刚好和一个朋友&lt;a href=&#34;http://bulaoge.com/?qiqiao&#34;&gt;七巧仔&lt;/a&gt;聊天，他和别人合买了一块空间，我就搬过去蹭到了前几天，好像也有一年多了，呵呵。&lt;br /&gt;

这几天他的空间也要到期了，这就犯愁挪哪里去。说不弄 blog 吧，有点想记的东西还不怎么方便，弄把还得花钱找这个，唉。&lt;br /&gt;

后来想起来我之前买的那个盘古空间那个哥们了。他后来不弄盘古了，变成了从国外买空间，然后回来再卖的策略。现在经营的也挺不错的。地址在这里 &lt;a href=&#34;http://wpchina.org/hosting/&#34;&gt;http://wpchina.org/hosting/&lt;/a&gt;，这里也提供 wordpress 的中文版。这两天用的感觉，速度还不错。希望后面不要变慢，呵呵。&lt;br /&gt;

如果谁有兴趣可以联系下，现在好像有个9折的优惠。最便宜的也就 60 一年。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>有好几天没有更新blog了</title>
      <link>https://wdicc.com/update-blog-and-setup-wiki/</link>
      <pubDate>Fri, 10 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/update-blog-and-setup-wiki/</guid>
      <description>新的公司感觉大家都在忙忙碌碌的工作，我虽然事情不多，但是需要学的东西还是有的，所以上班也就没功夫来整这些东西了。不过忙里偷闲，晚上回来还是把我的&lt;a href=&#34;http://wiki.wdicc.com&#34; title=&#34;wiki&#34;&gt; wiki&lt;/a&gt; 弄好了，以后技术内容可以放那里了。感觉还是wiki比较适合组织这些东西。&lt;br /&gt;

wiki程序用的是 douku wiki，感觉像是中国人取的名字。。。不过看网址又不像，不知道了就。用起来还挺好用的。mediawiki 需要php5，twiki需求更麻烦，perl的，租的空间也不容易满足。doukuwiki还挺好用的，不需要数据库，编辑起来格式也简单，界面还算清新。&lt;br /&gt;

live writer还没有安装，所以只能来blog后台来写了，好久没用后台了都。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Blog 做了一下迁移</title>
      <link>https://wdicc.com/move-blog-to-paangood/</link>
      <pubDate>Sat, 28 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/move-blog-to-paangood/</guid>
      <description>因为要从这边离职了，不能蹭公司的服务器了，所以得找个新的地方。看来看去，dreamhost肯定是很爽的，可是也太贵了，咱现在还没这个资本去买这个空间，后来还是买了盘古的空间了。150一年，100M空间。不过北京网通访问起来速度不是很快。凑合用了，反正也就100多块钱。而刚好我在&lt;a href=&#34;http://blog.wdicc.com/wordpress/about-mycity/&#34;&gt;博邻&lt;/a&gt;的奖金也是150.。。。这就给这边花了，呵呵。老婆还说奖金可以去吃好多顿火锅呢，看来没戏了，哈哈。&lt;br /&gt;

我原来的数据库用的是　mysql 4.1.x ，新的是 4.0.x ，版本看起来差别不大，可是变化挺大。4.1支持每个库，每个表设置  charset，4.0还没有。4.0导入4.1好多人都乱码了。我从4.1 导入 4.0 开始也乱码了。后来搜了一下，找到一个方法，4.1 的mysqldump  有个 compactable 选项，指定是 mysql40 就行了。现在 phpmyadmin 里面看，中文也正常了。&lt;br /&gt;

迁移的时候顺手就换了一个  theme，弄了一天才弄好。不太喜欢这种用ftp上传的方法，都习惯用vim直接编辑文件了，本地没有环境，只能修改一下上传一次。盘古的ftp发呆时间还比较短，隔一会就得重新连接一下。感觉好墨迹。&lt;br /&gt;

老婆这几天一定要我写写她，可是写什么呢，她一天到晚都呆在家里，我觉得都要发霉了，让她去晒晒太阳好茁壮成长都懒得去，没办法。不过前几天她突发奇想写了一首改编自《小白兔，白又白》那个儿歌的儿歌，我贴到水木上面，加了好多个x，还是被不可re了，就看到有人发了一个帖子说“我靠，那个儿歌太x了。。。”，不过此文也被立刻删掉啦。不能re了肯定上不了十大了，也挺郁闷的，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给blog加了一个验证图片</title>
      <link>https://wdicc.com/spam-for-blog/</link>
      <pubDate>Sun, 18 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/spam-for-blog/</guid>
      <description>插件地址在 &lt;a href=&#34;http://www.tattertools.com/bbs/view.php?id=plugin&amp;amp;page=1&amp;amp;sn1=&amp;amp;divpage=1&amp;amp;sn=off&amp;amp;ss=on&amp;amp;sc=on&amp;amp;select_arrange=headnum&amp;amp;desc=asc&amp;amp;no=203&#34;&gt;这里&lt;/a&gt;&lt;br /&gt;

下载插件后，把插件解压放到plugins目录中，然后往plugins/comment-validator这里传一个字体，英文的就好，比如我传的是comic.ttf，然后修改这个文件夹里面的index.php，把第6行的 $font = 指向刚才传的font地址。比如我的&lt;br /&gt;

&lt;span style=&#34;color: rgb(155, 24, 193)&#34;&gt;$font = &#34;/data/web/tt2/plugins/comment-validator/comic.ttf&#34;;&lt;/span&gt;&lt;br /&gt;

然后修改这个文件第32行的return地址，默认的那个似乎是针对单用户模式的，我这里多用户模式不好用，我把它修改成了下面的&lt;br /&gt;

&lt;span style=&#34;color: rgb(255, 118, 53)&#34;&gt;return &#34;http://blog.wdicc.com/attach/temp.png&#34;;&lt;/span&gt;&lt;br /&gt;

修改你的skin的skin.html，找到comment相关部分的password输入段，修改成类似下面的&lt;br /&gt;
&lt;br style=&#34;color: rgb(153, 204, 102)&#34; /&gt;&lt;span style=&#34;color: rgb(153, 204, 102)&#34;&gt;&amp;lt;div class=&#34;comment_item&#34;&amp;gt;&amp;lt;label for=&#34;[##_rp_input_password_##]&#34;&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;Validate Code : &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/label&amp;gt;&amp;lt;input type=&#34;text&#34; maxlength=&#34;8&#34; id=&#34;[##_rp_input_password_##]&#34; value=&#34;[##_rp_admin_check_##]&#34; class=&#34;comment_box&#34; size=&#34;30&#34; maxlength=&#34;20&#34; /&amp;gt;&amp;lt;img src=&#34;[##_comment_validater_##]&#34; border=&#34;0&#34; /&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br /&gt;

将其中的input的type修改为text，这样用户输入验证码的时候能看见输入的是啥。在后面加上关于验证码图片的显示部分。然后就可以了。&lt;br /&gt;

这样原来的password功能就没有了。谁有功夫自己研究研究怎么避免这个问题把。我是觉得那个功能实在没用。&lt;br /&gt;

此外还可以给验证输入那里加上有没有输入验证码的部分。&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>