<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on wd and cc</title>
    <link>https://wdicc.com/tags/blog/</link>
    <description>Recent content in Blog on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 28 Mar 2019 11:18:37 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/blog/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blogs Weechat Official Accounts and Freedom</title>
      <link>https://wdicc.com/blogs-weechat-official-accounts-and-freedom/</link>
      <pubDate>Thu, 28 Mar 2019 11:18:37 +0800</pubDate>
      
      <guid>https://wdicc.com/blogs-weechat-official-accounts-and-freedom/</guid>
      <description>十几年前，还没有微博的时候，大家热衷于开 blog 写点自己想写的东西，出来了一大批 blog 平台，不管写多少内容有没有什么价值，很多人都会开一个自己的 blog。同时也有不少人自己搭建自己的 blog 平台，那会还有人卖空间专门搭 blog 用，提供一个虚拟主机，可以一键弄一个自己的 wordpress。
我最早的时候的 blog 是自己搭建的，后来也用过 wordpress，也去新浪开过博客。现在看开 blog 其实满足了用户的两个诉求，一个是写东西表达自己的想法，一个是社交。单纯的表达自己的想法可能也是一种发泄输出吧，写下来会觉得有了输出，之后会觉得告一个段落。至于社交，一般是几个好友会互相关注对方的 blog，比如当时的 msn space，qq 空间这些会直接在 im 工具里面提醒你。对于感兴趣的人不管是朋友还是陌生人，可以留个言什么的互相交流。以前在各个平台开的博客现在有的是平台死了文章没有了，有的是自己都忘记用什么账号开的了，找不到了。倒是自己搭的平台因为自己持续的在把数据保留下来，现在还有一些历史数据，现在回看这些内容感觉也挺好玩挺温馨的。
到了现在，blog 基本都死了，出现了微信公众号这个东西，我一直觉得微信公众号是一个反互联网的东西，他们想了很多办法来防止里面的内容被外部抓到，比如我自己发布的内容想在自己网站提供一个列表给大家看就不行，因为虽然提供了在 pc 浏览器看内容的方式，但是只能看单篇，想看其他的必须用手机扫了码之后在手机看，并没有提供 pc 的列表页。只能是发一篇把一篇文章地址加入到自己的列表里面。
内容格式支持 html，编辑器不好用还催生了一批辅助工具，从这些工具复制源码之后，确实可以有效果，但是因为微信实际并不能编辑源码，有时候遇到复制的奇葩的代码，会发现无论如何都编辑不好。而且关键是微信官方对待公众号和对待聊天功能一样，并没有多少兴趣去把这个东西做到极致，也可能是因为他们从 qq 那边看到，功能怎么样和用户用不用其实并不是那么的强相关吧，并不是提供了用户所有想要的功能用户就会用，这样反而增加了产品的复杂度可能得不偿失。
公众号还有一个问题是，他们天然倾向于满足用户的需求，用户需要低俗八卦那他就会想办法多制造这些内容，而且这些东西在那些人的圈子里面流窜，获得更多的用户。比如那些养生的东西，这能吃那不能吃的文章在中老年圈子里面就流传的很快。但是一篇反过来避谣的文章就流传不起来，因为这些人不会关注这样的公众号。造谣一时爽，避谣跑断腿。只是拿这样的一篇文章如何能说服对方呢？对方首先一个并没有看到多少人支持这个观点，另外一个可能会说好好我信你了，然后就完事了，也不会转发打自己的脸，不会觉得要对那些看了自己转发的文章的人负责。
微博上面相对好一点，在原微博上可以直接可以看到不同观点，反对的微博也可能会再次出现在自己的时间线也同样可以看到针对这个微博大家的观点，这也是一个学习的过程，反思自己之前为什么会没有在第一时间看到其他提出来的问题呢，自己也会持续提升自己的判断辨别能力。但是微博上面又会放大参与者的情绪，导致一些极端的情况，这就另说了。
今天还听了另外一个观点，可以一起聊聊。现在各种算法会依据你看的内容不停推荐类似的内容，比如你喜欢看猫，那就持续的推猫的内容，让你不停的看下去。最开始可能是今日头条开始这么做的吧，后面网易新闻也跟进了。我一直用的是网易新闻，期间试过看今日头条，发现里面内容质量不高之后就删掉了，直到某天网易新闻也开始做了类似的事情，新闻每次刷新都会给你推荐新的，导致没有看完的时候，就把网易新闻也删除了。换了即刻，现在发现即刻也可以乱推一些东西之后，取消关注了很多的频道，现在用的也不多了。
你喜欢看什么，就尽量多的给你推什么，这个算法有问题么？其实挺美好的，这样不就不用你来回自己去找想看的内容了吗？但是这样其实也会有几个问题，一可能会让你接触不到其他你没接触到但是有可能喜欢的东西，二可能会让人的思路变得极端。每天都环绕在一个没有争议的环境里面，慢慢的可能会失去辨别能力，也很更加不容易接受不同的东西。
说回那个观点，那个观点讲的就是比如看了一个宣扬极端观点的视频，他持续给你推荐这些视频的话，会不会容易把这个人变的很极端？按说是存在这种可能的，当然如果这个人自己确实对这个感兴趣那总也是会自己找这些信息看的，不过是这种推荐可能节约了他的时间。
标题为啥还提到了自由呢？微信我感觉就是不自由的，把大家圈进来之后就只能在这里面玩，决不允许有出去的机会。并且也没有意愿提供一个自由的环境。群里发一个链接，还需要先经过微信的审核，如果他们不想让你打开你就打不开，比如淘宝的链接就打不开。话说这个居然没有反垄断法来管理也是有意思。微博上面发的内容相对自由一点，但是微博的审查也比较厉害，当然这个是也有国家层面的事情，不多说了。</description>
    </item>
    
    <item>
      <title>Self Hosted Blog</title>
      <link>https://wdicc.com/self-hosted-blog/</link>
      <pubDate>Fri, 06 Apr 2018 14:59:49 +0800</pubDate>
      
      <guid>https://wdicc.com/self-hosted-blog/</guid>
      <description>给 checked 的一个反馈。
给播客写反馈是个很奇怪的事情，当我听完博客觉得心潮澎湃的写反馈的时候，其实主播们应该已经对那些说过的事情的兴趣估计已经没有了。所以感觉是像是一个很激动兴奋的人找别人聊天，结果人家波澜不惊的和你说：嗯嗯嗯。。一样。。
有两点反馈，一点关于文章格式，一点关于自建博客。
语言这个东西，发明出来就是为了交流用的，如果某种流行的东西有助于交流，那我觉得没有什么问题。比如空行代替头部空两个字，感觉好很多。比如使用 &#39;。。。。&#39; 代替 &#39;……&#39; 也没什么（其实是给我下面标点乱用打埋伏。。。:p ）。
直角引号的讨论有很多，随便搜了一个 。我记得最早流行这个好像就是知乎，后来搜狗输入法还提供了一个选项是在知乎输入引号的时候输入直角引号。我个人喜欢看直角的，因为很多时候那个蝌蚪样子的，有好几个编码，比如 ‘ ’、“ ”、&#39; &#39;、&#34; &#34;、 这几个都是半角的，左右不好区分开。但是直角的，再怎么也比较好区分左右，并且对竖排文字，比如广告图什么的里面也很有好。可以参考下这个 。
下面聊自建博客。这个 20 年前我和 hum 的看法是一样的，有病才去自己弄，需要自己搞服务器，自己维护，成本很高。但是使用别人搞的，也并不是没有问题。
 网站倒闭。最初的 MSN Live Space，然后新浪博客，然后国外的 wordpress，然后国内牛博网等等很多，那会博客风起来的时候，非常多这种网站，目前这些都不能访问或者死掉了。死掉的时候，你的文章怎么办？良心一点的提供一个导出，要不然就是你自己想办法解决。写的时候可能文本，最后拿到的没准是一堆的 HTML，很难处理。 流氓的版权协议。国内各大网站都会要你发的帖子的著作权，可以找找看有没有说版权归你，使用的时候会找你协商以及给你版权费的。 格式样式不可控。各网站都有自己的风格，比如我们程序员经常会想贴一点代码，想要一个高亮，但是人家不给你提供的话，你就很难做到。还有比如想要在文章顶部显示一个大纲方便看的人一目了然的需求。不过目前因为 markdown 的兴起，还算是对程序员友好，也算有希望统一这个格式的问题。同时 markdown 还能一定意义上解决上面提到的导出迁移的问题（当然，前提是人家让你导出），不过呢，还有另一个问题是 markdown 原定的标准实际是个残废，很多常用的东西都不支持，比如表格，比如 footnote，然后各家必定会对他扩展，那就会导致你从这家导出来的别家不一定支持。这里顺便安利一下 org-mode。  我自己使用自建博客很多年了，以后应该也不会使用其他商业的博客。我自己的博客的用途是留存我自己的经历，本身只分享文本内容，因为图片的流量问题，一般免费服务的空间都会限制，这些图片你自己维护起来也很费劲。就算是付费的，也很少有终身的，以后的事情谁能说的清。所以我都是用文字来表达，好处一方面是整站打包也就几M，另一方面，分享出去的东西别人也很方便的可以留存。
如果用途不止我那个，那平台名气是可以借用的，用平台肯定是最好的选择。
自建博客目前其实也很简单，空间在 github 开个账号就可以，只需要传 HTML 内容就可以，可以通过一些工具把文章转成 HTML 就可以。就算没有这种商业服务，自己搞一个 vps 跑一个 nginx 之类的，服务这些 HTML 也是一个很简单的事情。比如我用的是 hugo，支持 markdown，org-mode。类似的还有 hexo。
最后说忍不住补充一下 org-mode。org-mode 一直被认为是 Emacs 用户才能用，其实并不是，目前也也有一些支持他的文本处理工具，比如 hugo 和 pandoc 就支持 org-mode 文件输入，输出 HTML。目测目前 markdown 的那个表格就是学习的 org-mode 的，org-mode 的表格还支持写公式计算。别的不多说了，org-mode 基本是 markdown 的一个超集，有兴趣可以了解一下。</description>
    </item>
    
    <item>
      <title>Change Blog Theme to Hugo Classic</title>
      <link>https://wdicc.com/change-blog-theme-to-hugo-classic/</link>
      <pubDate>Sat, 30 Sep 2017 21:47:20 +0800</pubDate>
      
      <guid>https://wdicc.com/change-blog-theme-to-hugo-classic/</guid>
      <description>一个主题看久了会腻，原来用的 hugo-fabric 也是我在最早的 jeklly 的 fabric 主题上修改的。那个主题偏暗，我把一些颜色调亮了一点，但是还是不是很舒服，对颜色搭配还是没有感觉。
今天折腾了一下，把 theme 换到了 hugo-classic，这个也是 fork 自一个别人的主题，增加了一些缺失的内容
 首页分页 disqus 支持 code 块颜色不是很明显的问题 css 全文输出  后面可能还想把 tags 页面做成横向的列表，目前那个有点太占位置了。不过目前还没找到比较好看一点的设计，遇到再说了。另外刚发现那个 code 块的空白太多了，可能回头也调整一下。
已经弄了一个 tag 的样式，先这么看着吧。另外也修正了一下 code 的空白。
发现 org 的 BEGIN_SRC 输出的时候，会加一个换行在第一行，这个导致多了一个空白行，稍微有点丑了，回头有时间再看看是哪里的问题吧。
上面这个问题在 hugo 的 HEAD 版本里面已经修复了。</description>
    </item>
    
    <item>
      <title>Migrate blog to hugo</title>
      <link>https://wdicc.com/migrate-blog-to-hugo/</link>
      <pubDate>Sat, 11 Mar 2017 16:29:40 +0800</pubDate>
      
      <guid>https://wdicc.com/migrate-blog-to-hugo/</guid>
      <description>折腾了好几天，把 blog 从 hexo 迁移到了 hugo 上面。hexo 是使用 nodejs 写出来的，hugo 是使用的 go。主要基于下面几个原因吧。
 个人不太喜欢 nodejs 那一坨依赖。 hugo 也比 nodejs 速度快很多。 hugo 用起来比较简洁。  首先写了一个迁移工具 hexo2hugo。网上还有一个 nodejs 版本的迁移工具可以参考。其实就是简单的把头部信息处理一下就可以。我还有一些特殊需求，比如把老早以前的一些 html 格式的文档顺道处理一下格式，还有一些小的修正和兼容工作，所以自己写了一个。另外也主要是好久没有写代码了，熟悉下。。
把文档迁移过去之后，找了几个主题看了一下，发现没有很喜欢的，就本着蛋疼的原则，把原来用的主题也迁移过来了，这个花的时间比较长一点。主要还得熟悉 hugo 的模板语法，还得想办法适配 hugo 的体系。比如 hugo 里面没有 archive 一说，不过通过万能的 google 搜索到了一个解决办法，也勉强还好。
目前这个 blog 已经是由 hugo 产生了，和以前外观，访问地址完全一模一样，rss 地址都一样。我测试了 google 里面的搜索结果，是都可以跳转的。今天算是基本都迁移完毕了。
这几天没事也总想记录一点想法，但是无奈新本子上面的 hexo 挂了，又不想搞 nodejs 那一坨依赖，就折腾了这个事情。不过折腾完毕之后发现想记录的事情都忘记了，nnd。</description>
    </item>
    
    <item>
      <title>如何不花钱建立一个支持 https 的 blog</title>
      <link>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</link>
      <pubDate>Sun, 10 Apr 2016 10:18:28 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</guid>
      <description>早年的时候要搞 blog 还得弄一个空间，现在，免费的东西越来越多了，感觉共产主义的实现还要靠资本家啊，不过羊毛出在羊身上。。。
要想弄一个免费的 blog，首先你的 blog 内容最好是纯静态网页，如果是类似 php 什么的，那就难找了。使用 jeklly, hexo 这些都可以把 markdown 文件渲染成 html。
然后注册一个 github 或者 gitcafe 等等支持 pages 服务的空间，搞定之后就能得到一个类似于 http://wd.github.io 这样的地址。
然后你注册一个域名（发现标题没起好，这个还是要收费的。。），然后注册 cloudflare，把你的域名的 dns 使用 cloudflare 的，然后在 cloudflare 配置一个 cname 到 wd.github.io。然后建立一个 page rule，强制你的域名使用 ssl。
ok 拉，整个过程就是域名花钱了。可以访问下 http://wdicc.com 看看效果，会自动跳转到 https://wdicc.com :D</description>
    </item>
    
    <item>
      <title>把 blog 迁移了一下</title>
      <link>https://wdicc.com/move-blog-to-an-other-isp/</link>
      <pubDate>Fri, 19 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/move-blog-to-an-other-isp/</guid>
      <description>最早的时候是在自己管的服务器上面，离职后，就买了一个盘古的空间，那会好像是几十块钱买的，着实的便宜，不过便宜没好货啊，呵呵。后来慢的实在不行，刚好和一个朋友七巧仔聊天，他和别人合买了一块空间，我就搬过去蹭到了前几天，好像也有一年多了，呵呵。
这几天他的空间也要到期了，这就犯愁挪哪里去。说不弄 blog 吧，有点想记的东西还不怎么方便，弄把还得花钱找这个，唉。
后来想起来我之前买的那个盘古空间那个哥们了。他后来不弄盘古了，变成了从国外买空间，然后回来再卖的策略。现在经营的也挺不错的。地址在这里 http://wpchina.org/hosting/，这里也提供 wordpress 的中文版。这两天用的感觉，速度还不错。希望后面不要变慢，呵呵。
如果谁有兴趣可以联系下，现在好像有个9折的优惠。最便宜的也就 60 一年。</description>
    </item>
    
    <item>
      <title>有好几天没有更新blog了</title>
      <link>https://wdicc.com/update-blog-and-setup-wiki/</link>
      <pubDate>Fri, 10 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/update-blog-and-setup-wiki/</guid>
      <description>新的公司感觉大家都在忙忙碌碌的工作，我虽然事情不多，但是需要学的东西还是有的，所以上班也就没功夫来整这些东西了。不过忙里偷闲，晚上回来还是把我的wiki 弄好了，以后技术内容可以放那里了。感觉还是wiki比较适合组织这些东西。
wiki程序用的是 douku wiki，感觉像是中国人取的名字。。。不过看网址又不像，不知道了就。用起来还挺好用的。mediawiki 需要php5，twiki需求更麻烦，perl的，租的空间也不容易满足。doukuwiki还挺好用的，不需要数据库，编辑起来格式也简单，界面还算清新。
live writer还没有安装，所以只能来blog后台来写了，好久没用后台了都。</description>
    </item>
    
    <item>
      <title>Blog 做了一下迁移</title>
      <link>https://wdicc.com/move-blog-to-paangood/</link>
      <pubDate>Sat, 28 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/move-blog-to-paangood/</guid>
      <description>因为要从这边离职了，不能蹭公司的服务器了，所以得找个新的地方。看来看去，dreamhost肯定是很爽的，可是也太贵了，咱现在还没这个资本去买这个空间，后来还是买了盘古的空间了。150一年，100M空间。不过北京网通访问起来速度不是很快。凑合用了，反正也就100多块钱。而刚好我在博邻的奖金也是150.。。。这就给这边花了，呵呵。老婆还说奖金可以去吃好多顿火锅呢，看来没戏了，哈哈。
我原来的数据库用的是　mysql 4.1.x ，新的是 4.0.x ，版本看起来差别不大，可是变化挺大。4.1支持每个库，每个表设置 charset，4.0还没有。4.0导入4.1好多人都乱码了。我从4.1 导入 4.0 开始也乱码了。后来搜了一下，找到一个方法，4.1 的mysqldump 有个 compactable 选项，指定是 mysql40 就行了。现在 phpmyadmin 里面看，中文也正常了。
迁移的时候顺手就换了一个 theme，弄了一天才弄好。不太喜欢这种用ftp上传的方法，都习惯用vim直接编辑文件了，本地没有环境，只能修改一下上传一次。盘古的ftp发呆时间还比较短，隔一会就得重新连接一下。感觉好墨迹。
老婆这几天一定要我写写她，可是写什么呢，她一天到晚都呆在家里，我觉得都要发霉了，让她去晒晒太阳好茁壮成长都懒得去，没办法。不过前几天她突发奇想写了一首改编自《小白兔，白又白》那个儿歌的儿歌，我贴到水木上面，加了好多个x，还是被不可re了，就看到有人发了一个帖子说“我靠，那个儿歌太x了。。。”，不过此文也被立刻删掉啦。不能re了肯定上不了十大了，也挺郁闷的，呵呵。</description>
    </item>
    
    <item>
      <title>给blog加了一个验证图片</title>
      <link>https://wdicc.com/spam-for-blog/</link>
      <pubDate>Sun, 18 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/spam-for-blog/</guid>
      <description>插件地址在 这里
下载插件后，把插件解压放到plugins目录中，然后往plugins/comment-validator这里传一个字体，英文的就好，比如我传的是comic.ttf，然后修改这个文件夹里面的index.php，把第6行的 $font = 指向刚才传的font地址。比如我的
$font = &#34;/data/web/tt2/plugins/comment-validator/comic.ttf&#34;;
然后修改这个文件第32行的return地址，默认的那个似乎是针对单用户模式的，我这里多用户模式不好用，我把它修改成了下面的
return &#34;http://blog.wdicc.com/attach/temp.png&#34;;
修改你的skin的skin.html，找到comment相关部分的password输入段，修改成类似下面的
&amp;lt;div class=&#34;comment_item&#34;&amp;gt;&amp;lt;label for=&#34;[##_rp_input_password_##]&#34;&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;Validate Code : &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/label&amp;gt;&amp;lt;input type=&#34;text&#34; maxlength=&#34;8&#34; id=&#34;[##_rp_input_password_##]&#34; value=&#34;[##_rp_admin_check_##]&#34; class=&#34;comment_box&#34; size=&#34;30&#34; maxlength=&#34;20&#34; /&amp;gt;&amp;lt;img src=&#34;[##_comment_validater_##]&#34; border=&#34;0&#34; /&amp;gt;&amp;lt;/div&amp;gt;
将其中的input的type修改为text，这样用户输入验证码的时候能看见输入的是啥。在后面加上关于验证码图片的显示部分。然后就可以了。
这样原来的password功能就没有了。谁有功夫自己研究研究怎么避免这个问题把。我是觉得那个功能实在没用。
此外还可以给验证输入那里加上有没有输入验证码的部分。</description>
    </item>
    
  </channel>
</rss>