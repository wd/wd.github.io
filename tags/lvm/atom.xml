<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LVM on wd and cc</title><link>https://wdicc.com/tags/lvm/</link><description>Recent content in LVM on wd and cc</description><generator>Hugo</generator><language>en</language><copyright>wd © 2025</copyright><lastBuildDate>Tue, 06 Mar 2007 00:00:00 +0000</lastBuildDate><atom:link href="https://wdicc.com/tags/lvm/atom.xml" rel="self" type="application/rss+xml"/><item><title>lvm 学习笔记</title><link>https://wdicc.com/lvm-note/</link><pubDate>Tue, 06 Mar 2007 00:00:00 +0000</pubDate><guid>https://wdicc.com/lvm-note/</guid><description>lvm出来很久了，一直没弄过。当初的了解就是使用他之后就获得动态调整分区的特性。昨天装了一个rh，先尝试了一下使用这个lvm。&lt;br />

&lt;strong>lvm里面用到的一些概念&lt;/strong>&lt;br />

lvm其实就是将一些“物理”分区，比如 /dev/hda1，/dev/hda6 ，或者“物理”硬盘，比如 /dev/hda，/dev/hdb 这些，都弄到一起，然后在外面看来，他们是一个整体，也就是一个VG（Volume Group，卷组），其实就类似于一块硬盘了。&lt;br />

而这些“物理”分区，或者“物理”硬盘，就是 /dev/hda1，/dev/hdb 这些，就是一个个PV（Physical Volume，物理卷）。可以看到PV可以是一个分区，也可以是一块硬盘。&lt;br />

有了VG我们还不能直接使用他，就和我们还需要给硬盘分区一样，我们也需要给VG分区，也就是创建LV（Logical Volume，逻辑卷）。这样，LV的数据其实就分布到了LV所在的VG里面，也就是所有的PV对应的分区或者硬盘里面。&lt;br />

掌握了VG，PV，LV这些概念之后，操作起来就很容易了。&lt;br /></description></item></channel></rss>