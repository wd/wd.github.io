<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shadowsocks on wd and cc</title>
    <link>https://wdicc.com/tags/shadowsocks/</link>
    <description>Recent content in shadowsocks on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 09 Jun 2017 10:55:44 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/shadowsocks/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Run ssserver on VPS</title>
      <link>https://wdicc.com/run-ssserver-on-vps/</link>
      <pubDate>Fri, 09 Jun 2017 10:55:44 +0800</pubDate>
      
      <guid>https://wdicc.com/run-ssserver-on-vps/</guid>
      <description>VPS 上面好早以前用过 docker 跑了一个 container 运行了一个 ssserver, 是从 debian 基本系统创建, 然后手动安装各种软件弄好的. 最近朋友升级了 docker, 那个工作有点问题了,就重新搞了一下, 发现现在好方便.  我用的是这里提供的 dockerfile https://github.com/EasyPi/docker-shadowsocks-libev, 他的例子里面使用了 docker-compose 来创建, 发现很简单, 不过遇到了一个问题, 说一下解决办法.  这个 docker 本地监听的端口是固定的 8388 不能修改, 例如 docker-compose.yml 里面 server: image: easypi/shadowsocks-libev container_name: wd-ss ports: - &amp;#34;HOST_PORT:8388/tcp&amp;#34; - &amp;#34;HOST_PORT:8388/udp&amp;#34; environment: - METHOD=aes-256-cfb - PASSWORD=5ouMnqPyzseL restart: always  需要配置的是 HOST_PORT METHOD PASSWORD 这三个变量, 然后我还指定了 container_name 方便以后的操作, 不指定会自动产生一个.  启动服务之后,可以使用 docker logs wd-ss 来看 log, 类似于下面, 这个 docker 启用了 udp relay 和 tcp fast open, 差不多也就够了.</description>
    </item>
    
  </channel>
</rss>