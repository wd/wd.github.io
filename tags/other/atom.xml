<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Other on wd and cc</title>
    <link>https://wdicc.com/tags/other/atom/index.xml</link>
    <description>Recent content in Other on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://wdicc.com/tags/other/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>gdm登陆窗口的方块乱码</title>
      <link>https://wdicc.com/gdm-problem/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gdm-problem/</guid>
      <description>&lt;p&gt;这几天一直有个问题解决不了，gdm的登陆窗口上面的字体是方块。我一般都是使用home下面的.fonts.conf 来配置字体的。不过gdm启动的时候好像也不会读取你home的下吧，所以还是把他放到了/etc/fonts/local.conf 里面。&lt;/p&gt; &lt;p&gt;使用gdm的时候，配置为theme的时候，gdm会起不了，不停的尝试，最后出一个提示窗口，全是方块。不过应该是提示没办法启动welcome窗口的。配置为简介模式的话，gdm至少能起来，虽然上面的字体全是方块，连我输入的字也是方块，就算是英文。&lt;/p&gt; &lt;p&gt;开始以为是字体设置的问题，把我的自定义设置全部去掉也不行。locale改成英文就正常了。不过还是不爽，搜了半天没找到解决办法，后来有篇文章提示了一下，会不会是字体权限的问题？我才想起来自己添加的雅黑字体，去看了一下，果然只有root可读。修改权限之后，方块的现象没了。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>安装配置一台 apache&#43;php&#43;mysql 的rh el4服务器</title>
      <link>https://wdicc.com/setup-apache-mysql-php-in-rhel4/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/setup-apache-mysql-php-in-rhel4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;rh el4 是四张盘，用第一张启动电脑。前面没啥好说的了，后面选择软件的时候，不要选x界面的东西，开发工具全选上，别的好像默认就行了，大概需要2G好像是。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;apache的下载地址：&lt;a title=&#34;http://httpd.apache.org/download.cgi&#34; href=&#34;http://httpd.apache.org/download.cgi&#34;&gt;http://httpd.apache.org/download.cgi&lt;/a&gt;，选一个mirror，下载就行了。&lt;/p&gt; &lt;p&gt;编译选项： ./configure --prefix=/usr/local/apache/ --enable-rewrite --enable-so&lt;/p&gt; &lt;p&gt;rewrite还是很有必要装上的，enable so让apache可以加载php模块。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Mysql&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;mysql 的下载地址(以5.0为例)：&lt;a title=&#34;http://mysql.org/downloads/mysql/5.0.html#source&#34; href=&#34;http://mysql.org/downloads/mysql/5.0.html#source&#34;&gt;http://mysql.org/downloads/mysql/5.0.html#source&lt;/a&gt;&lt;/p&gt; &lt;p&gt;注意我们这里下载的是 source，要自己来编译。这样可以控制mysql默认的字符集是什么。&lt;/p&gt; &lt;p&gt;编译选项： ./configure --prefix=/data/mysql --with-charset=gbk --with-extra-charsets=all&lt;/p&gt; &lt;p&gt;这里设置的字符集是gbk，根据需要自己来设计自己的。别的安装的过程可以参考源码目录里面的INSTALL文件，基本按照那个一步一步来就行了。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;libjpeg&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;安装php之前，先需要自己编译一个 libjpeg 和 libpng，系统安装的少东西，php编译不过去。&lt;/p&gt; &lt;p&gt;libjpeg 的下载地址：&lt;a title=&#34;ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz&#34; href=&#34;ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz&#34;&gt;ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz&lt;/a&gt;&lt;/p&gt; &lt;p&gt;编译选项：./configure --enable-static --enable-shared --prefix=/usr/local/libjpeg&lt;/p&gt; &lt;p&gt;&lt;strong&gt;libpng&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;libpng的下载地址：&lt;a title=&#34;http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download&#34; href=&#34;http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download&#34;&gt;http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download&lt;/a&gt;&lt;/p&gt; &lt;p&gt;编译选项：./configure --prefix=/usr/local/libpng&lt;/p&gt; &lt;p&gt;&lt;strong&gt;php&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;php的下载地址(目前的最新版)：&lt;a title=&#34;http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror&#34; href=&#34;http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror&#34;&gt;http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror&lt;/a&gt;&lt;/p&gt; &lt;p&gt;编译选项：&lt;/p&gt; &lt;p&gt;./configure --with-apxs2=/usr/local/apache/bin/apxs --with-mysql=/data/mysql/&amp;nbsp; --prefix=/usr/local/php5/ --with-config-file-path=/usr/local/php5/etc --with-openssl --enable-mbstring --with-iconv --with-curl --with-gd --with-zlib&amp;nbsp; --with-png-dir=/usr/local/libpng --with-jpeg-dir=/usr/local/libjpeg&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给ibm server设置raid</title>
      <link>https://wdicc.com/raid-on-ibm-server/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/raid-on-ibm-server/</guid>
      <description>昨天去给一台没拆封的ibm server装系统，头一次弄了raid，发现操作起来也不难。之前心里没底，就去yahoo搜索了一下，发现图解的都是使用server guide 那个光盘安装windows的（其实就一篇文章，n多人转载了），这次装就顺便拍了一下，呵呵。&lt;br /&gt;

server guide 光盘的图，用serverguide安装也挺简单的，光盘启动之后按照提示一步一步来就行了。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085847_910633405.jpg&#34; /&gt;&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085837_2093046889.jpg&#34; /&gt;&lt;br /&gt;

&lt;!--more--&gt;&lt;br /&gt;

拆封之后，把硬盘（最少2块，1块做什么raid？）都插上，要注意使劲往里推。然后接上电源、显示器和键盘，就可以开机了。图片都可以在&lt;a href=&#34;http://www.yupoo.com/albums/view?id=ff80808114fa6bd801150bd0b8ab6243&#34;&gt;这里&lt;/a&gt;看到。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085619_251160821.jpg&#34; /&gt;&lt;br /&gt;

开机后第二屏信息，上面是2块网卡的信息。提示&amp;lt;CTRL&amp;gt;&amp;lt;A&amp;gt;的时候，按ctrl+a。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085627_387692339.jpg&#34; /&gt;&lt;br /&gt;

按了ctrl+a之后会多出来一行提示，告诉你等会会进入raid的设置界面。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085634_622747700.jpg&#34; /&gt;&lt;br /&gt;

ok，这就是这个界面了。就选第一个 Array Configuration Utility。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085644_1443274542.jpg&#34; /&gt;&lt;br /&gt;

先得初始化一下硬盘。其实这会如果直接 create array的话，他也会提示你需要先初始化硬盘的。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085653_409760939.jpg&#34; /&gt;&lt;br /&gt;

先查找连接上来的硬盘。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085724_132744006.jpg&#34; /&gt;&lt;br /&gt;

找到2块。按insert键选择硬盘，选了之后会在右边的窗口出现。这里是需要2块全选的。选好后，按回车确定。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085704_25723597.jpg&#34; /&gt;&lt;br /&gt;

提示你初始化会删除所有数据。确定，输入yes。此后就开始初始化，我这里好像很快。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085714_1883779879.jpg&#34; /&gt;&lt;br /&gt;

初始化完毕之后又会返回这个菜单，这次选 create array。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085740_911137399.jpg&#34; /&gt;&lt;br /&gt;

再来选硬盘。选完按回车。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085750_1590784025.jpg&#34; /&gt;&lt;br /&gt;

出现raid的设置界面。我就2块硬盘，只有raid 0和1可选。选需要的。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085759_322804327.jpg&#34; /&gt;&lt;br /&gt;

别的都默认好了，不清楚有什么差别。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085807_924423596.jpg&#34; /&gt;&lt;br /&gt;

这就可以done了。之后会重启。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085819_1295559709.jpg&#34; /&gt;&lt;br /&gt;

看到那个raid信息了吧。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085836_2002971014.jpg&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>涉及到linux系统安全的几个文件</title>
      <link>https://wdicc.com/some-importent-files-in-linux/</link>
      <pubDate>Tue, 24 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/some-importent-files-in-linux/</guid>
      <description>&lt;p&gt;部分内容转自&lt;a href=&#34;http://man.chinaunix.net/linux/debian/debian_learning/index.html&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1 cron.allow,cron.deny&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;If the cron.allow file exists, then you must be listed therein in order to  be  allowed  to  use  this  command.   If  the  cron.allow  file  does  not  exist but the cron.deny file does exist, then you must not be listed in the cron.deny file in order to use this command.  If neither of these files exists, only the super user will be allowed to use this command.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;上面是引用 man crontab 里面的一段解释。如果 cron.allow 存在，那里面的用户可以使用crontab命令。如果cron.allow 不存在，而 cron.deny 存在，那么列在里面的用户不可以使用crontab命令。如果都不存在，那么只允许super用户来使用这个命令。 &lt;p&gt;安装rh的时候，默认就会存在一个 cron.deny 的空文件，所以普通用户也可以使用crontab。 &lt;p&gt;&lt;strong&gt;2 at.allow,at.deny&lt;/strong&gt; &lt;blockquote&gt; &lt;p&gt;The  superuser  may  use  these  commands  in  any case.  For other users, permission to use at is determined by the files&lt;br&gt;/etc/at.allow and /etc/at.deny. &lt;/p&gt; &lt;p&gt;If the file /etc/at.allow exists, only usernames mentioned in it are allowed to use at. &lt;/p&gt; &lt;p&gt;If /etc/at.allow does not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed to use at.  &lt;p&gt;If neither exists, only the superuser is allowed use of at.  &lt;p&gt;An empty /etc/at.deny means that every user is allowed use these commands, this is the default configuration.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;这个其实和上面那个是类似的。默认也是有个空的 at.deny 文件，允许所有用户使用at。 &lt;p&gt;&lt;strong&gt;3 /etc/security/access.conf&lt;/strong&gt; &lt;blockquote&gt; &lt;p&gt;# Login access control table.&lt;br&gt;# &lt;br&gt;# When someone logs in, the table is scanned for the first entry that&lt;br&gt;# matches the (user, host) combination, or, in case of non-networked&lt;br&gt;# logins, the first entry that matches the (user, tty) combination.  The&lt;br&gt;# permissions field of that table entry determines whether the login will &lt;br&gt;# be accepted or refused.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;login 权限控制表。可以控制允许登陆的ip，登陆的tty等信息。 &lt;blockquote&gt; &lt;p&gt;# Disallow console logins to all but a few accounts.&lt;br&gt;#&lt;br&gt;#-:ALL EXCEPT wheel shutdown sync:LOCAL&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;比如可以设置只允许某些用户从本地登陆。建议设置root用户不能从本地登陆。 &lt;p&gt;&lt;strong&gt;4 /etc/securetty&lt;/strong&gt; &lt;p&gt;该文件可控制根用户登录的设备，该文件里记录的是可以作为根用户登录的设备名，如tty1、tty2等。用户是不能从不存在于该文件里的设备登录为根用户的。这种情况用户只能以普通用户登录进来，再用su命令转为根用户。/etc/securetty文件的格式如下：&lt;pre&gt;# /etc/securetty: list of terminals on which root is allowed to login.&lt;br /&gt;
# See securetty(5) and login(1).&lt;br /&gt;
console&lt;br /&gt;

# for people with serial port consoles&lt;br /&gt;
ttyS0&lt;br /&gt;

# for devfs&lt;br /&gt;
tts/0&lt;br /&gt;

# Standard consoles&lt;br /&gt;
tty1&lt;br /&gt;
tty2&lt;br /&gt;
tty3&lt;br /&gt;
...&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;如果/etc/securetty是一个空文件，则根用户就不能从任务的设备登录系统。只能以普通用户登录，再用su命令转成根用户。如果/etc/securetty文件不存在，那么根用户可以从任何地方登录。这样会引发安全问题，所以/etc/securetty文件在系统中是一定要存在的。&lt;br /&gt;
&lt;p&gt;&lt;strong&gt;5  /etc/login.defs&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;login.defs是设置用户帐号限制的文件，在这里我们可配置密码的最大过期天数，密码的最大长度约束等内容。该文件里的配置对root用户无效。如果/etc/shadow文件里有相同的选项，则以/etc/shadow里的设置为准，也就是说/etc/shadow的配置优先级高于 /etc/login.defs。下面内容是该文件的节选：&lt;pre&gt;...&lt;br /&gt;
#&lt;br /&gt;
# Password aging controls:&lt;br /&gt;
#&lt;br /&gt;
#       PASS_MAX_DAYS   Maximum number of days a password may be used.&lt;br /&gt;
#       PASS_MIN_DAYS   Minimum number of days allowed between password change.&lt;br /&gt;
#       PASS_WARN_AGE   Number of days warning given before a password expires.&lt;br /&gt;
#&lt;br /&gt;
PASS_MAX_DAYS 99999&lt;br /&gt;
PASS_MIN_DAYS 0&lt;br /&gt;
PASS_WARN_AGE 7&lt;br /&gt;
...&lt;br /&gt;
#&lt;br /&gt;
# Number of significant characters in the password for crypt().&lt;br /&gt;
# Default is 8, don&#39;t change unless your crypt() is better.&lt;br /&gt;
# If using MD5 in your PAM configuration, set this higher.&lt;br /&gt;
#&lt;br /&gt;
PASS_MAX_LEN            8&lt;br /&gt;
...&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;strong&gt;6 /etc/pam.d/su&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;通过pam来限制su命令的使用。比如可以设置哪些组，哪些用户才能使用。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;#auth       sufficient   /lib/security/$ISA/pam_wheel.so trust use_uid&lt;br&gt;# Uncomment the following line to require a user to be in the &#34;wheel&#34; group.&lt;br&gt;auth       required     /lib/security/$ISA/pam_wheel.so group=admin&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>smsd 发送中文短信乱码</title>
      <link>https://wdicc.com/smsd-and-chinese/</link>
      <pubDate>Thu, 05 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/smsd-and-chinese/</guid>
      <description>&lt;p&gt;smsd是使用mysql数据库的，所以这个乱码很容易把人搞晕。我之前&lt;a href=&#34;http://blog.wdicc.com/wordpress/gnokii_howto_chinese_sms/&#34;&gt;写过&lt;/a&gt;gnokii发送短信是和locale有关系的，只要在utf8的locale下面就可以正常发送中文短信了。而smsd也和这个类似，也需要utf8的locale。但是还需要注意的一点就是mysql也是有编码设置的。所以可能会认为，文本插入数据库之前是不是也需要对数据库做utf8的设置呢？其实是不需要的，这么做反而会造成乱码。&lt;/p&gt; &lt;p&gt;smsd连接mysql用的是mysql默认的字符集，那么我们插入文本的时候，也同样需要使用这个字符集，需要注意的是，这个文本也需要是utf8编码的。mysql默认的字符集通常是 “default-character-set&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; latin1”。&lt;/p&gt; &lt;p&gt;我写的一个python的用来插入数据库要发送的信息的程序。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;python&#34;&gt;#!/usr/bin/env python2.3&lt;br /&gt;
#coding=utf-8&lt;br /&gt;
import sys&lt;br /&gt;
import MySQLdb&lt;br /&gt;

#  inbox&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| Field      | Type             | Null | Key | Default             | Extra          |&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| id         | int(10) unsigned |      | PRI | NULL                | auto_increment |&lt;br /&gt;
#| number     | varchar(20)      |      |     |                     |                |&lt;br /&gt;
#| smsdate    | datetime         |      |     | 0000-00-00 00:00:00 |                |&lt;br /&gt;
#| insertdate | timestamp        | YES  |     | CURRENT_TIMESTAMP   |                |&lt;br /&gt;
#| text       | varchar(160)     | YES  |     | NULL                |                |&lt;br /&gt;
#| phone      | tinyint(4)       | YES  |     | NULL                |                |&lt;br /&gt;
#| processed  | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;

#  outbox&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| Field          | Type             | Null | Key | Default             | Extra          |&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| id             | int(10) unsigned |      | PRI | NULL                | auto_increment |&lt;br /&gt;
#| number         | varchar(20)      |      |     |                     |                |&lt;br /&gt;
#| processed_date | timestamp        | YES  |     | CURRENT_TIMESTAMP   |                |&lt;br /&gt;
#| insertdate     | timestamp        | YES  |     | 0000-00-00 00:00:00 |                |&lt;br /&gt;
#| text           | varchar(160)     | YES  |     | NULL                |                |&lt;br /&gt;
#| phone          | tinyint(4)       | YES  |     | NULL                |                |&lt;br /&gt;
#| processed      | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#| error          | tinyint(4)       |      |     | -1                  |                |&lt;br /&gt;
#| dreport        | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#| not_before     | time             |      |     | 00:00:00            |                |&lt;br /&gt;
#| not_after      | time             |      |     | 23:59:59            |                |&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;

class Mydb:&lt;br /&gt;
        def __init__(self):&lt;br /&gt;
                try:&lt;br /&gt;
                        self.db=MySQLdb.Connection(host=&#34;localhost&#34;,user=&#34;gnokii&#34;,&lt;br /&gt;
                                passwd=&#34;gnokii&#34;,db=&#34;gnokii&#34;)&lt;br /&gt;

                except MySQLdb.OperationalError, message:&lt;br /&gt;
                        errorMessage = &#34;Error %d:\n%s&#34; % (message[ 0 ], message[ 1 ] )&lt;br /&gt;
                        print errorMessage&lt;br /&gt;
                        sys.exit(1)&lt;br /&gt;
                else:   &lt;br /&gt;
                        self.cursor = self.db.cursor()&lt;br /&gt;
#                       self.cursor.execute(&#34;SET NAMES &#39;utf8&#39;&#34;)&lt;br /&gt;
                        return&lt;br /&gt;
                        &lt;br /&gt;
        def insert(self,sql):&lt;br /&gt;
                self.cursor.execute(sql)&lt;br /&gt;
        &lt;br /&gt;
        def showdata(self,sql):&lt;br /&gt;
                self.cursor.execute(sql)&lt;br /&gt;
                return self.cursor.fetchall()&lt;br /&gt;
                &lt;br /&gt;
        def __del__(self):&lt;br /&gt;
                self.cursor.close&lt;br /&gt;
                self.db.close&lt;br /&gt;

text = sys.stdin.read()&lt;br /&gt;
db = Mydb()&lt;br /&gt;

if len(sys.argv) &amp;gt; 1 and len(text):&lt;br /&gt;
        number = sys.argv[1]&lt;br /&gt;
        sql = &#39;insert into outbox (number,text) VALUES (&#34;&#39; + number + &#39;&#34;,&#34;&#39; + text + &#39;&#34;)&#39;&lt;br /&gt;
        &lt;br /&gt;
        db.insert(sql)&lt;br /&gt;

else:   &lt;br /&gt;
        print &lt;br /&gt;
        print &#34;    ********** outbox ********** &#34;&lt;br /&gt;
        for rs in db.showdata(&#34;select * from outbox&#34;):&lt;br /&gt;
                print rs[0],rs[1],rs[2],rs[-7],rs[-5]&lt;br /&gt;
        &lt;br /&gt;
        print &#34;    ********** inbox *********&#34;&lt;br /&gt;
        for rs2 in db.showdata(&#34;select * from inbox&#34;):&lt;br /&gt;
                print rs2[0],rs2[1],rs2[-3]&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>oracle 的 job 又遇到问题了</title>
      <link>https://wdicc.com/oracle-jobs/</link>
      <pubDate>Fri, 29 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-jobs/</guid>
      <description>&lt;p&gt;还是高级复制的问题，这次可能是因为job执行过程中，对方机器刚好重启导致的。反正job是卡在那里了，都10多天了。&lt;/p&gt; &lt;p&gt;查看 dba_jobs_running 表，可以看到卡住的job的 job_id 和 sid 。查看 dba_jobs 表，可以看到相应 job 的信息，this_date 如果有数据的话，表示的是 job 开始执行的时间，next_date 是下次执行 job 的时间，如果 job 正常执行完毕，那么 this_date 应该是空的。根据 sid 还可以查看 v$session_wait 和 v$session 里面的这个 job 的一些状态。&lt;/p&gt; &lt;p&gt;尝试了下面的方法来重新运行job，当时好像不好用，不过今天来看的时候，job是执行了。现在也不清楚是不是我这个操作起作用了，真晕。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;SQL&amp;gt; exec dbms_job.broken(109,true);&lt;br /&gt;

PL/SQL procedure successfully completed.&lt;br /&gt;

SQL&amp;gt; commit;&lt;br /&gt;

Commit complete.&lt;br /&gt;

SQL&amp;gt; select job,sid from dba_jobs_running;&lt;br /&gt;

       JOB        SID&lt;br /&gt;
---------- ----------&lt;br /&gt;
       109        656&lt;br /&gt;

SQL&amp;gt; select saddr,sid,serial#,paddr,username,status from v$session where username = &#39;REPADMIN&#39;;&lt;br /&gt;

SADDR           SID    SERIAL# PADDR    USERNAME                       STATUS&lt;br /&gt;
-------- ---------- ---------- -------- ------------------------------ --------&lt;br /&gt;
973CF8C4        626         27 98F96BB8 REPADMIN                       ACTIVE&lt;br /&gt;
973D2E7C        629         10 98F88670 REPADMIN                       ACTIVE&lt;br /&gt;
973F11F4        656         10 98F88174 REPADMIN                       ACTIVE&lt;br /&gt;

SQL&amp;gt; alter system kill session &#39;656,10&#39;;&lt;br /&gt;

System altered.&lt;br /&gt;

SQL&amp;gt; select saddr,sid,serial#,paddr,username,status from v$session where username = &#39;REPADMIN&#39;;&lt;br /&gt;

no rows selected&lt;br /&gt;

SQL&amp;gt; select job,sid from dba_jobs_running;&lt;br /&gt;

no rows selected&lt;br /&gt;

SQL&amp;gt; select job,log_user,last_date,next_date from dba_jobs where log_user=&#39;REPADMIN&#39;;&lt;br /&gt;

       JOB LOG_USER                       LAST_DATE&lt;br /&gt;
---------- ------------------------------ -------------------&lt;br /&gt;
NEXT_DATE&lt;br /&gt;
-------------------&lt;br /&gt;
       106 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;

       109 REPADMIN                       2007-06-28 16:07:38&lt;br /&gt;
4000-01-01 00:00:00&lt;br /&gt;

       110 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;


SQL&amp;gt; exec dbms_job.broken(109,false,sysdate);&lt;br /&gt;

PL/SQL procedure successfully completed.&lt;br /&gt;

SQL&amp;gt; commit;&lt;br /&gt;

Commit complete.&lt;br /&gt;

SQL&amp;gt; select job,log_user,last_date,next_date from dba_jobs where log_user=&#39;REPADMIN&#39;;&lt;br /&gt;

       JOB LOG_USER                       LAST_DATE&lt;br /&gt;
---------- ------------------------------ -------------------&lt;br /&gt;
NEXT_DATE&lt;br /&gt;
-------------------&lt;br /&gt;
       106 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;

       109 REPADMIN                       2007-06-28 16:07:38&lt;br /&gt;
2007-06-28 16:28:40&lt;br /&gt;

       110 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;此后就我所知道的，就只能等着了。dbms_job.run(job_id) 也可以让 job 立即执行。关键是看 this_date ，他的值就是开始执行 job 的时间，job 如果执行时间太长，而下次执行又太快的话，可能也会导致问题。所以还可以尝试手动执行 job 看看。 dba_jobs 的 waht 字段就是对于的语句。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>稍微深入了解了一下cacti的thold插件的邮件通知</title>
      <link>https://wdicc.com/change-trigger-setting-for-thold/</link>
      <pubDate>Thu, 28 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-trigger-setting-for-thold/</guid>
      <description>&lt;p&gt;通过cacti的thold插件，可以做到snmp抓取到的数值低于你规定的值的时候进行邮件通知，例如我用他来监控磁盘空间，当磁盘空间低于某个数的时候就会给指定的email发邮件。但是有一点郁闷的是，有时候，可能是由于网络原因，抓取会超时，这样就会导致触发trigger，给你发送邮件。5分钟抓取一次，我这里的情况是几乎每个小时总会有2，3封这种邮件，很烦人，而且根本没意义。早就想屏蔽掉这种情况了，看了代码挺复杂就懒得弄，今天实在受不了了，深入了解了一下。&lt;/p&gt; &lt;p&gt;其实thold本身已经考虑到了这种情况，在 thold 的设置里面，就有一项 Default Trigger Count （Number of consecutive times the data source must be in breach of the threshold for an alert to be raised），就是连续触发几次才认为他真的低于 thold 了，才发送邮件。我尝试过修改这个设置，发现不管用。看了代码才了解，每个 &lt;strong&gt;Thresholds&lt;/strong&gt;&amp;nbsp;都有自己的 trigger 值，那个 default trigger count 只对新建的 thresholds 才有用。所以针对现有的，需要逐个去修改才行。如果不设置这个选项，那么使用的就是上面设置的那个默认的，所以没特殊需要，还是不要针对每个 thresholds 设置自己的 trigger 值比较好，这样方便修改。我通过修改数据库的方法，直接把这些都修改了。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;sql&#34;&gt;update thold_data set thold_fail_trigger = NULL;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;修改了之后还没有收到，这下应该清净了吧？&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为resin配置oracle连接池</title>
      <link>https://wdicc.com/resin-and-oracle/</link>
      <pubDate>Wed, 27 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/resin-and-oracle/</guid>
      <description>&lt;p&gt;resin 2.x 的配置方法和 3.x 的方法有区别。按照&lt;a href=&#34;http://www.caucho.com/resin-3.1/doc/db-thirdparty.xtp&#34;&gt;官方文档&lt;/a&gt;，做下面的配置。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;database&gt;&lt;br /&gt;
  &lt;jndi-name&gt;oraPool&lt;/jndi-name&gt;&lt;br /&gt;
  &lt;driver&gt;&lt;br /&gt;
    &lt;type&gt;oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/type&gt;&lt;br /&gt;
    &lt;url&gt;jdbc:oracle:thin:@localhost:1521:dbname&lt;/url&gt;&lt;br /&gt;
    &lt;user&gt;username&lt;/user&gt;&lt;br /&gt;
    &lt;password&gt;password&lt;/password&gt;&lt;br /&gt;
  &lt;/driver&gt;&lt;br /&gt;
#....&lt;br /&gt;
&lt;/database&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&amp;nbsp;在上面的 &lt;font color=&#34;#ff0000&#34;&gt;.... &lt;/font&gt;这里还可以添加&lt;a href=&#34;http://www.caucho.com/resin-3.1/doc/database-tags.xtp&#34;&gt;其他的&lt;/a&gt;配置信息。配置好之后启动resin，会发现提示类似下面的信息。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;conf/resin.conf:218: java.lang.ClassNotFoundException: oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;提示没有找到连接oracle数据库的jdbc驱动。这个驱动在oracle的安装目录里面有。比如我这里是在 /db/oracle/10.1.0/product/10g/jdbc/lib/ 。里面好多文件，具体都什么作用可以看&lt;a href=&#34;http://www.oracle.com/technology/tech/java/sqlj_jdbc/htdocs/jdbc_faq.htm#02_07&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;复制这个目录里面的 classes12.jar 和 nls_charset12.jar 到resin的 lib 目录下面，重新启动 resin 就可以了。本文完成过程中参考了&lt;a href=&#34;http://dev.csdn.net/article/29/29762.shtm&#34;&gt;这篇&lt;/a&gt;文章。如何使用这个pool，官方文档也有&lt;a href=&#34;http://www.caucho.com/resin-3.1/doc/config-database.xtp#usage/lookup&#34;&gt;说明&lt;/a&gt;。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>resin 的安装步骤</title>
      <link>https://wdicc.com/install-resin/</link>
      <pubDate>Thu, 21 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-resin/</guid>
      <description>&lt;p&gt;resin目前已经到了3.1版本，从resin网站上面下载的resin不带jdk，需要自己去下载。resin的下载页面在&lt;a href=&#34;http://www.caucho.com/download/index.xtp&#34;&gt;这里&lt;/a&gt;。下载最新的 Resin Pro 3.1.1 版本。&lt;/p&gt; &lt;p&gt;jdk的下载地址在 &lt;a href=&#34;http://java.sun.com/javase/downloads/index.jsp&#34;&gt;这里&lt;/a&gt;&amp;nbsp;，resin 3.1需要1.5及以上版本的jdk。&lt;/p&gt; &lt;p&gt;先来安装resin：&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;bash&#34;&gt;tar zxvf resin-pro-3.1.1&lt;br /&gt;
cd resin-pro-3.1.1&lt;br /&gt;
./configure --prefix=/usr/local/resin #安装的目的地址&lt;br /&gt;
make &amp;amp;&amp;amp; make install&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;安装完resin之后，安装jdk：&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;bash&#34;&gt;cd /usr/local&lt;br /&gt;
chmod +x /root/jdk-6u1-linux-i586.bin&lt;br /&gt;
/root/jdk-6u1-linux-i586.bin&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;此后会在/usr/local/下面建立一个jdk1.6.0_01目录，jdk就安装完毕了。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;resin 的配置文件在 /usr/loca/resin/conf 下面，主要是 resin.conf 。默认的端口是8080。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;http port=&#34;8080&#34; address=&#34;*&#34;&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;然后就是添加自己的应用地址了。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;host id=&#34;&#34; root-directory=&#34;.&#34;&gt;&lt;br /&gt;
      &lt;web-app id=&#34;/&#34; root-directory=&#34;webapps/ROOT&#34;&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;在这下面添加一行&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;web-app id=&#34;/test&#34; root-directory=&#34;/www/test/&#34;&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;此后呢，访问 http://ip:8080/test 就可以访问到你的应用了。 &lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>linux tuning</title>
      <link>https://wdicc.com/linux-tuning/</link>
      <pubDate>Mon, 04 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/linux-tuning/</guid>
      <description>地址 &lt;a href=&#34;http://www.enigma.id.au/linux_tuning.txt&#34;&gt;http://www.enigma.id.au/linux_tuning.txt&lt;/a&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
# server with a decent amount of memory.
#
# This file should be saved as /etc/sysctl.conf
# You can source it manually if your system has booted by using:
# sysctl -e -p /etc/sysctl.conf
#
# Paul Day, paul (at) bur.st
#
# Last updated 02/03/05 and tested on 2.6.9
#

# Increase RPC slots
sunrpc.tcp_slot_table_entries = 32
sunrpc.udp_slot_table_entries = 32
# Increase size of RPC datagram queue length
net.unix.max_dgram_qlen = 50
# Log spoofed, source routed and redirects
net.ipv4.conf.default.log_martians = 1
# Don&#39;t accept source routes
net.ipv4.conf.default.accept_source_route = 0
# Don&#39;t send redirects
net.ipv4.conf.default.send_redirects = 0
# Source route verification on - incoming packets must match outgoing routing
net.ipv4.conf.default.rp_filter = 1
# Don&#39;t accept redirects
net.ipv4.conf.default.accept_redirects = 0
# Don&#39;t forward source routes
net.ipv4.conf.default.mc_forwarding = 0
# Disable forwarding 
net.ipv4.conf.default.forwarding = 0
# Log spoofed, source routed and redirects
net.ipv4.conf.all.log_martians = 1
# Don&#39;t relay bootp
net.ipv4.conf.all.bootp_relay = 0
# Don&#39;t proxy arp for anyone
net.ipv4.conf.all.proxy_arp = 0
# Don&#39;t accept source route packets
net.ipv4.conf.all.accept_source_route = 0
# Don&#39;t send redirects
net.ipv4.conf.all.send_redirects = 0
# Source route verification on - incoming packets must match outgoing routing
net.ipv4.conf.all.rp_filter = 1
# Don&#39;t accept redirects
net.ipv4.conf.all.accept_redirects = 0
# Don&#39;t forward source routes
net.ipv4.conf.all.mc_forwarding = 0
# Don&#39;t enable forwarding
net.ipv4.conf.all.forwarding = 0
# Don&#39;t allow the arp table to become bigger than this
net.ipv4.neigh.default.gc_thresh3 = 2048
# Tell the gc when to become aggressive with arp table cleaning.
# Adjust this based on size of the LAN. 256 is suitable for most
net.ipv4.neigh.default.gc_thresh2 = 1024
# Adjust where the gc will leave arp table alone - set to 32.
net.ipv4.neigh.default.gc_thresh1 = 32
# Adjust to arp table gc to clean-up more often
net.ipv4.neigh.default.gc_interval = 30
# Increase TCP
net.ipv4.neigh.default.proxy_qlen = 96
net.ipv4.neigh.default.unres_qlen = 6
# Increase size of socket buffers
net.ipv4.tcp_rmem = 4096	98304	349520
net.ipv4.tcp_wmem = 4096	65535	262142
net.ipv4.tcp_mem = 98304	262142	393216
# Turn off sack
net.ipv4.tcp_dsack = 0
# Don&#39;t use ECN because too many sites have wacky routers that can&#39;t handle it`
net.ipv4.tcp_ecn = 0
net.ipv4.tcp_reordering = 3
# Turn off sack/fack
net.ipv4.tcp_fack = 0
# Enable bad error message Protection
net.ipv4.icmp_ignore_bogus_error_responses = 1
# Ignore broadcasts pings, could become part of a Smurf
net.ipv4.icmp_echo_ignore_broadcasts = 1
# But don&#39;t ignore directed pings
net.ipv4.icmp_echo_ignore_all = 0
# Widen local port range
net.ipv4.ip_local_port_range = 33000	60000
# Bump up TCP socket queuer to help with syn floods
net.ipv4.tcp_max_syn_backlog = 2048
# Turn syn-cookie protection on
net.ipv4.tcp_syncookies = 1
# Drop it so lack of FIN times out quicker
net.ipv4.tcp_fin_timeout = 30
# How many times to retry killing an alive TCP connection
net.ipv4.tcp_retries2 = 15
net.ipv4.tcp_retries1 = 3
# Enable a fix for RFC1337 - time-wait assassination hazards in TCP
net.ipv4.tcp_rfc1337 = 1
# Drop keep-alive time
net.ipv4.tcp_keepalive_time = 3600
# Set number of times to retry a SYN-ACK in a half-open new connections
net.ipv4.tcp_synack_retries = 5
# Set number of times to retry SYN in a new connection
net.ipv4.tcp_syn_retries = 5
# Turn off sack
net.ipv4.tcp_sack = 0
# Enable really big (&gt;65kB) TCP window scaling if we want it.
net.ipv4.tcp_window_scaling = 1
# Turn off timestamps
# Turn this back on if you&#39;re on a gigabit or very busy network
# Having it off is one less thing the IP stack needs to work on
net.ipv4.tcp_timestamps = 0
# Increase number of incoming connections backlog
net.core.somaxconn = 512
# Bump optmem_max up
net.core.optmem_max = 20480
# Increase number of incoming connections backlog
net.core.netdev_max_backlog = 1024
net.core.dev_weight = 64
# Bump up default r/wmem to max
net.core.rmem_default = 262141
net.core.wmem_default = 262141
# Bump up max r/wmem
net.core.rmem_max = 262141
net.core.wmem_max = 262141
# Increase size of file handles and inode cache
fs.file-max = 209708&lt;/pre&gt;

&lt;p class=&#34;poweredbyperformancing&#34;&gt;Powered by &lt;a href=&#34;http://scribefire.com/&#34;&gt;ScribeFire&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>oracle 的高级复制出了点问题，记录下解决办法</title>
      <link>https://wdicc.com/rep-of-oracle/</link>
      <pubDate>Fri, 18 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rep-of-oracle/</guid>
      <description>早上来了同事就来找我，有两台同步的服务器数据库没有同步成功，查查咋回事。&lt;br /&gt;

一台A，从B处同步。蒙了一下，果然有个dba_jobs表，呵呵。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;

在A处执行上面的命令，好像repadmin的job都在正常执行。
在B处执行上面的命令，能查到类似下面的信息

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
---------- ------------------------------ -------------------
NEXT_DATE             FAILURES B
------------------- ---------- -
47 repadmin                           2006-05-16 19:37:29
4001-01-01 00:00:00         16 Y&lt;/pre&gt;

显然是job挂了。查看了一下挂的时间，原来是联通机房机柜断电那天，A机器在联通机房，那天断电了6个小时。B机器上面的同步尝试了16次之后就挂起了。解决方法也不难，用repadmin用户登录，然后执行下面的语句，&lt;strong&gt;谁的job只能由谁来执行&lt;/strong&gt;：

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;

47是job id，sysdate表示当前时间。等会再看吧，执行成功之后会把 failures 重新计数，B变成N。
</description>
    </item>
    
    <item>
      <title>awk 数组的一个应用</title>
      <link>https://wdicc.com/awk-array/</link>
      <pubDate>Thu, 17 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awk-array/</guid>
      <description>sed和awk这本书看了好久了，sed部分将就看完了，awk部分基本没怎么看。上次有人问起一个比较文件的问题，发现awk来解决非常的简单。&lt;br /&gt;

比较两个文件A、B，打印出包含在A中的，但是不包含在B中的所有行。&lt;br /&gt;

根据题目要求，awk的解决方法如下:&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

里面NR表示行号，FNR表示当前文件中的行号。NR==FNR的时候，表示此时正在读取B文件，以B中的$0为索引，建立一个数组，并且都赋值为1。
当NR&gt;FNR 的时候，表示此时在读取A文件，如果a[$0]为1，那么就表示这个$0是在B里面也存在的，是吧？所以，如果要B里面不存在的，那么就得是a[$0]不为1的，就是没做过赋值的。所以了，就是这个了。

进阶一下，比较两个文件A、B，打印包含在A中第一列，但是不包含在B中第二列的整行。

类似的：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

比较文件内容还可以用comm命令，还有人提出了grep命令，例如第一个问题：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>apache 的一个启动失败的问题的解决方法</title>
      <link>https://wdicc.com/solve-apache-start-fail/</link>
      <pubDate>Wed, 18 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/solve-apache-start-fail/</guid>
      <description>这个问题网上好多方法，记录一下方便自己以后查看。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
[Wed Apr 18 19:56:47 2007] [notice] Digest: done
[Wed Apr 18 19:56:47 2007] [warn] pid file /usr/local/apache54/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run?
[Wed Apr 18 19:56:47 2007] [emerg] (28)No space left on device: Couldn&#39;t create accept lock&lt;/pre&gt;

解决方法就是
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>复习了一下 OSI 7层模型 和 tcp/ip 4层模型</title>
      <link>https://wdicc.com/osi-and-tcp-ip/</link>
      <pubDate>Tue, 17 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/osi-and-tcp-ip/</guid>
      <description>老是记不住这些，每次被问道只能说知道，但是说不出来名字。刚从irc里面得到一个好记得方法。&lt;br /&gt;

&lt;b&gt;All people seemes to need data processed.&lt;/b&gt;&lt;br /&gt;

这句话的字头刚好就是7层模型的字头。&lt;br /&gt;

A-&gt;Application 应用层    \&lt;br /&gt;
P-&gt;Presentation 表示层  --   应用层(HTTP、TFTP、FTP、NFS、SMTP、Telnet、SNMP、DNS)&lt;br /&gt;
S-&gt;Session 会话层        /&lt;br /&gt;
T-&gt;Transport 传输层   -----  传输层(TCP/UDP)&lt;br /&gt;
N-&gt;Network 网络层     -----  Internet 层(IP、ICMP、ARP、RARP)&lt;br /&gt;
D-&gt;Data Link 数据链路层 \&lt;br /&gt;
P-&gt;Physical 物理层      /  网络访问层 &lt;br /&gt;

这样似乎好记一点。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天又理解了nagios的两个配置</title>
      <link>https://wdicc.com/nagios-conf/</link>
      <pubDate>Mon, 16 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nagios-conf/</guid>
      <description>&lt;b&gt;Host and Service Dependencies&lt;/b&gt;&lt;br /&gt;

当监控的host或者service之间有依赖关系的时候，可以通过定义dependence来让nagios知道应该通知什么。&lt;br /&gt;

比如我这里的服务器都在idc托管，而我的nagios却是运行在公司的一台服务器上面。这样，有时候可能就需要考虑依赖关系了。比如当公司的网络出问题的时候（事实上经常出现），比如断网，总不能让他也认为是idc托管的服务器出问题了而给你发通知吧。host dependence正好可以解决这个问题。&lt;br /&gt;

比如 A 是idc的，B 是公司的网关（或者某个应该一直在线的服务器，比如sina.com.cn）。当nagios检测到A连不上的时候，他会根据dependence来检测B，如果B也连不上了，那么就只通知你B连不上了。&lt;br /&gt;

大概的配置如下&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
        host_name                       B
        dependent_host_name             A
        notification_failure_criteria   d,u
        }&lt;/pre&gt;

&lt;b&gt;Notification Escalations&lt;/b&gt;

escalations 的意思就是扩大。整个这个的意思应该就是扩大通知范围。之前一直没理解是什么意思，今天看了才明白。其实就是定义出问题的时候，什么时候扩大通知。

比如A服务器挂了，他对应的contactgroup就会立刻得到通知。但是，如果这个组里面的人在睡觉或者在做什么事情忽略了这个通知，怎么办呢？当然nagios会通知多次，但是如果这些都忽略掉了或者没有收到怎么办？这样这个escalations就有作用了，他可以定义几次通知contatgroup之后就开始通知别的人。还有一些别的功能，就不多说了。
</description>
    </item>
    
    <item>
      <title>unix 进程</title>
      <link>https://wdicc.com/unix-process/</link>
      <pubDate>Wed, 11 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/unix-process/</guid>
      <description>看了 &lt;a href=&#34;http://www-128.ibm.com/developerworks/aix/library/au-speakingunix8/?ca=dgr-lnxw01speakunix8&#34;&gt;Speaking UNIX, Part 8: UNIX processes&lt;/a&gt; 之后做一点笔记。&lt;br /&gt;

&lt;b&gt;A real multitasker&lt;/b&gt;&lt;br /&gt;

在unix、linux、freebsd、mac os x、windows等系统里面，计算任务都表现为进程。unix 看上去可以同时运行很多任务，因为每个进程都只占用一部分cpu时间。&lt;br /&gt;

进程就像一个容器，包括运行的程序，环境变量，程序的输入输出等。可以把进程想像为一个国家，有自己的边界，资源和产品。&lt;br /&gt;

每个进程也都有自己的owner（属组），owner通常是运行这个程序的人，有些系统服务的owner或许会是某个特殊的用户，或者是root。例如，为了安全，某个Apache server的owner可能是属于一个叫www的用户的，这个用户有权限来存取web服务需要的文件，这些文件别的用户是不能访问的。&lt;br /&gt;

一个进程的owner可能会改变，但是一个进程在同一个时间只能有一个owner。&lt;br /&gt;

setuid和setgid可以让一个进程获得比owner更高的权限。&lt;br /&gt;

一个setuid进程，例如top，运行的时候使用的是owner的权限。因此，当你运行top的时候，你的权限就被提升为root了。类似的，一个setgid进程，运行的时候具有的是group owner的权限。&lt;br /&gt;

例如，在Mac osx里面的wall命令（就是write all的缩写），因为他需要给每个物理或者虚拟的终端设备写信息，所以他被setgid tty。&lt;br /&gt;

&lt;b&gt;Taking inventory&lt;/b&gt;&lt;br /&gt;

类似其他系统资源，unix系统里面的进程id总数虽然多，但是是有限的（实际上，一个系统几乎从来都不会出现进程id数不够的情况）。每一个新的进程，例如运行vi或者xclock，都会立刻分配一个进程id。在unix系统里面可以用ps命令查看进程。&lt;br /&gt;

ps -a -w -x 可以显示所有进程列表。-a显示所有在tty设备上面运行的进程，-x显示所有不是在tty设备上面运行的程序，-w使用“宽”模式显示，用来查看进程一些长的项目。&lt;br /&gt;

-o 还可以指定输出信息的列表。比如 -o pid,uname,command,state,stime,time 。&lt;br /&gt;

&lt;b&gt;Daddy, where do processes come from?&lt;/b&gt;&lt;br /&gt;

 在unix系统里面，有些进程会从系统启动到关闭整个过程中一直运行。大部分进程从任务开始到结束都很快。&lt;br /&gt;

 每个新的unix进程都是从已经存在的进程产生的。另外，每个新的进程（子进程）都克隆自他的父进程。at least for an instant, until the child continues execution independently.如果每个进程都来自一个已经存在的进程，那么“第一个进程来自哪里？”，先有鸡还是先有蛋的问题。&lt;br /&gt;

第一个进程是由kernel在启动过程中产生的，叫做init。ps -l 1命令可以查看。&lt;br /&gt;
F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY        TIME CMD&lt;br /&gt;
4 S     0     1     0  0  76   0 -   376 -      ?          0:06 init [2]  &lt;br /&gt;

可以看到，init的uid是0，也就是root。不像其他进程，init的ppid（父进程id）是0。&lt;br /&gt;

图 2,3 稍微解释一下。&lt;br /&gt;
&lt;ol&gt;&lt;li&gt;进程A运行了几条指令。进程A有自己的资源、输入输出、环境变量等。&lt;/li&gt;&lt;li&gt;遇到一条fork()指令，会产生一个新的进程。进程A遇到fork之后，立刻产生一个新的进程Z。进程Z是A的克隆，有与A一行的环境变量、内存内容、程序状态、打开文件等。&lt;/li&gt;&lt;li&gt;进程Z一开始就从fork后面的指令继续执行，就是进程A剩下的部分。进程A也继续执行剩下的部分。&lt;/li&gt;&lt;li&gt;在fork指令后面的指令中，会检查当前的进程是子进程还是父进程。就是说，进程Z和进程A在后续的指令中各自分别确定自己是父进程还是子进程。区别是，fork指令会在子进程中返回0，而且父进程中返回子进程的进程id。&lt;/li&gt;&lt;li&gt;在前面的测试之后，进程A和进程Z各自使用独立的code path，就好像他们都来自一条路，后来选择了不同的岔路一样。&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;

在fork之后，进程A也许会继续运行同样的程序。然而，进程Z或许会立刻变成另外一个程序。进程Z现在完全就是一个独立于其父进程A的进程了。&lt;br /&gt;

&lt;b&gt;Forking around&lt;/b&gt;&lt;br /&gt;

可以在命令行实际体验一下fork。打开一个新的xterm，你现在应该知道xterm有自己的进程，而且，在xterm里面，shell是有xterm产生的一个单独的进程。&lt;br /&gt;

通过ps命令的输出可以看到，在ppid字段那里，就是父进程的id。 &lt;br /&gt;

使用&amp;符号可以将程序放到后台执行。执行的时候会同时输出各个进程的id。jobs命令可以查看当前运行的进程。标签1，2，3可以用来标记不同的会话。kill %N 就是结束第N个会话。fg %N 可以将一个会话放到前台。&lt;br /&gt;

&lt;b&gt;To the great process pool in the sky&lt;/b&gt;&lt;br /&gt;

有些进程是一直存在的，例如init，有些会将自己转变成其他的（例如shell）。大部分进程最终都会自然死掉，也就是程序运行完毕的时候。&lt;br /&gt;

你可以让一个进程suspended（挂起），也可以让他复苏。还有像前面说的，你也可以使用kill命令结束一个进程。&lt;br /&gt;

ctrl-Z 可以挂起一个进程。进程在前台运行的时候，ctrl+c 可以结束这个进程。在shell内部使用unix signals来对一个进程产生影响。你可以从一个进程像另一个发送signal（信号），也可以让进程自己给自己发送信号。&lt;br /&gt;

man 7 signal或者kill -L 可以看到所有的signal。使用kill命令可以发送这些signal。&lt;br /&gt;

刚针对fork测试了一下，写一个简单的c程序&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-c&#34;&gt;

main(){
        int a;
        printf(&#34;Before fork.\\n&#34;);
        a = fork();
        printf(&#34;After fork, fork returns %d\\n&#34;, a);
}&lt;/pre&gt;

保存之后用gcc编译一下，执行一个，可以看到结果。fork之后的程序会继续执行下面的指令，唯独fork的返回值不同。
</description>
    </item>
    
    <item>
      <title>awstats 如何统计以前的日志？</title>
      <link>https://wdicc.com/awstats-log/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awstats-log/</guid>
      <description>突然想安装一个awstats了，参考 &lt;a href=&#34;http://www.chedong.com/tech/awstats.html&#34;&gt;车东&lt;/a&gt; 的文章，安装了一个。可是发现一个问题，设置了logfile为 access_log.%YYYY-24%MM-24%DD-24.log 之后，发现只能把昨天的日志统计进来，可是我的log下面还有好多呢，想统计以前的，怎么弄呢？幸好，awstats已经考虑到这个问题了。&lt;br /&gt;

awstats.pl 脚本支持在命令行指定logfile，这样简单了，改变这个参数就可以了。不过要注意的是，如果你的data里面已经处理新的日志，那么指定logfile也没用了，以前的没办法更新进来了。只能是删掉data里面的内容，然后重新从最早的开始生成一遍。我写了一个脚本来做这个事情。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

awstats_dir=/opt/tt2/awstats/wwwroot/cgi-bin
logfile_dir=&#34;/usr/local/apache/logs/&#34;

cd $awstats_dir

for file in `find $logfile_dir -name &#34;access_log.2*&#34; | sort`;do
        #echo &#34;$file&#34;
        ./awstats.pl －update -config=wd -LogFile=$file
done&lt;/pre&gt;

保存为 awstats.sh ，然后执行就可以了。他会查找 logfile_dir 下面所有的 access_log.2 开头的文件，作为参数来更新记录。
</description>
    </item>
    
    <item>
      <title>oracle 文本界面的安装</title>
      <link>https://wdicc.com/oracle-text-install/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-text-install/</guid>
      <description>oracle 的手册里面讲的通常都是图形界面下面的安装，就是用oracle登录桌面，然后运行安装程序的方法。可实际上维护服务器的时候，大多用的还是&lt;font color=&#34;#3333ff&#34;&gt;远程&lt;/font&gt;文本界面。这样很有必要看看如何通过文本界面来安装oracle。&lt;br /&gt;

oracle本身的安装程序也提供了这个方法，就是使用 responseFile 。这个 responseFile 其实就是在图形界面安装的时候的一些选择，保存到文件之后，直接告诉安装程序从这里读取设置就好了。将oracle的安装文件 ship.db.lnx32.cpio.gz 解压：&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
cpio -idmv &lt; ship.db.cpio&lt;/pre&gt;

这样可以看到有个Disk1的文件夹，里面有个response目录，里面好多response文件，不过我还不知道这些有什么区别，里面设置项也很多，还没弄明白。我使用的不是这里的response文件。是通过下面的方法获取的rsp文件。

可以通过在记录模式中运行软件或通过手动编辑示例响应文件来创建响应文件。以下是一个基本演示：

   1. 用此命令启动 OUI 来创建响应文件：

      ./runInstaller -record -destinationFile /tmp/recorded.rsp
       
   2. 选择您需要的所有部分（源目标目录、主目录、主目录名、产品）。
   3. 当您看到 Summary 屏幕时，不要单击 Install，而是单击 Cancel。
   4. 仔细查看在 tmp/recorded.rsp 中创建的结果响应文件。如果需要，可以手动编辑该文件，只要您遵守使用规定的格式即可（请参见文档）。
   5. 现在如下执行静默安装：

      ./runInstaller -silent -responseFile /tmp/recorded.rsp

      在运行脚本时将会报告安装的进度。

如果您由于响应文件中的条目不正确而遇到安装故障，安装将失败并显示一条诊断消息。详细信息可在 oraInventory/logs 目录中找到。在每次使用响应文件运行 OUI 时，会创建具有 installActions-&lt;时间戳&gt;.log 和 silentInstall&lt;时间戳&gt;.log 格式名称的日志。

这样，只需要找台机器在图形界面下面运行一下安装程序，生成一个rsp文件，然后放到真正需要安装的服务器上面，修改一下安装路径，设置一下sys密码，就可以开始安装了。
</description>
    </item>
    
    <item>
      <title>oracle在rh里面的安装流程</title>
      <link>https://wdicc.com/install-oracle-in-rh/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-oracle-in-rh/</guid>
      <description>&lt;b&gt;第1部分 安装操作系统&lt;/b&gt;&lt;br /&gt;

首先需要安装系统....Red Hat Enterprise Linux 2.1，Red Hat Enterprise Linux 3，Novell SUSE Linux Enterprise Server 8 是通过 oracle 10g认证的三个linux发行套件，不知道oracle 10.3有没有对这个修改。默认情况下，oracle 10g只能在rh的这两个版本安装，如果不是上面两个，运行安装程序会直接打印错误。不过也有方法在别的版本安装的，后面有说明。&lt;br /&gt;

按照&lt;a href=&#34;http://blog.wdicc.com/wordpress/2007/03/14/307/&#34;&gt;上一篇文章&lt;/a&gt;，安装linux的时候可以不选择图形界面，这样还可以节省不少空间。按照oracle的文档，说需要安装下面的这些软件包。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
compat-gcc-c++ compat-libstdc++ compat-libstdc++-devel&lt;/pre&gt;

我实际安装过程中，compat-gcc compat-gcc-c++ compat-libstdc++ compat-libstdc++-devel 这几个包我没有安装也可以安装oracle。
&lt;!--more--&gt;
&lt;b&gt;第2部分 针对oracle配置linux&lt;/b&gt;

oracle 对系统硬件配置的一些要求。

&lt;blockquote&gt;内存 &gt; 512MB
swap &gt; 1GB
oracle软件 &gt; 2.5GB
数据文件  &gt; 1.2GB
/tmp  &gt; 400MB&lt;/blockquote&gt;

创建oracle用户和组
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
/usr/sbin/groupadd dba
/usr/sbin/useradd -m -g oinstall -G dba oracle
id oracle&lt;/pre&gt;

要记得为oracle用户设置密码。 
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

创建oracle的安装目录，要注意前面对分区的大小要求。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
mkdir -p /u02/oradata
chown -R oracle:oinstall /u01/app/oracle /u02/oradata
chmod -R 775 /u01/app/oracle /u02/oradata&lt;/pre&gt;

配置linux内核参数

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
kernel.shmall = 2097152
kernel.shmmax = 2147483648
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
fs.file-max = 65536
net.ipv4.ip_local_port_range = 1024 65000
EOF
/sbin/sysctl -p&lt;/pre&gt;

为 oracle 用户设置 Shell 限制。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
oracle               soft    nproc   2047
oracle               hard    nproc   16384
oracle               soft    nofile  1024
oracle               hard    nofile  65536
EOF

cat &gt;&gt; /etc/pam.d/login &lt;&lt;EOF
session    required     /lib/security/pam_limits.so
EOF

cat &gt;&gt; /etc/profile &lt;&lt;EOF
if [ \$USER = &#34;oracle&#34; ]; then  
if [ \$SHELL = &#34;/bin/ksh&#34; ]; then
ulimit -p 16384
ulimit -n 65536
else
ulimit -u 16384 -n 65536
fi
umask 022
fi
EOF

cat &gt;&gt; /etc/csh.login &lt;&lt;EOF
if ( \$USER == &#34;oracle&#34; ) then
limit maxproc 16384
limit descriptors 65536
umask 022
endif
EOF&lt;/pre&gt;

设置oracle 用户的环境变量。通过修改 .bash_profile 来完成。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
ORACLE_BASE=/u01/app/oracle; export ORACLE_BASE
ORACLE_SID=demo1; export ORACLE_SID&lt;/pre&gt;

其他的变量等安装完了再设置。

&lt;b&gt;第3部分 安装 Oracle&lt;/b&gt;

使用一个修改好的rsp文件，然后执行下面的命令。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

然后就等着吧，看那些log或者看屏幕输出都可以看到安装进度。

第4部分 可能会遇到的问题

下面这些是从网上找到的，我用到的就是第1和9条，还没有遇到其他问题。

1、运行runInstaller，错误提示如下：
Checking requirements...
Checking operating system version: must be redhat-2.1,redhat-3,SuSE-9,SuSE-8,UnitedLinux-1.0
Failed&lt;&lt;&lt;&lt;
解决方法：
方法一：
在/etc下创建UnitedLinux-release文件
#cat &gt; /etc/UnitedLinux-release &lt;&lt; EOF
&gt;UnitedLinux 1.0 (i586)
&gt;VERSION=1.0
&gt;EOF
然后就可以正常启动安装程序。注意不要使用vi编辑该文件，否则可能会引起ORA-12547: TNS: lost contact的错误。

方法二：
运行runInstaller -ignoreSysPrereqs，这样会跳过检查

方法三：
修改Oracle 的/.../disk1/install/linux/oraparam.ini这个参数文件

2、安装界面或者netca界面、dbca界面显示很多&#34;口口&#34;样子的乱码

解决办法:查看locale输出
# locale
LANG=zh_CN.GB18030
LC_CTYPE=zh_CN.GB18030
LC_NUMERIC=&#34;zh_CN.GB18030&#34;
LC_TIME=&#34;zh_CN.GB18030&#34;
LC_COLLATE=&#34;zh_CN.GB18030&#34;
LC_MONETARY=&#34;zh_CN.GB18030&#34;
LC_MESSAGES=&#34;zh_CN.GB18030&#34;
LC_PAPER=&#34;zh_CN.GB18030&#34;
LC_NAME=&#34;zh_CN.GB18030&#34;
LC_ADDRESS=&#34;zh_CN.GB18030&#34;
LC_TELEPHONE=&#34;zh_CN.GB18030&#34;
LC_MEASUREMENT=&#34;zh_CN.GB18030&#34;
LC_IDENTIFICATION=&#34;zh_CN.GB18030&#34;
LC_ALL=
执行#export LANG=en_US 然后重新调用安装程序.


3、Oracle10g自动检查操作系统是否符合安装的条件。当按照上面的脚本对系统进行配置后，会有警告提示。[Retry]会看到如下提示：

Checking for openmotif-2.1.30-11; found Not found. Failed &lt;&lt;&lt;&lt;
Check complete. The overall result of this check is: Failed &lt;&lt;&lt;&lt;
Problem: Some recommended packages are missing (see above)

下载并安装openmotif-2.1.30-11软件包后，通过验证。

备注：有oracle文档说明：对于在RHELAS3上安装oracle10g，需要openmotif-2.2.2-16或更高版本；
但下载openmotif-2.2.2-16.src.rpm，在机器上编译安装，oracle自动检查仍然有警告提示。


4、安装程序在进行到74%的时，按照提示用root身份运行$ORACLE_HOME/root.sh，出现以下错误：

./root.sh: line 227: /var/opt/oracle/srvConfig.loc: 没有那个文件或目录
./root.sh: line 228: /var/opt/oracle/srvConfig.loc: 没有那个文件或目录
/bin/chown: 无法取得 ‘/var/opt/oracle/srvConfig.loc’的属性：没有那个文件或目录
/bin/chgrp: 无法取得 ‘/var/opt/oracle/srvConfig.loc’的属性：没有那个文件或目录
/bin/chmod: 无法取得 ‘/var/opt/oracle/srvConfig.loc’的属性：没有那个文件或目录
Successfully accumulated necessary OCR keys.
Creating OCR keys for user &#39;root&#39;, privgrp &#39;root&#39;..
OCR create keys failed, OCR error 26
Failed to initialize Oracle Cluster Registry for cluster

解决方法：
# mkdir /var/opt/oracle
# chown -R oracle.dba /var/opt/oracle
# ./root.sh

5、 数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ORA-00371: not enougsh shared pool memory, should be atleast 52132659 bytes.

解决方法：
这个错误并非是内核参数设置的问题，也和系统的物理内存大小无关。编辑$ORACLE_HOME/dbs/init$GID.ora文件：
shared_pool_size = 52132659


6、 数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ora-01102: cannot mount database in EXCLUSIVE mode

解决方法：
完全关闭数据库,更改$ORACLE_HOME/dbs/init.ora文件里的db_name为建库时定义的“全局数据库名”，然后再重新启动数据库

7、 数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ora-00205:error in identifying conrolfile, check alert log for more info

解决方法：
SQL&gt;show parameter control_files
SQL&gt;CREATE CONTROLFILE
将$ORACLE_BASE/admin/$GID/pfile/init$SID.ora***************拷贝到$ORACLE_HOME/dbs下，命名为init$SID.ora,即可解决。

8、数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ORA-01990:error opening password file &#39;$ORACLE_NAME/dbs/orapw&#39;
ORA-27037:unable to obtain file status
Linux Error:2: No such file or directory
Additional information: 3

解决方法：
将$ORACLE_HOME/dbs下的orapw$db_name文件拷贝生成一个orapw文件。


8、建库的过程中或者连接数据库的时候提示：
ORA-12547: TNS: lost contact
引起该错误的环境比较复杂，原因可能是：
1、用vi编辑的/etc/UnitedLinux-release文件
2、内核参数设置不正确
3、察看一下listener是否正常启动: lsnrct1 status
4、机器负载过大

9、 emca 的web界面的乱码

http://www.eygle.com/archives/2006/03/oracle10g_em_font_change.html

一直没怎么用10g的EM工具,今天打开来看看,发现也有相传已久的乱码问题.网上也流传着N种解决方案,仔细看一下,其实这个问题很好解决.

如果安装时,我们系统环境变量设置的是中文环境,那么就不会有这个问题.这个问题根本原因在于安装时,JDK/JRE字符集的自动选择.

在 $ORACLE_HOME/jdk/jre/lib 和 $ORACLE_HOME/jre/1.4.2/lib/ 目录下都有多种字符集字体配置文件:

[oracle@danaly ~]$ cd $ORACLE_HOME/jdk/jre/lib
[oracle@danaly lib]$ ls font*zh_CN*
font.properties.zh_CN.Redhat  font.properties.zh_CN.Redhat2.1  
font.properties.zh_CN.Sun  font.properties.zh_CN_UTF8.Sun

[oracle@danaly lib]$ cd $ORACLE_HOME/jre/1.4.2/lib/
[oracle@danaly lib]$ ls font*zh_CN*
font.properties.zh_CN.Redhat  font.properties.zh_CN.Redhat2.1  
font.properties.zh_CN.Sun  font.properties.zh_CN_UTF8.Sun 

我们只要用合适的中文字符集文件替换缺省文件即可,我选择使用font.properties.zh_CN.Redhat来替换缺省字体定义文件:

[oracle@danaly lib]$ cp font.properties.zh_CN.Redhat font.properties 

替换之后需要清理一下Cache,重启EM即可.

Cache路径通常位于:

$ORACLE_HOME/oc4j/j2ee/oc4j_applications/applications/em/em/cabo/images/cache/zhs 

清除所有gif文件即可.然后重新启动EM:

[oracle@danaly zhs]$ emctl stop dbconsole
TZ set to PRC
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0  
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.
http://danaly.hurrray.com.cn:1158/em/console/aboutApplication
Stopping Oracle Enterprise Manager 10g Database Control ... 
 ...  Stopped. 
[oracle@danaly zhs]$ emctl start dbconsole
TZ set to PRC
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0  
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.
http://danaly.hurrray.com.cn:1158/em/console/aboutApplication
Starting Oracle Enterprise Manager 10g Database Control .............. started. 
------------------------------------------------------------------
Logs are generated in directory 
/opt/oracle/product/10.2.0/danaly.hurrray.com.cn_danaly/sysman/log  

现在登陆Web页面,EM显示就可以正常显示中文了.

参考文章： &lt;a href=&#34;http://www.oracle.com/technology/global/cn/pub/articles/smiley_10gdb_install.html&#34;&gt;这里&lt;/a&gt;
</description>
    </item>
    
    <item>
      <title>升级了一下cacti</title>
      <link>https://wdicc.com/upgrade-cacti/</link>
      <pubDate>Thu, 08 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/upgrade-cacti/</guid>
      <description>cacti几个月前就提示我&lt;a href=&#34;http://cactiusers.org/&#34;&gt;Architecture&lt;/a&gt;插件有升级了，一直懒得弄。今天发现cacti也升级了，就去看了看，顺便升级了一下。记录一下升级需要注意点的东西。&lt;br /&gt;

debian 里面的cacti设置的比较好，log、rra、resource目录都是分开放的，不在cacti目录下面，做了一个链接过去。其他系统升级的时候注意要先备份这三个目录先。建议使用debian的这种方法，这样下次升级省事了。&lt;br /&gt;

然后就是很简单的，下载cacti，覆盖，修改config文件，浏览器连接，提示升级，按照步骤来就行了。然后再打上Architecture补丁，再修改config文件就行了。&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>