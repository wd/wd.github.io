<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>other on wd and cc</title>
    <link>https://wdicc.com/tags/other/</link>
    <description>Recent content in other on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 16 Sep 2007 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/other/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gdm登陆窗口的方块乱码</title>
      <link>https://wdicc.com/gdm-problem/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gdm-problem/</guid>
      <description>这几天一直有个问题解决不了，gdm的登陆窗口上面的字体是方块。我一般都是使用home下面的.fonts.conf 来配置字体的。不过gdm启动的时候好像也不会读取你home的下吧，所以还是把他放到了/etc/fonts/local.conf 里面。
使用gdm的时候，配置为theme的时候，gdm会起不了，不停的尝试，最后出一个提示窗口，全是方块。不过应该是提示没办法启动welcome窗口的。配置为简介模式的话，gdm至少能起来，虽然上面的字体全是方块，连我输入的字也是方块，就算是英文。
开始以为是字体设置的问题，把我的自定义设置全部去掉也不行。locale改成英文就正常了。不过还是不爽，搜了半天没找到解决办法，后来有篇文章提示了一下，会不会是字体权限的问题？我才想起来自己添加的雅黑字体，去看了一下，果然只有root可读。修改权限之后，方块的现象没了。</description>
    </item>
    
    <item>
      <title>安装配置一台 apache&#43;php&#43;mysql 的rh el4服务器</title>
      <link>https://wdicc.com/setup-apache-mysql-php-in-rhel4/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/setup-apache-mysql-php-in-rhel4/</guid>
      <description>系统
rh el4 是四张盘，用第一张启动电脑。前面没啥好说的了，后面选择软件的时候，不要选x界面的东西，开发工具全选上，别的好像默认就行了，大概需要2G好像是。
Apache
apache的下载地址：http://httpd.apache.org/download.cgi，选一个mirror，下载就行了。
编译选项： ./configure --prefix=/usr/local/apache/ --enable-rewrite --enable-so
rewrite还是很有必要装上的，enable so让apache可以加载php模块。
Mysql
mysql 的下载地址(以5.0为例)：http://mysql.org/downloads/mysql/5.0.html#source
注意我们这里下载的是 source，要自己来编译。这样可以控制mysql默认的字符集是什么。
编译选项： ./configure --prefix=/data/mysql --with-charset=gbk --with-extra-charsets=all
这里设置的字符集是gbk，根据需要自己来设计自己的。别的安装的过程可以参考源码目录里面的INSTALL文件，基本按照那个一步一步来就行了。
libjpeg
安装php之前，先需要自己编译一个 libjpeg 和 libpng，系统安装的少东西，php编译不过去。
libjpeg 的下载地址：ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz
编译选项：./configure --enable-static --enable-shared --prefix=/usr/local/libjpeg
libpng
libpng的下载地址：http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download
编译选项：./configure --prefix=/usr/local/libpng
php
php的下载地址(目前的最新版)：http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror
编译选项：
./configure --with-apxs2=/usr/local/apache/bin/apxs --with-mysql=/data/mysql/&amp;nbsp; --prefix=/usr/local/php5/ --with-config-file-path=/usr/local/php5/etc --with-openssl --enable-mbstring --with-iconv --with-curl --with-gd --with-zlib&amp;nbsp; --with-png-dir=/usr/local/libpng --with-jpeg-dir=/usr/local/libjpeg</description>
    </item>
    
    <item>
      <title>给ibm server设置raid</title>
      <link>https://wdicc.com/raid-on-ibm-server/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/raid-on-ibm-server/</guid>
      <description>
昨天去给一台没拆封的ibm server装系统，头一次弄了raid，发现操作起来也不难。之前心里没底，就去yahoo搜索了一下，发现图解的都是使用server guide 那个光盘安装windows的（其实就一篇文章，n多人转载了），这次装就顺便拍了一下，呵呵。&lt;br /&gt;

server guide 光盘的图，用serverguide安装也挺简单的，光盘启动之后按照提示一步一步来就行了。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085847_910633405.jpg&#34; /&gt;&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085837_2093046889.jpg&#34; /&gt;&lt;br /&gt;

</description>
    </item>
    
    <item>
      <title>涉及到linux系统安全的几个文件</title>
      <link>https://wdicc.com/some-importent-files-in-linux/</link>
      <pubDate>Tue, 24 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/some-importent-files-in-linux/</guid>
      <description>部分内容转自这里
1 cron.allow,cron.deny
 If the cron.allow file exists, then you must be listed therein in order to be allowed to use this command. If the cron.allow file does not exist but the cron.deny file does exist, then you must not be listed in the cron.deny file in order to use this command. If neither of these files exists, only the super user will be allowed to use this command.</description>
    </item>
    
    <item>
      <title>smsd 发送中文短信乱码</title>
      <link>https://wdicc.com/smsd-and-chinese/</link>
      <pubDate>Thu, 05 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/smsd-and-chinese/</guid>
      <description>smsd是使用mysql数据库的，所以这个乱码很容易把人搞晕。我之前写过gnokii发送短信是和locale有关系的，只要在utf8的locale下面就可以正常发送中文短信了。而smsd也和这个类似，也需要utf8的locale。但是还需要注意的一点就是mysql也是有编码设置的。所以可能会认为，文本插入数据库之前是不是也需要对数据库做utf8的设置呢？其实是不需要的，这么做反而会造成乱码。
smsd连接mysql用的是mysql默认的字符集，那么我们插入文本的时候，也同样需要使用这个字符集，需要注意的是，这个文本也需要是utf8编码的。mysql默认的字符集通常是 “default-character-set&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; latin1”。
我写的一个python的用来插入数据库要发送的信息的程序。
#!/usr/bin/env python2.3
#coding=utf-8
import sys
import MySQLdb
# inbox
#+------------+------------------+------+-----+---------------------+----------------+
#| Field | Type | Null | Key | Default | Extra |
#+------------+------------------+------+-----+---------------------+----------------+
#| id | int(10) unsigned | | PRI | NULL | auto_increment |
#| number | varchar(20) | | | | |
#| smsdate | datetime | | | 0000-00-00 00:00:00 | |
#| insertdate | timestamp | YES | | CURRENT_TIMESTAMP | |</description>
    </item>
    
    <item>
      <title>oracle 的 job 又遇到问题了</title>
      <link>https://wdicc.com/oracle-jobs/</link>
      <pubDate>Fri, 29 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-jobs/</guid>
      <description>还是高级复制的问题，这次可能是因为job执行过程中，对方机器刚好重启导致的。反正job是卡在那里了，都10多天了。
查看 dba_jobs_running 表，可以看到卡住的job的 job_id 和 sid 。查看 dba_jobs 表，可以看到相应 job 的信息，this_date 如果有数据的话，表示的是 job 开始执行的时间，next_date 是下次执行 job 的时间，如果 job 正常执行完毕，那么 this_date 应该是空的。根据 sid 还可以查看 v$session_wait 和 v$session 里面的这个 job 的一些状态。
尝试了下面的方法来重新运行job，当时好像不好用，不过今天来看的时候，job是执行了。现在也不清楚是不是我这个操作起作用了，真晕。
SQL&amp;gt; exec dbms_job.broken(109,true);
PL/SQL procedure successfully completed.
SQL&amp;gt; commit;
Commit complete.
SQL&amp;gt; select job,sid from dba_jobs_running;
JOB SID
---------- ----------
109 656
SQL&amp;gt; select saddr,sid,serial#,paddr,username,status from v$session where username = &#39;REPADMIN&#39;;
SADDR SID SERIAL# PADDR USERNAME STATUS
-------- ---------- ---------- -------- ------------------------------ --------</description>
    </item>
    
    <item>
      <title>稍微深入了解了一下cacti的thold插件的邮件通知</title>
      <link>https://wdicc.com/change-trigger-setting-for-thold/</link>
      <pubDate>Thu, 28 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-trigger-setting-for-thold/</guid>
      <description>通过cacti的thold插件，可以做到snmp抓取到的数值低于你规定的值的时候进行邮件通知，例如我用他来监控磁盘空间，当磁盘空间低于某个数的时候就会给指定的email发邮件。但是有一点郁闷的是，有时候，可能是由于网络原因，抓取会超时，这样就会导致触发trigger，给你发送邮件。5分钟抓取一次，我这里的情况是几乎每个小时总会有2，3封这种邮件，很烦人，而且根本没意义。早就想屏蔽掉这种情况了，看了代码挺复杂就懒得弄，今天实在受不了了，深入了解了一下。
其实thold本身已经考虑到了这种情况，在 thold 的设置里面，就有一项 Default Trigger Count （Number of consecutive times the data source must be in breach of the threshold for an alert to be raised），就是连续触发几次才认为他真的低于 thold 了，才发送邮件。我尝试过修改这个设置，发现不管用。看了代码才了解，每个 Thresholds&amp;nbsp;都有自己的 trigger 值，那个 default trigger count 只对新建的 thresholds 才有用。所以针对现有的，需要逐个去修改才行。如果不设置这个选项，那么使用的就是上面设置的那个默认的，所以没特殊需要，还是不要针对每个 thresholds 设置自己的 trigger 值比较好，这样方便修改。我通过修改数据库的方法，直接把这些都修改了。
update thold_data set thold_fail_trigger = NULL;
修改了之后还没有收到，这下应该清净了吧？</description>
    </item>
    
    <item>
      <title>为resin配置oracle连接池</title>
      <link>https://wdicc.com/resin-and-oracle/</link>
      <pubDate>Wed, 27 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/resin-and-oracle/</guid>
      <description>resin 2.x 的配置方法和 3.x 的方法有区别。按照官方文档，做下面的配置。

oraPool

oracle.jdbc.pool.OracleConnectionPoolDataSource
jdbc:oracle:thin:@localhost:1521:dbname
username
password

#....

&amp;nbsp;在上面的 .... 这里还可以添加其他的配置信息。配置好之后启动resin，会发现提示类似下面的信息。
conf/resin.conf:218: java.lang.ClassNotFoundException: oracle.jdbc.pool.OracleConnectionPoolDataSource
提示没有找到连接oracle数据库的jdbc驱动。这个驱动在oracle的安装目录里面有。比如我这里是在 /db/oracle/10.1.0/product/10g/jdbc/lib/ 。里面好多文件，具体都什么作用可以看这里。
复制这个目录里面的 classes12.jar 和 nls_charset12.jar 到resin的 lib 目录下面，重新启动 resin 就可以了。本文完成过程中参考了这篇文章。如何使用这个pool，官方文档也有说明。</description>
    </item>
    
    <item>
      <title>resin 的安装步骤</title>
      <link>https://wdicc.com/install-resin/</link>
      <pubDate>Thu, 21 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-resin/</guid>
      <description> resin目前已经到了3.1版本，从resin网站上面下载的resin不带jdk，需要自己去下载。resin的下载页面在这里。下载最新的 Resin Pro 3.1.1 版本。
jdk的下载地址在 这里&amp;nbsp;，resin 3.1需要1.5及以上版本的jdk。
先来安装resin：
tar zxvf resin-pro-3.1.1
cd resin-pro-3.1.1
./configure --prefix=/usr/local/resin #安装的目的地址
make &amp;amp;&amp;amp; make install
安装完resin之后，安装jdk：
cd /usr/local
chmod +x /root/jdk-6u1-linux-i586.bin
/root/jdk-6u1-linux-i586.bin
此后会在/usr/local/下面建立一个jdk1.6.0_01目录，jdk就安装完毕了。
resin 的配置文件在 /usr/loca/resin/conf 下面，主要是 resin.conf 。默认的端口是8080。


然后就是添加自己的应用地址了。


在这下面添加一行


此后呢，访问 http://ip:8080/test 就可以访问到你的应用了。 </description>
    </item>
    
    <item>
      <title>linux tuning</title>
      <link>https://wdicc.com/linux-tuning/</link>
      <pubDate>Mon, 04 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/linux-tuning/</guid>
      <description>地址 http://www.enigma.id.au/linux_tuning.txt
# server with a decent amount of memory. # # This file should be saved as /etc/sysctl.conf # You can source it manually if your system has booted by using: # sysctl -e -p /etc/sysctl.conf # # Paul Day, paul (at) bur.st # # Last updated 02/03/05 and tested on 2.6.9 # # Increase RPC slots sunrpc.tcp_slot_table_entries = 32 sunrpc.udp_slot_table_entries = 32 # Increase size of RPC datagram queue length net.</description>
    </item>
    
    <item>
      <title>oracle 的高级复制出了点问题，记录下解决办法</title>
      <link>https://wdicc.com/rep-of-oracle/</link>
      <pubDate>Fri, 18 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rep-of-oracle/</guid>
      <description> 早上来了同事就来找我，有两台同步的服务器数据库没有同步成功，查查咋回事。
一台A，从B处同步。蒙了一下，果然有个dba_jobs表，呵呵。
在A处执行上面的命令，好像repadmin的job都在正常执行。 在B处执行上面的命令，能查到类似下面的信息 ---------- ------------------------------ ------------------- NEXT_DATE FAILURES B ------------------- ---------- - 47 repadmin 2006-05-16 19:37:29 4001-01-01 00:00:00 16 Y 显然是job挂了。查看了一下挂的时间，原来是联通机房机柜断电那天，A机器在联通机房，那天断电了6个小时。B机器上面的同步尝试了16次之后就挂起了。解决方法也不难，用repadmin用户登录，然后执行下面的语句，谁的job只能由谁来执行： 47是job id，sysdate表示当前时间。等会再看吧，执行成功之后会把 failures 重新计数，B变成N。 </description>
    </item>
    
    <item>
      <title>awk 数组的一个应用</title>
      <link>https://wdicc.com/awk-array/</link>
      <pubDate>Thu, 17 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awk-array/</guid>
      <description> sed和awk这本书看了好久了，sed部分将就看完了，awk部分基本没怎么看。上次有人问起一个比较文件的问题，发现awk来解决非常的简单。
比较两个文件A、B，打印出包含在A中的，但是不包含在B中的所有行。
根据题目要求，awk的解决方法如下:
里面NR表示行号，FNR表示当前文件中的行号。NR==FNR的时候，表示此时正在读取B文件，以B中的$0为索引，建立一个数组，并且都赋值为1。 当NRFNR 的时候，表示此时在读取A文件，如果a[$0]为1，那么就表示这个$0是在B里面也存在的，是吧？所以，如果要B里面不存在的，那么就得是a[$0]不为1的，就是没做过赋值的。所以了，就是这个了。 进阶一下，比较两个文件A、B，打印包含在A中第一列，但是不包含在B中第二列的整行。 类似的： 比较文件内容还可以用comm命令，还有人提出了grep命令，例如第一个问题： </description>
    </item>
    
    <item>
      <title>apache 的一个启动失败的问题的解决方法</title>
      <link>https://wdicc.com/solve-apache-start-fail/</link>
      <pubDate>Wed, 18 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/solve-apache-start-fail/</guid>
      <description> 这个问题网上好多方法，记录一下方便自己以后查看。
[Wed Apr 18 19:56:47 2007] [notice] Digest: done [Wed Apr 18 19:56:47 2007] [warn] pid file /usr/local/apache54/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run? [Wed Apr 18 19:56:47 2007] [emerg] (28)No space left on device: Couldn&#39;t create accept lock 解决方法就是 </description>
    </item>
    
    <item>
      <title>复习了一下 OSI 7层模型 和 tcp/ip 4层模型</title>
      <link>https://wdicc.com/osi-and-tcp-ip/</link>
      <pubDate>Tue, 17 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/osi-and-tcp-ip/</guid>
      <description>老是记不住这些，每次被问道只能说知道，但是说不出来名字。刚从irc里面得到一个好记得方法。
All people seemes to need data processed.
这句话的字头刚好就是7层模型的字头。
A-Application 应用层 \
P-Presentation 表示层 -- 应用层(HTTP、TFTP、FTP、NFS、SMTP、Telnet、SNMP、DNS)
S-Session 会话层 /
T-Transport 传输层 ----- 传输层(TCP/UDP)
N-Network 网络层 ----- Internet 层(IP、ICMP、ARP、RARP)
D-Data Link 数据链路层 \
P-Physical 物理层 / 网络访问层 这样似乎好记一点。。</description>
    </item>
    
    <item>
      <title>今天又理解了nagios的两个配置</title>
      <link>https://wdicc.com/nagios-conf/</link>
      <pubDate>Mon, 16 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nagios-conf/</guid>
      <description> Host and Service Dependencies
当监控的host或者service之间有依赖关系的时候，可以通过定义dependence来让nagios知道应该通知什么。
比如我这里的服务器都在idc托管，而我的nagios却是运行在公司的一台服务器上面。这样，有时候可能就需要考虑依赖关系了。比如当公司的网络出问题的时候（事实上经常出现），比如断网，总不能让他也认为是idc托管的服务器出问题了而给你发通知吧。host dependence正好可以解决这个问题。
比如 A 是idc的，B 是公司的网关（或者某个应该一直在线的服务器，比如sina.com.cn）。当nagios检测到A连不上的时候，他会根据dependence来检测B，如果B也连不上了，那么就只通知你B连不上了。
大概的配置如下
host_name B dependent_host_name A notification_failure_criteria d,u } Notification Escalations escalations 的意思就是扩大。整个这个的意思应该就是扩大通知范围。之前一直没理解是什么意思，今天看了才明白。其实就是定义出问题的时候，什么时候扩大通知。 比如A服务器挂了，他对应的contactgroup就会立刻得到通知。但是，如果这个组里面的人在睡觉或者在做什么事情忽略了这个通知，怎么办呢？当然nagios会通知多次，但是如果这些都忽略掉了或者没有收到怎么办？这样这个escalations就有作用了，他可以定义几次通知contatgroup之后就开始通知别的人。还有一些别的功能，就不多说了。 </description>
    </item>
    
    <item>
      <title>unix 进程</title>
      <link>https://wdicc.com/unix-process/</link>
      <pubDate>Wed, 11 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/unix-process/</guid>
      <description>看了 Speaking UNIX, Part 8: UNIX processes 之后做一点笔记。
A real multitasker
在unix、linux、freebsd、mac os x、windows等系统里面，计算任务都表现为进程。unix 看上去可以同时运行很多任务，因为每个进程都只占用一部分cpu时间。
进程就像一个容器，包括运行的程序，环境变量，程序的输入输出等。可以把进程想像为一个国家，有自己的边界，资源和产品。
每个进程也都有自己的owner（属组），owner通常是运行这个程序的人，有些系统服务的owner或许会是某个特殊的用户，或者是root。例如，为了安全，某个Apache server的owner可能是属于一个叫www的用户的，这个用户有权限来存取web服务需要的文件，这些文件别的用户是不能访问的。
一个进程的owner可能会改变，但是一个进程在同一个时间只能有一个owner。
setuid和setgid可以让一个进程获得比owner更高的权限。
一个setuid进程，例如top，运行的时候使用的是owner的权限。因此，当你运行top的时候，你的权限就被提升为root了。类似的，一个setgid进程，运行的时候具有的是group owner的权限。
例如，在Mac osx里面的wall命令（就是write all的缩写），因为他需要给每个物理或者虚拟的终端设备写信息，所以他被setgid tty。
Taking inventory
类似其他系统资源，unix系统里面的进程id总数虽然多，但是是有限的（实际上，一个系统几乎从来都不会出现进程id数不够的情况）。每一个新的进程，例如运行vi或者xclock，都会立刻分配一个进程id。在unix系统里面可以用ps命令查看进程。
ps -a -w -x 可以显示所有进程列表。-a显示所有在tty设备上面运行的进程，-x显示所有不是在tty设备上面运行的程序，-w使用“宽”模式显示，用来查看进程一些长的项目。
-o 还可以指定输出信息的列表。比如 -o pid,uname,command,state,stime,time 。
Daddy, where do processes come from?
在unix系统里面，有些进程会从系统启动到关闭整个过程中一直运行。大部分进程从任务开始到结束都很快。
每个新的unix进程都是从已经存在的进程产生的。另外，每个新的进程（子进程）都克隆自他的父进程。at least for an instant, until the child continues execution independently.如果每个进程都来自一个已经存在的进程，那么“第一个进程来自哪里？”，先有鸡还是先有蛋的问题。
第一个进程是由kernel在启动过程中产生的，叫做init。ps -l 1命令可以查看。
F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD</description>
    </item>
    
    <item>
      <title>awstats 如何统计以前的日志？</title>
      <link>https://wdicc.com/awstats-log/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awstats-log/</guid>
      <description> 突然想安装一个awstats了，参考 车东 的文章，安装了一个。可是发现一个问题，设置了logfile为 access_log.%YYYY-24%MM-24%DD-24.log 之后，发现只能把昨天的日志统计进来，可是我的log下面还有好多呢，想统计以前的，怎么弄呢？幸好，awstats已经考虑到这个问题了。
awstats.pl 脚本支持在命令行指定logfile，这样简单了，改变这个参数就可以了。不过要注意的是，如果你的data里面已经处理新的日志，那么指定logfile也没用了，以前的没办法更新进来了。只能是删掉data里面的内容，然后重新从最早的开始生成一遍。我写了一个脚本来做这个事情。
awstats_dir=/opt/tt2/awstats/wwwroot/cgi-bin logfile_dir=&#34;/usr/local/apache/logs/&#34; cd $awstats_dir for file in `find $logfile_dir -name &#34;access_log.2*&#34; | sort`;do #echo &#34;$file&#34; ./awstats.pl －update -config=wd -LogFile=$file done 保存为 awstats.sh ，然后执行就可以了。他会查找 logfile_dir 下面所有的 access_log.2 开头的文件，作为参数来更新记录。 </description>
    </item>
    
    <item>
      <title>oracle 文本界面的安装</title>
      <link>https://wdicc.com/oracle-text-install/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-text-install/</guid>
      <description> oracle 的手册里面讲的通常都是图形界面下面的安装，就是用oracle登录桌面，然后运行安装程序的方法。可实际上维护服务器的时候，大多用的还是远程文本界面。这样很有必要看看如何通过文本界面来安装oracle。
oracle本身的安装程序也提供了这个方法，就是使用 responseFile 。这个 responseFile 其实就是在图形界面安装的时候的一些选择，保存到文件之后，直接告诉安装程序从这里读取设置就好了。将oracle的安装文件 ship.db.lnx32.cpio.gz 解压：
cpio -idmv 这样可以看到有个Disk1的文件夹，里面有个response目录，里面好多response文件，不过我还不知道这些有什么区别，里面设置项也很多，还没弄明白。我使用的不是这里的response文件。是通过下面的方法获取的rsp文件。 可以通过在记录模式中运行软件或通过手动编辑示例响应文件来创建响应文件。以下是一个基本演示： 1. 用此命令启动 OUI 来创建响应文件： ./runInstaller -record -destinationFile /tmp/recorded.rsp 2. 选择您需要的所有部分（源目标目录、主目录、主目录名、产品）。 3. 当您看到 Summary 屏幕时，不要单击 Install，而是单击 Cancel。 4. 仔细查看在 tmp/recorded.rsp 中创建的结果响应文件。如果需要，可以手动编辑该文件，只要您遵守使用规定的格式即可（请参见文档）。 5. 现在如下执行静默安装： ./runInstaller -silent -responseFile /tmp/recorded.rsp 在运行脚本时将会报告安装的进度。 如果您由于响应文件中的条目不正确而遇到安装故障，安装将失败并显示一条诊断消息。详细信息可在 oraInventory/logs 目录中找到。在每次使用响应文件运行 OUI 时，会创建具有 installActions-.log 和 silentInstall.log 格式名称的日志。 这样，只需要找台机器在图形界面下面运行一下安装程序，生成一个rsp文件，然后放到真正需要安装的服务器上面，修改一下安装路径，设置一下sys密码，就可以开始安装了。 </description>
    </item>
    
    <item>
      <title>oracle在rh里面的安装流程</title>
      <link>https://wdicc.com/install-oracle-in-rh/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-oracle-in-rh/</guid>
      <description>
&lt;b&gt;第1部分 安装操作系统&lt;/b&gt;&lt;br /&gt;

首先需要安装系统....Red Hat Enterprise Linux 2.1，Red Hat Enterprise Linux 3，Novell SUSE Linux Enterprise Server 8 是通过 oracle 10g认证的三个linux发行套件，不知道oracle 10.3有没有对这个修改。默认情况下，oracle 10g只能在rh的这两个版本安装，如果不是上面两个，运行安装程序会直接打印错误。不过也有方法在别的版本安装的，后面有说明。&lt;br /&gt;

按照&lt;a href=&#34;http://blog.wdicc.com/wordpress/2007/03/14/307/&#34;&gt;上一篇文章&lt;/a&gt;，安装linux的时候可以不选择图形界面，这样还可以节省不少空间。按照oracle的文档，说需要安装下面的这些软件包。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
compat-gcc-c++ compat-libstdc++ compat-libstdc++-devel&lt;/pre&gt;

我实际安装过程中，compat-gcc compat-gcc-c++ compat-libstdc++ compat-libstdc++-devel 这几个包我没有安装也可以安装oracle。
</description>
    </item>
    
    <item>
      <title>升级了一下cacti</title>
      <link>https://wdicc.com/upgrade-cacti/</link>
      <pubDate>Thu, 08 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/upgrade-cacti/</guid>
      <description>cacti几个月前就提示我Architecture插件有升级了，一直懒得弄。今天发现cacti也升级了，就去看了看，顺便升级了一下。记录一下升级需要注意点的东西。
debian 里面的cacti设置的比较好，log、rra、resource目录都是分开放的，不在cacti目录下面，做了一个链接过去。其他系统升级的时候注意要先备份这三个目录先。建议使用debian的这种方法，这样下次升级省事了。
然后就是很简单的，下载cacti，覆盖，修改config文件，浏览器连接，提示升级，按照步骤来就行了。然后再打上Architecture补丁，再修改config文件就行了。</description>
    </item>
    
    <item>
      <title>lvm 学习笔记</title>
      <link>https://wdicc.com/lvm-note/</link>
      <pubDate>Tue, 06 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lvm-note/</guid>
      <description>
lvm出来很久了，一直没弄过。当初的了解就是使用他之后就获得动态调整分区的特性。昨天装了一个rh，先尝试了一下使用这个lvm。&lt;br /&gt;

&lt;strong&gt;lvm里面用到的一些概念&lt;/strong&gt;&lt;br /&gt;

lvm其实就是将一些“物理”分区，比如 /dev/hda1，/dev/hda6 ，或者“物理”硬盘，比如 /dev/hda，/dev/hdb 这些，都弄到一起，然后在外面看来，他们是一个整体，也就是一个VG（Volume Group，卷组），其实就类似于一块硬盘了。&lt;br /&gt;

而这些“物理”分区，或者“物理”硬盘，就是 /dev/hda1，/dev/hdb 这些，就是一个个PV（Physical Volume，物理卷）。可以看到PV可以是一个分区，也可以是一块硬盘。&lt;br /&gt;

有了VG我们还不能直接使用他，就和我们还需要给硬盘分区一样，我们也需要给VG分区，也就是创建LV（Logical Volume，逻辑卷）。这样，LV的数据其实就分布到了LV所在的VG里面，也就是所有的PV对应的分区或者硬盘里面。&lt;br /&gt;

掌握了VG，PV，LV这些概念之后，操作起来就很容易了。&lt;br /&gt;

</description>
    </item>
    
    <item>
      <title>我的 .fvwm2rc 文件</title>
      <link>https://wdicc.com/my-fvwm2rc/</link>
      <pubDate>Thu, 25 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/my-fvwm2rc/</guid>
      <description>

########&lt;br /&gt;
#set Environment variables&lt;br /&gt;

SetEnv fvwm_img $[FVWM_USERDIR]/images&lt;br /&gt;
SetEnv fvwm_icon $[FVWM_USERDIR]/icons&lt;br /&gt;
SetEnv fvwm_scrpt $[FVWM_USERDIR]/scripts&lt;br /&gt;
SetEnv fvwm_wallpapers $[FVWM_USERDIR]/wallpaper&lt;br /&gt;

SetEnv fvwm_webbrowser /usr/bin/firefox&lt;br /&gt;
SetEnv fvwm_term /usr/bin/urxvtc&lt;br /&gt;
SetEnv fvwm_mail /usr/bin/mutt&lt;br /&gt;
#SetEnv fvwm_media_player /usr/bin/xmms&lt;br /&gt;
SetEnv fvwm_video_player /usr/bin/mplayer&lt;br /&gt;

#这部分设置fvwm的一些变量，这样方便以后如果有变化的话，不需要全文去修改，只修改这里就可以了。&lt;br /&gt;
#后面使用 $[var_name] 来引用&lt;br /&gt;
##################################&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用perl操作mysql数据库</title>
      <link>https://wdicc.com/perl-and-mysql/</link>
      <pubDate>Thu, 04 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/perl-and-mysql/</guid>
      <description>东抄西抄拼凑的代码。关于perl dbi的文档可以查看这里。
use DBI; use strict; #use Data::Dumper; my $mobile = @ARGV[0]; my $msg = @ARGV[1]; my $db = &#34;gnokii&#34;; my $host = &#39;localhost&#39;; my $user = &#39;gnokii&#39;; my $password = &#39;pwd&#39;; my $in = &#39;inbox&#39;; my $out = &#39;outbox&#39;; my $dbh = DBI-connect(&#34;DBI:mysql:database=$db;host=$host&#34;,$user, $password, {RaiseError = 1}); print &#34;$msgn&#34;; my $sql = qq{ insert into $out (number,text) values (&#34;$mobile&#34;,&#34;$msg&#34;)}; #my $sql = qq{ SELECT * from $out }; my $sth = $dbh-prepare( $sql ); $sth-execute(); #my @result; #while (@result = $sth-fetchrow_array){ # print &#34;</description>
    </item>
    
    <item>
      <title>恢复grub</title>
      <link>https://wdicc.com/recover-grub/</link>
      <pubDate>Sat, 30 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/recover-grub/</guid>
      <description> 安装双系统的时候，如果后安装的 win ，那么就会把mbr的grub信息干掉。通常的建议是先安装win后安装linux。
今天遇到的情况是通过 vmware 安装 suse 到物理硬盘的时候，没有将 grub 安装到 mbr，这样需要重新安装一下grub。
我的方法是找了一个 knoppix ，然后启动到 level 2 ，启动之后执行下面的命令先。
mount -o proc none /mnt/hdax/proc mount --bind /dev/ /mnt/hdax/dev 这样操作之后，就可以chroot到硬盘上面的系统了。 然后自己修改 /boot/grub/menu.1st 文件。之后执行 grub 命令。 grub setup (hd0) 我这里操作的时候遇到一个问题，suse好像往grub的map.xxx.gz里面写了关于fd0的信息，这样运行grub命令的时候会尝试去读取软驱。我在bios里面禁用了软驱才ok。 </description>
    </item>
    
    <item>
      <title>一个简单问题的三种实现方法</title>
      <link>https://wdicc.com/3-solve-way/</link>
      <pubDate>Thu, 21 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/3-solve-way/</guid>
      <description> #arch-cn irc上面rock提出了一个需求，将一行太长的文字让他自动按照要求换行。
刚开始拿到这个问题的时候，感觉sed或者awk好像实现不了亚，没那么智能的，可是简单分析一下，“按照要求” 我们假定要求是 “每5个字符” 就换行一次。这样这个问题就明朗了。再换句话说，需求就是 “每5个字符插入一个换行符”。
第一种方法，用sed：
第二种方法，用gawk（sssslang提供）： cat $content | gawk --re-interval &#39;{gsub(/(.){2}/,&#34;&amp;n&#34; 第三种方法，好像有点bt，用perl： @content = `tail /var/log/postfix.log`; foreach (@content) { for ($i=0; $i 反斜杠\都被过滤掉了，不知道咋回事，自己看着加上。。 </description>
    </item>
    
    <item>
      <title>我的第一个perl脚本</title>
      <link>https://wdicc.com/irssi_bot/</link>
      <pubDate>Sat, 16 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/irssi_bot/</guid>
      <description>是给irssi写的，只不过通过他和irssi接口，所有功能都是bash脚本实现的，回头看看如何转到perl。
use vars qw($VERSION %IRSSI); use Irssi; $VERSION = &#39;1.00&#39;; %IRSSI = ( authors = &#39;wd&#39;, contact = &#39;wd@wdicc.com&#39;, name = &#39;My First Script&#39;, description = &#39;This script allows &#39; . &#39;you to query weather and other info &#39; . &#39;using some command.&#39;, license = &#39;Public Domain&#39;, ); sub send_msg { my ($server, $who, @result) = @_; my $count; $count = 1; while ($count command(&#34;msg $who $result[$count-1]&#34;); $count++; } } sub pre_send { my ($server, $who) =@_; $server-command(&#34;</description>
    </item>
    
    <item>
      <title>继续来解决gnokii中文问题</title>
      <link>https://wdicc.com/gnokii_howto_chinese_sms/</link>
      <pubDate>Mon, 11 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gnokii_howto_chinese_sms/</guid>
      <description> 这玩意原来和 locale 有关系。一个utf8编码的文件（里面包含中文），只要执行gnokii之前设置一下正确的locale手机收到就是正常的。比如我建立了下面的一个发送短信的命令。
LC_ALL=zh_CN.utf8 /usr/local/gnokii/bin/gnokii $@ 这样cat utf8_text | gnokii_utf8 --sendsms ur_phone_num发送就没问题了。看样子和smsd和mysql的版本是没有关系的。之前尝试在debian上面升级mysql虽然失败了，不过看样子也没多大影响。 :) </description>
    </item>
    
    <item>
      <title>iptables做端口映射的一点新的心得</title>
      <link>https://wdicc.com/iptables-and-portmap/</link>
      <pubDate>Thu, 07 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/iptables-and-portmap/</guid>
      <description> iptables做端口映射很简单的一个事情，我之前也写了如何来实现这个咚咚。今天要用到的时候，遇到了问题，写写怎么解决的。
写好SNAT和DNAT相关语句之后，在INPUT、FORWARD和OUTPUT里面针对各个端口都开放了权限，可是就是访问不了，看tcpdump可以看到，SNAT肯定是进行了，因为有对方回来的信息。后来仔细分析了一下整个转换的过程，发现了问题所在。
这里总共涉及到三台电脑，假设A是我们的server，B是中转server，C是希望通过B来访问A的客户端，所以一次完整的请求如下图。
所以呢，以25端口为例，需要开放的端口依次是： B : INPUT (目标端口25) B : FORWARD (目标端口25) B : OUTPUT (目标端口25) A : INPUT (目标端口25) ---上面是请求，下面开始回应请求 A : OUTPUT (源端口25) B : INPUT (源端口25) B : FORWARD (源端口25) B : OUTPUT (源端口25) C : INPUT (源端口25) 如此，一次请求发送过去的时候，所有数据包的目的端口都是25（假设B开放的转发端口也是25），源端口是1024-65535之间的某个数值，反回来所有数据包的源端口都是25，目的端口对应前面的那个端口。 我的问题就是光开放了B的FORWARD的目的端口25，源端口25没有打开，这样数据不能正确返回给C，打开就好了。 </description>
    </item>
    
    <item>
      <title>debian下面解决gnokii读取短信的bug</title>
      <link>https://wdicc.com/gnokii_cant_get_sms/</link>
      <pubDate>Wed, 06 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gnokii_cant_get_sms/</guid>
      <description>上一篇文章提到过gnokii读取AT模式下设备的短信的时候会有问题，从xh那里看到了解决方法，自己也goolgle了一下，总结一下debian（sarge）下面解决这个问题的方法。
故障现象如下：
[...] Message sent: 0x12 / 0x0009 41 54 2b 43 50 4d 53 3f 0d | AT+CPMS? write: [AT+CPMS?] read : [AT+CPMS?+CPMS: &#34;SM&#34;,2,30,&#34;SM&#34;,2,30OK] Message received: 0x12 / 0x002d 02 41 54 2b 43 50 4d 53 3f 0d 0d 0a 2b 43 50 4d | AT+CPMS? +CPM 53 3a 20 22 53 4d 22 2c 32 2c 33 30 2c 22 53 4d | S: &#34;SM&#34;,2,30,&#34;SM 22 2c 32 2c 33 30 0d 0a 0d 0a 4f 4b 0d | &#34;</description>
    </item>
    
    <item>
      <title>给nagios添加故障时短信通知</title>
      <link>https://wdicc.com/nagios-sms-alert/</link>
      <pubDate>Tue, 05 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nagios-sms-alert/</guid>
      <description>nagios可以配置为在故障的时候发送Email，执行什么程序等。光执行程序这项可以实现的功能就太多了，没有做不到只有想不到。说说看我是怎么给nagios添加短信通知的。
首先需要一个能发送短信的东东，有些专门用来发送短信的猫，插上一张sim卡就可以用了，当然也可以找一个手机来做这个事情。然后用gnokii来通过sim卡发送短信，他主要是linux下面用来管理nokia手机的一个软件，当然所有支持AT指令的都可以使用。
debian上面安装好gnokii之后，/etc/gnokiirc是他的配置文件，主要修改两个地方：
model = AT
serial_baudrate = 9600
然后还需要将nagios用户（也就是启动nagios的用户）或者其他需要操作猫的用户加入dialout组，这样才有权限操作/dev/ttyS0这个设备，也就是第一个串口设备。
我的短信猫是通过串口连接到电脑的，如果你的是usb的或者其他类型的方式，比如蓝牙红外什么的，需要加载特定的模块，具体方法参考gnokii的网站。连接短信猫之后，可以用minicom测试一下是不是连接正确，他是类似于win下面的超级终端的一个程序。要注意连接的比特率，如果设备不支持可能不会有效果。设置好之后输入个AT，看是不是返回OK，如果返回那就连接正确了。
然后可以试试看执行gnokii --identify，我这里输出下面的内容：
GNOKII Version 0.6.5 IMEI : 500182395xxxxxx Manufacturer : WAVECOM MODEM Model : MULTIBAND 900E 1800 Revision : 533b09gg.2C2 1742344 061002 11:23 这样表示我的猫被正确识别了。如果有问题，可以修改gnokiirc文件，打开debug模式，看看问题所在。发个短信试试看： #echo -e &#34;testntest 2&#34; GNOKII Version 0.6.5 Send succeeded! 收到短信了么？呵呵。之后修改nagios的misccommands.cfg文件，添加你的cmd： command_name host-notify-by-sms command_line /bin/echo -e &#34;$HOSTADDRESS$($NOTIFICATIONNUMBER$)n$HOSTSTATE$n$OUTPUT$n$SHORTDATETIME$&#34; | /usr/bin/gnokii --sendsms $CONTACTPAGER$ 2/dev/null } define command{ command_name notify-by-sms command_line /bin/echo -e &#34;$HOSTADDRESS$($NOTIFICATIONNUMBER$)n$SERVICEDESC$-$SERVICESTATE$n$OUTPUT$n$SHORTDATETIME$&#34; | /usr/bin/gnokii --sendsms $CONTACTPAGER$ 2/dev/null } 然后修改contacts.</description>
    </item>
    
  </channel>
</rss>