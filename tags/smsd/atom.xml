<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smsd on wd and cc</title>
    <link>https://wdicc.com/tags/smsd/atom/index.xml</link>
    <description>Recent content in Smsd on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://wdicc.com/tags/smsd/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>smsd 发送中文短信乱码</title>
      <link>https://wdicc.com/smsd-and-chinese/</link>
      <pubDate>Thu, 05 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/smsd-and-chinese/</guid>
      <description>&lt;p&gt;smsd是使用mysql数据库的，所以这个乱码很容易把人搞晕。我之前&lt;a href=&#34;http://blog.wdicc.com/wordpress/gnokii_howto_chinese_sms/&#34;&gt;写过&lt;/a&gt;gnokii发送短信是和locale有关系的，只要在utf8的locale下面就可以正常发送中文短信了。而smsd也和这个类似，也需要utf8的locale。但是还需要注意的一点就是mysql也是有编码设置的。所以可能会认为，文本插入数据库之前是不是也需要对数据库做utf8的设置呢？其实是不需要的，这么做反而会造成乱码。&lt;/p&gt; &lt;p&gt;smsd连接mysql用的是mysql默认的字符集，那么我们插入文本的时候，也同样需要使用这个字符集，需要注意的是，这个文本也需要是utf8编码的。mysql默认的字符集通常是 “default-character-set&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; latin1”。&lt;/p&gt; &lt;p&gt;我写的一个python的用来插入数据库要发送的信息的程序。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;python&#34;&gt;#!/usr/bin/env python2.3&lt;br /&gt;
#coding=utf-8&lt;br /&gt;
import sys&lt;br /&gt;
import MySQLdb&lt;br /&gt;

#  inbox&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| Field      | Type             | Null | Key | Default             | Extra          |&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| id         | int(10) unsigned |      | PRI | NULL                | auto_increment |&lt;br /&gt;
#| number     | varchar(20)      |      |     |                     |                |&lt;br /&gt;
#| smsdate    | datetime         |      |     | 0000-00-00 00:00:00 |                |&lt;br /&gt;
#| insertdate | timestamp        | YES  |     | CURRENT_TIMESTAMP   |                |&lt;br /&gt;
#| text       | varchar(160)     | YES  |     | NULL                |                |&lt;br /&gt;
#| phone      | tinyint(4)       | YES  |     | NULL                |                |&lt;br /&gt;
#| processed  | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;

#  outbox&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| Field          | Type             | Null | Key | Default             | Extra          |&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| id             | int(10) unsigned |      | PRI | NULL                | auto_increment |&lt;br /&gt;
#| number         | varchar(20)      |      |     |                     |                |&lt;br /&gt;
#| processed_date | timestamp        | YES  |     | CURRENT_TIMESTAMP   |                |&lt;br /&gt;
#| insertdate     | timestamp        | YES  |     | 0000-00-00 00:00:00 |                |&lt;br /&gt;
#| text           | varchar(160)     | YES  |     | NULL                |                |&lt;br /&gt;
#| phone          | tinyint(4)       | YES  |     | NULL                |                |&lt;br /&gt;
#| processed      | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#| error          | tinyint(4)       |      |     | -1                  |                |&lt;br /&gt;
#| dreport        | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#| not_before     | time             |      |     | 00:00:00            |                |&lt;br /&gt;
#| not_after      | time             |      |     | 23:59:59            |                |&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;

class Mydb:&lt;br /&gt;
        def __init__(self):&lt;br /&gt;
                try:&lt;br /&gt;
                        self.db=MySQLdb.Connection(host=&#34;localhost&#34;,user=&#34;gnokii&#34;,&lt;br /&gt;
                                passwd=&#34;gnokii&#34;,db=&#34;gnokii&#34;)&lt;br /&gt;

                except MySQLdb.OperationalError, message:&lt;br /&gt;
                        errorMessage = &#34;Error %d:\n%s&#34; % (message[ 0 ], message[ 1 ] )&lt;br /&gt;
                        print errorMessage&lt;br /&gt;
                        sys.exit(1)&lt;br /&gt;
                else:   &lt;br /&gt;
                        self.cursor = self.db.cursor()&lt;br /&gt;
#                       self.cursor.execute(&#34;SET NAMES &#39;utf8&#39;&#34;)&lt;br /&gt;
                        return&lt;br /&gt;
                        &lt;br /&gt;
        def insert(self,sql):&lt;br /&gt;
                self.cursor.execute(sql)&lt;br /&gt;
        &lt;br /&gt;
        def showdata(self,sql):&lt;br /&gt;
                self.cursor.execute(sql)&lt;br /&gt;
                return self.cursor.fetchall()&lt;br /&gt;
                &lt;br /&gt;
        def __del__(self):&lt;br /&gt;
                self.cursor.close&lt;br /&gt;
                self.db.close&lt;br /&gt;

text = sys.stdin.read()&lt;br /&gt;
db = Mydb()&lt;br /&gt;

if len(sys.argv) &amp;gt; 1 and len(text):&lt;br /&gt;
        number = sys.argv[1]&lt;br /&gt;
        sql = &#39;insert into outbox (number,text) VALUES (&#34;&#39; + number + &#39;&#34;,&#34;&#39; + text + &#39;&#34;)&#39;&lt;br /&gt;
        &lt;br /&gt;
        db.insert(sql)&lt;br /&gt;

else:   &lt;br /&gt;
        print &lt;br /&gt;
        print &#34;    ********** outbox ********** &#34;&lt;br /&gt;
        for rs in db.showdata(&#34;select * from outbox&#34;):&lt;br /&gt;
                print rs[0],rs[1],rs[2],rs[-7],rs[-5]&lt;br /&gt;
        &lt;br /&gt;
        print &#34;    ********** inbox *********&#34;&lt;br /&gt;
        for rs2 in db.showdata(&#34;select * from inbox&#34;):&lt;br /&gt;
                print rs2[0],rs2[1],rs2[-3]&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>