<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Navigation on wd and cc</title>
    <link>https://wdicc.com/tags/react-navigation/</link>
    <description>Recent content in React Navigation on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 21 Oct 2017 08:19:28 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/react-navigation/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Howto Make react-redux Work With react-navigation</title>
      <link>https://wdicc.com/howto-make-react-redux-work-with-react-navigation/</link>
      <pubDate>Sat, 21 Oct 2017 08:19:28 +0800</pubDate>
      
      <guid>https://wdicc.com/howto-make-react-redux-work-with-react-navigation/</guid>
      <description>这周花了一些时间研究 react-redux 和怎么让它和 react-navigation 配合一起工作，总结一下，把代码和注释直接贴这里了，也可以看这个 gist。
/** * 一个简单的 RN 应用，有 2 个页面，使用了 react-navigation 的 StackNavigator 来做界面管理 * 为了说明如何使用 redux，以及如何让 redux 和 StackNavigator 配合 * 为了容易理解，把所有内容都放到了一个页面里面，实际开发的时候不要这么做 * 参考： * https://github.com/jackielii/simplest-redux-example * http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_three_react-redux.html */ import React, { Component } from &#39;react&#39;; import { StyleSheet, Text, View, Button } from &#39;react-native&#39;; import { Provider, connect } from &#39;react-redux&#39;; import { createStore, combineReducers } from &#39;redux&#39;; import { StackNavigator, addNavigationHelpers } from &#39;react-navigation&#39;; // Home 页面，UI 组件 class MyHome extends Component { constructor(props) { super(props); console.</description>
    </item>
    
  </channel>
</rss>