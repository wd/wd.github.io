<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nagios on wd and cc</title>
    <link>https://wdicc.com/tags/nagios/</link>
    <description>Recent content in Nagios on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 18 Jan 2016 15:14:36 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/nagios/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>use gearman to distribute you nagios check</title>
      <link>https://wdicc.com/use-gearman-to-distribute-you-nagios-check/</link>
      <pubDate>Mon, 18 Jan 2016 15:14:36 +0800</pubDate>
      
      <guid>https://wdicc.com/use-gearman-to-distribute-you-nagios-check/</guid>
      <description>安装 gearman 需要 boost &amp;gt; 1.39, libevent-devel, libuuid-devel, gperf 需要 gcc &amp;gt;= 4.2
export CC=gcc44 export CC=g++44
mod-gearman libtool-ltdl-devel ncurses-devel &amp;ndash;with-gearman
配置 gearman 分为几个模块 * mod_gearman: 负责把 nagios 中的检查任务发给 gearmand job server * gearmand: 负责接收任务，分配给 worker 执行。这个是个通用的队列管理服务。 * gearman_workder: 负责消费 gearmand 中的 job。
其中 mod_gearman 的代码里面包括了上面提到的 mod_gearman 和 gearman_workder。
所以规划好 gearmand 启动的机器，以及你的 worker 机器。其中要注意 worker 机器上面是会执行所有[1] nagios 监控
需要配置的文件有几个 * nagios.cfg 增加 broker * mod-gearman/etc/mod_gearman/mod_gearman_neb.conf broker 的配置文件 * mod-gearman/etc/mod_gearman/mod_gearman_worker.conf workder 的配置文件</description>
    </item>
    
    <item>
      <title>今天又理解了nagios的两个配置</title>
      <link>https://wdicc.com/%E4%BB%8A%E5%A4%A9%E5%8F%88%E7%90%86%E8%A7%A3%E4%BA%86nagios%E7%9A%84%E4%B8%A4%E4%B8%AA%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 16 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E4%BB%8A%E5%A4%A9%E5%8F%88%E7%90%86%E8%A7%A3%E4%BA%86nagios%E7%9A%84%E4%B8%A4%E4%B8%AA%E9%85%8D%E7%BD%AE/</guid>
      <description>Host and Service Dependencies
当监控的host或者service之间有依赖关系的时候，可以通过定义dependence来让nagios知道应该通知什么。
比如我这里的服务器都在idc托管，而我的nagios却是运行在公司的一台服务器上面。这样，有时候可能就需要考虑依赖关系了。比如当公司的网络出问题的时候（事实上经常出现），比如断网，总不能让他也认为是idc托管的服务器出问题了而给你发通知吧。host dependence正好可以解决这个问题。
比如 A 是idc的，B 是公司的网关（或者某个应该一直在线的服务器，比如sina.com.cn）。当nagios检测到A连不上的时候，他会根据dependence来检测B，如果B也连不上了，那么就只通知你B连不上了。
大概的配置如下
host_name B dependent_host_name A notification_failure_criteria d,u } Notification Escalations escalations 的意思就是扩大。整个这个的意思应该就是扩大通知范围。之前一直没理解是什么意思，今天看了才明白。其实就是定义出问题的时候，什么时候扩大通知。 比如A服务器挂了，他对应的contactgroup就会立刻得到通知。但是，如果这个组里面的人在睡觉或者在做什么事情忽略了这个通知，怎么办呢？当然nagios会通知多次，但是如果这些都忽略掉了或者没有收到怎么办？这样这个escalations就有作用了，他可以定义几次通知contatgroup之后就开始通知别的人。还有一些别的功能，就不多说了。 </description>
    </item>
    
    <item>
      <title>针对nagios得两款小软件</title>
      <link>https://wdicc.com/%E9%92%88%E5%AF%B9nagios%E5%BE%97%E4%B8%A4%E6%AC%BE%E5%B0%8F%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Mon, 14 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E9%92%88%E5%AF%B9nagios%E5%BE%97%E4%B8%A4%E6%AC%BE%E5%B0%8F%E8%BD%AF%E4%BB%B6/</guid>
      <description>ntrayc 和 nagiostrayicon
都是在tray那里显示nagios是否报错得。到时会有声音或者窗口弹出来。
前者不需要安装，后者需要安装。界面功能来看都差不多。
刚装上有台服务器就down了，呵呵。比较了一下，觉得ntrayc比较好。下面是他们得设置界面。
ntrayc如下，两幅图，后面那个是他得console，可以同时得到服务得大概信息。不知道他哪里设置声音，下载得安装包里面没有声音文件。每次检测到问题都会弹出窗口。
nagios tray icon得设置界面如下，出问题得时候他不会弹出窗口，会出声叫。不过第二次检测就不叫了，icon变红色。</description>
    </item>
    
  </channel>
</rss>