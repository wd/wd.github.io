<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cpython on wd and cc</title>
    <link>https://wdicc.com/tags/cpython/</link>
    <description>Recent content in cpython on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 05 Sep 2019 12:43:42 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/cpython/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Notes for CPython Internals</title>
      <link>https://wdicc.com/notes-for-cpython-internals/</link>
      <pubDate>Thu, 05 Sep 2019 12:43:42 +0800</pubDate>
      
      <guid>https://wdicc.com/notes-for-cpython-internals/</guid>
      <description>视频地址这里。 Python 源码   Include/opcode.h 里面定义了所有 opcode。 Modules 里面是一些 c 实现的模块， Lib 里面是用 python 实现的模块。 Objects 里面是部分 python 对象对应的 c 实现。  Python 目录里面是 python core， Python/ceval.c 里面定义了 python interpreter 主要的循环，找那个 for(;;) 就可以，这个循环里面有一个巨长的 switch (opcode) 。 Opcode 和 interpreter 循环   test.py 1 2 3  x = 1 y = 2 print(x + y)     使用内置的 compile(source, filename, &amp;#39;exec&amp;#39;) 函数可以把代码编译成 code object , code object 有一个 co_code 属性，里面包含了代码的 bytecode。 1 2 3 4 5 6 7 8 9  &amp;gt;&amp;gt; c = compile(open(&amp;#39;test.</description>
    </item>
    
  </channel>
</rss>