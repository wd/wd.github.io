<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Firefox on wd and cc</title>
    <link>https://wdicc.com/tags/firefox/</link>
    <description>Recent content in Firefox on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 20 Jul 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/firefox/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>你在用什么方式翻墙？</title>
      <link>https://wdicc.com/%E4%BD%A0%E5%9C%A8%E7%94%A8%E4%BB%80%E4%B9%88%E6%96%B9%E5%BC%8F%E7%BF%BB%E5%A2%99/</link>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E4%BD%A0%E5%9C%A8%E7%94%A8%E4%BB%80%E4%B9%88%E6%96%B9%E5%BC%8F%E7%BF%BB%E5%A2%99/</guid>
      <description>翻墙估计应该是上网的必修课了，当然那些 90 后就别说了，他们大概只上 *qq.com 就好了。
翻墙有不少方法，比如通过找公共的 vpn，用 tor，找一些 phpproxy 网站等。我这推荐一个比较好的方法，通过 fuckgfw 提供的 ssh proxy，速度比 tor 快的不是一点半点。
我用的 linux，写了一个 expect 脚本来起代理服务，如下。里面的 USER 和 PWD 换成你申请到的用户名和密码。我把这个脚本命名叫 p, 放到了 ~/bin 下面，当然我的 ~/bin 是在 path 里面的，这样，执行一个 p 命令代理就自动起来了。用完的时候可以按 Ctrl-c 退出。
#!/bin/bash expect -c &#39; spawn ssh -D 7070 -N USER@SERVER expect { password { send &#34;PWD\r&#34;; } } interact { \001 exit; }&#39; 
当然，我用到的不只这个脚本了，要不也没什么好写的了。(本来觉得自己写了挺好的一个文章，最后还是就 expect 脚本 + autoproxy，唉，丢人。)还用到了一个 proxy.pac ，自动使用代理的配置。如下，把这个文件存成 proxy.pac, 然后在 firefox 的 编辑-首选项-高级-网络-设置-自动代理配置URL 这个里面输入 &#34;</description>
    </item>
    
    <item>
      <title>清理 firefox places.sqlite 来提速</title>
      <link>https://wdicc.com/%E6%B8%85%E7%90%86-firefox-places.sqlite-%E6%9D%A5%E6%8F%90%E9%80%9F/</link>
      <pubDate>Sat, 18 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E6%B8%85%E7%90%86-firefox-places.sqlite-%E6%9D%A5%E6%8F%90%E9%80%9F/</guid>
      <description>来自这里 http://forum.moztw.org/viewtopic.php?t=26802
使用前先备份，后悔了还能弄回去。
sqlite3 places.sqlite &#34;DELETE FROM moz_historyvisits WHERE place_id IN (SELECT id FROM moz_places WHERE visit_count 1 AND id NOT IN (SELECT place_id FROM moz_annos UNION SELECT fk FROM moz_bookmarks));&#34; sqlite3 places.sqlite &#34;DELETE FROM moz_inputhistory WHERE place_id NOT IN (SELECT id FROM moz_places);&#34; sqlite3 places.sqlite &#34;DELETE FROM moz_favicons WHERE id NOT IN (SELECT favicon_id FROM moz_places);&#34; sqlite3 places.sqlite &#34;VACUUM;&#34;</description>
    </item>
    
    <item>
      <title>自动登录网站的 greasemonkey 脚本</title>
      <link>https://wdicc.com/%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E7%BD%91%E7%AB%99%E7%9A%84-greasemonkey-%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E7%BD%91%E7%AB%99%E7%9A%84-greasemonkey-%E8%84%9A%E6%9C%AC/</guid>
      <description>自动登录 gmail 的 greasemonkey 脚本，可以根据需要修改 formElement.name==&#34;Email&#34; 为别的，来登录别的网站。注意修改 name, include 这些相关的东东
// (c) 2007, Yabin Guo // To install, you need Greasemonkey: http://greasemonkey.mozdev.org/ // // -------------------------------------------------------------------- // ==UserScript== // @name gmail Login // @description Auto-login of gmail // @include https://www.google.com/a/wdicc.com/* // ==/UserScript== //replace your seraph username and password in the following expression; userName=&#34;wd&#34;; passWord=&#34;*******&#34;; function submitFirstPasswordForm() { var form=document.forms[0]; var submitButton = null; var passwordElem; var accountElem; var submitButton; for (i=0; formElement=form[i]; ++i){ if(formElement.</description>
    </item>
    
  </channel>
</rss>