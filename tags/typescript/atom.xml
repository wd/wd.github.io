<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>typescript on wd and cc</title>
    <link>https://wdicc.com/tags/typescript/</link>
    <description>Recent content in typescript on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 01 Nov 2018 11:59:29 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/typescript/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Typescript and Jest</title>
      <link>https://wdicc.com/typescript-and-jest/</link>
      <pubDate>Thu, 01 Nov 2018 11:59:29 +0800</pubDate>
      
      <guid>https://wdicc.com/typescript-and-jest/</guid>
      <description>最近在折腾 typescript，把很多项目改成了 ts 的。有一个老项目，改的过程中感觉各种不踏实，打算还是先写点测试用例，就折腾了一下 jest。各种坑。。。  首先需要加一个 tsconfig.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  { &amp;#34;compilerOptions&amp;#34;: { &amp;#34;target&amp;#34;: &amp;#34;es2015&amp;#34;, &amp;#34;module&amp;#34;: &amp;#34;es2015&amp;#34;, &amp;#34;lib&amp;#34;: [ &amp;#34;es2015&amp;#34; ], &amp;#34;outDir&amp;#34;: &amp;#34;./lib&amp;#34;, &amp;#34;declaration&amp;#34;: true, &amp;#34;noEmit&amp;#34;: true, &amp;#34;moduleResolution&amp;#34;: &amp;#34;node&amp;#34;, &amp;#34;esModuleInterop&amp;#34;: true, &amp;#34;allowSyntheticDefaultImports&amp;#34;: true, /* Strict Type-checking */ &amp;#34;strict&amp;#34;: true, &amp;#34;strictNullChecks&amp;#34;: true, &amp;#34;noImplicitAny&amp;#34;: true, &amp;#34;noImplicitThis&amp;#34;: true, &amp;#34;alwaysStrict&amp;#34;: true, /* Additional Checks */ &amp;#34;noUnusedLocals&amp;#34;: true, /* Report errors on unused locals.</description>
    </item>
    
    <item>
      <title>Typescript for React Native</title>
      <link>https://wdicc.com/typescript-for-react-native/</link>
      <pubDate>Sun, 16 Sep 2018 16:36:17 +0800</pubDate>
      
      <guid>https://wdicc.com/typescript-for-react-native/</guid>
      <description>前几天研究 settimeout 的问题的时候，发现 react-native-background-timer 自己没有 typescript 的 type 文件，但是有人给写了一个 @types/react-native-background-timer，这个包算偏门了，都有人写了 type 文件，我感觉是时候试试看 typescript 了。  搜了一下，发现没有多少在 rn 里面使用 ts 的，有一些关于 react 的，又很奇怪，大都基于 webpack 的。后来找到一篇官方的 blog 上面的，然后结合自己的研究，找到了思路。我是基于已有项目来做的，那个 blog 是基于新项目，大同小异。  首先装几个包，这几个包里面， =typescript 提供 typescript 的编译器， react-native-typescript-transformer 提供了从 ts 代码到 js 代码的转换支持， @types 的两个包提供了 react 和 react-native 的 type 文件。 1  $ yarn add -D typescript react-native-typescript-transformer @types/react @types/react-native     在项目的根目录还需要准几个文件。 tsconfig.json，你的目录里面可能已经有一个 jsconfig.json 了，那个是给 eslint 用的。tsconfig.json 同时给 typescript 和 tslint 使用。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  { &amp;#34;compilerOptions&amp;#34;: { &amp;#34;target&amp;#34;: &amp;#34;es2015&amp;#34;, &amp;#34;module&amp;#34;: &amp;#34;es2015&amp;#34;, &amp;#34;lib&amp;#34;: [ &amp;#34;es2015&amp;#34; ], &amp;#34;jsx&amp;#34;: &amp;#34;react&amp;#34;, &amp;#34;noEmit&amp;#34;: true, &amp;#34;moduleResolution&amp;#34;: &amp;#34;node&amp;#34;, &amp;#34;strict&amp;#34;: true, &amp;#34;esModuleInterop&amp;#34;: true, &amp;#34;types&amp;#34;: [ &amp;#34;react&amp;#34;, &amp;#34;react-native&amp;#34; ], &amp;#34;allowSyntheticDefaultImports&amp;#34;: true }, &amp;#34;include&amp;#34;: [ &amp;#34;.</description>
    </item>
    
  </channel>
</rss>