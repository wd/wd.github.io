<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rsync on wd and cc</title>
    <link>https://wdicc.com/tags/rsync/</link>
    <description>Recent content in Rsync on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 16 Apr 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/rsync/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rsync files-from 参数</title>
      <link>https://wdicc.com/rsync-files-from-%E5%8F%82%E6%95%B0/</link>
      <pubDate>Sat, 16 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rsync-files-from-%E5%8F%82%E6%95%B0/</guid>
      <description>rsync
include/exclude
rsync 支持使用 include/exclude 来过滤要同步的文件，使用这两个参数的时候，需要注意下面的这个问题
Note that, when using the –recursive (-r) option (which is implied by -a), every subcomponent of every path is vis‐ ited from the top down, so include/exclude patterns get applied recursively to each subcomponent’s full name (e.g. to include &#34;/foo/bar/baz&#34; the subcomponents &#34;/foo&#34; and &#34;/foo/bar&#34; must not be excluded). The exclude patterns actually short-circuit the directory traversal stage when rsync finds the files to send.</description>
    </item>
    
    <item>
      <title>rsync脚本的一个例子</title>
      <link>https://wdicc.com/rsync%E8%84%9A%E6%9C%AC%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Tue, 09 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rsync%E8%84%9A%E6%9C%AC%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90/</guid>
      <description>SYNCLOGFILE=&#34;/var/log/rsync-201.log&#34; SYNCLOCKFILE=&#34;/var/lock/rsync-201.lock&#34; if [[ -f $SYNCLOCKFILE ]]; then # lock file already present, bail exit 1 fi echo -n &#34; Sync log for &#34;  $SYNCLOGFILE date  $SYNCLOGFILE touch $SYNCLOCKFILE rsync -vzrtopg --delete 192.168.0.201::www /backup  $SYNCLOGFILE 2&amp;1 rm -f $SYNCLOCKFILE</description>
    </item>
    
  </channel>
</rss>