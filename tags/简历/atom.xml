<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简历 on wd and cc</title>
    <link>https://wdicc.com/tags/%E7%AE%80%E5%8E%86/</link>
    <description>Recent content in 简历 on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 12 Feb 2019 15:14:28 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/%E7%AE%80%E5%8E%86/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resume</title>
      <link>https://wdicc.com/resume-en/</link>
      <pubDate>Tue, 12 Feb 2019 15:14:28 +0800</pubDate>
      
      <guid>https://wdicc.com/resume-en/</guid>
      <description>PDF 中文版  About Me I have worked in many positions, and have extensive experiences in frontend/backend developing, linux system maintain, database maintain, network, security, etc.
Preferred jobs:
 Advertise delivery system developer or team manager (Full time) SRE (Full time, or remote) DBA (Full time, or remote)  Preferred locations:
 Singapore Beijing London US  Experience BrilliantAero.com (2017 - present), Co-founder, tech and product leader Build and lead both engineer team and product team, wrote application for iOS, Android, setup website.</description>
    </item>
    
    <item>
      <title>简历</title>
      <link>https://wdicc.com/resume/</link>
      <pubDate>Tue, 12 Feb 2019 15:09:22 +0800</pubDate>
      
      <guid>https://wdicc.com/resume/</guid>
      <description>PDF English version  在很多岗位工作过，有大型团队管理经验。希望的岗位：广告系统，SRE，DBA。地点：新加坡，北京，伦敦，北美。
工作经历 新晨航空（2017 - 现在），公司合伙人，技术和产品负责人  组建团队：招聘产品技术设计 10 人左右。 办公环境：搭建办公室开发用服务器，Debian, Gitlab, Prometheus, VPN, Wiki, NFS, DNS, 翻墙等。 后端：使用 Django 搭建后端开发框架，使用了 Celery, Channels 等。数据库使用的是 PostgreSQL + Redis。  搭起来必要的框架之后后续就没参与太多代码编写了，主要做架构上面的控制。 使用 Celery 跑定时任务，Redis 做 broker。 使用了 Channels 跑 WebSocket 服务，实时广播通知给用户端（Web/APP）。 我们需要做一些地理位置的计算，主要使用了 PostGIS 来做图形交叠判断。  自动化部署：使用 Ansiable 搭建代码自动化部署方案，包括后端发布，APP 打包等。  后端服务器上面都是跑的 Docker，分了三套环境。  前端 APP：搭建了 RN react 开发框架，使用到了 Redux/Reselect/Saga/TypeScript 等流行的工具，使用 RN 开发了两款上架 APP，一款 Pad 用 APP。使用 Fastlane 打包。  代码架构改了一版，之后都迁移到了 TypeScript。 主要的精力应该都花在了构建 RN APP 的需求上面，各种客户端上面的 bug，第三方模块适配等等，琐事和小问题巨多。  前端 WEB：Web 开发参与不多，使用了 Vue+MobX 和 React+Redux 这些，优化了一些 Vue 使用上面的问题。 Android Pad 系统和 PC 系统定制。  联想的 Pad root 之后，对系统做了一些定制，防止 Pad 被滥用。 联想的一体机，使用 Porteus 这个基于 Linux 的系统对台机做了定制，可以限制使用，和防止系统出问题，以及方便的恢复系统。 还试过定制 Openwrt 路由器系统实现限制功能，不过这个方案最后没用。  其他的还有比如域名申请备案，服务器申请初始化部署，数据库备份等等一堆的事情。  主要开发语言是 React Native 相关技术，后端是 Python。</description>
    </item>
    
  </channel>
</rss>