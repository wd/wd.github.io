<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pgsql on wd and cc</title><link>https://wdicc.com/tags/pgsql/</link><description>Recent content in pgsql on wd and cc</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 01 Feb 2020 14:46:36 +0800</lastBuildDate><atom:link href="https://wdicc.com/tags/pgsql/atom.xml" rel="self" type="application/rss+xml"/><item><title>Dont Do This in PostgreSQL</title><link>https://wdicc.com/dont-do-this-in-postgresql/</link><pubDate>Sat, 01 Feb 2020 14:46:36 +0800</pubDate><guid>https://wdicc.com/dont-do-this-in-postgresql/</guid><description>前几天看见个这个，翻译一下。 不要使用 SQL_ASCII 可以看德哥这篇文章，使用这个编码后就是给啥存啥，如果 db 用户瞎用，里面 gbk utf8 都往里放，那将来用的时候会比较麻烦，而且这样舍弃了数据库提供的数据检查功能，不是浪费么。 不要使用 psql -W or –password 主要就是 psql 实际会自动处理这个事情的，如果需要密码会找你要的。不用强制让他提示你输入密码。 不要使用 rules 可以使用 trigger 代替。 depesz 讲的 To rule or not to rule that is the question depesz 的意思是不要使用 rule。即使是多年的 dba 也可能会用错。 rule 主要是通过修改 sql 来实现逻辑，而不是通过一定规则来执行另一个 sql。 PG 文档里面讲的 rules-triggers 用 rule 可以做很多 trigger 可以做的事情。一些约束，特别是外键不能使用 rule 完成。当一列里面的值在其他表里面不存在的时候可以使用 rule 重写命令为什么都不做，但是这样的话数据就丢掉了，这并不是个好主意。如果需要检查数据是否有效，在无效的时候还需要报个错什么的，那只能使用 trigger 完成。 这一章会讨论如何使用 rule 来更新 view。本例里面所有的 rule 都可以使用 view 的 trigger 代替。使用 trigger 会比 rule 简单一点，尤其那些在更新的时候逻辑比较复杂的。 当两个方法都可以的时候，哪种好取决于数据库的使用。trigger 会针对影响到的行每行触发一次。rule 通过修改 query 或者添加一些查询来完成。所以如果一条语句里面多条数据被影响，rule 会触发一条额外的命令，比 trigger 每行都执行一次快，并且这里可能还有很多重复性的计算好决定需要做什么。然而，trigger 概念上比 rule 简单，新手也不容易犯错。 举个例子： 1 2 3 4 5 6 7 8 9 CREATE TABLE computer ( hostname text, -- indexed manufacturer text -- indexed ); CREATE TABLE software ( software text, -- indexed hostname text -- indexed ); 每个表都有几千数据，hostname 是唯一键。rule 或者 trigger 需要实现一个约束，从 computer 表删除数据的时候，同时从 software 表删除。trigger 会使用下面的命令 1 DELETE FROM software WHERE hostname = $1; 因为 trigger 在每行删除的时候都会执行，所以数据库可以保存执行计划传递一个 hostname 作为参数就行。rule 需要使用下面的命令 1 2 CREATE RULE computer_del AS ON DELETE TO computer DO DELETE FROM software WHERE hostname = OLD.</description></item></channel></rss>