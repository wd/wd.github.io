<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle on wd and cc</title>
    <link>https://wdicc.com/tags/oracle/</link>
    <description>Recent content in Oracle on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 05 Nov 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/oracle/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>又安装了一次 oracle</title>
      <link>https://wdicc.com/%E5%8F%88%E5%AE%89%E8%A3%85%E4%BA%86%E4%B8%80%E6%AC%A1-oracle/</link>
      <pubDate>Fri, 05 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E5%8F%88%E5%AE%89%E8%A3%85%E4%BA%86%E4%B8%80%E6%AC%A1-oracle/</guid>
      <description>好久没有弄 oracle 了，今天有机会又折腾了一天 oracle 的安装，本来觉得是挺简单的事情，没想到也折腾了挺长时间的，我觉得可能主要是因为使用的系统比较新，而 oracle 是 10g 有比较老的缘故。
1 配置 x11forward
我这安装了 xauth 和 libXtst，然后使用 ssh -Y user@host 连接的。使用 -X 好像从来没成功过，也不知道怎么回事，懒得研究了。
2 运行安装程序
解压什么的就没什么好说的了，主要是运行的时候他会检测是不是他支持的发行版，可以使用 -ignoreSysPrereqs，跳过系统检测。
然后其他正常，就是到最后运行 dbca 的时候，会 hung 卡在那，等多久都完成不了。这一步做的操作是会给你 create database，建 init 文件等，没这个的话 oracle 是不可用的。如果你知道手动操作这些后续步骤也可以不理会这个。
dbca 卡住后，可以点那个取消，然后再开一个 term， ps 找到 dbca 然后 kill 掉，前面那个界面应该就会有反应了，就可以继续往下走了。到最后 exit 了事。
然后就是单独启动 dbca 来完成后面的工作。执行 dbca 命令（需要你提前配置好 path），会启动一个窗口，要注意的是，在这时候能看到一个关于字体的错误，据说这个错误就是上面 huang 住的原因，如果看到了这个错误，那么 dbca 的最后一步可能是会执行不了的。。。
我尝试了 n 种方法解决这个问题，发现最简单的是装一个 jdk 1.6 然后把 java 命令链接覆盖 oracle 安装的那个 jdk 1.4 的 $ORACLE_HOME/jdk/jre/bin/java 命令。等于就是说使用 1.</description>
    </item>
    
    <item>
      <title>oracle 里面 kill session</title>
      <link>https://wdicc.com/oracle-%E9%87%8C%E9%9D%A2-kill-session/</link>
      <pubDate>Tue, 07 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-%E9%87%8C%E9%9D%A2-kill-session/</guid>
      <description>eygle 有篇文章讲了这个，之前也看过。昨天实际操作了一下。
因为如 eygle 所讲，kill 了 session 之后，操作系统里面的进程资源有时候不一定会立即释放，所以最好在 kill 之前就找到系统的进程 id，这样，如果不释放的时候，可以直接kill。省的之后找起来麻烦。
昨天操作的时候有这么几个步骤

select * from v$session where username like &#39;UP&#39; --先找到这个用户的 session。
select * from v$sql a, v$session b where b.username = &#39;UP&#39; and a.sql_id = b.sql_id --找出来这个用户这些 session 对应的 sql 语句，好确认 session 的 id。
select * from v$process a, v$session b where a.addr = b.paddr and b.username like &#39;UP&#39; and b.sid = xxx --找出来他的系统进程id，就是那个 spid。
ALTER SYSTEM KILL SESSION &#39;sid, serial#&#39; --可以实施kill了，可能会提示你marked for kill，有必要的话，在os级别kill前面找出来的 spid。</description>
    </item>
    
    <item>
      <title>ORA-00257 和 ORA-19815</title>
      <link>https://wdicc.com/ora-00257-%E5%92%8C-ora-19815/</link>
      <pubDate>Sat, 06 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ora-00257-%E5%92%8C-ora-19815/</guid>
      <description>这几天遇到了这两个错误，记录一下。
使用 perl 的 DBI 连接的时候，会提示 ora-00257 错误，这个用 三qlplus 估计也是一样的错误，注意时远程连接才出错。
CRITICAL : Can&#39;t connect &#34;db8.sds.cnb.yahoo.com&#34; 同时，数据库的alert 里面有下面的信息 ORA-19815: WARNING: db_recovery_file_dest_size of 268435456000 bytes is 100.00% used, and has 0 remaining bytes available. ************************************************************************ You have following choices to free up space from flash recovery area: 1. Consider changing RMAN RETENTION POLICY. If you are using Data Guard, then consider changing RMAN ARCHIVELOG DELETION POLICY. 2. Back up files to tertiary device such as tape using RMAN BACKUP RECOVERY AREA command.</description>
    </item>
    
    <item>
      <title>oracle 的 job 又遇到问题了</title>
      <link>https://wdicc.com/oracle-%E7%9A%84-job-%E5%8F%88%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E4%BA%86/</link>
      <pubDate>Fri, 29 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-%E7%9A%84-job-%E5%8F%88%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E4%BA%86/</guid>
      <description>还是高级复制的问题，这次可能是因为job执行过程中，对方机器刚好重启导致的。反正job是卡在那里了，都10多天了。
查看 dba_jobs_running 表，可以看到卡住的job的 job_id 和 sid 。查看 dba_jobs 表，可以看到相应 job 的信息，this_date 如果有数据的话，表示的是 job 开始执行的时间，next_date 是下次执行 job 的时间，如果 job 正常执行完毕，那么 this_date 应该是空的。根据 sid 还可以查看 v$session_wait 和 v$session 里面的这个 job 的一些状态。
尝试了下面的方法来重新运行job，当时好像不好用，不过今天来看的时候，job是执行了。现在也不清楚是不是我这个操作起作用了，真晕。
SQL&amp;gt; exec dbms_job.broken(109,true);
PL/SQL procedure successfully completed.
SQL&amp;gt; commit;
Commit complete.
SQL&amp;gt; select job,sid from dba_jobs_running;
JOB SID
---------- ----------
109 656
SQL&amp;gt; select saddr,sid,serial#,paddr,username,status from v$session where username = &#39;REPADMIN&#39;;
SADDR SID SERIAL# PADDR USERNAME STATUS
-------- ---------- ---------- -------- ------------------------------ --------</description>
    </item>
    
    <item>
      <title>为resin配置oracle连接池</title>
      <link>https://wdicc.com/%E4%B8%BAresin%E9%85%8D%E7%BD%AEoracle%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
      <pubDate>Wed, 27 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E4%B8%BAresin%E9%85%8D%E7%BD%AEoracle%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
      <description>resin 2.x 的配置方法和 3.x 的方法有区别。按照官方文档，做下面的配置。

oraPool

oracle.jdbc.pool.OracleConnectionPoolDataSource
jdbc:oracle:thin:@localhost:1521:dbname
username
password

#....

&amp;nbsp;在上面的 .... 这里还可以添加其他的配置信息。配置好之后启动resin，会发现提示类似下面的信息。
conf/resin.conf:218: java.lang.ClassNotFoundException: oracle.jdbc.pool.OracleConnectionPoolDataSource
提示没有找到连接oracle数据库的jdbc驱动。这个驱动在oracle的安装目录里面有。比如我这里是在 /db/oracle/10.1.0/product/10g/jdbc/lib/ 。里面好多文件，具体都什么作用可以看这里。
复制这个目录里面的 classes12.jar 和 nls_charset12.jar 到resin的 lib 目录下面，重新启动 resin 就可以了。本文完成过程中参考了这篇文章。如何使用这个pool，官方文档也有说明。</description>
    </item>
    
    <item>
      <title>oracle 的高级复制出了点问题，记录下解决办法</title>
      <link>https://wdicc.com/oracle-%E7%9A%84%E9%AB%98%E7%BA%A7%E5%A4%8D%E5%88%B6%E5%87%BA%E4%BA%86%E7%82%B9%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95%E4%B8%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Fri, 18 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-%E7%9A%84%E9%AB%98%E7%BA%A7%E5%A4%8D%E5%88%B6%E5%87%BA%E4%BA%86%E7%82%B9%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95%E4%B8%8B%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>早上来了同事就来找我，有两台同步的服务器数据库没有同步成功，查查咋回事。
一台A，从B处同步。蒙了一下，果然有个dba_jobs表，呵呵。
在A处执行上面的命令，好像repadmin的job都在正常执行。 在B处执行上面的命令，能查到类似下面的信息 ---------- ------------------------------ ------------------- NEXT_DATE FAILURES B ------------------- ---------- - 47 repadmin 2006-05-16 19:37:29 4001-01-01 00:00:00 16 Y 显然是job挂了。查看了一下挂的时间，原来是联通机房机柜断电那天，A机器在联通机房，那天断电了6个小时。B机器上面的同步尝试了16次之后就挂起了。解决方法也不难，用repadmin用户登录，然后执行下面的语句，谁的job只能由谁来执行： 47是job id，sysdate表示当前时间。等会再看吧，执行成功之后会把 failures 重新计数，B变成N。 </description>
    </item>
    
    <item>
      <title>oracle 文本界面的安装</title>
      <link>https://wdicc.com/oracle-%E6%96%87%E6%9C%AC%E7%95%8C%E9%9D%A2%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-%E6%96%87%E6%9C%AC%E7%95%8C%E9%9D%A2%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>oracle 的手册里面讲的通常都是图形界面下面的安装，就是用oracle登录桌面，然后运行安装程序的方法。可实际上维护服务器的时候，大多用的还是远程文本界面。这样很有必要看看如何通过文本界面来安装oracle。
oracle本身的安装程序也提供了这个方法，就是使用 responseFile 。这个 responseFile 其实就是在图形界面安装的时候的一些选择，保存到文件之后，直接告诉安装程序从这里读取设置就好了。将oracle的安装文件 ship.db.lnx32.cpio.gz 解压：
cpio -idmv 这样可以看到有个Disk1的文件夹，里面有个response目录，里面好多response文件，不过我还不知道这些有什么区别，里面设置项也很多，还没弄明白。我使用的不是这里的response文件。是通过下面的方法获取的rsp文件。 可以通过在记录模式中运行软件或通过手动编辑示例响应文件来创建响应文件。以下是一个基本演示： 1. 用此命令启动 OUI 来创建响应文件： ./runInstaller -record -destinationFile /tmp/recorded.rsp 2. 选择您需要的所有部分（源目标目录、主目录、主目录名、产品）。 3. 当您看到 Summary 屏幕时，不要单击 Install，而是单击 Cancel。 4. 仔细查看在 tmp/recorded.rsp 中创建的结果响应文件。如果需要，可以手动编辑该文件，只要您遵守使用规定的格式即可（请参见文档）。 5. 现在如下执行静默安装： ./runInstaller -silent -responseFile /tmp/recorded.rsp 在运行脚本时将会报告安装的进度。 如果您由于响应文件中的条目不正确而遇到安装故障，安装将失败并显示一条诊断消息。详细信息可在 oraInventory/logs 目录中找到。在每次使用响应文件运行 OUI 时，会创建具有 installActions-.log 和 silentInstall.log 格式名称的日志。 这样，只需要找台机器在图形界面下面运行一下安装程序，生成一个rsp文件，然后放到真正需要安装的服务器上面，修改一下安装路径，设置一下sys密码，就可以开始安装了。 </description>
    </item>
    
    <item>
      <title>oracle在rh里面的安装流程</title>
      <link>https://wdicc.com/oracle%E5%9C%A8rh%E9%87%8C%E9%9D%A2%E7%9A%84%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle%E5%9C%A8rh%E9%87%8C%E9%9D%A2%E7%9A%84%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</guid>
      <description>第1部分 安装操作系统
首先需要安装系统....Red Hat Enterprise Linux 2.1，Red Hat Enterprise Linux 3，Novell SUSE Linux Enterprise Server 8 是通过 oracle 10g认证的三个linux发行套件，不知道oracle 10.3有没有对这个修改。默认情况下，oracle 10g只能在rh的这两个版本安装，如果不是上面两个，运行安装程序会直接打印错误。不过也有方法在别的版本安装的，后面有说明。
按照上一篇文章，安装linux的时候可以不选择图形界面，这样还可以节省不少空间。按照oracle的文档，说需要安装下面的这些软件包。
compat-gcc-c++ compat-libstdc++ compat-libstdc++-devel 我实际安装过程中，compat-gcc compat-gcc-c++ compat-libstdc++ compat-libstdc++-devel 这几个包我没有安装也可以安装oracle。  第2部分 针对oracle配置linux oracle 对系统硬件配置的一些要求。 内存  512MB swap  1GB oracle软件  2.5GB 数据文件  1.2GB /tmp  400MB 创建oracle用户和组 /usr/sbin/groupadd dba /usr/sbin/useradd -m -g oinstall -G dba oracle id oracle 要记得为oracle用户设置密码。 创建oracle的安装目录，要注意前面对分区的大小要求。 mkdir -p /u02/oradata chown -R oracle:oinstall /u01/app/oracle /u02/oradata chmod -R 775 /u01/app/oracle /u02/oradata 配置linux内核参数 kernel.</description>
    </item>
    
    <item>
      <title>昨天操作了好多次oracle的备份和恢复</title>
      <link>https://wdicc.com/%E6%98%A8%E5%A4%A9%E6%93%8D%E4%BD%9C%E4%BA%86%E5%A5%BD%E5%A4%9A%E6%AC%A1oracle%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Thu, 09 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E6%98%A8%E5%A4%A9%E6%93%8D%E4%BD%9C%E4%BA%86%E5%A5%BD%E5%A4%9A%E6%AC%A1oracle%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/</guid>
      <description>oracle的数据库文件一旦建立就会一直占用磁盘空间，表空间用尽的时候，就需要为表空间添加数据文件。可是，从表里面删除数据的时候，表空间却不会释放，所以磁盘空间占用只会越来越大。前段时间一个数据库的表空间不足了，放数据的分区也磁盘空间不足了，必须得想办法释放一下空间才行，操作说起来其实也简单，就是倒腾。
操作值钱咱先给现在的表空间做一个备份。然后新建一个用户，给这个用户建立表空间，按照备份的大小添加数据文件。然后将备份导入新的表空间，切换应用使用的用户。删除之前用户的表空间，删除数据文件。然后给他重新建立表空间数据文件，切换回来。然后将新的用户里面的数据导出，导入到旧的用户下面。这样就操作完了。
导出导入的时候可以按照exp和imp帮助里面的那个例子，row=n表示不倒数据，只导结构。这样导出似乎也会有些问题，什么seq不会倒出来，需要重新弄，不太明白这个。</description>
    </item>
    
    <item>
      <title>Oracle10g EM乱码之快速解决</title>
      <link>https://wdicc.com/oracle10g-em%E4%B9%B1%E7%A0%81%E4%B9%8B%E5%BF%AB%E9%80%9F%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle10g-em%E4%B9%B1%E7%A0%81%E4%B9%8B%E5%BF%AB%E9%80%9F%E8%A7%A3%E5%86%B3/</guid>
      <description>来源 这里
一直没怎么用10g的EM工具,今天打开来看看,发现也有相传已久的乱码问题.网上也流传着N种解决方案,仔细看一下,其实这个问题很好解决.
如果安装时,我们系统环境变量设置的是中文环境,那么就不会有这个问题.这个问题根本原因在于安装时,JDK/JRE字符集的自动选择.
在 $ORACLE_HOME/jdk/jre/lib 和 $ORACLE_HOME/jre/1.4.2/lib/ 目录下都有多种字符集字体配置文件:

[oracle@danaly ~]$ cd $ORACLE_HOME/jdk/jre/lib
[oracle@danaly lib]$ ls font*zh_CN*
font.properties.zh_CN.Redhat font.properties.zh_CN.Redhat2.1
font.properties.zh_CN.Sun font.properties.zh_CN_UTF8.Sun
[oracle@danaly lib]$ cd $ORACLE_HOME/jre/1.4.2/lib/
[oracle@danaly lib]$ ls font*zh_CN*
font.properties.zh_CN.Redhat font.properties.zh_CN.Redhat2.1
font.properties.zh_CN.Sun font.properties.zh_CN_UTF8.Sun
我们只要用合适的中文字符集文件替换缺省文件即可,我选择使用font.properties.zh_CN.Redhat来替换缺省字体定义文件:
[oracle@danaly lib]$ cp font.properties.zh_CN.Redhat font.properties
替换之后需要清理一下Cache,重启EM即可.
Cache路径通常位于:
$ORACLE_HOME/oc4j/j2ee/oc4j_applications/applications/em/em/cabo/images/cache/zhs
清除所有gif文件即可.然后重新启动EM:
[oracle@danaly zhs]$ emctl stop dbconsole
TZ set to PRC
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0
Copyright (c) 1996, 2005 Oracle Corporation. All rights reserved.</description>
    </item>
    
    <item>
      <title>Oracle数据库日常维护手册</title>
      <link>https://wdicc.com/oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E6%89%8B%E5%86%8C/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E6%89%8B%E5%86%8C/</guid>
      <description>Oracle数据库日常维护手册
在Oracle数据库运行期间，DBA应该对数据库的运行日志及表空间的使用情况进行监控，及早发现数据库中存在的问题。
一、Oracle警告日志文件监控 
Oracle在运行过程中，会在警告日志文件(alert_SID.log)中记录数据库的一些运行情况: 
●数据库的启动、关闭，启动时的非缺省参数; 
●数据库的重做日志切换情况，记录每次切换的时间，及如果因为检查点(checkpoint)操作没有执行完成造成不能切换，会记录不能切换的原因; 
●对数据库进行的某些操作，如创建或删除表空间、增加数据文件; 
●数据库发生的错误，如表空间不够、出现坏块、数据库内部错误(ORA-600) 
DBA应该定期检查日志文件，根据日志中发现的问题及时进行处理
问题处理
启动参数不对检查初始化参数文件
因为检查点操作或归档操作没有完成造成重做日志不能切换如果经常发生这样的情况，可以考虑增加重做日志文件组;想办法提高检查点或归档操作的效率; 
有人未经授权删除了表空间检查数据库的安全问题，是否密码太简单;如有必要，撤消某些用户的系统权限
出现坏块检查是否是硬件问题(如磁盘本生有坏块)，如果不是，检查是那个数据库对象出现了坏块，对这个对象进行重建
表空间不够增加数据文件到相应的表空间
出现ORA-600根据日志文件的内容查看相应的TRC文件，如果是Oracle的bug，要及时打上相应的补丁

二、数据库表空间使用情况监控(字典管理表空间) 
数据库运行了一段时间后，由于不断的在表空间上创建和删除对象，会在表空间上产生大量的碎片，DBA应该及时了解表空间的碎片和可用空间情况，以决定是否要对碎片进行整理或为表空间增加数据文件。
select tablespace_name, count(*) chunks , 
max(bytes/1024/1024) max_chunk 
from dba_free_space 
group by tablespace_name; 
上面的SQL列出了数据库中每个表空间的空闲块情况
其中，CHUNKS列表示表空间中有多少可用的空闲块(每个空闲块是由一些连续的Oracle数据块组成)，如果这样的空闲块过多，比如平均到每个数据文件上超过了100个，那么该表空间的碎片状况就比较严重了，可以尝试用以下的SQL命令进行表空间相邻碎片的接合: 
alter tablespace 表空间名coalesce; 
对表空间的扩充对表空间的数据文件大小进行扩展，或向表空间增加数据文件，例如：
alter database datafile ‘filename’ resize 2g;
alter tablespace add datafile ‘filename’ size 2g;
三、查看数据库的连接情况 
DBA要定时对数据库的连接情况进行检查，看与数据库建立的会话数目是不是正常，如果建立了过多的连接，会消耗数据库的资源。同时，对一些“挂死”的连接，可能会需要DBA手工进行清理。
以下的SQL语句列出当前数据库建立的会话情况: 
select sid,serial#,username,program,machine,status from v$session;</description>
    </item>
    
    <item>
      <title>oracle修改用户密码</title>
      <link>https://wdicc.com/oracle%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</guid>
      <description>如果用户是在服务器端使用数据库，那么可以用Oracle提供的SQLPlus进行数据库操作，假设要更改用户口令，可以这样做：
sqlplus user/password
sqlalter user sys identified by new_password;
sqlexit</description>
    </item>
    
    <item>
      <title>在linux重新启动下如何设置oracle服务自动开启</title>
      <link>https://wdicc.com/%E5%9C%A8linux%E9%87%8D%E6%96%B0%E5%90%AF%E5%8A%A8%E4%B8%8B%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEoracle%E6%9C%8D%E5%8A%A1%E8%87%AA%E5%8A%A8%E5%BC%80%E5%90%AF/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E5%9C%A8linux%E9%87%8D%E6%96%B0%E5%90%AF%E5%8A%A8%E4%B8%8B%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEoracle%E6%9C%8D%E5%8A%A1%E8%87%AA%E5%8A%A8%E5%BC%80%E5%90%AF/</guid>
      <description>来源 这里
我装的是redhat linux 9，oracle9.2.0.1.0,用sqlplus &#34;/as sysdba&#34; startup可开启实例服务，用lsnrctl start开启侦听服务，但这些都是通过手工输入操作的，能不能有办法让这些服务就象在windows一样设置为自动，让他在重启之后就可自动运行
---------------------------------------------------------------
这个问题近期有人问过好多遍了，下面是 liuyi8903(好好学习) 的关于此问题的一个回复：
下面是我在linux as 3下做的:
1. 创建文件/etc/oratab
添加
#添加如下内容到/etc/oratab文件中,
#$ORACLE_SID是你的Oracle数据库的sid
#$ORACLE_HOME是你的Oracle数据库的Oracle_home
#Y表示要求在系统启动的时候启动Oracle数据库.N表示不要在系统启动的时候启动Oracle
$ORACLE_SID:$ORACLE_HOME:Y

2. 修改文件/etc/rc.local添加一下两行
su - oracle -c &#39;dbstart&#39;
su - oracle -c &#39;lsnrctl start&#39;
---------------------------------------------------------------
以下是10G在Linux下oracle自启动的官方表述，可以参考一下，9i应该也有这方面的表述，可以去www.oracle.com找9i的文档看看：
1.Log in as the root user.
2.Edit the oratab file for your platform.
To open the file, use one of the following commands:
On Solaris:
# vi /var/opt/oracle/oratab
On AIX, HP-UX, Linux, and Tru64 UNIX:</description>
    </item>
    
    <item>
      <title>数据恢复步骤</title>
      <link>https://wdicc.com/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E6%AD%A5%E9%AA%A4/</guid>
      <description>切换到oracle用户 sqlplus conn / as sysdba drop user  cascade; create user  identified by  default tablespace ; exit imp / file= fromuser= touser= 
*为要恢复的用户，为其密 </description>
    </item>
    
    <item>
      <title>远程安装oracle</title>
      <link>https://wdicc.com/%E8%BF%9C%E7%A8%8B%E5%AE%89%E8%A3%85oracle/</link>
      <pubDate>Tue, 11 Jul 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E8%BF%9C%E7%A8%8B%E5%AE%89%E8%A3%85oracle/</guid>
      <description>找了很久总算找到了方法。
参考 这里

主要是下面这段
使 Oracle 安装自动化Oracle Universal Installer 拥有很多自动化过程中可以利用的特性。它采用一个基于 XML的中央信息库，允许第三方应用程序识别安装了那些产品。除了简单安装之外，它还允许将现有 Oracle主目录复制到新的位置。有关该产品的更多信息，请参见 Oracle Universal Installer 概念指南。Oracle 关于软件安装和配置甚至数据库本身的自动化解决方案涉及到一个响应文件 的使用。该文件的用途与 RedHat 的 kickstart 文件相似。用户不是对交互式对话所提出的问题进行交互式回答，而是将回答存储在一个文本文件中，随后 OracleUniversal Installer (OUI) 在运行安装程序时使用该文件。这样的安装称为“静默安装”。OUI用于安装各种应用程序，因此响应文件不限于安装数据库。
可以通过在记录模式中运行软件或通过手动编辑示例响应文件来创建响应文件。以下是一个基本演示：

用此命令启动 OUI 来创建响应文件：
选择您需要的所有部分（源目标目录、主目录、主目录名、产品）。 当您看到 Summary 屏幕时，不要单击 Install，而是单击 Cancel。 仔细查看在 tmp/recorded.rsp 中创建的结果响应文件。如果需要，可以手动编辑该文件，只要您遵守使用规定的格式即可（请参见文档）。 现在如下执行静默安装： 在运行脚本时将会报告安装的进度。  如果您由于响应文件中的条目不正确而遇到安装故障，安装将失败并显示一条诊断消息。详细信息可在 oraInventory/logs目录中找到。在每次使用响应文件运行 OUI 时，会创建具有 installActions-.log 和silentInstall.log 格式名称的日志。  还有关于runinstaller的使用参数 Usage: runInstaller [-options] [()*] Where options include: -clusterware oracle.crs,Version of Cluster ready services installed. -crsLocation  Used only for cluster installs, specifies the path to the crs home location.</description>
    </item>
    
  </channel>
</rss>