<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on wd and cc</title>
    <link>https://wdicc.com/tags/php/atom/index.xml</link>
    <description>Recent content in Php on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://wdicc.com/tags/php/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Jemplate 的简单介绍</title>
      <link>https://wdicc.com/introduce-to-jemplate/</link>
      <pubDate>Sat, 27 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/introduce-to-jemplate/</guid>
      <description>如果你还在用 php 写 web，那么你 out 了，呵呵。现在流行的是 rest + js。当然，rest 层可能还是 php 写的，不过还有用 perl 写的 openresty 1.0 和完全用 c 写的 openresty 2.0。openresty 是个很不错的东西，本来想细说一下，发现不知道怎么说好。去 cpan 上面搜吧。openresty 2.0 是基于 nginx 的，agentzh 在他上面加了好多的模块，让 nginx 直接和数据库通信，都不用 php 了。前端完全用 js 来搞定，以后应该都是 js 工程师了。&lt;br /&gt;

smarty 写 php 的人应该都知道吧，Jemplate 是很类似的一个东西，是方便你写 js 的一个工具。我这写了一个非常简单的例子。&lt;br /&gt;

下面这个是 Jemplate 的一个模板，保存为 test.tt。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
&lt;div&gt;[% test %]&lt;/div&gt;
&lt;p&gt;
[% FILTER html %]
    asdff &lt; sdf &gt; sdfsdf
[% END %]
&lt;/p&gt;
&lt;/pre&gt;&lt;br /&gt;

然后用 Jemplate 编译一下&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
jemplate --runtime &gt; a.js
jemplate --compile test.tt &gt;&gt; a.js
&lt;/pre&gt;&lt;br /&gt;

这之后就和 test.tt 没关系了，除非你改了他，那就需要重新生成这个 a.js。&lt;br /&gt;

再看我们的页面。里面 jquery-1.4.2.min.js 是为了方便操作页面使用的，jquery 决对是个好东西，写 js 应该使用他。那个 jquery.b.js 是我们自己写的，真正把数据添加到页面的代码。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;&gt;
    &lt;title&gt;test&lt;/title&gt;
    &lt;script src=&#39;jquery-1.4.2.min.js&#39; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt; &lt;/script&gt;
    &lt;script src=&#39;a.js&#39; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt; &lt;/script&gt;
    &lt;script src=&#39;jquery.b.js&#39; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt; &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=main&gt;&lt;/div&gt;    
&lt;/body&gt;
&lt;/html&gt;
&lt;/pre&gt;&lt;br /&gt;

在这个 jquery.b.js 里面，我们让 jemplate 处理了一下 test.tt，给他里面的 test 变量赋值 ffffff，然后把设置到 #main 的 html 里面。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
$(function() {
    var html= Jemplate.process(
        &#39;test.tt&#39;, { test: &#39;ffffff&#39; }
    );

    $(&#39;#main&#39;).html(html);
});
&lt;/pre&gt;&lt;br /&gt;

这样这个页面就完事了，简单么，呵呵。你可以用 jemplate 和 js 强大的语法来实现更多的功能的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>tmp下面有好多的sess_文件</title>
      <link>https://wdicc.com/lots-sess_-files/</link>
      <pubDate>Wed, 20 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lots-sess_-files/</guid>
      <description>&lt;p&gt;之前以为是有个&lt;a href=&#34;http://blog.wdicc.com/wordpress/update-blog-to-2-2/&#34;&gt;did_you_path_math插件&lt;/a&gt;的问题，可是停止这个插件后，发现还是会有这些文件出来。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;-rw-------    1 nobody   4294967295        0 Jun 20 16:01 sess_l12chvh9bjik2a7ms152ggnu36&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 16:00 sess_r6gml3pbcfaribnctamiq9rk53&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 16:00 sess_lnvhsb928701qq1kgf1fiiuem5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 16:00 sess_bhlk360m7jqh1c8khku000gte4&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:58 sess_uuflltlj4c81pk116qtegr15q2&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:57 sess_6fbdvd4fmq49pp9kvi0g68ihr5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:55 sess_s4o0c5untrfj2rpdqemp06lk65&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:51 sess_9cir4ug259se527d01pcgr63j0&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:50 sess_kj973ei5sudldg3n9bfq0cgb23&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:49 sess_7j8h39red2jak1upe1k80c1tt7&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:45 sess_tnhhikhc2hgui3e9ugh835i0s0&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:44 sess_mgpr813dtuil5m6u765kbov503&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:41 sess_8vcse5004pvd2icntct9jgt5m4&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:39 sess_g2r1hkg2u4o9v0c919nem61724&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:39 sess_60qoqf65giur2ulj01ce2snal0&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_vier69ckh0dmp9613k0gfm05m3&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_m57eveg1oarv2hheem2nkv45i4&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_hgtktf6eeeghdfm1e7blb1v4a7&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_qko77d166lmadk3gcn4lop7qe1&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:36 sess_en9v49gnlbmtma56s8tkqpqbc5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:32 sess_aeu3nad39iljqr6kahaq7ceih5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_ulboab1mt4ov930fkllrc6rlt3&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_47on5eflfdfnupdov6a59soui3&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_o98ss7kbp31jce5d2jt133n183&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_p97q0t0qlmtalkbpism7aa7gb6&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:30 sess_le35e8bodjrlp4ufk33c2k6h62&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:29 sess_9dlskkqqas3nu7t2asu4ok8ec2&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:29 sess_a56sha53hr1737nt9rahh2nn02&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:29 sess_2g2r8j02h4al5rmbb0mnpuu865&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&amp;nbsp;见鬼了，也不知道是怎么回事。google了一下，说修改php.ini的下面几个参数。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;ini&#34;&gt;; Define the probability that the &#39;garbage collection&#39; process is started&lt;br /&gt;
; on every session initialization.&lt;br /&gt;
; The probability is calculated by using gc_probability/gc_divisor,&lt;br /&gt;
; e.g. 1/100 means there is a 1% chance that the GC process starts&lt;br /&gt;
; on each request.&lt;br /&gt;

session.gc_probability = 1&lt;br /&gt;
session.gc_divisor     = 1000&lt;br /&gt;

; After this number of seconds, stored data will be seen as &#39;garbage&#39; and&lt;br /&gt;
; cleaned up by the garbage collection process.&lt;br /&gt;
session.gc_maxlifetime = 1440&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;修改好像也是治标不治本，不知道有没有办法查出来这些文件是怎么会出来的，有时候会一分钟出来好几个这个文件，很烦。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>