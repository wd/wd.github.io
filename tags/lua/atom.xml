<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lua on wd and cc</title>
    <link>https://wdicc.com/tags/lua/</link>
    <description>Recent content in lua on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 Dec 2016 17:00:31 +0800</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/lua/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Release some staff at github</title>
      <link>https://wdicc.com/release-some-staff-at-github/</link>
      <pubDate>Tue, 13 Dec 2016 17:00:31 +0800</pubDate>
      
      <guid>https://wdicc.com/release-some-staff-at-github/</guid>
      <description>把 blog 用到的模板整理了一下，放到了 https://github.com/wd/hexo-fabric ，这个最开始是 fork 别人的代码改的，后来发现原来那个人已经不用了，就整理一下，增加了一个 tag 支持，修改了一下字体和背景色，还有代码颜色等，都是一些小修改。同时也提交到了官方的 theme 库，不过 pull request 还没有通过。。
另外，还把之前写的一个给 ngx-lua 用的一个使用 mcrypt 加密解密的库 https://github.com/wd/lua-resty-mcrypt ，整理出来单独弄了一个模块。代码其实非常简单，这个也能看出来 ngx_lua 里面使用 ffi 调用 C 模块开发多舒服，不过因为 C 知识有限，可能还是会有一些问题，不过至少自己测试是 ok 的，也在线上跑了好久，只能遇到有问题的再说了。这个同时也提交到了春哥的 opm 仓库，那个倒没有审核，提交就被索引了，使用的话应该可以用 opm 命令直接安装。</description>
    </item>
    
    <item>
      <title>lua metatable</title>
      <link>https://wdicc.com/lua-metatable/</link>
      <pubDate>Sun, 27 Mar 2016 10:48:26 +0800</pubDate>
      
      <guid>https://wdicc.com/lua-metatable/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  t = setmetatable({ bar = 4, foo = 7 }, { __index = { foo = 3 } }) print(t.foo) -- 7 print(t.bar) -- 4 t = setmetatable({ }, { __index = { foo = 3} }) print(t.foo) -- 3 print(t.bar) -- nil fuc = function (t,k) if k == &amp;#39;foo&amp;#39; then return rawget(t, &amp;#39;bar&amp;#39;) else return 0 end end t = setmetatable({ }, { __index = fuc }) print(t.</description>
    </item>
    
  </channel>
</rss>