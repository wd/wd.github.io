<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sendmail on wd and cc</title>
    <link>https://wdicc.com/tags/sendmail/</link>
    <description>Recent content in Sendmail on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 09 Jul 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wdicc.com/tags/sendmail/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>无聊又写一个用来发邮件的 pm..</title>
      <link>https://wdicc.com/%E6%97%A0%E8%81%8A%E5%8F%88%E5%86%99%E4%B8%80%E4%B8%AA%E7%94%A8%E6%9D%A5%E5%8F%91%E9%82%AE%E4%BB%B6%E7%9A%84-pm../</link>
      <pubDate>Fri, 09 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E6%97%A0%E8%81%8A%E5%8F%88%E5%86%99%E4%B8%80%E4%B8%AA%E7%94%A8%E6%9D%A5%E5%8F%91%E9%82%AE%E4%BB%B6%E7%9A%84-pm../</guid>
      <description>继使用 perl 发中文标题邮件，和中文附件邮件后，又把他们整合了一下写了一个 pm 干这个事。
其实发带附件的邮件应该是有现成的 pm 干这个事的，比如 MIME::Lite 之类，没特殊需求还是用那个吧，这个纯属无聊写的。
文件前面有使用方法。。
package SendMail; use strict; use warnings; use Data::Dumper; use Encode; use MIME::Base64; =head1 Examples use SendMail; my $sm = SendMail-new( { To = &#39;you@foo.com, other@bar.com&#39;, Subject = &#39;just a test 中文&#39;, }); -- or -- my $sm = SendMail-new( { From = &#39;me@abc.com&#39;, To = &#39;you@foo.com, other@bar.com&#39;, Subject = &#39;just a test 中文&#39;, } ); -- or -- my $sm = SendMail-new( { From = &#39;me@abc.</description>
    </item>
    
    <item>
      <title>使用 perl 发带附件的邮件</title>
      <link>https://wdicc.com/%E4%BD%BF%E7%94%A8-perl-%E5%8F%91%E5%B8%A6%E9%99%84%E4%BB%B6%E7%9A%84%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Mon, 05 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E4%BD%BF%E7%94%A8-perl-%E5%8F%91%E5%B8%A6%E9%99%84%E4%BB%B6%E7%9A%84%E9%82%AE%E4%BB%B6/</guid>
      <description>继 上篇 使用 perl 发带中文标题的邮件后，又研究了下发带附件的。
基本差别不大，主要是那个 Content-type 要变一下。那个 boundary 可以自己随便写，和后面的统一就行了。
my $title = encode_base64(&#34;标题&#34;, &#34;&#34;); my $body = encode_base64(&#34;邮件正文&#34;); my $attach = encode_base64(&#34;附件内容&#34;); my $filename = encode(&#39;MIME-B&#39;, decode(&#39;utf8&#39;, &#34;文件中文.txt&#34;)) open(MAIL, &#39;|/usr/sbin/sendmail -t&#39;); print MAIL &#34;From: test\@abs.com\r\n&#34;; print MAIL &#34;To: test\@abs.com\r\n&#34;; print MAIL &#34;Subject: =?UTF-8?B?$title?=\r\n&#34;; print MAIL &#34;MIME-Version: 1.0\r\n&#34;; # print MAIL &#34;Content-type: text/plain; charset=utf-8\r\n&#34;; print MAIL </description>
    </item>
    
    <item>
      <title>使用 perl 发送中文邮件标题乱码</title>
      <link>https://wdicc.com/%E4%BD%BF%E7%94%A8-perl-%E5%8F%91%E9%80%81%E4%B8%AD%E6%96%87%E9%82%AE%E4%BB%B6%E6%A0%87%E9%A2%98%E4%B9%B1%E7%A0%81/</link>
      <pubDate>Wed, 30 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E4%BD%BF%E7%94%A8-perl-%E5%8F%91%E9%80%81%E4%B8%AD%E6%96%87%E9%82%AE%E4%BB%B6%E6%A0%87%E9%A2%98%E4%B9%B1%E7%A0%81/</guid>
      <description>代码如下面，解决乱码的方法是使用 base64 编码。
use MIME::Base64::Perl; open(MAIL, &#39;|/usr/sbin/sendmail -t&#39;); my $recver = &#39;wangdong@abc.com&#39;; my $alertTitle = &#34;中文 asdfsdf sdfsdf sdf sdf s df sd fsd f sd fsd f sdf sdf sdf&#34;; my $alertText = &#34;body &#34;; my $encoded = encode_base64($alertTitle, &#34;&#34;); print MAIL &#34;From: alert\@abc.com\r\n&#34;; print MAIL &#34;To: $recver\r\n&#34;; print MAIL &#34;Subject: =?UTF-8?B?&#34; . $encoded . &#34;?=\r\n&#34;; print MAIL &#34;MIME-Version: 1.0\r\n&#34;; print MAIL &#34;Content-type: text/plain; charset=utf-8\r\n&#34;; print MAIL &#34;\n&#34;; print MAIL &#34;</description>
    </item>
    
    <item>
      <title>命令行发送有附件的邮件</title>
      <link>https://wdicc.com/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%91%E9%80%81%E6%9C%89%E9%99%84%E4%BB%B6%E7%9A%84%E9%82%AE%E4%BB%B6/</link>
      <pubDate>Mon, 01 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%91%E9%80%81%E6%9C%89%E9%99%84%E4%BB%B6%E7%9A%84%E9%82%AE%E4%BB%B6/</guid>
      <description>命令行下面发送邮件比较简单，恐怕都会使用。
$ echo &#34;hello .. &#34; | mail -s subject xxx@abc.com $ cat /path/to/file | mail -s subject xxx@abc.com $ mail -s subject xxx@abc.com 上面这些方法都可以发送邮件。还有一种方法。
$ cat a.txt Subject: test From: xxx@abc.com To: xxx@abc.com hi sdfsdfsdf the end. $ cat a.txt | sendmail -t 
这样可以把邮件头信息写到文件里面的，你也可以用 php，perl 来打印类似的信息给 sendmail -t ，让他来发。
那么如果有附件应该怎么办？可以使用 uuencode。
$ uuencode a.txt a.txt | mail -s test xxx@abc.com $ (cat a.txt; uuencode b.txt b.txt; cat c.txt) |sendmail -t</description>
    </item>
    
    <item>
      <title>sendmail 中自动抄送某个用户的邮件给别人</title>
      <link>https://wdicc.com/sendmail-%E4%B8%AD%E8%87%AA%E5%8A%A8%E6%8A%84%E9%80%81%E6%9F%90%E4%B8%AA%E7%94%A8%E6%88%B7%E7%9A%84%E9%82%AE%E4%BB%B6%E7%BB%99%E5%88%AB%E4%BA%BA/</link>
      <pubDate>Tue, 26 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sendmail-%E4%B8%AD%E8%87%AA%E5%8A%A8%E6%8A%84%E9%80%81%E6%9F%90%E4%B8%AA%E7%94%A8%E6%88%B7%E7%9A%84%E9%82%AE%E4%BB%B6%E7%BB%99%E5%88%AB%E4%BA%BA/</guid>
      <description>sendmail有个 /etc/aliases 配置文件，在里面可以给某个帐号设置alias，这样给这个alias发的邮件，都会给设置好的用户转发过去。要知道sendmail的帐号是和系统帐号联系在一起的，添加mail帐号得给系统添加帐号（qmail可以实现虚拟用户，或许sendmail也可以，而我不知道罢了）。而这个alias帐号却不是必须有得有系统帐号的，只要设置了alias，就可以给alias用户发邮件，就好像系统真有这么一个帐号一样。
关于 /etc/aliases 文件，这里有个文章有说明。下面复制几个例子。
# RFC 822 规定每个域名都需要有一个 &#34;postmaster&#34; postmaster : root
# 将 postmaster 的邮件都转发给 root 帐号，当然你下面还可以将root帐号的邮件在转发给别人。
# 转发也可以转发到文件
# 比如这个，都说了nobody了还给发邮件，邮件都丢掉
nobody : /dev/null
# 也可以通过管道作为另一个程序的输入
# 比如给procmail，它能实现的功能可就多了，比如可以根据邮件大小转发到不同的用户，或者调用spamassian、clamav来查垃圾邮件和病毒等
# 一个自动的bug跟踪程序
program-bugs: |/usr/local/bin/program-bug-tracker
# 也可以转发到多个帐号，用逗号分隔就可以
project-list: johndoe@host1.uiuc.edu,jsmith@host2.uiuc.edu,someone@host.purdue.edu

可以看到功能还是很强悍的，尤其是可以 pipe 到程序，procmail、maildrop都是很不错的过滤程序，能实现很多其他的功能。
标题的要求是“抄送”某个帐号的邮件给别的用户，有点类似监控的意思。怎么实现呢？可能第一个想到的就是类似下面这种方法：
somebody:other1,other2,somebody
这样是不是就能实现抄送呢？这样会造成死循环，呵呵。
看样子似乎只能通过pipe到程序实现了，看procmail、maildrop的文档还不够头疼的。其实还有个简单的方法，就是 .forward 文件。
.forward 文件位于用户的 home 下面，权限是 600 。他的功能和 /etc/aliases 文件类似，不过是 aliases 文件只能由root用户来修改，而 .forward 文件用户自己就可以修改。除了上面aliases能做到的事情外，他还多了一个功能，就是标题要求的功能。
按照标题的要求，只需要在 somebody 用户的 .forward 文件中放入下面的内容就可以了。
\\somebody
other1
other2
要注意 somebody 前面的那个\，就是用来防止转发死循环的。加了\之后，给somebody转发的时候会忽略该用户的 .</description>
    </item>
    
  </channel>
</rss>