<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache on wd and cc</title>
    <link>https://wdicc.com/tags/apache/atom/index.xml</link>
    <description>Recent content in Apache on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://wdicc.com/tags/apache/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Apache优化之KeepAlive</title>
      <link>https://wdicc.com/apache-keepalive/</link>
      <pubDate>Fri, 05 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-keepalive/</guid>
      <description>KeepAlive是在HTTP/1.1中定义的，用来保持客户机和服务器的长连接，执子之手与子偕老。通过减少建立TCP Session的次数来提高性能。常用的配置参数有{KeepAlive, KeepAliveTimeout, MaxKeepAliveRequests}。逐个说来：KeepAlive是决定开启KeepAlive支持；KeepAliveTimeout决定一 个KeepAlive的连接能保持多少时间，Timeout就尽快shutdown链接，若还有数据必须再建立新的连接 了；MaxKeepAliveRequests于KeepAliveTimeout相似，意思是服务多少个请求就shutdown连接。看个例子：&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
   KeepAliveTimeout 5&lt;/pre&gt;
意思是说，打开KeepAlive，每个连接只保持5秒就中断。

对于KeepAlive的配置需要慎重，错误的参数可能导致严重的性能问题。一个高负载的Server，如果建立的很多长连接将无法继续服 务新的连接。因此需要根据server的性质调整KeepAliveTimeout或是MaxKeepAliveRequests的值。

例如：你的网页上有三幅图画2个外部javascript，他们都存放在你自己的server上。因此将 MaxKeepAliveRequests设置为7比较合适。3幅图2个js各一个link，网页本身一个link，还有firefox传说中的 favicon.ico。当然还是要有KeepAliveTimeout的。如果客户机用了该死的IE并且设置了某个该死的选项，IE是不会向服务器发送 HEAD请求查看图片（或是其他资源）是否过期的，而是直接使用本地图片。这个时候服务器是不会计算Request的(因为压根就没有Request 嘛)。再如果只有MaxKeepAliveRequests参数，服务器会默认等待5秒才结束KeepAlive连接。通常这5秒可能玩死一个高负载的服 务器(所以说这个社会需要闪婚...)。因此打开Firefox，启动Firebug，看看你的站究竟需要多少次请求，再决定KeepAlive吧。
</description>
    </item>
    
    <item>
      <title>awstats 如何统计以前的日志？</title>
      <link>https://wdicc.com/awstats-log/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awstats-log/</guid>
      <description>突然想安装一个awstats了，参考 &lt;a href=&#34;http://www.chedong.com/tech/awstats.html&#34;&gt;车东&lt;/a&gt; 的文章，安装了一个。可是发现一个问题，设置了logfile为 access_log.%YYYY-24%MM-24%DD-24.log 之后，发现只能把昨天的日志统计进来，可是我的log下面还有好多呢，想统计以前的，怎么弄呢？幸好，awstats已经考虑到这个问题了。&lt;br /&gt;

awstats.pl 脚本支持在命令行指定logfile，这样简单了，改变这个参数就可以了。不过要注意的是，如果你的data里面已经处理新的日志，那么指定logfile也没用了，以前的没办法更新进来了。只能是删掉data里面的内容，然后重新从最早的开始生成一遍。我写了一个脚本来做这个事情。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

awstats_dir=/opt/tt2/awstats/wwwroot/cgi-bin
logfile_dir=&#34;/usr/local/apache/logs/&#34;

cd $awstats_dir

for file in `find $logfile_dir -name &#34;access_log.2*&#34; | sort`;do
        #echo &#34;$file&#34;
        ./awstats.pl －update -config=wd -LogFile=$file
done&lt;/pre&gt;

保存为 awstats.sh ，然后执行就可以了。他会查找 logfile_dir 下面所有的 access_log.2 开头的文件，作为参数来更新记录。
</description>
    </item>
    
    <item>
      <title>给apache加了一个compress模块，mod_deflate</title>
      <link>https://wdicc.com/compress-apache/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/compress-apache/</guid>
      <description>apache 1.3 里面有个压缩模块叫做 mod_gzip ，不支持 2.x。在2.x 里面有一个 &lt;a href=&#34;http://httpd.apache.org/docs/2.0/mod/mod_deflate.html&#34;&gt;mod_deflate&lt;/a&gt; 模块，也是类似的效果。想使用的话，很简单，编译的时候加上 --enable-deflate 就可以了。之后可以用 apachectl -l  看是不是正常加载了这个模块。&lt;br /&gt;

httpd.conf 添加下面的语句&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;

对所有指定类似的文件都应用这个模块。添加之后访问看看。

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
203.86.x.x - - [02/Apr/2007:15:24:23 +0800] &#34;GET / HTTP/1.1&#34; 200 &lt;font color=&#34;#FF0000&#34;&gt;4718&lt;/font&gt; &#34;-&#34; 
&#34;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.3) 
Gecko/20070309 Firefox/2.0.0.3&#34;

203.86.x.x - - [02/Apr/2007:15:46:16 +0800] &#34;GET / HTTP/1.1&#34; 200 &lt;font color=&#34;#FF0000&#34;&gt;1684&lt;/font&gt; &#34;-&#34; 
&#34;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.3) 
Gecko/20070309 irefox/2.0.0.3&#34;&lt;/pre&gt;

好像是小了。。。

如果error.log 里面出现了下面的错误
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;

 这表示apache的那个模块没有安装正确。
</description>
    </item>
    
    <item>
      <title>tomcat和apache桥接</title>
      <link>https://wdicc.com/tomcat-apache-bridge/</link>
      <pubDate>Wed, 23 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/tomcat-apache-bridge/</guid>
      <description>1 下载，安装tomcat，jdk和mod_jk&lt;br /&gt;

下载jdk  &lt;a href=&#34;http://java.sun.com/javase/downloads/index.jsp&#34;&gt;http://java.sun.com/javase/downloads/index.jsp&lt;/a&gt;&lt;br /&gt;
tomcat 5.5 需要jre 1.5才可以。下载之后是一个bin文件&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$chmod +x xx.bin
$./xx.bin&lt;/pre&gt;

他会将jdk解压到当前目录下面，然后作一个链接
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

以后访问jdk文件夹即可，此处我们用JAVA_HOME来表示jdk文件夹的路径。

下载tomcat &lt;a href=&#34;http://tomcat.apache.org/download-55.cgi&#34;&gt;http://tomcat.apache.org/download-55.cgi&lt;/a&gt;
下载 Core 那个版本就可以，下载之后解压，选择放置地方之后，做一个链接
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

以后访问tomcat文件夹即可，此处我们用TOMCAT_HOME来表示tomcat的安装路径。

下载 mod_jk ，这个是用来完成apache和tomcat桥接的模块，&lt;a href=&#34;http://www.apache.org/dist/tomcat/tomcat-connectors/jk/&#34;&gt; http://www.apache.org/dist/tomcat/tomcat-connectors/jk/&lt;/a&gt; 。
可以下载已经编译好的模块，不过要注意要和自己的apache版本对应才行。也可以下载source自己编译，这里我们自己编译。

下载source之后，解压，进入解压后的目录，然后
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$./configure --with-apxs=/usr/local/apache/bin/apxs #后面是apxs的目录
也可以
$./configure --with-apache=/usr/local/apache #apache的目录
$make
&lt;/pre&gt;&lt;br /&gt;
编译完成之后，复制桥接模块到apache的modules目录&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

2 配置

jdk的环境需要配置一个系统变量JAVA_HOME，可以写到/etc/profile中，或者修改tomcat的启动停止脚本来设置java环境也可以（这
</description>
    </item>
    
    <item>
      <title>apache的rewrite一点配置心得</title>
      <link>https://wdicc.com/apache-rewrite/</link>
      <pubDate>Wed, 14 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-rewrite/</guid>
      <description>apache这里有一些奇怪的日志。&lt;br /&gt;

&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;211.90.119.118 - - [12/Apr/2006:00:00:12 +0800] &#34;GET http://abc.com.cn/www/x.jsp HTTP/1.1&#34; 200 2994 &#34;-&#34; &#34;SEC-schx639 UP.Browser/4.1.26l&#34;&lt;/span&gt;&lt;br /&gt;

通常GET这里都是“/www/x.jsp”的，可是这个是怎么产生的呢？通过浏览器访问http://abc.com.cn/http://abc.com.cn/www/x.jsp，也不能产生这种请求，后来查看apache手册，这个引号里面表示的是“请求的第一条信息”，google了一下才知道，可以用下面的方式产生这种日志。&lt;br /&gt;

&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;telnet abc.com.cn 80&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;GET http://abc.com.cn/www/x.jsp HTTP/1.1&lt;/span&gt;&lt;br /&gt;

&lt;br&gt;&lt;!--more--&gt;这样看来，这个请求应该是不正确的，“get /www/x.jsp HTTP/1.1”才对。这个请求被转发给weblogic之后，weblogic会处理不了，因为他会去找“http://abc.com.cn/http://abc.com.cn/www/x.jsp”这个文件，显然是找不到的。&lt;br /&gt;

不过幸好，weblogic有个PathTrim设置，将请求路径种的“http://abc.com.cn”给他去掉就可以了。&lt;br /&gt;

&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;&amp;lt;IfModule mod_weblogic.c&amp;gt;&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;WebLogicHost 192.168.0.252&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;WebLogicPort 7050&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;PathTrim http://abc.com.cn&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;MatchExpression *.jsp&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;&lt;br /&gt;

问题似乎解决了。不过此后又发现我们的域名不止这一个，还有def.com.cn和dfg.com.cn，解决方法似乎也很简单，多添加几个PathTrim呗，但是此后你就会发现，weblogic似乎比较弱智，只有最后一个PathTrim设置会生效……，查看了weblogic的文档也没有找到解决方法，他那里也没有说可以写几个。&lt;br /&gt;

这样就需要从apache这里解决，幸好apache这里还有虚拟主机。针对各个域名分别配置几个虚拟主机，建立基于域名的虚拟主机。文档可以参考&lt;a href=&#34;http://www.douzhe.com/apm/ApacheManual/zh-cn/vhosts/name-based.html&#34;&gt;这里&lt;/a&gt;&amp;nbsp; 。&lt;br /&gt;

需要注意的是，基于域名的虚拟主机配置好之后，如果用虚拟主机里面没有的域名访问的时候，他会去匹配第一个虚拟主机，同样，用ip访问也会如此。&lt;br /&gt;

当一个请求到达的时候，服务器会首先检查它是否使用了一个能和 NameVirtualHost相匹配的IP地址。如果能够匹配， 它就会查找每个与这个IP地址相对应的&amp;lt;VirtualHost&amp;gt;配置段， 并尝试找出一个ServerName或ServerAlias配置项与请求的主机名相同的。 如果找到了，它就会使用这个服务器的配置。 否则，将使用符合这个IP地址的第一个列出的虚拟主机。&lt;br /&gt;

配置好虚拟主机之后，上面的问题就解决了。接着就发现有些终端不能正常访问业务了。查看全局的配置，有些rewrite rule的配置，想当然认为虚拟主机会继承全局设置。其实不是这样的，全局的对虚拟主机的没有任何影响。还需要在虚拟主机中单独设置。&lt;br /&gt;

&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteEngine on&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteLog /usr/local/apache/apache_rewrite_log.log&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteLogLevel 2&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteRule&amp;nbsp; xx&lt;/span&gt;&lt;br /&gt;

建议加上log的设置，这样可以很好的检查rewrite有没有起作用。此外，也一定要加上RewriteEngine on，否则任何rewrite rule都不会起作用。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>weblogic的“Too many open files”错和apache的“CONNECTION_REFUSED”错</title>
      <link>https://wdicc.com/too-many-open-files/</link>
      <pubDate>Tue, 30 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/too-many-open-files/</guid>
      <description>weblogic和apache桥接之后，访问量大的时候，遇到了weblogic报下面的错误：&lt;br /&gt;

&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;####&lt;2006-5-30 ÏÂÎç12Ê±38·Ö19Ãë CST&gt; &lt;Notice&gt; &lt;WebLogicServer&gt; &lt;myapp.vivaful.com&gt; &lt;myserver&gt; &lt;ListenThread.Default&gt; &lt;&lt;WLS Ke&lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;rnel&gt;&gt; &lt;&gt; &lt;BEA-000205&gt; &lt;After having failed to listen, the server is now listening on port 7001.&gt; &lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;####&lt;2006-5-30 ÏÂÎç12Ê±38·Ö19Ãë CST&gt; &lt;Critical&gt; &lt;WebLogicServer&gt; &lt;myapp.vivaful.com&gt; &lt;myserver&gt; &lt;ListenThread.Default&gt; &lt;&lt;WLS &lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;Kernel&gt;&gt; &lt;&gt; &lt;BEA-000204&gt; &lt;Failed to listen on port 7001, failure count: 1, failing for 0 seconds, java.net.SocketException: T&lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;oo many open files&gt; &lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;####&lt;2006-5-30 ÏÂÎç12Ê±38·Ö20Ãë CST&gt; &lt;Notice&gt; &lt;WebLogicServer&gt; &lt;myapp.vivaful.com&gt; &lt;myserver&gt; &lt;ListenThread.Default&gt; &lt;&lt;WLS Ke&lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;rnel&gt;&gt; &lt;&gt; &lt;BEA-000205&gt; &lt;After having failed to listen, the server is now listening on port 7001.&gt; &lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;####&lt;2006-5-30 ÏÂÎç12Ê±38·Ö20Ãë CST&gt; &lt;Critical&gt; &lt;WebLogicServer&gt; &lt;myapp.vivaful.com&gt; &lt;myserver&gt; &lt;ListenThread.Default&gt; &lt;&lt;WLS &lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;Kernel&gt;&gt; &lt;&gt; &lt;BEA-000204&gt; &lt;Failed to listen on port 7001, failure count: 1, failing for 0 seconds, java.net.SocketException: T&lt;/span&gt;&lt;br style=&#34;color: rgb(255, 0, 0)&#34; /&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;oo many open files&gt; &lt;/span&gt;&lt;br /&gt;
&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;&lt;/span&gt;&lt;br /&gt;
weblogic产生这个错误以后，就会拒绝服务，这时通过IE已经访问不了了。所以接下来就会出现apache报下面的错误：&lt;br /&gt;

&lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;[Tue May 30 13:00:57 2006] [error] CONNECTION_REFUSED [os error=0, line 1600 of ../nsapi/URL.cpp]: 218.206.70.193:7001 errno= 0&lt;br /&gt;
&lt;/span&gt;&lt;br&gt;&lt;!--more--&gt;这时访问apache会提示和weblogic的桥出了问题。&lt;br /&gt;

这个问题已经遇到很多次了，但通常都是夜间，第二天查看日志的时候，会发现那个时候确实访问量比较大。查看当时的连接情况可以看到，apache和java连接都700多。看了网上的说明，调整了系统参数、调整了weblogic的设置等，都不见效。&lt;br /&gt;
http://www.bea.com.cn/support_pattern/Too_Many_Open_Files_Pattern.html&lt;br /&gt;
http://e-docs.bea.com/wls/docs81/perform/index.html&lt;br /&gt;

今天又出现这个情况了，不过是白天，和web应用的作者一起对weblogic的情况进行了观察。&lt;br /&gt;

通过weblogic控制台，可以看到&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_ServicedRequestTotalCount_label&#34;&gt;Throughput这里大都是在处理1左右的访问，&lt;/span&gt;&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_PendingRequestCurrentCount_label&#34;&gt;Queue Length这里却在不停的涨，开始就对&lt;/span&gt;&lt;a href=&#34;http://218.206.70.193:7001/console/actions/mbean/ListMBeansAction?wl_sort_domain_ExecuteQueueTable_config=0300&amp;reloadNav=false&amp;tab=config&amp;MBeanClassName=weblogic.management.configuration.ExecuteQueueMBean&amp;MBeanClass=weblogic.management.configuration.ExecuteQueueMBean&amp;scopeMBean=anymusic%3AName%3Dmyserver%2CType%3DServer&#34;&gt;&lt;span class=&#34;column-header&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;T&lt;/span&gt;hread  count做了修改，从50调整到了400，但是还是可以看到Thread会用完，一会&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_PendingRequestCurrentCount_label&#34;&gt;Queue Length就又涨起来了。&lt;br /&gt;

分析一下就可以知道，情况应该是Queue的线程对访问的处理速度太慢，导致需要处理的队列越来越多。需要处理队列的增长速度比队列的处理速度慢，这样不管有多少线程，肯定最后都会导致不够用。&lt;br /&gt;

现在大家就开始考虑问题是不是出在应用这里了，应用执行速度慢，weblogic线程就会一直占着，就会导致线程用尽。而实际上确实是应用这里的问题。&lt;br /&gt;

应用对访问的处理速度很快，有访问进来就先放到队列，而队列的处理速度却是500ms处理一下，这样一秒也就处理2个。这样问题的原因就很明确了，1s内外部访问应用可能有10来次，而应用才处理2个，所以自然会将线程占满了。&lt;br /&gt;

调整队列处理速度之后问题就解决了，空闲线程一直是400。&lt;/span&gt;&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_PendingRequestCurrentCount_label&#34;&gt;&lt;/span&gt;&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>