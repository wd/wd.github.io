<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debug on wd and cc</title><link>https://wdicc.com/tags/debug/</link><description>Recent content in Debug on wd and cc</description><generator>Hugo</generator><language>en</language><copyright>wd © 2025</copyright><lastBuildDate>Mon, 29 Apr 2019 14:41:12 +0800</lastBuildDate><atom:link href="https://wdicc.com/tags/debug/atom.xml" rel="self" type="application/rss+xml"/><item><title>Debuging Django</title><link>https://wdicc.com/debuging-django/</link><pubDate>Mon, 29 Apr 2019 14:41:12 +0800</pubDate><guid>https://wdicc.com/debuging-django/</guid><description>&lt;p&gt;起初 hackernews 看到一个文章 &lt;a href="https://news.ycombinator.com/item?id=19717786"&gt;PySnooper: Never use print for debugging again&lt;/a&gt;，觉得挺有意思的，结果把 hackernews 的讨论看了一下发现有意思东西更多一点，总结一下。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/cool-RR/pysnooper"&gt;PySnooper&lt;/a&gt;: Never use print for debugging again，只需要给函数加一个装饰器，就可以把函数执行的每一步的结果都打印出来。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://django-extensions.readthedocs.io/en/latest/runserver_plus.html"&gt;django-extensions&lt;/a&gt; 的 runserver-plus 配合 &lt;a href="https://werkzeug.palletsprojects.com/en/0.15.x/debug/#using-the-debugger"&gt;Werkzeug&lt;/a&gt; 可以实现在遇到异常的时候，支持在 web 上面调试代码，打印异常的时候的上下文内容什么的。&lt;/li&gt;
&lt;li&gt;Python 自己的 &lt;a href="https://docs.python.org/3/library/functions.html#breakpoint"&gt;breakpoint&lt;/a&gt; 函数，执行到的时候默认会进入 pdb.set_trace() 状态方便你进行上下文调试。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gruns/icecream"&gt;icecream&lt;/a&gt; 提供了一个方便的 ic 函数，可以无感的加入到你的代码里面，不影响你的代码的执行结果，但是会打印传给它的参数和执行结果。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robdmc/behold"&gt;Behold&lt;/a&gt;: A debugging tool for large Python projects，可以替代你写冗长的打印命令。不过感觉它自己的语法似乎也并不方便。。。&lt;/li&gt;
&lt;li&gt;VS Code 提供的 &lt;a href="https://code.visualstudio.com/docs/editor/debugging#_logpoints"&gt;Logpoints&lt;/a&gt; 和 Visual Studio 提供的 &lt;a href="https://docs.microsoft.com/en-us/visualstudio/debugger/using-breakpoints?view=vs-2019#BKMK_set_a_data_breakpoint_managed"&gt;Break When Value Changes&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cknd/stackprinter"&gt;stackprinter&lt;/a&gt; 可以让你的堆栈打印更友好，打印堆栈的时候还可以输出上下文的取值。&lt;/li&gt;
&lt;li&gt;pdb, epdb，ipdb, 应该都是类似的东西，其中 pdb 是自带的。通过给代码增加 import ipdb ipdb.set_trace() 调试。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tylerwince/pydbg"&gt;pydbg&lt;/a&gt; 替代 print 的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
另外&lt;a href="https://stribny.name/blog/2019/06/debugging-python-programs"&gt;一篇文章&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>