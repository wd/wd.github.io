---
title: "An Interesting Python Function"
date: 2019-08-07T16:53:09+08:00
tags: ["python"]
toc: true
---

[[https://pythontips.com/2019/07/30/python-mind-teaser-make-the-function-return-true/][这里]]看到的，感觉挺有意思的，记录一下。题目来自[[https://www.reddit.com/r/Python/comments/cje5yh/short_python_challenge_make_this_return_true/][这里]]。

如何让下面这个函数返回 =True= ？

#+BEGIN_SRC python
def check(x):
    if x+1 is 1+x:
        return False
    if x+2 is not 2+x:
        return True
#+END_SRC

** 解法1: 自定义类

#+BEGIN_SRC python
def check(x):
    if x+1 is 1+x:
        return False
    if x+2 is not 2+x:
        return False
    return True

class Test(int):
    def __add__(self, v):
        if v == 1:
            return 0
        else:
            return v

print(check(Test()))
# output: True
#+END_SRC

如果一个对象是在 =+= 的左侧，那会调用 =__add__= ，如果在右侧，会调用 =__radd__= 。上面的 =Test= 类继承自 int，重写了其中的 =__add__= 方法，但是保留了 =__radd__= ，所以上面的例子里面， =Test()+1= 会返回 0， =1+test()= 会返回 1。 =Test()+2= 会返回 2， =2+Test()= 也会返回 2。

** 解法2:特殊的整数

#+BEGIN_SRC python
def check(x):
    if x+1 is 1+x:
        return False
    if x+2 is not 2+x:
        return False
    return True

print(check(-7))
# output: True
#+END_SRC

只有 =-7= 可以。python 里面对于 =-5 - 256= 这些整数会提前生成，这些都是单例。所以 =-7+1 is 1-7= 是 =False= ，以及 =-7+2 is not 2-7= 是 =False= ，两个 if 条件都不成立。

