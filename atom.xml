<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on wd and cc</title>
    <link>https://wdicc.com/</link>
    <description>Recent content in Home on wd and cc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 28 Aug 2019 17:32:36 +0800</lastBuildDate>
    
        <atom:link href="https://wdicc.com/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Book Review of Soft Skills</title>
      <link>https://wdicc.com/book-review-of-soft-skills/</link>
      <pubDate>Wed, 28 Aug 2019 17:32:36 +0800</pubDate>
      
      <guid>https://wdicc.com/book-review-of-soft-skills/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
改变自己对自己的看法
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;
你所能犯的最大错误就是相信自己是在为别人工作。这样一来你对工作的安全感已然尽失。职业发展的驱动力一定是来自个体本身。记住：工作是属于公司的，而职业生涯却是属于你自己的。
&lt;/p&gt;
&lt;p&gt;
把雇主当作是你的软件开发企业的一个客户吧。当然，你可能只有这么一个客户，你所有的收入都是从这一个客户处得来的，但是这种诠释雇用关系的方式可以将你从仰人鼻息的弱势地位转换成为自我治理和自我引导的主动地位。（事实上，许多真正的公司也就只有一个大客户，这个客户给它带来了大部分的收入。）
&lt;/p&gt;
&lt;p&gt;
企业需要持续不断地改进和完善自己的产品。你也应该这么做。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
关于职业的部分，作者主要的论点是就是这个。就是把你自己当作一个公司来思考问题，你去一个公司去工作不过是和这个公司合作而已，这样你就不局限于思考自己能做什么呢了，毕竟一个公司能做什么的想象力就大多了。
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
人们常常容易犯的一项错误就是，轻率地否决同事的想法，以便于可以提出自己的想法
&lt;/p&gt;
&lt;p&gt;
如果你想激励他人做出最好的表现，或者希望达到改变的目的，你必须学会管住自己的舌头，只说些鼓励的话。 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
关于和其他人打交道需要注意的问题。
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
专业化的规则是：专业化程度越深，潜在的机会就越少，但获得这些机会的可能性越大。 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
专业知识往深了学习会遇到这个问题。往广了学会导致深度不够，但是机会增多很多，不过竞争肯定也多。
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
中等规模的公司往往要比大公司还稳定
&lt;/p&gt;
&lt;p&gt;
在任何公司里能让你脱颖而出的最重要法宝就是承担更多的责任。
&lt;/p&gt;
&lt;p&gt;
在任何组织中，总是有很多人会告诉你为什么这个想法行不通，为什么那个问题太难。这样的人不胜枚举。千万不要成为他们中的一员。相反，你要成为那个永远能为各种问题找到解决方案的人，要成为勇于执行这些解决方案以获得成果的人。
&lt;/p&gt;
&lt;p&gt;
一位专业人士需要知道在什么时候说“不”，即使是面对自己的老板。
&lt;/p&gt;
&lt;p&gt;
许多软件开发人员犯的一个巨大错误就是，当无法达到标准时，他们不是完善自己、迎接挑战，而是降低标准。 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
这个非常认同，勇于承担责任，并且确实可以承担责任的人，一般公司都喜欢。
&lt;/p&gt;
&lt;p&gt;
做提出问题的人很难得，但是如果远远不如解决问题的人，永远都尝试去做解决问题的人。
&lt;/p&gt;
&lt;p&gt;
做专业人士，不要轻易降低自己的标准，勇于挑战，这样才能快速提升。
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
同时也要现实一些。仔细想想自己还能维持多久，自己能做些什么来维持更久。你要制订一个计划：什么时候你就得认怂，重新做回雇员。 
&lt;/p&gt;
&lt;p&gt;
为自己当老板做好准备
&lt;/p&gt;
&lt;p&gt;
获得客户的最佳方式是通过你已经认识的人。熟悉你的人更容易信任你，特别是在启动阶段。 
&lt;/p&gt;
&lt;p&gt;
你的目标应该是让自己达到这样一个点：你为这份副业分配的时间已经饱和，无法再接受其他工作，不得不回绝掉一些人。如果你在做兼职工作的时候做不到这一点，那你就不要想着去做全职了。 
&lt;/p&gt;
&lt;p&gt;
成为了自由职业者之后，你的时薪水平应该是作为全职雇员时的两倍 
&lt;/p&gt;
&lt;p&gt;
如果你的营销策略是基于自己的服务可以为客户节省大笔开支或者提高他们的业务，你就可以根据自己的服务为客户带来的价值来定价。
&lt;/p&gt;
&lt;p&gt;
价值来自于为对方做了什么，而不是做了什么。 
&lt;/p&gt;
&lt;p&gt;
不断给你的收费加码，直到你听到“不行”为止。 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
这段是如何开始准备自己给自己干，以及如何给自己定价。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
创业
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;
在为产品找到客户之前就构建好产品。否则你只是冒险为一个不存在的问题创造了一个解决方案
&lt;/p&gt;
&lt;p&gt;
没有要解决的问题的产品毫无意义，毫无意义的产品自然也就不会有用户，也就意味着你不会赚到钱。
&lt;/p&gt;
&lt;p&gt;
许多创业公司的创始人发现，把股权出让后给不思进取的合伙人后，自己就面临一个大烂摊子，后者不仅对公司毫无贡献，还榨取公司的宝贵资产。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
创业之前需要考虑好的问题。只有真的有实际价值的产品，才会有人给你买单。
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
在你的电子邮件签名的底部以及所有的在线个人主页中添加你的博客链接
&lt;/p&gt;
&lt;p&gt;
当你营销自己的时候，如果你所做的一切都只是为了自己的利益而不给别人带来真正的价值，那么即使你所做的都正确无误，那也无济于事。你可以写博客、在社交媒体上分享自己的内容、在大会发言、著书立说，尽你所能来推广自己，但是，如果你表达的和你传递的信息不能帮到其他人，那么每个人都将会无视你。
&lt;/p&gt;
&lt;p&gt;
人们最关心的还是自己。没人想听到你的成功故事，也不想知道为什么他们要帮你获得成功，但是他们肯定想听到你会怎样帮他们获得成功。所以，要想让自我营销的所有努力奏效，基本的方法就是帮助他人获得成功。
&lt;/p&gt;
&lt;p&gt;
Zig Ziglar说得好：“如果你能帮助足够多的人们得到他们想要的东西，你就会得到自己想要的东西。”这是一个基本的策略，你应该将其用于自我营销。它比其他任何方法都更有效。
&lt;/p&gt;
&lt;p&gt;
你的主要目标：为他人增加价值不要努力成为一个成功的人，而要努力成为一个有价值的人。  ——阿尔伯特·爱因斯坦
&lt;/p&gt;
&lt;p&gt;
想给人们想要的东西，要先知道他们想要什么。但是这并非易事，因为如果你问他们，他们可能会撒谎。他们并非故意撒谎，而是他们也只有一个模糊的概念，并不确切地知道自己想要什么。就像新娘在找心目中的完美婚纱时，只有切实看到了才会知道“这就是我想要的”。
&lt;/p&gt;
&lt;p&gt;
想要弄明白他们的真实想法，你得全凭自己。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
学会以及要能不要脸皮的自我营销。以及你的东西需要真的是会给客户带来价值，至于什么是有价值，可能客户自己不知道，你也不知道，这些需要你去把握。总之一定要让自己做的事情对客户真的有价值，否则必定不能长久。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
生产力
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;
定额工作法的规则
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
挑选一项重复性任务。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
明确有效时限，在此期间该任务被重复执行。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
明确在给定的有效时限内该任务应该完成的次数的定额。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
给自己承诺：一定要达成定额。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
调整。调高或者调低定额，但是不能在有效时间段之内调整。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
现在我用批量处理的方式处理邮件。每天我会检查几次自己的电子邮件，并回复紧急邮件。但总的来说，我会在一天中找个单独的时间集中处理所有的电子邮件。我会一次性浏览我的整个收件箱，并处理所有邮件。因为不再被其他任务打扰，我可以进入了“电子邮件模式”，在这种模式下我处理邮件的速度比一直打开收件箱的时候快很多，所以我的效率高很多。
&lt;/p&gt;
&lt;p&gt;
如果能咬紧牙关坚持到底，如果能穿越那堵墙战胜自己，最终你会发现，简单地无视它的存在，你的倦怠感已经不治而愈。
&lt;/p&gt;
&lt;p&gt;
经历痛苦就是克服倦怠的秘诀。你以后还会撞到更多的墙，但每穿越它一次，你将会体验到全新的动力、充沛的活力。另外，你的竞争者的数量会越来越少。
&lt;/p&gt;
&lt;p&gt;
生产力的真正秘诀在于：长期坚持做一些小事。
&lt;/p&gt;
&lt;p&gt;
个能够帮助你克服拖延的提高生产力的窍门：分解任务。
&lt;/p&gt;
&lt;p&gt;
最可怕的效率杀手之一——无所作为
&lt;/p&gt;
&lt;p&gt;
我们经常试图耗费300%的努力寻找95分的解决方案，而不是满足于找到90分的解决方案
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
这个是定额工作法，以及番茄工作法，我理解主要的目的是为了能让你持之以恒以及可以更加专注的去做一些事情。
&lt;/p&gt;
&lt;p&gt;
一个大的任务或者一个长期的任务开始的时候总是会很痛苦，因为觉得难，坚持不下来什么的。通过设置定额，或者拆分成番茄钟，可以让这个事情变小，把大目标先改成完成这个小目标，这样会比较容易开始，以及比较容易坚持。
&lt;/p&gt;
&lt;p&gt;
一旦开始之后，如果发现这样的小目标也无法坚持，那可以试着把这个任务继续拆小，直到自己可以承受。这样很多困难，持续时间长的任务就可以持续下去了。即使做再少，也比无所作为强是不是？
&lt;/p&gt;
&lt;p&gt;
另外，把时间分成番茄钟小段，还可以让你更加专注，这样可以更加方便的安排事情，比如每四个番茄钟看一下邮件，每 5 个番茄钟奖励自己看看社交媒体放松一下什么的。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
目标
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;
当你的“被动收入”达到每月所需的生活开销的时候，你就可以正式退休了。所谓被动收入，就是不用工作就能获得的收入。你必须确保被动收入会随着通货膨胀而增加
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
这个就是作者在 20 岁左右的时候定的目标。作者通过自己的努力，靠收房租，收稿费等在 30 多岁的时候达到了这个目标。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Coroutine</title>
      <link>https://wdicc.com/python-coroutine/</link>
      <pubDate>Tue, 27 Aug 2019 10:49:51 +0800</pubDate>
      
      <guid>https://wdicc.com/python-coroutine/</guid>
      <description>&lt;p&gt;
协程 coroutine 不知道是从什么时候开始的，感觉我第一次看到是 lua 里面支持 yield 。后面看到就是 javascript 里面的 Promise，async 和 await。
&lt;/p&gt;
&lt;p&gt;
以前写 Javascript 的时候容易会遇到 callback hell，似乎 Promise 就是出来解决这个问题的，让你可以用同步的方式写异步程序。例如你有三个异步请求可以同时发出去，而后面的结果又需要这三个的结果都回来才能继续，那就可以用类似下面的伪代码，整体执行时间是最长的那个。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;res1 &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;await&lt;/span&gt; test1
res2 &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;await&lt;/span&gt; test2
console.log(res1, res2)
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Python 里面似乎也类似。我目前理解主要就是让程序可以「同步」执行，但是又避免了需要维护锁的问题，没有锁就不会有死锁了吧。。。
&lt;/p&gt;
&lt;p&gt;
解释下同步，主要是针对对于 cpu 资源的占用。对于计算型的程序，实际上每时每刻都在利用 cpu 做计算，这样就算把计算拆分成了多个计算程序，让他们同时运行，那同一时刻还是只有一个程序在利用 cpu 资源执行，这样并行实际并不能提升效率。所以对于纯计算型任务，可以通过多进程利用多个 cpu。
&lt;/p&gt;
&lt;p&gt;
但是实际我们的程序执行的时候，并不全是 cpu 计算，有时候会需要等网络 io，文件 io 等，做这些事情的时候实际上 cpu 是空闲的。协程就是让这些程序在等待的时候，把控制权交出来，让其他程序运行。那个 &lt;code&gt;yield&lt;/code&gt; 关键字就是做这个事情的， &lt;code&gt;yield&lt;/code&gt; 很像 &lt;code&gt;return&lt;/code&gt; ，遇到的时候就会返回，暂停程序的执行，等到适当的时候又可以从暂停的地方继续执行。
&lt;/p&gt;
&lt;p&gt;
以前是使用 &lt;code&gt;@asyncio.coroutine&lt;/code&gt; 和 &lt;code&gt;yield from&lt;/code&gt; 来创建协程，似乎 3.10 之后那个装饰器就要被废弃了，替代使用 &lt;code&gt;async/await&lt;/code&gt; 来创建，直接替换就可以。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@asyncio.coroutine&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;old_style_coroutine&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;yield&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;asyncio.sleep&lt;/span&gt;(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;main&lt;/span&gt;():
    await old_style_coroutine()&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Python 的&lt;a href=&#34;https://docs.python.org/zh-cn/3/library/asyncio-task.html&#34;&gt;协程文档&lt;/a&gt;提供了一些例子，摘取一些。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;asyncio&lt;/span&gt;

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;test&lt;/span&gt;():
    asynio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)

asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;run(test())&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
定义这样的 &lt;code&gt;test&lt;/code&gt; 函数叫做 &lt;code class=&#34;verbatim&#34;&gt;协程函数&lt;/code&gt; ， &lt;code&gt;test()&lt;/code&gt; 返回的叫做 &lt;code class=&#34;verbatim&#34;&gt;协程对象&lt;/code&gt; ，和普通函数不一样， &lt;code&gt;test()&lt;/code&gt; 并不会执行这个函数，需要使用协程相关的命令才行，例如 &lt;code&gt;asyncio.run(test())&lt;/code&gt; 。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;asyncio&lt;/span&gt;

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;nested&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;started&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;42&lt;/span&gt;

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;main&lt;/span&gt;():
    &lt;span style=&#34;color:#888&#34;&gt;# Schedule nested() to run soon concurrently&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# with &amp;#34;main()&amp;#34;.&lt;/span&gt;
    task &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;create_task(nested())

    &lt;span style=&#34;color:#888&#34;&gt;# &amp;#34;task&amp;#34; can now be used to cancel &amp;#34;nested()&amp;#34;, or&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# can simply be awaited to wait until it is complete:&lt;/span&gt;
    await asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;5&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;after sleep&amp;#39;&lt;/span&gt;)
    await task
asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;run(main())&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
类似这个例子， &lt;code&gt;nested&lt;/code&gt; 这个函数实际是在 task 赋值的时候就开始执行了。但是在等到了 &lt;code&gt;await task&lt;/code&gt; 才获取他的结果。当然如果那个 &lt;code&gt;nested&lt;/code&gt; 执行时间比较长，那等到了 await 语句的时候，会等他执行完毕才继续。
&lt;/p&gt;
&lt;p&gt;
这个和那个 javascript 的简单例子就比较像了，整体执行时间就是长的那个，就是并行的感觉。 &lt;code&gt;asyncio&lt;/code&gt; 还提供了 &lt;code&gt;asyncio.gather()&lt;/code&gt; ，提供了方便的方法把并行的任务绑定在一起，
&lt;/p&gt;
&lt;p&gt;
使用 asyncio 的话，协程里面执行的东西也需要是协程友好的，如果执行原始的阻塞的代码，那这部分代码无法并行。比如把上面的代码修改一下。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;asyncio&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; time, sleep

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;nested&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;started&amp;#39;&lt;/span&gt;)
    sleep(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;after 1s&amp;#39;&lt;/span&gt;)
    await asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;42&lt;/span&gt;

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;main&lt;/span&gt;():
    &lt;span style=&#34;color:#888&#34;&gt;# Schedule nested() to run soon concurrently&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# with &amp;#34;main()&amp;#34;.&lt;/span&gt;
    task &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;create_task(nested())

    &lt;span style=&#34;color:#888&#34;&gt;# &amp;#34;task&amp;#34; can now be used to cancel &amp;#34;nested()&amp;#34;, or&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# can simply be awaited to wait until it is complete:&lt;/span&gt;
    await asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;gather(asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;5&lt;/span&gt;), task)

start &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; time()
asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;run(main())
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(time() &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; start)

&lt;span style=&#34;color:#888&#34;&gt;# started&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# after 1s&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# 6.005960941314697&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
可以看到输出，是 6 秒，本身按照前面说的，最长的协程时间应该是 5 秒的，但是整体执行了 6 秒，因为其中 &lt;code&gt;sleep(1)&lt;/code&gt; 这一秒执行的时候其他协程无法执行。摘抄文档里面的说明。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;不应该直接调用阻塞( CPU 绑定)代码。例如，如果一个函数执行1秒的 CPU 密集型计算，那么所有并发异步任务和 IO 操作都将延迟1秒。
可以使用执行器在不同的线程甚至不同的进程中运行任务，以避免使用事件循环阻塞OS线程。有关详细信息，请参见 loop.run_in_executor() 方法。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
所以就有一堆的 &lt;code&gt;asyncio.xx&lt;/code&gt; 出现了，比如 &lt;code&gt;asyncio.open_connection&lt;/code&gt;, &lt;code&gt;asyncio.Lock&lt;/code&gt;, &lt;code&gt;asyncio.create_subprocess_shell&lt;/code&gt;, &lt;code&gt;asyncio.Queue&lt;/code&gt; 等。下面这个是一个 &lt;code&gt;Queue&lt;/code&gt; 的例子。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;asyncio&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;random&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;time&lt;/span&gt;


async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;worker&lt;/span&gt;(name, queue):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;while&lt;/span&gt; True:
        &lt;span style=&#34;color:#888&#34;&gt;# Get a &amp;#34;work item&amp;#34; out of the queue.&lt;/span&gt;
        sleep_for &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; await queue&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;get()

        &lt;span style=&#34;color:#888&#34;&gt;# Sleep for the &amp;#34;sleep_for&amp;#34; seconds.&lt;/span&gt;
        await asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;sleep(sleep_for)

        &lt;span style=&#34;color:#888&#34;&gt;# Notify the queue that the &amp;#34;work item&amp;#34; has been processed.&lt;/span&gt;
        queue&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;task_done()

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{name} has slept for {sleep_for:.2f} seconds&amp;#39;&lt;/span&gt;)


async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;main&lt;/span&gt;():
    &lt;span style=&#34;color:#888&#34;&gt;# Create a queue that we will use to store our &amp;#34;workload&amp;#34;.&lt;/span&gt;
    queue &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Queue()

    &lt;span style=&#34;color:#888&#34;&gt;# Generate random timings and put them into the queue.&lt;/span&gt;
    total_sleep_time &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;20&lt;/span&gt;):
        sleep_for &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;uniform(&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0.05&lt;/span&gt;, &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;1.0&lt;/span&gt;)
        total_sleep_time &lt;span style=&#34;color:#333&#34;&gt;+=&lt;/span&gt; sleep_for
        queue&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;put_nowait(sleep_for)

    &lt;span style=&#34;color:#888&#34;&gt;# Create three worker tasks to process the queue concurrently.&lt;/span&gt;
    tasks &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;3&lt;/span&gt;):
        task &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;create_task(worker(f&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;worker-{i}&amp;#39;&lt;/span&gt;, queue))
        tasks&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;append(task)

    &lt;span style=&#34;color:#888&#34;&gt;# Wait until the queue is fully processed.&lt;/span&gt;
    started_at &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;monotonic()
    await queue&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;join()
    total_slept_for &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; time&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;monotonic() &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; started_at

    &lt;span style=&#34;color:#888&#34;&gt;# Cancel our worker tasks.&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; task &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; tasks:
        task&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;cancel()
    &lt;span style=&#34;color:#888&#34;&gt;# Wait until all worker tasks are cancelled.&lt;/span&gt;
    await asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;gather(&lt;span style=&#34;color:#333&#34;&gt;*&lt;/span&gt;tasks, return_exceptions&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True)

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;====&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;3 workers slept in parallel for {total_slept_for:.2f} seconds&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;total expected sleep time: {total_sleep_time:.2f} seconds&amp;#39;&lt;/span&gt;)


asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;run(main())&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这里面需要注意的是 &lt;code&gt;task&lt;/code&gt; 赋值的时候，实际 worker 就开始运行了。接下来会程序会在 &lt;code&gt;await queue.join()&lt;/code&gt; 等待队列都标记为 &lt;code&gt;queue.task_done()&lt;/code&gt; ，这个标记动作完全是你的程序自己控制的，如果消耗了一个队列元素，但是标记了 2 次，那会发现队列没有执行完毕就会令 &lt;code&gt;await queue.join()&lt;/code&gt; 执行完毕。在已有的 queue 都消耗完毕之后，所有的 worker 都会等待在 &lt;code&gt;sleep_for = await queue.get()&lt;/code&gt; ，所以 &lt;code&gt;queue.join&lt;/code&gt; 之后还需要执行 &lt;code&gt;task.cancel&lt;/code&gt; 取消任务的继续执行。要注意 &lt;code&gt;task.cancel&lt;/code&gt; 语句执行也是异步的，也并不是执行完毕任务就会结束了，相当于只是请求任务取消，还需要去用 &lt;code&gt;await task&lt;/code&gt; 来确认是真的取消了。
&lt;/p&gt;
&lt;p&gt;
asyncio 的核心是事件循环 loop，可以通过 &lt;code&gt;asyncio.get_event_loop()&lt;/code&gt; 来获取当前 loop，然后通过 &lt;code&gt;loop.run_until_complete(future)&lt;/code&gt; 这样的命令来执行协程。以及还有一些 &lt;code&gt;loop.xxx&lt;/code&gt; 方法来创建任务和管理协程。这些似乎是 low level api，一般不用。
&lt;/p&gt;
&lt;p&gt;
low level api 还有一个 Future，说是 Task 的父类，更底层。感觉 Future 可以用来联系多个协程用的。对于 &lt;code&gt;await future&lt;/code&gt; 语句，只有 &lt;code&gt;future.set_result()&lt;/code&gt; 被调用的时候才会继续执行。这样比如有多个协程要执行，其中有些又有依赖，那就可以创建一个 feture，然后在被依赖的协程里面计算完毕的时候，执行 future.set_result() ，然后依赖他的协程里面 await future 就会获取到执行结果，也就可以继续执行了。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;set_after&lt;/span&gt;(fut, delay, value):
    &lt;span style=&#34;color:#888&#34;&gt;# Sleep for *delay* seconds.&lt;/span&gt;
    await asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;sleep(delay)

    &lt;span style=&#34;color:#888&#34;&gt;# Set *value* as a result of *fut* Future.&lt;/span&gt;
    fut&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;set_result(value)

async &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;main&lt;/span&gt;():
    &lt;span style=&#34;color:#888&#34;&gt;# Get the current event loop.&lt;/span&gt;
    loop &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;get_running_loop()

    &lt;span style=&#34;color:#888&#34;&gt;# Create a new Future object.&lt;/span&gt;
    fut &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; loop&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;create_future()

    &lt;span style=&#34;color:#888&#34;&gt;# Run &amp;#34;set_after()&amp;#34; coroutine in a parallel Task.&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# We are using the low-level &amp;#34;loop.create_task()&amp;#34; API here because&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# we already have a reference to the event loop at hand.&lt;/span&gt;
    &lt;span style=&#34;color:#888&#34;&gt;# Otherwise we could have just used &amp;#34;asyncio.create_task()&amp;#34;.&lt;/span&gt;
    task &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; loop&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;create_task(
        set_after(fut, &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;... world&amp;#39;&lt;/span&gt;))

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;hello ...&amp;#39;&lt;/span&gt;)
    await task

    &lt;span style=&#34;color:#888&#34;&gt;# Wait until *fut* has a result (1 second) and print it.&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(await fut)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
上面这个例子是把文档里面改了一下，那个 task 里面会执行 fut.set_result，如果去掉这句，await task 是可以执行完毕的，但是 await fut 就会一直等待了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Book Review of Effective Python: 59 Specific Ways to Write Better Python</title>
      <link>https://wdicc.com/book-review-of-effective-python/</link>
      <pubDate>Mon, 26 Aug 2019 09:53:26 +0800</pubDate>
      
      <guid>https://wdicc.com/book-review-of-effective-python/</guid>
      <description>
&lt;p&gt;
书名是《Effective Python：编写高质量 Python 代码的 59 个方法》这本书买了大概 2 年，一直没看完，前几天找了一些时间看完了。
&lt;/p&gt;
&lt;p&gt;
这书是针对中级 Python 程序员的，里面没有对于语法什么的讲解，也没有对 c 代码实现的讲解，针对中级程序员。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
用 Python 方式来思考
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Python 3 里面包含两种表示字符串的类型：bytes 和 str。前者是二进制形式，后者是 Unicode 编码（比如使用 utf8）之后的形式。想要把 bytes 表示为 str 形式，需要使用 &lt;code class=&#34;verbatim&#34;&gt;decode&lt;/code&gt; ，反之是 &lt;code class=&#34;verbatim&#34;&gt;encode&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
切割列表的时候，start 和 end 可以越界，这样可以用来限制列表最大长度。 &lt;code&gt;a=[0,1,2]; a[:10]&lt;/code&gt; 可以限制最大是 10 个。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
可以使用列表推导式 &lt;code&gt;[x*2 for x in a]&lt;/code&gt; 类似这样的形式，代替 &lt;code&gt;map&lt;/code&gt; 和 &lt;code&gt;filter&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
字典推导 &lt;code&gt;{k: v for k, v in a.items()}&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
把列表推导式的表达式放到 &lt;code&gt;()&lt;/code&gt; 里面就会产生生成器。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;enumerate&lt;/code&gt; 可以把各种迭代器包装成生成器。迭代的时候可以同时返回列表索引。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;zip&lt;/code&gt; 函数可以同时遍历多个迭代器，这样可以相对优雅一点同时遍历一些平行列表。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
try/except/else/finally 里面，try 如果出现异常会执行 except 里面的内容，如果没有异常会执行 else 的内容，finally 总是会执行。合理使用可以把逻辑处理的更好，比如 try 里面放需要处理异常的代码，else 里面放如果出现异常就往上传播的代码。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
函数
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
函数在遇到特殊情况的时候，应该抛出异常，而不要返回 None。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
闭包（closure）是一种定义在某个作用域中的函数，这种函数引用了那个作用域里面的变量。闭包和普通/匿名函数的区别？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
闭包里面可以使用 &lt;code&gt;nonlocal&lt;/code&gt; 语句来声明想要修改闭包外的作用域中的变量，类似 &lt;code&gt;global&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
考虑使用生成器来改写直接返回列表的函数，不过要注意生成器只能迭代一次。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;for x in foo&lt;/code&gt; 这样的语句，实际会调用 &lt;code&gt;iter(foo)&lt;/code&gt; ，内置的 &lt;code&gt;iter&lt;/code&gt; 会调用 &lt;code&gt;foo.__iter__&lt;/code&gt; 这个方法，这个方法必须返回迭代器对象，那个迭代器会实现 &lt;code&gt;__next__&lt;/code&gt; 方法。for 循环会在迭代器上面反复调用 next 方法，直到耗尽产生 &lt;code&gt;StopIteration&lt;/code&gt; 异常。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
函数定义上面，使用 &lt;code&gt;*args&lt;/code&gt; 这样的形式可以把所有的位置参数都吞掉。类似的 &lt;code&gt;**kwargs&lt;/code&gt; 可以把所有命名/关键字参数都吞掉。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
函数参数越加越多的时候，增加的时候可以使用关键字参数，要不光看一个函数调用也不知道各个参数都是干嘛的。尤其以后增加减少参数的时候很不方便。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
函数参数的默认值只会在程序加载模块并读到本函数定义的时候评估一次，对于 &lt;code&gt;{}, []&lt;/code&gt; 这样的值，会总是使用同一个引用。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
可是使用 &lt;code&gt;*&lt;/code&gt; 做参数表示位置参数的终结。例如 &lt;code&gt;func(a, b, *, c=1, d=2)&lt;/code&gt; 这样的函数，调用的时候 &lt;code&gt;func(1,2,3)&lt;/code&gt; 这样会提示需要 2 个位置参数，给了 3 个这样的异常。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
类与继承
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;Collections&lt;/code&gt; 模块里面提供了 &lt;code&gt;namedtuple&lt;/code&gt; 可以给每个数据的属性定义名字，比单纯的通过数字索引的列表和元组好。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
保存内部状态的字典如果变得比较复杂，那就应该把这些代码拆解成辅助类。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
可以使用 &lt;code&gt;Collections&lt;/code&gt; 模块的 &lt;code&gt;defaultdict&lt;/code&gt; 给字典设置默认值。比如我们想要统计一下字母出现的次数 &lt;code&gt;count={}&lt;/code&gt; ，那在循环的时候想要给一个字典添加新的 &lt;code&gt;count[&amp;#39;a&amp;#39;]+=1&lt;/code&gt; ，这个时候必须要先判断下这个 &lt;code&gt;count[&amp;#39;a&amp;#39;]&lt;/code&gt; 是不是已经有了，而不能直接增加。使用 defaultdict 可以这样 &lt;code&gt;count=defaultdict(func, {})&lt;/code&gt; 这样。 &lt;code&gt;func&lt;/code&gt; 可以是一个用来产生默认值的函数，比如这里可是用 &lt;code&gt;int&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
我们可以在一个类的 &lt;code&gt;@classmethod&lt;/code&gt; 方法里面初始化一个类，使用 &lt;code&gt;cls(args)&lt;/code&gt; 来实例化这个对象。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
总是使用内置的 super 来初始化父类。 &lt;code&gt;object&lt;/code&gt; 这个父类实际上也应该需要初始化。 &lt;code&gt;super(__class__, self).__init__(*args, **kwargs)&lt;/code&gt; or &lt;code&gt;super().__init__(*args, **kwargs)&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
能使用 mix-in 组件实现的效果，就不要用多重继承。把功能实现为可拔插的 mix-in 组件，然后令相关的类继承自己需要的那些组件，即可定制该类实例所应具备的行为。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
多用 public 属性。单个下划线开头的字段，应该视为 protected 字段，双下划线开头的字段是 private 字段。多用 protected 字段，并在文档里面说清这些字段的合理用法，不要使用 private 属性来限制子类访问。只有当子类不受控制的时候，才考虑使用 private 属性来避免名称冲突。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
编写自己的容器类型的时候，可以继承 &lt;code&gt;collections.abc&lt;/code&gt; 模块中的基类。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
元类及属性
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
可以使用 &lt;code&gt;@property&lt;/code&gt; 来定义 getter， &lt;code&gt;@xxxx.setter&lt;/code&gt; 来定义 setter。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
程序每次访问对象的属性的时候 &lt;code&gt;__getattribute__&lt;/code&gt; 都会被调用，即使属性字典里面已经有了这个属性。 &lt;code&gt;__getattr__&lt;/code&gt; 只在属性字典里面没有的时候才调用。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如果要在 &lt;code&gt;__getattribute__&lt;/code&gt; 和 &lt;code&gt;__setattr__&lt;/code&gt; 方法里面访问实例属性，应该通过 &lt;code&gt;super()&lt;/code&gt; 来做，避免无限递归。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
元类定义 &lt;code&gt;def __new__(meta, name, bases, clas_dict)&lt;/code&gt; 可以获取类的几个属性：meta 元类本身，name 类的名字，bases 类继承的所有父类，class_dict 是类的属性字典。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
python 把子类的整个 class 语句体处理完毕之后，就会调用元类的 &lt;code&gt;__new__&lt;/code&gt; 方法。这个阶段还没有执行任何的子类的代码，也没有创建实例，这个时候可以对子类做一些修改，或者记录工作。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
并发并行
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
可以给 subprocess 模块的 communicate 方法传入 timetout 参数，避免程序长时间未相应。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Python 采用 GIL(global interpreter lock) 机制保证同一时刻只有一条线程可以向前执行。GIL 实际就是一把互斥锁(mutual-exclusion lock, mutex)，用以防止 CPython 受到占先式多线程切换(preemptive multithreading) 操作的干扰。GIL 会使得 Python 代码无法并行，但是对于系统调用却不影响，执行系统调用的时候会释放 GIL，直到执行完毕。这样可以在执行 I/O 操作的同时，执行一些运算操作。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
GIL 并不会处理程序逻辑上面的数据安全，如果需要避免线程竞争导致的数据破坏，那需要自己加锁，可是使用 Lock 类。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Queue 类具备阻塞式的队列操作，能够指定缓冲区大小，还支持 join 方法，可以方便的实现队列。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
线程启动时的开销比较大，可以使用协程(coroutine) 。使用协程可以让程序看似并行执行，而又避免了多线程需要处理锁的麻烦。（描述可能有误）
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
对于密集计算型程序，可以使用多进程来跑多个 CPU。使用 &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; 替代 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; ，multiprocessing 模块会使用 pickle 把数据库序列化，通过 locl socket 发送到子进程。还可以使用 multiprocessing 提供的高级机制，例如共享内存(shared memory)，跨进程锁(cross-process lock)，队列(queue)，代理(proxy)等实现自己的逻辑。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
内置模块
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
使用 functools.wraps 装饰自己写的装饰器。会保留 &lt;code&gt;__doc__&lt;/code&gt;, &lt;code&gt;__name__&lt;/code&gt;, &lt;code&gt;__module__&lt;/code&gt; 等属性。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
内置的 contextlib 模块实现了 contextmanager 的装饰器，可是使用他来实现支持 with 语句的函数。 &lt;code&gt;try: yield sth; finally: expr;&lt;/code&gt; sth 可以赋值给 &lt;code&gt;with xxx as yyy&lt;/code&gt; 的 yyy。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 copyreg.pickle 可以定义 pickle 执行反序列化的时候执行的函数。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用内置的算法和数据结构：collections 模块的 &lt;code&gt;deque&lt;/code&gt; 类，实现双向队列。使用 &lt;code&gt;OrderedDict&lt;/code&gt; 实现有序字典。使用 &lt;code&gt;defaultdict&lt;/code&gt; 实现带有默认值的字典。使用 &lt;code&gt;heapq&lt;/code&gt; 把普通列表变成堆结构。使用 &lt;code&gt;bisect&lt;/code&gt; 模块做二分查找。 &lt;code&gt;itertools&lt;/code&gt; 模块提供了很多迭代器相关的函数，比如可以在不迭代的情况下，切割迭代器之类（实际我理解就是包了一个其他函数返回新的迭代器，不过总是比自己包一个省点事情）。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
重视精度的情况下，应该使用 &lt;code&gt;decimal&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
协作开发
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
应该为模块，类，函数各自编写文档，可是使用内置的 &lt;code&gt;doctest&lt;/code&gt; 模块运行 &lt;code&gt;docstring&lt;/code&gt; 中的范例代码。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
用包来安排模块，并提供稳固的 API。把对外接可见的名称放到一个 &lt;code&gt;__all__&lt;/code&gt; 属性里面，然后把一些比如 utils.py 里面的函数也放到包的 &lt;code&gt;__init__.py&lt;/code&gt; 里面统一对外提供，这样以后即使包内部目录结构变化什么的也不会对对外的 API 发生影响。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
为自己编写的模块定义根异常，让这个模块抛出的其他异常都继承这个。有几个好处。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
调用者能清楚的知道调用代码是否正确，因为如果有错误会抛出异常。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
调用者如果遇到了根异常之外的异常，那么可能是因为 API 作者的程序 bug 导致没有处理好这些异常，如果 API 作者处理好了这些异常，那么就不应该抛出本模块之外的异常。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
有了根异常，可以在未来基于根异常来添加更加详细的异常，而对于那些之前捕获根异常的用户来说没有影响，但是新的用户可以更加精细的处理异常。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
部署
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
考虑在模块级别的代码里面适配不同的部署环境。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
通过 repr 字符串来输出调试信息。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 pdb 调试，一些 pdb 命令需要掌握：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
bt: 打印当前调试点的调用栈。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
up: 把调试范围沿着调用栈往上一层。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
down: 把调试范围沿着调用栈往下一层。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
step: 执行当前这条代码后，移动到下一条可执行语句暂停。如果是函数调用，会进入那个函数。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
next: 执行当前这行代码后，移动到下一条可执行语句暂停。如果是函数调用，会调用那个函数。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
return: 继续运行程序，直到当前函数执行完毕。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
continue: 继续运行程序，直到下一个断点。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 profile 和 cProfile 来分析程序性能，尽量使用 cProfile。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 tracemalloc 来掌握内存的使用和泄漏情况。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
其他整理
&lt;/h2&gt;
&lt;p&gt;
Python 类的特殊属性：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__doc__&lt;/code&gt;: 文档字符串。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__name__&lt;/code&gt;: 对象名字。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__module__&lt;/code&gt;: 对象模块信息。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__class__&lt;/code&gt;: 类名称。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__dict__&lt;/code&gt;: 返回实例的属性字典。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__bases__&lt;/code&gt;: 父类列表。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__qualname__&lt;/code&gt;: 带类定义&amp;#39;路径&amp;#39;的名称。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__slots__&lt;/code&gt;: 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Python 类的特殊方法：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__iter__&lt;/code&gt;: 返回一个生成器，可以允许一个对象的实例支持迭代。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__call__&lt;/code&gt;: 直接调用一个对象的实例的时候会执行这个。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__len__&lt;/code&gt;: 支持 &lt;code&gt;len(obj)&lt;/code&gt; 函数。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__getitem__&lt;/code&gt;: 支持 &lt;code&gt;bar[0]&lt;/code&gt; 这样的方式索引。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__set__&lt;/code&gt;: 描述符协议，支持赋值语句。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__get__&lt;/code&gt;: 描述符协议，支持读取。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__getattr__&lt;/code&gt;: 读取某个对象的属性的时候，属性字典里面没有的时候调用。 &lt;code&gt;setattr&lt;/code&gt; 可以给对象增加属性。 &lt;code&gt;hasattr&lt;/code&gt; 可以判断是否有这个属性。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__setattr__&lt;/code&gt;: 对属性赋值的时候会调用，无论是直接赋值还是通过 &lt;code&gt;setattr&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__new__&lt;/code&gt;: 初始化一个对象的时候，在 &lt;code&gt;__init__&lt;/code&gt; 之前执行。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__init__&lt;/code&gt;: 初始化一个对象的时候，在 &lt;code&gt;__new__&lt;/code&gt; 之后执行。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__enter__&lt;/code&gt;:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__exit__&lt;/code&gt;:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__repr__&lt;/code&gt;: 返回对象的可打印字符串，对应格式化字符串里面的 &lt;code&gt;%r&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__str__&lt;/code&gt;: 返回对象的字符串表示，对应格式化字符串里面的 &lt;code&gt;%s&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__contains__&lt;/code&gt;:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;__reversed__&lt;/code&gt;: 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
发现全列出来太天真了，太多了，&lt;a href=&#34;https://docs.python.org/3/reference/datamodel.html#special-method-names&#34;&gt;这里文档里面&lt;/a&gt;有列一些，不过也不是全部，就不多写了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get Wool From Dogs</title>
      <link>https://wdicc.com/get-wool-from-dogs/</link>
      <pubDate>Tue, 20 Aug 2019 10:04:56 +0800</pubDate>
      
      <guid>https://wdicc.com/get-wool-from-dogs/</guid>
      <description>&lt;p&gt;
不知道羊毛出在狗身上怎么翻译的好，暂时先说成 get wool from dogs 了。今天的内容可能会有点文不对题。
&lt;/p&gt;
&lt;p&gt;
也不知道是什么人第一个发明的这个事情，但是不少人通过这个确实发达了一波。
&lt;/p&gt;
&lt;p&gt;
互联网大量内容是免费的，这简直就是公理了。出来一个收费的服务大家会说傻子才付钱。我之前去一个外包公司他们用 phpldap 搭了一个服务，然后人家后台有一个广告说让大家捐款支持下，当然这个不是强制的。那个搭建服务器的台湾人说不会给捐款的，而他们实际是使用这个开源免费的工具来代替原来的一个收费服务的。
&lt;/p&gt;
&lt;p&gt;
后来时间长了慢慢大家明白了，原来不付钱是有代价的，会失去自己的隐私和注意力。商家为了赚钱页面上面放满了广告，甚至有的广告你都不知道他是广告。百度被人骂不就是偷偷的把广告推给你么，使用百度搜索是免费的。
&lt;/p&gt;
&lt;p&gt;
第一波共享单车出来的时候，感觉这事情很不可思议，单车那么容易丢失和损坏，骑一次才 5 毛一块的，损失一辆就几百，在这个车不能骑或者丢失前似乎不太可能把这个成本赚回来，更别说还有其他其他开发运营成本。后来才明白，人家看上的是你的押金。大量的押金存放到他们那里，这些都是灰色的地带，OFO 不是挪用押金后面被挤兑导致很难过么。
&lt;/p&gt;
&lt;p&gt;
共享单车搞了这么一波之后，聪明人搞起来了 p2p，你想赚人家高额利息，人家实际看上的是你的本金。发财也轮不到你。
&lt;/p&gt;
&lt;p&gt;
淘宝一开始开店是免费的，靠这个把 ebay 搞死了，要知道 ebay 可比淘宝早，ebay 的模式是从交易里面抽成或者收服务费，而淘宝完全免费。那淘宝也不能就这么一直不赚钱啊，利用用户的注意力靠广告赚商家的钱，有线电视你每个月交了钱还需要看广告呢，别说淘宝都不用你交钱。
&lt;/p&gt;
&lt;p&gt;
现在呢，淘宝把其他网店平台干死之后，淘宝推他的天猫商城了，小店主很难赚钱了已经，再也不是一开始的样子了。天猫上面开店是需要交几千上万的保证金的。
&lt;/p&gt;
&lt;p&gt;
京东上面东西方便吧，上午下单了晚上可能就到了，几十快钱就包邮。基于巨大的采购量，一方面可以压低进货成本，另一方面呢加上他们自己的快递包邮网络，成本低送货上门，甚至比楼下超市都方便啊。现在京东涨包邮起价了，你习惯之后是不是还是在京东买？不得不这样啊，因为楼下的超市已经死了。一个快递员上午送一趟下午送一趟，可能有几千个包裹？如果这里面每个快递费 6 圆，怎么样是不是很赚钱？
&lt;/p&gt;
&lt;p&gt;
OFO 挪用押金之后，现在共享单车似乎都不收押金了，那怎么活下去？这不是活雷锋了么。一方面涨价，原来摩拜 1 小时 5 毛，现在 15 分钟 1 块。涨了 8 倍？别慌还有呢，如果车没有停在他们划定的区域，还有一个调度费，5 - 10 圆，是不是挺有意思的。
&lt;/p&gt;
&lt;p&gt;
商业公司永远都是要赚钱的，如果现在还有公司出来说不以赚钱为目的，那最好别用。等你有了依赖估计就是他们的羔羊了。如果一个服务你享用的挺好，那根据自己能力和需要付费支持让他们可以持续运行是很好的一个事情。
&lt;/p&gt;
&lt;p&gt;
当然，大家付费意愿起来之后，现在又有一波人还是觉得不够，你看那么多订阅制的软件。不过怎么说呢，反正人家也确实可能还是需要花精力做后续的一些事情的，愿不愿意付费还是看你了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emacs as Python IDE Again</title>
      <link>https://wdicc.com/emacs-as-python-ide-again/</link>
      <pubDate>Tue, 13 Aug 2019 14:56:02 +0800</pubDate>
      
      <guid>https://wdicc.com/emacs-as-python-ide-again/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://wdicc.com/emacs-as-python-ide/&#34;&gt;上一篇&lt;/a&gt;里面说了使用 emacs 编辑 python 文件的方式，已经过去 2 年了，时代变了。更新一下。
&lt;/p&gt;
&lt;p&gt;
随着 vscode 横空出世，带来了 LSP，这个东西是所有编辑器都可以受益的，有人开发了 lsp-mode，目前我感觉 lsp 比 jedi 好用多了。
&lt;/p&gt;
&lt;p&gt;
elpy 目前还不支持 lsp。所以放弃了 elpy 了。
&lt;/p&gt;
&lt;p&gt;
主要配置如下。使用了 &lt;code class=&#34;verbatim&#34;&gt;lsp-python-ms&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;lsp-mode&lt;/code&gt;, &lt;code class=&#34;verbatim&#34;&gt;pipenv&lt;/code&gt; 。我原来用 pyenv + virtualvenv，pipenv 是把两个整合的东西。pipenv 还支持 lock，以后估计会流行吧。
&lt;/p&gt;
&lt;div class=&#34;src src-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;use-package&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp-python-ms&lt;/span&gt;
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;t&lt;/span&gt;
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:demand&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;nil&lt;/span&gt;
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:config&lt;/span&gt;

  &lt;span style=&#34;color:#888&#34;&gt;;;(setq lsp-python-ms-extra-paths &amp;#34;&amp;#34;)&lt;/span&gt;
  (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;setq&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp-python-ms-executable&lt;/span&gt;
        (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;string-trim&lt;/span&gt; (&lt;span style=&#34;color:#963&#34;&gt;shell-command-to-string&lt;/span&gt;
                      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;find ~/.vscode/extensions/ -name &amp;#39;Microsoft.Python.LanguageServer&amp;#39; | sort | tail -1&amp;#34;&lt;/span&gt;)))
  &lt;span style=&#34;color:#888&#34;&gt;;; for dev build of language server&lt;/span&gt;
  (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;setq&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp-python-ms-dir&lt;/span&gt;
        (&lt;span style=&#34;color:#963&#34;&gt;file-name-directory&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp-python-ms-executable&lt;/span&gt;)))


(&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;use-package&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp-mode&lt;/span&gt;
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;t&lt;/span&gt;
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:commands&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp&lt;/span&gt;
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:hook&lt;/span&gt;  (&lt;span style=&#34;color:#963&#34;&gt;python-mode&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt; (&lt;span style=&#34;color:#007020&#34;&gt;lambda&lt;/span&gt; ()
                          (&lt;span style=&#34;color:#963&#34;&gt;pipenv-activate&lt;/span&gt;)
                          (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;&amp;#39;lsp-python-ms&lt;/span&gt;)
                          (&lt;span style=&#34;color:#963&#34;&gt;lsp&lt;/span&gt;)))
  &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:config&lt;/span&gt;

  (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;setq&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;lsp-auto-configure&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;nil&lt;/span&gt;)

  (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;use-package&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;pipenv&lt;/span&gt;
    &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;t&lt;/span&gt;
    &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:init&lt;/span&gt;
    (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;setq&lt;/span&gt;
     &lt;span style=&#34;color:#963&#34;&gt;pipenv-projectile-after-switch-function&lt;/span&gt;
     &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;#&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;pipenv-projectile-after-switch-extended&lt;/span&gt;))

  (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;use-package&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;company-lsp&lt;/span&gt;
    &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;t&lt;/span&gt;
    &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:config&lt;/span&gt;
    (&lt;span style=&#34;color:#963&#34;&gt;add-to-list&lt;/span&gt; &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;&amp;#39;company-backends&lt;/span&gt; &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;&amp;#39;company-lsp&lt;/span&gt;)
    )
)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
lsp server 实际上有好几个，不过我觉得微软的那个似乎比较好用。 &lt;code class=&#34;verbatim&#34;&gt;lsp-python-ms&lt;/code&gt; 是使用了微软的 lsp server，你可以自己编译一个，也可以直接使用 vscode 里面的，这样省去了自己编译的麻烦。
&lt;/p&gt;
&lt;p&gt;
lsp-mode 自带使用那个 lsp-ui 来显示一些信息我感觉很慢不好用，所以通过 &lt;code class=&#34;verbatim&#34;&gt;lsp-auto-configure&lt;/code&gt; 把他禁用了，我弄了一下也没有办法让这货和 &lt;code class=&#34;verbatim&#34;&gt;flycheck-flake8&lt;/code&gt; 一起好好工作，我还是喜欢 flake8 所以就这样了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run Command Through Python</title>
      <link>https://wdicc.com/run-command-through-python/</link>
      <pubDate>Tue, 13 Aug 2019 14:53:34 +0800</pubDate>
      
      <guid>https://wdicc.com/run-command-through-python/</guid>
      <description>&lt;p&gt;
通过 python 执行命令有很多方法。
&lt;/p&gt;
&lt;p&gt;
最简单的 &lt;code class=&#34;verbatim&#34;&gt;os.system(command)&lt;/code&gt; , command 是要执行的命令，一个包括命令和参数的字符串。产生的输出会直接打印到 stdout 。返回值是命令执行的退出值。
&lt;/p&gt;
&lt;p&gt;
然后就是 &lt;code class=&#34;verbatim&#34;&gt;os.spawn*&lt;/code&gt; ，这个我感觉有点丧心病狂了。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnl(mode, path, …)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnle(mode, path, …, env)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnlp(mode, file, …)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnlpe(mode, file, …, env)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnv(mode, path, args)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnve(mode, path, args, env)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnvp(mode, file, args)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
os.spawnvpe(mode, file, args, env)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
这些主要是命令输入的方式，和环境变量的控制不一样， &lt;code class=&#34;verbatim&#34;&gt;l&lt;/code&gt; 是类似 os.spawnlp(os.P_WAIT, &lt;code class=&#34;verbatim&#34;&gt;&amp;#39;cp&amp;#39;, &amp;#39;cp&amp;#39;, &amp;#39;index.html&amp;#39;, &amp;#39;/dev/null&amp;#39;&lt;/code&gt; ) 这样的模式设置命令, &lt;code class=&#34;verbatim&#34;&gt;v&lt;/code&gt; 是类似 os.spawnvp(os.P_WAIT, &amp;#39;cp&amp;#39;, &lt;code class=&#34;verbatim&#34;&gt;[&amp;#39;cp&amp;#39;, &amp;#39;index.html&amp;#39;, &amp;#39;/dev/null&amp;#39;]&lt;/code&gt; ) 这样的模式。 &lt;code class=&#34;verbatim&#34;&gt;l&lt;/code&gt; 适合命令参数固定的模式， &lt;code class=&#34;verbatim&#34;&gt;v&lt;/code&gt; 适合不固定的。
&lt;/p&gt;
&lt;p&gt;
带 &lt;code class=&#34;verbatim&#34;&gt;p&lt;/code&gt; 的会使用 &lt;code class=&#34;verbatim&#34;&gt;PATH&lt;/code&gt; 环境变量来查找要执行的命令，要不你应该是需要使用命令的全路径。
&lt;/p&gt;
&lt;p&gt;
带 &lt;code class=&#34;verbatim&#34;&gt;e&lt;/code&gt; 的是可以设置额外的环境变量。
&lt;/p&gt;
&lt;p&gt;
然后是 &lt;code class=&#34;verbatim&#34;&gt;mode&lt;/code&gt; ，有两个， &lt;code class=&#34;verbatim&#34;&gt;P_NOWAIT&lt;/code&gt; 是类似后台执行命令，不会等命令执行完毕，会返回一个命令的 pid。 &lt;code class=&#34;verbatim&#34;&gt;P_WAIT&lt;/code&gt; 是等待命令执行完毕，返回命令的退出值，或者返回被 kill 发送的 singnal 。
&lt;/p&gt;
&lt;p&gt;
上面这些都没有输入输出什么事情，如果你想操作输入输出，那需要用后面的。
&lt;/p&gt;
&lt;p&gt;
然后就是 &lt;code class=&#34;verbatim&#34;&gt;subprocess&lt;/code&gt; 了，这个提供了很强的控制能力。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;subprocess.run&lt;/code&gt; 这个是执行之后等着命令完成之后返回 &lt;code class=&#34;verbatim&#34;&gt;subprocess.CompletedProcess&lt;/code&gt; 根据你对 run 的参数，可以得到命令的 stdout，退出值什么的。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;subprocess.Popen&lt;/code&gt; 这个可以说是最自由的了，应该可以说完全兼容上面的所有命令。有几个参数说明下。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;shell&lt;/code&gt; 会起一个 shell 在 shell 里面执行你的命令，这样 shell 的一些特性就可以使用了，比如 &lt;code class=&#34;verbatim&#34;&gt;&amp;amp;&lt;/code&gt; , &lt;code class=&#34;verbatim&#34;&gt;&amp;amp;&amp;gt;/dev/null&lt;/code&gt; 这些东西。是的，如果你不指定 &lt;code class=&#34;verbatim&#34;&gt;shell=True&lt;/code&gt; 那这些东西是没什么用的，比如并不能把 stdout 的内容重定向到一个文件。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;Popen()&lt;/code&gt; 这个语句执行的时候是不会等命令执行完毕的，如果需要等，那可以随后执行 &lt;code class=&#34;verbatim&#34;&gt;p.wait()&lt;/code&gt; 。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;stdout&lt;/code&gt; 可能会想捕获程序的输出来判断程序是不是正常执行，那你需要设置 stdout 这个参数为 &lt;code class=&#34;verbatim&#34;&gt;subprocess.PIPE&lt;/code&gt; 然后通过 &lt;code class=&#34;verbatim&#34;&gt;p.stdout&lt;/code&gt; 来得到输出。这个是个类似文件句柄的东西，可以使用 &lt;code class=&#34;verbatim&#34;&gt;read&lt;/code&gt; 来读取，但是使用的时候要注意，因为你的程序一直在运行，那 read 不会获取到 EOF，实际就会产生阻塞，一般可以通过类似 &lt;code class=&#34;verbatim&#34;&gt;read(111)&lt;/code&gt; 这样获取指定数量的内容，避免阻塞。另外还有一个，一旦你的程序退出，这个文件句柄就没有了，你的程序也会 crash 退出。
&lt;/p&gt;
&lt;p&gt;
如果想要程序一直运行，但是 python 脚本又不想一直运行，还想获取输出的内容怎么办？我找到的方法是写一个临时文件，写到文件的话退出 python 程序就不会对运行的程序有任何影响了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Interesting Python Function</title>
      <link>https://wdicc.com/an-interesting-python-function/</link>
      <pubDate>Wed, 07 Aug 2019 16:53:09 +0800</pubDate>
      
      <guid>https://wdicc.com/an-interesting-python-function/</guid>
      <description>
&lt;p&gt;
&lt;a href=&#34;https://pythontips.com/2019/07/30/python-mind-teaser-make-the-function-return-true/&#34;&gt;这里&lt;/a&gt;看到的，感觉挺有意思的，记录一下。题目来自&lt;a href=&#34;https://www.reddit.com/r/Python/comments/cje5yh/short_python_challenge_make_this_return_true/&#34;&gt;这里&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
如何让下面这个函数返回 &lt;code class=&#34;verbatim&#34;&gt;True&lt;/code&gt; ？
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;check&lt;/span&gt;(x):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;x:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;x:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; True&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
解法1: 自定义类
&lt;/h2&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;check&lt;/span&gt;(x):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;x:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;x:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; True

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Test&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;int&lt;/span&gt;):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __add__(self, v):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; v &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;:
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; v

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(check(Test()))
&lt;span style=&#34;color:#888&#34;&gt;# output: True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
如果一个对象是在 &lt;code class=&#34;verbatim&#34;&gt;+&lt;/code&gt; 的左侧，那会调用 &lt;code class=&#34;verbatim&#34;&gt;__add__&lt;/code&gt; ，如果在右侧，会调用 &lt;code class=&#34;verbatim&#34;&gt;__radd__&lt;/code&gt; 。上面的 &lt;code class=&#34;verbatim&#34;&gt;Test&lt;/code&gt; 类继承自 int，重写了其中的 &lt;code class=&#34;verbatim&#34;&gt;__add__&lt;/code&gt; 方法，但是保留了 &lt;code class=&#34;verbatim&#34;&gt;__radd__&lt;/code&gt; ，所以上面的例子里面， &lt;code class=&#34;verbatim&#34;&gt;Test()+1&lt;/code&gt; 会返回 0， &lt;code class=&#34;verbatim&#34;&gt;1+test()&lt;/code&gt; 会返回 1。 &lt;code class=&#34;verbatim&#34;&gt;Test()+2&lt;/code&gt; 会返回 2， &lt;code class=&#34;verbatim&#34;&gt;2+Test()&lt;/code&gt; 也会返回 2。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
解法2:特殊的整数
&lt;/h2&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;check&lt;/span&gt;(x):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;x:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;x:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; True

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(check(&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;7&lt;/span&gt;))
&lt;span style=&#34;color:#888&#34;&gt;# output: True&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
只有 &lt;code class=&#34;verbatim&#34;&gt;-7&lt;/code&gt; 可以。python 里面对于 &lt;code class=&#34;verbatim&#34;&gt;-5 - 256&lt;/code&gt; 这些整数会提前生成，这些都是单例。所以 &lt;code class=&#34;verbatim&#34;&gt;-7+1 is 1-7&lt;/code&gt; 是 &lt;code class=&#34;verbatim&#34;&gt;False&lt;/code&gt; ，以及 &lt;code class=&#34;verbatim&#34;&gt;-7+2 is not 2-7&lt;/code&gt; 是 &lt;code class=&#34;verbatim&#34;&gt;False&lt;/code&gt; ，两个 if 条件都不成立。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Open an Company in China</title>
      <link>https://wdicc.com/how-to-open-an-company-in-china/</link>
      <pubDate>Wed, 07 Aug 2019 10:44:55 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-open-an-company-in-china/</guid>
      <description>
&lt;p&gt;
我记录一下国内开公司需要做的事情吧，有一些事情我没有参与，说的不一定准确，供参考。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
公司结构，类型和名称
&lt;/h2&gt;
&lt;p&gt;
第一步需要先确定公司的性质。有限责任公司，无限责任公司，合伙公司这些，需要先了解一下。
&lt;/p&gt;
&lt;p&gt;
国内目前不允许同股不同权，即所谓的 AB 股模式。那么为了控制公司的投票权，我们模仿了 VIE 模式，先创立一个合伙人企业 A，然后通过这个企业，控制实际做事情的企业 B。后续的融资也会都进入 B 那个企业，始终保证 A 是大股东。
&lt;/p&gt;
&lt;p&gt;
公司名称有时候会出现和别的公司冲突的情况，似乎类型不一样可能也可以，反正这里面很多无法量化的东西，似乎可能会有一些腐败漏洞，这个将来也会涉及到你申请商标的事情，冲突了也没法申请下来。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
公司注册和办公地点
&lt;/h2&gt;
&lt;p&gt;
确定公司模式之后需要确定公司注册地点。目前有一些地区对互联网创新什么的会有一些税收的减免政策，可以了解一下然后选一个合适的地方。营业执照上面是需要有一个办公地点的，所以也需要在当地有办公室。似乎有的地方可以提供注册地址给你用，你也不用真的去办公。
&lt;/p&gt;
&lt;p&gt;
要注意的是，将来各种工商税收什么的也会需要到当地去处理，所以也需要适当考虑距离的问题。当然，这些可能也可以委托一个当地的处理这些事情的公司帮你处理。比如一些代记账什么的公司。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
申请营业执照，开对公账户
&lt;/h2&gt;
&lt;p&gt;
上面的确定之后，这些事情估计就比较简单了，按照流程去办理一下就可以了。对于合伙人企业，似乎还需要所有人签订一些东西到工商那边备案，如果合伙人比较多，集齐签名可能会是个麻烦的事情。
&lt;/p&gt;
&lt;p&gt;
另外，只有合伙人公司先开了之后，才能申请实际做事情的公司的执照的。申请执照感觉可能会需要 1 个月左右吧，两个都下来需要一些时间。
&lt;/p&gt;
&lt;p&gt;
有了营业执照，很多以公司名义做的事情才可以做。比如以公司名义和别的公司签协议，转账，或者申请购买一些东西，这个下不来，后面很多事情都麻烦。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
真实办公地点，办公环境
&lt;/h2&gt;
&lt;p&gt;
真实的办公地点和营业执照的关系不大，这里主要需要解决的问题是，公司员工的社保缴纳问题。一般你是无法在非注册地做这个事情的，可以在实际办公地注册一个分公司做这个事情。但是目前也有很多代交社保的公司，一般是签订一个类似派遣协议什么的，然后来做这个事情。这个是灰色地带。
&lt;/p&gt;
&lt;p&gt;
你可以租一个写字楼的办公室，或者民居来做实际办公的地方，区别可能是价钱吧。不止房租，还会有网络，水电等的费用，商用和民用价格本身也不同。
&lt;/p&gt;
&lt;p&gt;
目前也有一些联合办公的地方，他们会把比如一层写字楼处理好，然后出租里面的工位，同时还可以给你网络水电，会议室，打印机等等，基本上是比较省事的方式。
&lt;/p&gt;
&lt;p&gt;
我们是从民居开始搞的，需要申请网络，买打印机（有一体机，包括传真，复印，扫描等），饮水机，投影仪（或者买一个大电视也可以），冰箱，微波炉（方便带饭）等等吧，还需要定期找人来打扫一下。
&lt;/p&gt;
&lt;p&gt;
此外可能还会需要弄一些安全的设备，防止小偷，毕竟电脑什么的加一起也不少钱。我买了一些小米的东西，比如开门警报，摄像头什么的。
&lt;/p&gt;
&lt;p&gt;
非技术人员基本就可以了。如果是技术人员办公的话，还会需要准备 gitlab 等这些东西，你可以使用 SASS 服务，现在也挺多的，可能会有一些费用，也可以自己搭建自己维护。如果自己搭建，那要不是需要现有服务器，要不就是自己买一个放在办公室里面。我自己买了一个 intel 的 NUC 放在办公室，充当拨号网关，和开发服务器，以及 gitlab 等各种公司内部服务的地方。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
工商税务人力
&lt;/h2&gt;
&lt;p&gt;
需要准备劳动合同。制定公司的规章制度，报销方式，各种假期补助等等各种琐事。
&lt;/p&gt;
&lt;p&gt;
还需要有会计和出纳管理公司的帐务，这个有一些专业的代理公司可以帮你做。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
招聘
&lt;/h2&gt;
&lt;p&gt;
各招聘网站以公司名义招聘的话，都需要公司营业执照。有了营业执照之后就可以去注册了。我印像比较好的是拉钩，好几个人都是那里招聘的。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
域名
&lt;/h2&gt;
&lt;p&gt;
不可避免的，一个公司必定会需要弄一个自己的域名。还可能会需要搞你自己产品使用的域名，为了保护自己，对于读音拼写相近的可能也需要申请一下，这个费用不贵。
&lt;/p&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
准备服务器
&lt;/h2&gt;
&lt;p&gt;
做 app 网站什么的，总是需要你有服务器，以前是自己买服务器托管到机房，现在可以直接使用云服务，比如阿里云青云这些，我们用的是 AWS。这些开户都需要你提供营业执照。费用和计费方法各不同，可以多看看比较下。推荐的做法是多机房多 ISP 容灾。比如可以 aws 和 aliyun 都有服务器，这样一边挂了也还可以提供服务。当然这里会涉及到一些技术问题。
&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
备案
&lt;/h2&gt;
&lt;p&gt;
想把域名和服务器对应起来，必须要先备案域名，否则提供给你服务器的地方可能根本就不会让你的服务上线。这个备案的事情比较麻烦，一般服务器提供商会提供协助你备案域名。
&lt;/p&gt;
&lt;p&gt;
这里其实就有一个问题，我还不知道有没有办法把一个域名指向两个不同的服务商。
&lt;/p&gt;
&lt;p&gt;
域名还需要到公安备案，这个取决于你提供的服务，如果有讨论区什么的，公安可能还会需要你过去当面聊聊，公安备案是需要你自己去提交的。
&lt;/p&gt;
&lt;p&gt;
备案之后自己的网帐就可以让别人访问到了。后面说 app 的事情。
&lt;/p&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
申请苹果开发帐号
&lt;/h2&gt;
&lt;p&gt;
如果你是做 app 的，那申请苹果帐号是必须的。公司名义申请的话，需要先搞一个 DDUS-Number，这个可以找一些公司申请。申请下来之后直接在苹果后台申请帐号就可以了。
&lt;/p&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
Android 开发帐号
&lt;/h2&gt;
&lt;p&gt;
如果是做国内服务，那 Android 并没有一个统一的地方，各手机厂商都有自己的 appstore，需要你单独去申请。申请帐号一般只需要营业执照就可以，应用上架就麻烦了，需要有一个版权证明。这个网上也有申请的，收费和时间有关系，最慢的一个半月下来大概几百，快的可能几千，看你需求。
&lt;/p&gt;
&lt;p&gt;
还好 Android 可以直接安装 apk，所以早期你也可以先提供一个直接下载 apk 的地方让用户安装，这样可以节约一些软著申请费用。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>React Native Versions</title>
      <link>https://wdicc.com/react-native-versions/</link>
      <pubDate>Fri, 26 Jul 2019 15:45:27 +0800</pubDate>
      
      <guid>https://wdicc.com/react-native-versions/</guid>
      <description>&lt;p&gt;
RN 里面有很多个个版本号
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;package.json&lt;/code&gt; 里面定义的 &lt;code&gt;version&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;android/app/build.gradle&lt;/code&gt; 里面定义的 &lt;code&gt;versionName&lt;/code&gt; 和 &lt;code&gt;versionCode&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;ios/YOURAPP/Info.plist&lt;/code&gt; 里面定义的 &lt;code&gt;CFBundleShortVersionString&lt;/code&gt; 和 &lt;code&gt;CFBundleVersion&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如果你使用 code-push 的话，还有一个 code-push 自己的版本号，叫做 &lt;code&gt;Label&lt;/code&gt; 一般是 &lt;code&gt;v&lt;/code&gt; 开头的。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
这几个版本号都有用，需要有规划的使用。我的经验如下。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
统一 &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;versionName&lt;/code&gt;, &lt;code&gt;CFBundleShortVersionString&lt;/code&gt; ，使用类似 &lt;code&gt;x.y.z&lt;/code&gt; 这样的格式，升级的时候都一起升级，每次发布这个版本前都会在 git 打一个 tag。这个是用来表示用户看到的 native 的版本。这样你的 app 在 ios 和 android 的市场里面，同一个版本的，一般就是同一套代码打包的，
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;versionCode&lt;/code&gt; 和 &lt;code&gt;CFBundleVersion&lt;/code&gt; 各自表示各平台软件的真实版本，可能会出现同一个 1 里面的版本的情况下，这个有多个的情况。一般的应用市场发布的时候，也是认这个版本号的。这个编号只增不减，原则上每次打包都增加，不管代码有无变更。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如果使用了 code-push，那还 1 里面的版本号还需要遵守一个原则：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
如果 native 代码有变更，那需要增加 &lt;code&gt;x.y&lt;/code&gt; ，比如可以从 &lt;code&gt;1.0&lt;/code&gt; 变成 &lt;code&gt;1.1&lt;/code&gt; 也可以是变成 &lt;code&gt;2.0&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如果只是 js 代码更新，那只增加 &lt;code&gt;z&lt;/code&gt; ，其他不变，同时 code-push 发布的时候，使用 &lt;code&gt;-t&lt;/code&gt; 指定 target version 为 &lt;code&gt;x.y.0 ~ x.y.z&lt;/code&gt; 这样的形式。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
基于上面的设置，实际一个 app 的版本号就是类似于 &lt;code&gt;1.2.2(111)-v23&lt;/code&gt; 或者 &lt;code&gt;1.2.2(111)-un&lt;/code&gt; 这样的形式。 &lt;code&gt;1.2.2&lt;/code&gt; 表示 native 版本， &lt;code&gt;111&lt;/code&gt; 是编译版本， &lt;code&gt;v23&lt;/code&gt; 是 codepush 的版本，如果没更新 codepush 那可能是 &lt;code&gt;un&lt;/code&gt; 。 &lt;code&gt;1.2.2(111)&lt;/code&gt; 部分可以通过 RN 模块或者程序启动时候注入到 js 里面来， &lt;code&gt;v23&lt;/code&gt; 部分可以使用 codepush 的 api 取。
&lt;/p&gt;
&lt;p&gt;
一般我们以 &lt;code&gt;package.json&lt;/code&gt; 里面的版本为准，android 可以让 gradle 读取这个文件自动变更版本， ios 需要自己写一个程序。
&lt;/p&gt;
&lt;div class=&#34;src src-groovy&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;getNpmVersion&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;def&lt;/span&gt; inputFile &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; File&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;../package.json&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;def&lt;/span&gt; packageJson &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; JsonSlurper&lt;span style=&#34;color:#333&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;parseText&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;inputFile&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; packageJson&lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#333&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;getNpmVersionArray&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#888&#34;&gt;// major [0], minor [1], patch [2]
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;major&lt;span style=&#34;color:#333&#34;&gt;,&lt;/span&gt; minor&lt;span style=&#34;color:#333&#34;&gt;,&lt;/span&gt; patch&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; getNpmVersion&lt;span style=&#34;color:#333&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;tokenize&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;Integer&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;parseInt&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;major&lt;span style=&#34;color:#333&#34;&gt;),&lt;/span&gt; Integer&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;parseInt&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;minor&lt;span style=&#34;color:#333&#34;&gt;),&lt;/span&gt; Integer&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;parseInt&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;patch&lt;span style=&#34;color:#333&#34;&gt;)]&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;[]&lt;/span&gt;
&lt;span style=&#34;color:#333&#34;&gt;}&lt;/span&gt;

versionName &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;${versionMajor}.${versionMinor}.${versionPatch}&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
ios 写程序用类似命令改 &lt;code&gt;/usr/libexec/PlistBuddy -c &amp;#34;Set :CFBundleShortVersionString ${PACKAGE_VERSION}&amp;#34; &amp;#34;ios/YOURAPP/Info.plist&amp;#34;&lt;/code&gt; 就可以。可以修改 package.json 增加 &lt;code&gt;version&lt;/code&gt;
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node node_modules/react-native/local-cli/cli.js start&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;jest&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;lint&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node_modules/.bin/eslint app&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;./version-ios.sh&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;precommit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;./pre-commit&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;postinstall&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;patch-package&amp;#34;&lt;/span&gt;
    },
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
使用 npm version 的时候就可以自动同步修改 ios，android 的版本号了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools to Manage Your React Native Projects</title>
      <link>https://wdicc.com/tools-to-manage-your-react-native-projects/</link>
      <pubDate>Fri, 26 Jul 2019 14:55:38 +0800</pubDate>
      
      <guid>https://wdicc.com/tools-to-manage-your-react-native-projects/</guid>
      <description>
&lt;p&gt;
RN 项目大部分人都知道是基于 Javascript 的，懂 js 就可以写了。但实际上并没那么简单。大概总结下这里面的问题，主要从管理项目的角度来说。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
NPM
&lt;/h2&gt;
&lt;p&gt;
JS 部分肯定是不能避免的，js 依赖重这个估计都知道， &lt;code&gt;node_modules&lt;/code&gt; 被很多人吐槽了。package.json 里面写的依赖，一般都不会写死版本（这个我估计很多人都没有注意到），例如下面这个片段
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;    {
       &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;crypto-js&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;^3.1.9-1&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;geodesy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;^1.1.2&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;immutable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;^3.8.2&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;moment&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;^2.19.1&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;16.5.0&amp;#34;&lt;/span&gt;,
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
里面 &lt;code&gt;geodesy&lt;/code&gt; 写的是 &lt;code&gt;^1.1.2&lt;/code&gt; 表示的是最低是这个版本，小版本号可以比这个大。 &lt;code&gt;react&lt;/code&gt; 是写死版本号的。版本号不写死会产生一个问题，每次新安装的时候，如果有了新版本，那可能就会安装新的版本。即使你把自己的依赖都写死版本号也没有用，你依赖的依赖可能还是没有写死的。这样怎么办？
&lt;/p&gt;
&lt;p&gt;
NPM 提供了 &lt;code&gt;npm.lock&lt;/code&gt; 来管理版本，第一次使用 npm 安装的时候，会自动产生一个 &lt;code&gt;npm.lock&lt;/code&gt; ，后面每次执行安装的时候，会根据这个里面规定的版本号来安装依赖。这样基本可以保证总是一样的版本。但是早期我使用 npm 的时候有一个问题，执行安装的时候居然还会修改 &lt;code&gt;npm.lock&lt;/code&gt; ，我记得是会改里面的 hash 值，即使影响不大，但是每次提交修改 review 的时候都需要看看这个里面的东西就有点恶心了。所以后面我们换了 yarn，yarn 使用的是 &lt;code&gt;yarn.lock&lt;/code&gt; 他执行安装的时候不会修改这文件里面的东西。（npm 我之后就没用了，所以后面讲的主要以 yarn 为准。）这样有了 lock 文件之后，表示所有依赖都有了确定的版本。
&lt;/p&gt;
&lt;p&gt;
那么如何升级其中某一个依赖呢？方法很简单，删除 &lt;code&gt;yarn.lock&lt;/code&gt; 里面关于这个模块的那条信息，然后执行 &lt;code&gt;yarn install&lt;/code&gt; 就可以。当然，能升级到什么版本取决于这个模块是怎么被依赖的，如果是指定版本号的那种，那显然是不会有什么效果的。如果升级到的版本不满意，那只能看看依赖他的模块是不是可以升级一下，依赖新的版本，否则没什么办法了。
&lt;/p&gt;
&lt;p&gt;
如果是写在 &lt;code&gt;package.json&lt;/code&gt; 里面的依赖，那你可以使用 &lt;code&gt;yarn add module&lt;/code&gt; 再次执行一下添加动作就可以。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Cocoapods
&lt;/h2&gt;
&lt;p&gt;
iOS 的部分，目前我看 &lt;code&gt;react-native link&lt;/code&gt; 已经可以自动处理使用 cocoapods 了。使用 cocoapods 管理项目比较好，能使用尽量使用，能减少你很多麻烦。
&lt;/p&gt;
&lt;p&gt;
cocoapods 可以通过 &lt;code&gt;pod repo update&lt;/code&gt; 来更新本地的缓存，用过的都知道这个东西巨大一个，是放在 &lt;code&gt;~/.cocoapods&lt;/code&gt; 下面的。还好这个东西是全局的，不像 &lt;code&gt;node_modules&lt;/code&gt; 是每个项目一个。想要更新一些 pods 新的版本必须先更新这个。
&lt;/p&gt;
&lt;p&gt;
显然，这个东西也可能有依赖，你加一个 RN 模块，比如什么 react-native-umeng，那他就一般会依赖友盟的几个 pod（当然也可能有二货直接把依赖下载了放到项目里面），依赖也会有版本问题。所以有一个 &lt;code&gt;Podfile.lock&lt;/code&gt; 来管理版本。
&lt;/p&gt;
&lt;p&gt;
如果是 RN 模块自己加的依赖，通常他会在自己的 podspec 里面写好依赖的版本，所以升级版本需要先升级这个模块。
&lt;/p&gt;
&lt;p&gt;
有的 RN 模块可能不是通过 pod 管理的，一般会需要你自己去 Podfile 里面添加依赖，以及还需要你手动把这个模块加入到你的 xcode 项目文件里面，还需要添加对应的编译依赖（这也是为啥推荐 pod 管理，省事多了）。
&lt;/p&gt;
&lt;p&gt;
你自己去更新的时候，执行 &lt;code&gt;pod update&lt;/code&gt; 就可以一次把依赖都升级到最新版本，也可以直接删除 &lt;code&gt;Podfile.lock&lt;/code&gt; 文件，重新执行一下 &lt;code&gt;pod install&lt;/code&gt; 。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Android
&lt;/h2&gt;
&lt;p&gt;
Android 部分的依赖似乎问题一般不是出现在 jar 包依赖上面，maven 处理还可以，除了有时候连不上源，这个可以配置换换源。
&lt;/p&gt;
&lt;p&gt;
主要可能会出现在 gradle 上面。gradle 又会和 build-tools 这些挂钩，然后和 buildsdk 啥的这些产生关系。不过还好，Android studio 里面一般会提示的比较好，而且出问题也比较好搜，所以也不多说了。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Fastlane
&lt;/h2&gt;
&lt;p&gt;
我使用 Fastlane 来发布代码，再加上 Ansible，把从 repo 下载打包上传到编译好的文件到服务器，还有打发布 tag 这些事情都一条命令处理了。
&lt;/p&gt;
&lt;p&gt;
fastlane 本身是 ruby 的。给 RN 项目配置 fastlane 需要分开 ios 和 android 两个，各自管理的。fastlane 自己也有依赖，以及你可能会装几个 fastlane 的 plugin 那他们也有自己的依赖。这个是通过 &lt;code&gt;Gemfile&lt;/code&gt; 来管理的，同样也有一个 &lt;code&gt;Gemfile.lock&lt;/code&gt; 文件。安装是通过在这个目录里面 &lt;code&gt;bundle install&lt;/code&gt; 命令，这个命令会按照 lock 文件给你安装，如果没有会自动生成一个。
&lt;/p&gt;
&lt;p&gt;
这样如果你需要升级依赖，可以删除 &lt;code&gt;Gemfile.lock&lt;/code&gt; 然后执行一下 &lt;code&gt;bundle install&lt;/code&gt; ，会自动再生成一个。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Gems
&lt;/h2&gt;
&lt;p&gt;
可以看到，上面 CocoaPods 和 Fastlane 都是基于 ruby 的。Mac 系统自带了一个 ruby，如果直接使用 gem 命令，会安装到系统的 ruby 下，我使用 brew 安装的 ruby。
&lt;/p&gt;
&lt;p&gt;
你安装的这些 gem，比如 fastlane，cocoapods 这些也都会涉及到升级，比如 &lt;code&gt;gem install fastlane&lt;/code&gt; 这样可以升级。可以使用 &lt;code&gt;gem list&lt;/code&gt; 看看你系统上面安装的 gem，同一个包是允许同时存在不同的版本的。使用 &lt;code&gt;gem cleanup&lt;/code&gt; 可以清理所有的旧版本。
&lt;/p&gt;
&lt;p&gt;
这里需要注意，我们前面的 &lt;code&gt;Podfile.lock&lt;/code&gt; 和 &lt;code&gt;Gemfile.lock&lt;/code&gt; 里面都是写了包的版本的，清理之后你可能会发现这些工具不好用了，怎么办？方法就是把这个文件删除，然后重新执行 &lt;code&gt;pod install&lt;/code&gt; 和 &lt;code&gt;bundle install&lt;/code&gt; ，要注意这个操作可能会同时把你的依赖直接升级了。如果是 pod 升级那可能就需要重新打包发布了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Best Pratice for Celery</title>
      <link>https://wdicc.com/best-pratice-for-celery/</link>
      <pubDate>Wed, 17 Jul 2019 15:27:48 +0800</pubDate>
      
      <guid>https://wdicc.com/best-pratice-for-celery/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Celery beat and worker
&lt;/h2&gt;
&lt;p&gt;
Celery works with two separate parts, the beat and the worker. The beat is the control center which determine when and where to send the tasks, there should be only one beat in each celery network. The worker is the one who runs the tasks and send the results back to the beat, there could be lots of works in each network.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Result backend
&lt;/h2&gt;
&lt;p&gt;
Result backend is the place where task results stored. By default, celery support many storage types, like PostgreSQL, Redis, etc. If you store the results in the database, you may need to clean the old data from the database periodically. I use Redis as the result backend, it will expire the old data automatically.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Broker
&lt;/h2&gt;
&lt;p&gt;
Broker is used to communicate among the workers and the beta. Celery support Redis, RabbitMQ, etc. as it’s broker. I use Redis too, in a different database with the result backend.
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Scheduler
&lt;/h2&gt;
&lt;p&gt;
Scheduler is the place where you can add periodically tasks. The tasks store in a local database file by default. You can specify the file by &lt;code&gt;-s /home/celery/var/run/celerybeat-schedule&lt;/code&gt;, you also can use a custom scheduler like a &lt;a href=&#34;http://docs.celeryproject.org/en/master/userguide/periodic-tasks.html#id8&#34;&gt;database table&lt;/a&gt;, but I think the default method is more simple and convenient to use. The only problem is when you want to migrate the scheduler to an other server, you may also need to transfer the database file.
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Running commands
&lt;/h2&gt;
&lt;p&gt;
You can run the worker like:
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ celery -A proj beat&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And also can run the beat with the worker:
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ celery -A proj worker —beat&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Or run the beat separately like:
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ celery -A proj beat -s /home/celery/var/run/celerybeat-schedule&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Monitoring
&lt;/h2&gt;
&lt;p&gt;
Celery has provided some command to show it&amp;#39;s running status.
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;// List active nodes in this cluster
$ celery -A proj status

// inspect tasks
$ celery -A proj inspect active
$ celery -A proj inspect scheduled
$ celery -A proj inspect reserved
$ celery -A proj inspect revoked

// Curses Celery task monitor
$ celery -A proj events&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Also, there is a web-monitor named &lt;a href=&#34;https://flower.readthedocs.io/en/latest/&#34;&gt;Flower&lt;/a&gt;. It can connect to the broker and inspect the task status in real-time.
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
It&amp;#39;s better to not mix configurations with django
&lt;/h2&gt;
&lt;p&gt;
You maybe want to check my &lt;a href=&#34;https://wdicc.com/logging-in-celery-and-django/&#34;&gt;last post for celery and django&lt;/a&gt;, the log files will be both processed by django and celery but by different process, this may cause some problems. 
&lt;/p&gt;
&lt;p&gt;
You can put some common settings like redis, database in a sperate file, and import in django and celery, but don&amp;#39;t import django settings into celery.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use Anki to Leaning English</title>
      <link>https://wdicc.com/use-anki-to-leaning-english/</link>
      <pubDate>Wed, 17 Jul 2019 11:36:20 +0800</pubDate>
      
      <guid>https://wdicc.com/use-anki-to-leaning-english/</guid>
      <description>&lt;p&gt;
Anki 很早以前就听说了，是一款帮助你记忆东西的软件。
&lt;/p&gt;
&lt;p&gt;
教小孩子的时候，一般不是会有一些卡片么，正面是一个字，比如 &lt;code&gt;虎&lt;/code&gt; 背面是一个老虎的图像，这样帮助小孩识字。这种叫做 flashcards 。Anki 提供的就是制作并使用这些 flashcards 来帮助你记忆。
&lt;/p&gt;
&lt;p&gt;
所以广义上面讲，Anki 不止可以用来记忆单词，比如学中文老外可以用来记忆中文，学物理化学的记忆各种公式什么的。正面放需要理解学习的东西，反面放帮助记忆的东西。
&lt;/p&gt;
&lt;p&gt;
Anki 神奇的不是因为可以制作任意的记忆卡片，主要是他的针对所谓的遗忘曲线来学习的套路。所谓遗忘曲线，复杂的逻辑我也没看过，简单的用方便理解的方法来讲，比如我们背单词的时候，刚背玩 1 分钟内，通常是记忆最深刻的，10 分钟后就会有一些模糊了，1 天后可能就会忘记很多今天已经记住的单词了，此后不及时复习的话，你会发现下次再见到和第一次见到没什么区别，完全就是个新的单词一样。这个就是说，随着时间遗忘一个东西的速度会越来越快。
&lt;/p&gt;
&lt;p&gt;
我之前使用百词斩背单词，它把单词都做了的图形化的提示信息，这个非常有助于记忆，我非常喜欢这点。他的工作模式是，每天设定一个目标，比如 20 个单词吧，那今天的任务就是复习昨天的 20 个单词，以及学习今天的 20 个单词，每天都这样一个模式。记得我前面说的遗忘曲线了没，这样的模式你会发现，这两天记忆好的单词，下个月可能就基本不记得啥意思了，和没学一样。而百词斩似乎提供了一些你自己复习的途径，不过我目前没找到合适的方式使用。百词斩对于新的单词，会提供三遍机会学习，第一遍是单词+图片，第二遍是单词+释义，第三遍是根据释义选单词。在每一遍里面，如果你选错了，那就会再出现一遍相同的题目。对于熟悉的单词，还提供了一个 &lt;code&gt;斩&lt;/code&gt; 的选项，斩掉的单词就不会在出现了，你再也没有机会看到这个词了。百词斩还有一个问题是，因为他是选项模式，实际上那些选项也是一个提示，你可以使用排除法来选择答案，所以这些东西有时候会让你觉得你记住这个单词了，但实际上这个单词单独出现的时候不认识。
&lt;/p&gt;
&lt;p&gt;
Anki 的工作模式是这样的，也是每天设定一个目标，比如新学 20 个单词。那今天你需要记忆的单词就包括了今天 &lt;code&gt;之前&lt;/code&gt; 所有需要今天 review 的单词，和今天新的 20 个单词。新的单词没什么好说的，那 review 的单词是怎么构成的呢？当出来一个单词的时候，你根据自己的记忆情况，需要在单词下面的选项选择打算多久之后 review 他，选项按照单词被 review 的次数和你选择的 review 的情况来的，比如新单词的选项是 &lt;code&gt;again 1m&lt;/code&gt;, &lt;code&gt;good 10m&lt;/code&gt;, &lt;code&gt;easy 1d&lt;/code&gt;, 如果你觉得这个词你不太熟悉，你可以从 &lt;code&gt;again&lt;/code&gt; &lt;code&gt;good&lt;/code&gt; 里面选一个，它会持续的在今天的学习里面出现，直到你觉得认识了，那就选 &lt;code&gt;easy&lt;/code&gt; ，那这个词今天就不会出现了，会在明天的 review 里面出现。到了明天，这个词再次出现的时候，选项就变成了 &lt;code&gt;again 10m&lt;/code&gt;, &lt;code&gt;good 1d&lt;/code&gt;, &lt;code&gt;easy 10d&lt;/code&gt; (具体选项我没记住，这里举个例子)，这个时候，如果发现这个单词忘记了，那就继续 &lt;code&gt;again&lt;/code&gt; &lt;code&gt;again&lt;/code&gt; 的选择直到你觉得记住了，根据你自己的感觉，选择 &lt;code&gt;good&lt;/code&gt; 还是 &lt;code&gt;easy&lt;/code&gt; ，这样会决定他下次是什么时候出现。类似这样，单词你越熟悉，他出现的次数就会越少，而且你也完全不用担心这个单词会不会你只是现在觉得认识了，后面过 1 个月又忘记了怎么办，那放心这些单词会持续出现的。
&lt;/p&gt;
&lt;p&gt;
事实上，Anki 的设计不止这些。在设置里面还有一些因子，这些会影响出现的选项的时间。具体可以看后面提到的视频。使用 Anki 的时候，基本用法如下：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
一个新的词，如果已经认识，那选择 &lt;code&gt;easy&lt;/code&gt; 就好了。如果不认识，那根据情况选择 &lt;code&gt;1m&lt;/code&gt; 或者 &lt;code&gt;10m&lt;/code&gt; ，一般看到一个词一点都不认识的时候，多选几次 &lt;code&gt;1m&lt;/code&gt; 加深一下印象，然后选择 &lt;code&gt;10m&lt;/code&gt; 看是不是记住了，然后可以往复的选择 &lt;code&gt;1m&lt;/code&gt; 和 &lt;code&gt;10m&lt;/code&gt; 直到你觉得今天没必要看这个词了，那选择那个 &lt;code&gt;1d&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
一个需要 review 的词，如果发现没记住，那就选 &lt;code&gt;1m&lt;/code&gt; 让他进入和新词一样的逻辑，直到最后选择 &lt;code&gt;1d&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如果需要 review 的词你知道意思，这个时候有几个做法
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
这个词确实很简单，那继续 &lt;code&gt;easy&lt;/code&gt; ，让他更少出现。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
这个词有一点难度，是你新学的，但是基本也还能知道怎么回事，那可以选择 &lt;code&gt;good&lt;/code&gt; ，让他适当的没那么少出现。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
对这个词的部分释义不清楚，没记住，那可以酌情选择 &lt;code&gt;hard&lt;/code&gt; ，让他增加出现的机会。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Anki 有一个问题是，随着你学习的新单词越来越多，那需要 review 的单词也越来越多，尤其当你偷懒几天没打开软件，巨大的 review 数量可能会让人崩溃。设置里面可以设置每天 review 的最大数量，默认是 200，如果自己实在不能 review 完可以改一下。我现在设置是 200，每天新词 20 个，看着情况是每天基本是需要处理 60 个词左右。只要持续每天清理就也还好。其实一天那么多时间，大可以利用碎片时间看看，也别担心自己实际没记住但是按了 &lt;code&gt;easy&lt;/code&gt; 的情况，后面还会出现呢，后面出现的时候再好好记也可以。
&lt;/p&gt;
&lt;p&gt;
Anki 还提供了一自定义学习模式，每天 Anki 不是会自动安排任务么，如果一天的任务完成后，还想多学习一些，那 Anki 提供了一个自定义学习模式 Custom Study。点击这个之后，需要你选择想学习什么，可以学习新的单词，也可以复习之前学过的，按照你自己的情况选择就好。选择之后，一些卡片就会添加到那个 Custom Study Session 这个 deck 里面。卡片到这个 deck 之后，如果你学习完毕就会都归还到原来的 deck 里面，也可以点那个 Empty 自己都清空。这个 deck 里面有两个设置比较重要，一个是 Step，我看默认是 1 分钟，这个和前面那个 step 是一个意思。还有一个是 Reschedule cards based on my answers in this deck，如果不选中这个，那一个卡片学习完毕之后，会有两个选项一个是 &lt;code&gt;again&lt;/code&gt; 一个是 &lt;code&gt;good&lt;/code&gt; ，选 good 会结束这个卡片的学习，不会对原来的 deck 里面对这个词的安排有什么影响。如果选中这个选项，那选项会有一个 &lt;code&gt;good(n day)&lt;/code&gt; 这样的，点击之后实际会影响原来 deck 里面对这个词的规划。
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=lz60qTP2Gx0&amp;amp;t=1223s&#34;&gt;这里&lt;/a&gt;有一个对 Anki 的设置和工作模式的详细的解说，有兴趣可以看看。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>English Learning Notes From Culips</title>
      <link>https://wdicc.com/english-learning-notes-from-culips/</link>
      <pubDate>Mon, 08 Jul 2019 14:33:00 +0800</pubDate>
      
      <guid>https://wdicc.com/english-learning-notes-from-culips/</guid>
      <description>
&lt;p&gt;
Here is the &lt;a href=&#34;https://www.youtube.com/watch?time_continue=2&amp;amp;v=uThg9MQqcyY&#34;&gt;podcast&lt;/a&gt;, I take some notes from it, it&amp;#39;s really helpful if you try to leaning English. I recommand you that listen the podcast yourself multiple times.
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
What the Mass Immersion Approach is
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
learning 3 to 6 hours a day, and listen in background when cooking, cleaning.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Compare yourself to yesterday, don’t try to compare yourself to other people.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
What’s more important input or output?
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
First really focus on input and understanding and save output speaking and writing for later.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If you want to be speaking fluently and native-like then you’re really not only wasting your time by practicing speaking early on but you’re actually potentially doing a lot of damage.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
In more general language learning programs that have that philosophy to speak from day one is basically giving you grammar rules and vocabulary and they’re telling you to think in your native language and then these grammar and vocabulary to translate that into something that appears to be your target language.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
So we need to do lots of input to find out what do native speakers say in the realistic situation that comes up.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
Matt’s tips
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Repetition can be very useful, because if studying a foreign language you watch the same TV show or same podcast twice in a row or three times in a row you notice more stuff every time. It’ll give your brain a lot more chances to pick up more stuff.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
But when you listen it 10 times, you reach a point where you kind of have  sucked up all you can sucked up at the current level, and also repetition can be extremely boring.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Take a balance between repetition and keeping new stuff. When you gonna give something your full attention like try to watch a movie with no subtitle and try to really understand as much as I can, then always do something new. But then after you lost something actively kind of put it into a folder later, and when you want to do a more passive form of listening to English while you are shopping or cooking or walking then that’s a good opportunity to listen things you’ve already watched once actively.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Put these listened material on an immersion pod. There is full of English leaning materials and nothing else, so you can’t cheat. And also you don’t need to make a decision when you want to listen something.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Spent time with real English content like real books for native speakers, real websites or real YouTube videos, the slogan is by native for natives. You have to jump into the pool if you want to learn how to swim. Consuming the real English contents.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Use a repetition system like Anki.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Try to use an English to English dictionary as soon as you can. There is lot of learner’s English to English dictionary you can try.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;headline-4&#34;&gt;
Shadowing
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
There is so many English accent, so adopting a parent, like a youtuber who makes videos of himself talking to the camera, and just listening to this one guy, when you need to speak, you can just like an actor and trying to basically play this role.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Good pronunciation replies very heavily on your listening abilities.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;headline-5&#34;&gt;
Meditation
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Just training your ability to concentrate, and know what’s going on in your mind, like a lot of times we get lost in thought and we don’t even realize that we’re getting lost in thought. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A lot of times things are really boring because you’re not really attention to them, no matter what you take really pay attention to it closely you’re gonna find something interesting there, even if I just look at my hand and I look at all the little intricate lines and patterns in my hand, normally I would never notice it’s like oh wow my hands pretty intricate, anything intricate when you really examine it closely imagine if I had actual microscope how interesting it would be to look at my hand.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It’s easier to be gentle with yourself, and do not be hard on yourself, when you get through practicing meditation.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;headline-6&#34;&gt;
总结一下
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
尽可能花更多的时间去学习，学 6 个小时肯定比学 3 个小时效果更好。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不要和其他人比较，和过去你比较，是不是比过去进步了。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
一开始多听多写，不要着急说。只有能理解对方的文化你才有可能说好。一般初期都是从语法和单词教起，告诉你如何把从自己的语言拼出来目标语言表达，不理解对方文化习俗的话，很容易闹笑话，打击你的积极性。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
另外，多听写也是让你多用目标语言思考，遇到类似情况的时候脑袋里面第一跳出来的是目标语言的表达方式，而不是你自己会的语言，然后等你翻译。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
听的时候 &lt;code&gt;重复&lt;/code&gt; 肯定是有用的，但是也会比较容易无聊。推荐的做法是当你准备好认真学习的时候，那就找那些没听过的，听过之后呢把他们放进一个只能用来听这个的 mp3 或者手机，然后等以后比如购物散步等做其他事情的时候，把这些放出来听。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
多看多听真实的英语世界的东西，比如书籍，电视什么的，口号是 by native for natives，想学会游泳肯定是需要跳进泳池才行的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用一种用来重复记忆的辅助工具，他推荐 &lt;code&gt;Anki&lt;/code&gt; 。可以把自己遇到的东西做成卡片放进去，比如把字幕的一整句加进去，把单词的释义放到卡片的背面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;跟读&lt;/code&gt; 是比较好的练习口语的方式，但是不要漫无目的的做这个事情，最好选一个具体的人来模仿，因为真实世界里面太多的口音了，无法都一次学会，跟一个具体的人会让你的目标小很多，更容易达成。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
跟读可以让你在遇到实际情况的时候，让你觉得自己像是在扮演那个人一样去说话。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;冥想&lt;/code&gt; 可以练习你的专注能力。很多时候你觉得一些事情无聊其实是因为你不能专注，当你专注的时候，你会发现只是观察自己的手掌也会变得很有意思。冥想也可以让你在遇到一些挫折的时候更加容易走出来。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Logging in Celery and Django</title>
      <link>https://wdicc.com/logging-in-celery-and-django/</link>
      <pubDate>Fri, 05 Jul 2019 14:26:24 +0800</pubDate>
      
      <guid>https://wdicc.com/logging-in-celery-and-django/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Get celery work with django
&lt;/h2&gt;
&lt;p&gt;
Celery can work with django, it&amp;#39;s very simple.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;__future__&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; absolute_import
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;os&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;celery&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.conf&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; settings

&lt;span style=&#34;color:#888&#34;&gt;# set the default Django settings module for the &amp;#39;celery&amp;#39; program.&lt;/span&gt;
os&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;environ&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;setdefault(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;DJANGO_SETTINGS_MODULE&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;your_app.settings&amp;#39;&lt;/span&gt;)
app &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;you_app&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#888&#34;&gt;# Using a string here means the worker will not have to&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# pickle the object when using Windows.&lt;/span&gt;
app&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;config_from_object(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;django.conf:settings&amp;#39;&lt;/span&gt;)
app&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;autodiscover_tasks(&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;lambda&lt;/span&gt;: settings&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;INSTALLED_APPS)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Then write some task files named &lt;code&gt;tasks.py&lt;/code&gt; under your apps directory, celery will auto discovery and run these tasks.
&lt;/p&gt;
&lt;p&gt;
We can set celery options in django settings file, all the support settings can be founded &lt;a href=&#34;http://docs.celeryproject.org/en/latest/userguide/configuration.html#new-lowercase-settings&#34;&gt;here&lt;/a&gt; . 
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Logging for celery
&lt;/h2&gt;
&lt;p&gt;
By default, celery will setup it&amp;#39;s own logger, even if you have setuped in django. You can use the &lt;code&gt;setup_logging&lt;/code&gt; signal to disable this behaviour.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;celery&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; signals

&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@signals.setup_logging.connect&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;on_celery_setup_logging&lt;/span&gt;(&lt;span style=&#34;color:#333&#34;&gt;**&lt;/span&gt;kwargs):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And there is also an option named &lt;code&gt;CELERYD_HIJACK_ROOT_LOGGER&lt;/code&gt; , I don&amp;#39;t know exactly what is this option for, but maybe you can set this to true if the logging still not working properly.
&lt;/p&gt;
&lt;p&gt;
Logs generated by celery are all use &lt;code&gt;celery&lt;/code&gt; logger as parent. So we can set a handler named &lt;code&gt;celery&lt;/code&gt; to handle these logs.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;celery&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;celery&amp;#39;&lt;/span&gt;],
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;INFO&amp;#39;&lt;/span&gt;,
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;propagate&amp;#39;&lt;/span&gt;: False
        },&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you need to setup your logger use a handler can auto rotate log files, you must pay attention here.
&lt;/p&gt;
&lt;p&gt;
The log settings configured in django will be used by &lt;code&gt;django&lt;/code&gt; , &lt;code&gt;celery-worker&lt;/code&gt; , &lt;code&gt;celery-beat&lt;/code&gt; , these are offen run as diffent processes, if you run them on the same node, all of these process will try to write logs to the smae files. And also will try to rotate the log files. So if the file is rotated by an other process, the logs generated by this process will no longer write into the file, logs will be lost.
&lt;/p&gt;
&lt;p&gt;
You can use &lt;code class=&#34;verbatim&#34;&gt;lsof /logs/celery.log&lt;/code&gt; to check if the file is opened by different processes.
&lt;/p&gt;
&lt;p&gt;
To avoid this problem, we should setup loger for django and celery seperatlly. We can use &lt;code&gt;signals.setup_logging&lt;/code&gt; to setup logger for celery.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@signals.setup_logging.connect&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;on_celery_setup_logging&lt;/span&gt;(&lt;span style=&#34;color:#333&#34;&gt;**&lt;/span&gt;kwargs):
    config &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;version&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;disable_existing_loggers&amp;#39;&lt;/span&gt;: False,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;formatters&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(process)d&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(thread)d&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(name)s&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(funcName)s&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(lineno)s&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(levelname)s&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%(message)s&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;datefmt&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;%Y/%m/&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;
            }
        },
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;celery&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;INFO&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;logging.FileHandler&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;filename&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;/logs/celery.log&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;formatter&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;
            },
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;DEBUG&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;logging.StreamHandler&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;formatter&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;
            }
        },
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;loggers&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;celery&amp;#39;&lt;/span&gt;: {
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;celery&amp;#39;&lt;/span&gt;],
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;INFO&amp;#39;&lt;/span&gt;,
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;propagate&amp;#39;&lt;/span&gt;: False
            },
        },
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;: {
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;handlers&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;],
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;: &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;DEBUG&amp;#39;&lt;/span&gt;
        },
    }

    logging&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;config&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;dictConfig(config)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Please notice that you didn&amp;#39;t have &lt;code&gt;disable_existing_loggers&lt;/code&gt; set to &lt;code&gt;True&lt;/code&gt; in django settings files, or it will be disalbe celery logging before your setup.
&lt;/p&gt;
&lt;p&gt;
And you also need to pay more attention here, if your &lt;code&gt;celery-worker&lt;/code&gt; and &lt;code&gt;celery-beat&lt;/code&gt; are still runing on the same server speartly, they still will try to access the same logging files. Celery provide an option the run worker and beat at same time, just user command like &lt;code&gt;celery -A gafly worker -l info --beat -s /logs/celerybeat-schedule&lt;/code&gt; , the worker and the beat will run at the sametime.
&lt;/p&gt;
&lt;p&gt;
Celery worker is working in a multi-process mode, so If you can&amp;#39;t use &lt;code&gt;logging.handlers.TimedRotatingFileHandler&lt;/code&gt; to auto rotate the logs, otherwise the log file will be rotated by multi-process, there will be a problem.
&lt;/p&gt;
&lt;p&gt;
You can use &lt;code&gt;logrotate&lt;/code&gt; provided by the system to rotate the logs, or maybe your celery is running by &lt;code&gt;supervisord&lt;/code&gt;, you can just set celery output logs to stdout, and let supervisord to write, manage and rotate your logs.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fullstack Engineers</title>
      <link>https://wdicc.com/fullstack-engineers/</link>
      <pubDate>Wed, 03 Jul 2019 10:17:53 +0800</pubDate>
      
      <guid>https://wdicc.com/fullstack-engineers/</guid>
      <description>&lt;p&gt;
199x 年左右我初中，那会普遍流行的还是 dos 系统，公众对计算机的理解也就是一个打字设备，代替以前用油墨的方式印刷的。我有一个舅舅，那会大学（应该是专科）已经毕业了，他在青岛那边学习的就是计算机相关的专业，回我们那边之后分配到了一个公家单位，主要的工作也是打字。
&lt;/p&gt;
&lt;p&gt;
dos 下面制表用 CCED，录入用五笔，还有 UCDOS 之类的中文 console。那个时候流行的就是学习五笔，然后就是录入软件制表软件这些。
&lt;/p&gt;
&lt;p&gt;
那个时候我就表现出了对这些事情的兴趣，自己背五笔编码码，练习五笔，还学自己习过 foxbase。很多的银行的那种黑窗口操作界面就是基于 foxbase 的。那会玩的比较多的游戏是仙剑和红警。
&lt;/p&gt;
&lt;p&gt;
不过那个时候基于公众对这个东西的认识就是打字，以及游戏，所以基本很不看好这样的一个职业。农村人报考大学的时候优先还是财经什么的觉得似乎可以有铁饭碗的专业。
&lt;/p&gt;
&lt;p&gt;
我那会找了一本 foxbase 的书自己看，里面也有编程的部分，基本上第一章我就看不下去了。对于 &lt;code&gt;a = 1 + 2&lt;/code&gt; 这样的表达式我还可以理解，但是对于 &lt;code&gt;a = a + 1&lt;/code&gt; 这样的我就理解不能了，也没有人可以去问，所以当时第一章后面有一道题目是计算 1 到 100 累加的结果，我就想破头都想不明白除了一个一个加还有什么简单的方法，递归什么的就更加不明白了。这样基本就卡第一章了。
&lt;/p&gt;
&lt;p&gt;
上了大学之后，开始学 c 语言有机房，就各种控制不住了，自从去机房学会了 MUD 有一段时间玩的废寝忘食的，为了一直占着机器，还需要同学中午给去送饭，一呆就是一天。
&lt;/p&gt;
&lt;p&gt;
不过业余时间也还是学习了一些其他知识的，分区装系统，做网页。最开始是联系了一个书商出一套 Office 之类的书，我们的做法就是找几本其他书拿来抄一下，所以那会也叫攥书，而这些书主要的卖点也就是针对最新的版本，也不像是 C 语言那样谭浩强有绝对的权威，所以基本上都是这么个模式，我后面带动了全班很多同学攥书，我们宿舍的几个都搞了几本书，赚个零花钱。后面还搞了一些做网页的书什么的。
&lt;/p&gt;
&lt;p&gt;
毕业的时候找工作，赶上互联网第一波泡沫，我们专业还是非 CS 的，所以找相关工作不好找，我拿到 2 个 offer，一个是相对来说还和专业挂钩，是搞集成电路的，另一个就是出版社，为了北京户口，选择了出版社。
&lt;/p&gt;
&lt;p&gt;
出版社做编辑和写书不一样，而且发现本身也还是对技术工作感兴趣，所以慢慢的开始把办公室的网络维护什么的接管了。国企里面都是多一事不如少一事，我主动承担其他人巴不得呢。利用空闲时间，搞了一台 pc，把出版社的邮件服务器用 Qmail 自己搭了一个，还有出版社的网站也自己写了一个 demo，那会购买还没这么方便，需要自己去银行汇款的。像什么反垃圾邮件，防火墙什么的这些都折腾折腾。还试过 freebsd，发现没有 rh 好玩。
&lt;/p&gt;
&lt;p&gt;
这样搞了几年，自己也觉得没什么意思了。就从出版社出来了。找了一个上地那边的搞外包的公司。当时面试的是一个台湾人，还挺有好感的。去了之后发现是 it 部门，那台湾哥们搭了一个 openldap 觉得挺嗨，我觉得好像也没啥，自己弄了一个虚拟机花了几天弄了一个类似的出来。后面干了1，2周之后，对方觉得我不合适，干活干不到正点上面，弄的我也很郁闷，因为没人和我说过需要做什么，我就只好干点看到的力所能及的。
&lt;/p&gt;
&lt;p&gt;
期间也面试了一些比较好的单位，但是都是因为经验不足没搞定，因为我毕竟之前就是业余的维护一台我自己搞的服务器而已。
&lt;/p&gt;
&lt;p&gt;
后面换了一家做手机 SP 服务的，就是提供一些彩铃啊，wap 站什么的。过去做运维人员，这个岗位只有一个人，我去的时候前一个要离职了我过去接手，而那个人也是接手没多久，所以后面出一些问题的时候我还时不时得找第一个人。这家我去的时候还有几十台服务器，奈何这个行业慢慢的不行了，服务器基本在慢慢回收中。来了这里之后自己也开始思考这么多机器如何运维的问题，包括监控，备份什么的。后面自己搞了 nagios，写了一个通用的监控脚本，还自己给一台办公室服务器接了一个插卡的猫用来发报警短信。用这个猫还做了简单的可以交互的小工具，比如查天气，重启服务什么的。
&lt;/p&gt;
&lt;p&gt;
基本上来了半年多把监控什么的梳理好了，因为业务萎缩的缘故，平时就没什么事情了。后面就是学习 shell 脚本什么的，学了一些编程的东西。慢慢没意思之后，一个朋友推荐去 yahoo 做运维。去他们部门面试没通过，后面换了一个其他部门通过了。
&lt;/p&gt;
&lt;p&gt;
去了 yahoo 之后才明白大厂是怎么搞运维的，各种工具，分工。也是梳理清楚这边的监控之后，没事情做了，开始参与写程序。那边用的很多工具都是 perl 写的，似乎大部分牛逼的都是老美弄的，中国这边就是用户，很多东西出了问题都需要和老美沟通解决。
&lt;/p&gt;
&lt;p&gt;
在那边后面有一段时间 leader 是一个 oracle DBA，所以慢慢的也开始接触了一些 oracle 的东西，学习了一下 SQL。那会我们部门有职位就是做统计需求的，解决方式就是写一堆 shell 脚本和 SQL。所以后面有岗位变化的时候，我就鬼使神差的去搞统计去了。因为似乎并不难做。
&lt;/p&gt;
&lt;p&gt;
这样后面 yahoo 中国完蛋到了淘宝量子统计的时候，也就不做运维了，开始做统计，学习 hadoop，hive 这些，那会还看了一段时间的遗传算法，当时是想在业务里面用来尝试推断用户喜好的。后面因为打算给当时的网站功能改版，因为小团队，也没几个人，所以统计做完之后，又开始参与网站的开发，写 javascript。又了解了一堆 jquery 的东西。
&lt;/p&gt;
&lt;p&gt;
之后到了去哪儿之后，开始继续搞统计觉得没什么意思，就开始搞广告系统开发。因为我知道一个公司的广告部门是最爽的，赚钱哗哗的，成本还不被人注意。这个系统当时我们好几个人一起弄的，技术方面使用了 perl，python，lua，c，SQL，java，开发的时候大家各自用自己擅长或者这个领域比较省事的技术做的，开发好之后大家把对接到一起。
&lt;/p&gt;
&lt;p&gt;
这个系统后续的问题也很明显，其中某个组件有问题的时候，如果负责人不在，那其他人比较难搞。这个系统随着人员变更，慢慢的就变的比较难维护了。当然我觉得比较难的原因不是系统设计的问题，是因为后续维护人员的技术能力问题。但是国内公司能持续的有那么厉害人做这个事情恐怕也不多，一般优秀的会慢慢的上升离开。
&lt;/p&gt;
&lt;p&gt;
这样在去哪儿这边我慢慢的开始负责数据库维护（因为我有一些运维经验），移动端的服务 APP 和网站（因为当时没有其他人做，我牵头做的），广告系统（因为其他人慢慢的离开流失，这系统慢慢的也就我比较熟悉全部组件的运作逻辑了），一些数据统计工作（因为我以前做过这个方面的事情）。
&lt;/p&gt;
&lt;p&gt;
所以离开去哪儿的时候，我基本上各方面的事情都捣鼓过，各方面都清楚一些，比初学者肯定是知道的多，但是我自己认为都不算是专家。我是属于把技能树点乱的类型，没有在一棵树下面持续挖掘，而是种了一堆树。当然这也可以是某种职业生涯发展的方向，这样的人也不是说在这个社会找不到可以发挥的地方。
&lt;/p&gt;
&lt;p&gt;
乱糟糟回忆了一堆，主要是想说，知识都是相关的，很多时候如果你想做好一个事情，你可能是必须要弄明白他周边的另外十个，而这个时候你可能都不是专家。
&lt;/p&gt;
&lt;p&gt;
比如就算做运维，简单的时候可能使用好别人写好的工具就可以了，但是一旦遇到问题自己又没有 debug 代码的能力，那么只能去求助能看懂代码的人，这个时候就很低效。
&lt;/p&gt;
&lt;p&gt;
比如从开发角度看，语言使用比如用 django 写个 view 什么的，元类，装饰器，迭代器，多线程这些，必要的时候还需要使用 c 封装一些调用提升速度。还需要了解数据库，model 和数据库的关系，数据库自己的特性，索引，约束，联合查询，聚合这些。写好代码还需要了解持续集成，发布回滚环境区分，自动化测试。发布之后，如果想要服务稳定，还需要弄明白负载均衡冗余，数据库备份，主从，数据库出问题了恢复，DNS 切换。如果往深了研究，这里面每一个点都可以有那么一位专家来研究，我觉得一个人是不可能把这些东西都弄明白的，弄明白也就是皮毛。
&lt;/p&gt;
&lt;p&gt;
所以全栈？呵呵，我理解的全栈是不可能有人做到的。知识迭代这么快，就算有人现在大致都弄明白了，他如果不持续的在各方面更新的话，很快也会再次落伍。
&lt;/p&gt;
&lt;p&gt;
不过倒是可以有专家/科学家工程师，就是某一个领域研究比较深入的人，比如看过 python 源码，发过补丁，可以按照自己需求去实现 python 垃圾回收功能等等。不是停留在应用使用上面，或者参与过现有框架的一些开发等。这样的人通常不管去哪个领域，给一些时间都可以比较深入的进入钻研。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How Does Https Actually Work</title>
      <link>https://wdicc.com/how-does-https-actually-work/</link>
      <pubDate>Thu, 27 Jun 2019 17:44:52 +0800</pubDate>
      
      <guid>https://wdicc.com/how-does-https-actually-work/</guid>
      <description>&lt;p&gt;
翻译自 &lt;a href=&#34;https://robertheaton.com/2014/03/27/how-does-https-actually-work/&#34;&gt;How does https actually work&lt;/a&gt; 。
&lt;/p&gt;
&lt;p&gt;
HTTPS is simply your standard HTTP protocol slathered with a generous layer of delicious SSL/TLS encryption goodness. Unless something goes horribly wrong (and it can), it prevents people like the infamous Eve from viewing or modifying the requests that make up your browsing experience; it’s what keeps your passwords, communications and credit card details safe on the wire between your computer and the servers you want to send this data to. Whilst the little green padlock and the letters “https” in your address bar don’t mean that there isn’t still ample rope for both you and the website you are viewing to hang yourselves elsewhere, they do at least help you communicate securely whilst you do so.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
What is HTTPS and what does it do?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
HTTPS takes the well-known and understood HTTP protocol, and simply layers a SSL/TLS (hereafter referred to simply as “SSL”) encryption layer on top of it. Servers and clients still speak exactly the same HTTP to each other, but over a secure SSL connection that encrypts and decrypts their requests and responses. The SSL layer has 2 main purposes:
&lt;/p&gt;
&lt;p&gt;
HTTPS 是在著名的 HTTP 协议上面加了一层 SSL/TLS（后面简称 SSL）加密层。客户端和服务器的请求和反馈依然还是使用 HTTP 协议，但是是在一条加密的通道上面。SSL 层有 2 个主要的目的：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Verifying that you are talking directly to the server that you think you are talking to
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Ensuring that only the server can read what you send it and only you can read what it sends back
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
检查连接到的服务器是你真的想连接的那个
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
确保只有对应的服务器可以读取你发送的消息，以及只有你可以读取返回的信息
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The really, really clever part is that anyone can intercept every single one of the messages you exchange with a server, including the ones where you are agreeing on the key and encryption strategy to use, and still not be able to read any of the actual data you send.
&lt;/p&gt;
&lt;p&gt;
这个协议很聪明的一点是，任何人都可以劫持其中客户端和服务器的某一条消息，包括和服务器协商同意使用的 key 和加密手段的消息，但是依然无法读取你发的原始内容。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
How an SSL connection is established
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
An SSL connection between a client and server is set up by a handshake, the goals of which are:
&lt;/p&gt;
&lt;p&gt;
SSL 连接的建立需要进行握手，握手的主要的目标如下：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
To satisfy the client that it is talking to the right server (and optionally visa versa)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
For the parties to have agreed on a “cipher suite”, which includes which encryption algorithm they will use to exchange data
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
For the parties to have agreed on any necessary keys for this algorithm
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
确保客户端连接到了正确的服务器（visa versa 似乎应该是 vice versa，反之亦然）
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
参与的双方需要协商使用的 cipher suite 加密套件，包括在交换数据的时候打算使用的加密算法
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
参与的双方需要协商加密用到的密码
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Once the connection is established, both parties can use the agreed algorithm and keys to securely send messages to each other. We will break the handshake up into 3 main phases - Hello, Certificate Exchange and Key Exchange.
&lt;/p&gt;
&lt;p&gt;
当连接建立的时候，双方就可以使用协商的加密算法和密码来加密互相发送的消息了。下面把握手过程分成三个阶段来讲 - Hello，证书交换和密码交换。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Hello - The handshake begins with the client sending a ClientHello message. This contains all the information the server needs in order to connect to the client via SSL, including the various cipher suites and maximum SSL version that it supports. The server responds with a ServerHello, which contains similar information required by the client, including a decision based on the client’s preferences about which cipher suite and version of SSL will be used.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Hello - 握手第一步是客户端发送 ClientHello 消息。包括了服务器需要和客户端建立 SSL 连接需要的所有信息，包括加密套件和最大支持的 SSL 版本等。服务器端会响应 ServerHello 消息，包括了客户端需要的类似的信息，确定的加密套件，和将要使用的 SSL 版本。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Certificate Exchange - Now that contact has been established, the server has to prove its identity to the client. This is achieved using its SSL certificate, which is a very tiny bit like its passport. An SSL certificate contains various pieces of data, including the name of the owner, the property (eg. domain) it is attached to, the certificate’s public key, the digital signature and information about the certificate’s validity dates. The client checks that it either implicitly trusts the certificate, or that it is verified and trusted by one of several Certificate Authorities (CAs) that it also implicitly trusts. Much more about this shortly. Note that the server is also allowed to require a certificate to prove the client’s identity, but this typically only happens in very sensitive applications.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
证书交换 - 现在初步的连接已经建立了，服务器端需要证明自己的身份。这个会使用 SSL 证书来完成，SSL 证书像签证一样很小。SSL 证书包括了各种信息，例如所有者的名字，所属的资源（例如域名），证书的公钥，数字签名，和证书的有效期。客户端使用自己信任的证书，或者被权威 CA 信任的证书检查这些信息。注意，服务器端也允许通过证书验证客户端的身份，不过这个通常只会发生在保密要求比较高的应用里面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Key Exchange - The encryption of the actual message data exchanged by the client and server will be done using a symmetric algorithm, the exact nature of which was already agreed during the Hello phase. A symmetric algorithm uses a single key for both encryption and decryption, in contrast to asymmetric algorithms that require a public/private key pair. Both parties need to agree on this single, symmetric key, a process that is accomplished securely using asymmetric encryption and the server’s public/private keys.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
密码交换 - 客户端和服务器端用来加密真实数据的加密算法会使用一个对称加密的算法，是在 hello 阶段协商的。对称加密的算法使用一个密码来加密和解密，不同于非对称加密需要使用公钥和私钥对。双方需要通过非对称加密来协商和同意使用这个密码。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
The client generates a random key to be used for the main, symmetric algorithm. It encrypts it using an algorithm also agreed upon during the Hello phase, and the server’s public key (found on its SSL certificate). It sends this encrypted key to the server, where it is decrypted using the server’s private key, and the interesting parts of the handshake are complete. The parties are sufficiently happy that they are talking to the right person, and have secretly agreed on a key to symmetrically encrypt the data that they are about to send each other. HTTP requests and responses can now be sent by forming a plaintext message and then encrypting and sending it. The other party is the only one who knows how to decrypt this message, and so Man In The Middle Attackers are unable to read or modify any requests that they may intercept.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Certificates
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
3.1 Trust
At its most basic level, an SSL certificate is simply a text file, and anyone with a text editor can create one. You can in fact trivially create a certificate claiming that you are Google Inc. and that you control the domain gmail.com. If this were the whole story then SSL would be a joke; identity verification would essentially be the client asking the server “are you Google?”, the server replying “er, yeah totally, here’s a piece of paper with ‘I am Google’ written on it” and the client saying “OK great, here’s all my data.” The magic that prevents this farce is in the digital signature, which allows a party to verify that another party’s piece of paper really is legit.
&lt;/p&gt;
&lt;p&gt;
There are 2 sensible reasons why you might trust a certificate:
&lt;/p&gt;
&lt;p&gt;
If it’s on a list of certificates that you trust implicitly
If it’s able to prove that it is trusted by the controller of one of the certificates on the above list
The first criteria is easy to check. Your browser has a pre-installed list of trusted SSL certificates from Certificate Authorities (CAs) that you can view, add and remove from. These certificates are controlled by a centralised group of (in theory, and generally in practice) extremely secure, reliable and trustworthy organisations like Symantec, Comodo and GoDaddy. If a server presents a certificate from that list then you know you can trust them.
&lt;/p&gt;
&lt;p&gt;
The second criteria is much harder. It’s easy for a server to say “er yeah, my name is er, Microsoft, you trust Symantec and er, they totally trust me, so it’s all cool.” A somewhat smart client might then go and ask Symantec “I’ve got a Microsoft here who say that you trust them, is this true?” But even if Symantec say “yep, we know them, Microsoft are legit”, you still don’t know whether the server claiming to be Microsoft actually is Microsoft or something much worse. This is where digital signatures come in.
&lt;/p&gt;
&lt;p&gt;
3.2 Digital signatures
As already noted, SSL certificates have an associated public/private key pair. The public key is distributed as part of the certificate, and the private key is kept incredibly safely guarded. This pair of asymmetric keys is used in the SSL handshake to exchange a further key for both parties to symmetrically encrypt and decrypt data. The client uses the server’s public key to encrypt the symmetric key and send it securely to the server, and the server uses its private key to decrypt it. Anyone can encrypt using the public key, but only the server can decrypt using the private key.
&lt;/p&gt;
&lt;p&gt;
The opposite is true for a digital signature. A certificate can be “signed” by another authority, whereby the authority effectively goes on record as saying “we have verified that the controller of this certificate also controls the property (domain) listed on the certificate”. In this case the authority uses their private key to (broadly speaking) encrypt the contents of the certificate, and this cipher text is attached to the certificate as its digital signature. Anyone can decrypt this signature using the authority’s public key, and verify that it results in the expected decrypted value. But only the authority can encrypt content using the private key, and so only the authority can actually create a valid signature in the first place.
&lt;/p&gt;
&lt;p&gt;
So if a server comes along claiming to have a certificate for Microsoft.com that is signed by Symantec (or some other CA), your browser doesn’t have to take its word for it. If it is legit, Symantec will have used their (ultra-secret) private key to generate the server’s SSL certificate’s digital signature, and so your browser use can use their (ultra-public) public key to check that this signature is valid. Symantec will have taken steps to ensure the organisation they are signing for really does own Microsoft.com, and so given that your client trusts Symantec, it can be sure that it really is talking to Microsoft Inc.
&lt;/p&gt;
&lt;p&gt;
3.3 Self-signing
Note that all root CA certificates are “self-signed”, meaning that the digital signature is generated using the certificate’s own private key. There’s nothing intrinsically special about a root CA’s certificate - you can generate your own self-signed certificate and use this to sign other certificates if you want. But since your random certificate is not pre-loaded as a CA into any browsers anywhere, none of them will trust you to sign either your own or other certificates. You are effectively saying “er yeah, I’m totally Microsoft, here’s an official certificate of identity issued and signed by myself,” and all properly functioning browsers will throw up a very scary error message in response to your dodgy credentials.
&lt;/p&gt;
&lt;p&gt;
This puts an enormous burden on all browser and OS publishers to trust only squeaky clean root CAs, as these are the organisations that their users end up trusting to vet websites and keep certificates safe. This is not an easy task.
&lt;/p&gt;
&lt;p&gt;
3.4 What are you trusting?
It’s interesting to note that your client is technically not trying to verify whether or not it should trust the party that sent it a certificate, but whether it should trust the public key contained in the certificate. SSL certificates are completely open and public, so any attacker could grab Microsoft’s certificate, intercept a client’s request to Microsoft.com and present the legitimate certificate to it. The client would accept this and happily begin the handshake. However, when the client encrypts the key that will be used for actual data encryption, it will do so using the real Microsoft’s public key from this real certificate. Since the attacker doesn’t have Microsoft’s private key in order to decrypt it, they are now stuck. Even if the handshake is completed, they will still not be able to decrypt the key, and so will not be able to decrypt any of the data that the client sends to them. Order is maintained as long as the attacker doesn’t control a trusted certificate’s private key. If the client is somehow tricked into trusting a certificate and public key whose private key is controlled by an attacker, trouble begins.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Really really fun facts
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
4.1 Can a coffee shop monitor my HTTPS traffic over their network?
Nope. The magic of public-key cryptography means that an attacker can watch every single byte of data exchanged between your client and the server and still have no idea what you are saying to each other beyond roughly how much data you are exchanging. However, your normal HTTP traffic is still very vulnerable on an insecure wi-fi network, and a flimsy website can fall victim to any number of workarounds that somehow trick you into sending HTTPS traffic either over plain HTTP or just to the wrong place completely. For example, even if a login form submits a username/password combo over HTTPS, if the form itself is loaded insecurely over HTTP then an attacker could intercept the form’s HTML on its way to your machine and modify it to send the login details to their own endpoint.
&lt;/p&gt;
&lt;p&gt;
4.2 Can my company monitor my HTTPS traffic over their network?
If you are also using a machine controlled by your company, then yes. Remember that at the root of every chain of trust lies an implicitly trusted CA, and that a list of these authorities is stored in your browser. Your company could use their access to your machine to add their own self-signed certificate to this list of CAs. They could then intercept all of your HTTPS requests, presenting certificates claiming to represent the appropriate website, signed by their fake-CA and therefore unquestioningly trusted by your browser. Since you would be encrypting all of your HTTPS requests using their dodgy certificate’s public key, they could use the corresponding private key to decrypt and inspect (even modify) your request, and then send it onto it’s intended location. They probably don’t. But they could.
&lt;/p&gt;
&lt;p&gt;
Incidentally, this is also how you use a proxy to inspect and modify the otherwise inaccessible HTTPS requests made by an iPhone app.
&lt;/p&gt;
&lt;p&gt;
4.3 So what happened with Lavabit and the FBI?
Lavabit was Edward Snowden’s super-secure email provider during the NSA leaks insanity of 2013. As we’ve seen, no amount of standard hackery could allow the FBI to see any data on its way between Lavabit and its customers. Without the private key for the Lavabit SSL certificate, the agency was screwed. However, a helpful US judge told the Lavabit founder, Ladar Levison, that he had to hand over this key, effectively giving the FBI free reign to snoop traffic to its heart’s content. Levison made a valiant attempt to stall by handing over the 2,560 character key in 11 hard copy pages of 4-point type, but was slammed with an order requiring him to hand over the key in a useful format or face a $5,000/day fine until he did.
&lt;/p&gt;
&lt;p&gt;
Once he complied, GoDaddy, the Lavabit CA, revoked the certificate, having (correctly) deemed it compromised. This added the Lavabit certificate to a Certificate Revocation List (CRL), a list of discredited certificates that clients should no longer trust to provide a secure connection. Compromised, self-signed or otherwise untrustworthy certificates cause browsers to display a big red error message and to either discourage or outright prohibit further actions by the user. Unfortunately, browsers will continue to trust a broken certificate until they pull the newest updates to the CRL, a process which is apparently imperfect in practice.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Conclusion
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
HTTPS is not unbreakable, and the SSL protocol has to evolve constantly as new attacks against it are discovered and squashed. But it is still an impressively robust way of transmitting secret data without caring who sees your messages. There are of course many implementation details not mentioned here, such as the exact format and order of the handshake messages, abbreviated handshakes to pick up recent sessions without having to renegotiate keys and cipher suites, and the numerous different encryption options available at each stage. The key thing to remember is that whilst HTTPS keeps data safe on the wire to its destination, it in no way protects you (as a user or a developer) against XSS or database leaks or any of the other things-that-go-bump-in-the-night. Be happy that it’s got your back, but stay vigilant. In the immortal words of Will Smith, “Walk in shadow, move in silence, guard against extra-terrestrial violence.”
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Django Testing</title>
      <link>https://wdicc.com/django-testing/</link>
      <pubDate>Wed, 19 Jun 2019 15:38:56 +0800</pubDate>
      
      <guid>https://wdicc.com/django-testing/</guid>
      <description>
&lt;p&gt;
Django 自己的 unittest 支持的挺好，一般只需要在 app 下面加一个 tests.py 在里面写 case 就可以了。case 对应的类继承 &lt;code class=&#34;verbatim&#34;&gt;django.test.TestCase&lt;/code&gt; 就好。
&lt;/p&gt;
&lt;p&gt;
这个 &lt;code class=&#34;verbatim&#34;&gt;django.test.TestCase&lt;/code&gt; 继承自 &lt;code class=&#34;verbatim&#34;&gt;unittest.TestCase&lt;/code&gt; ，django 这个多了一个自动使用事务的功能，所以用 django 这个的话，每个测试用例执行前后会自动回滚数据库操作，这样不用你自己 cleanup 数据，还比较方便。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
setUp 和 tearDown
&lt;/h2&gt;
&lt;p&gt;
每一个测试类里面，都可以有一个 &lt;code class=&#34;verbatim&#34;&gt;setUp&lt;/code&gt; 方法，是在 case 方法执行前执行，例如一些准备工作，和一个 &lt;code class=&#34;verbatim&#34;&gt;tearDown&lt;/code&gt; 方法，在 case 执行之后执行，例如一些清理工作。还可以有若干个使用 &lt;code class=&#34;verbatim&#34;&gt;test_&lt;/code&gt; 开头的测试用例，这些 &lt;code class=&#34;verbatim&#34;&gt;setUp&lt;/code&gt; 其实类似于把每个测试用例里面共同的部分提取出来一样，不过是不用你在每个 case 里面单独调用了，会自动处理。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
setUpClass 和 tearDownClass
&lt;/h2&gt;
&lt;p&gt;
django 还提供了 &lt;code class=&#34;verbatim&#34;&gt;setUpClass&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;tearDownClass&lt;/code&gt; ，类似上面的 &lt;code class=&#34;verbatim&#34;&gt;setUp&lt;/code&gt; 方法，不过这个是每个 class 只会执行一次。另外按照&lt;a href=&#34;https://medium.com/@nhatcuong/django-test-fixture-setup-setupclass-and-setuptestdata-72b6d944cdef&#34;&gt;这里&lt;/a&gt;的说法， &lt;code class=&#34;verbatim&#34;&gt;setUpClass&lt;/code&gt; 不会使用事务，不过我看源码(django 2.1.4) 好像是会的，我没测试。。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;setUpClass&lt;/span&gt;(cls):
        &lt;span style=&#34;color:#007020&#34;&gt;super&lt;/span&gt;()&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;setUpClass()
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;not&lt;/span&gt; connections_support_transactions():
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt;
        cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;cls_atomics &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;_enter_atomics()

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;fixtures:
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; db_name &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;_databases_names(include_mirrors&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;False):
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;try&lt;/span&gt;:
                    call_command(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;loaddata&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#333&#34;&gt;*&lt;/span&gt;cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;fixtures, &lt;span style=&#34;color:#333&#34;&gt;**&lt;/span&gt;{&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;verbosity&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;database&amp;#39;&lt;/span&gt;: db_name})
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#f00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;:
                    cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;_rollback_atomics(cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;cls_atomics)
                    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;raise&lt;/span&gt;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;try&lt;/span&gt;:
            cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;setUpTestData()
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#f00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;:
            cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;_rollback_atomics(cls&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;cls_atomics)
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;raise&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
代码可以看到，还有一个 &lt;code class=&#34;verbatim&#34;&gt;setUpTestData&lt;/code&gt; 可以用。如果只是准备数据库数据的话，感觉后面这个更精准一点。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
测试用例
&lt;/h2&gt;
&lt;p&gt;
case 我觉得一般可以分两种，方法测试，和接口测试。
&lt;/p&gt;
&lt;p&gt;
方法测试指针对一些工具方法什么的测试，当然这个说法并不严谨，将就理解吧。我把这些归类为不涉及到数据库操作的测试。
&lt;/p&gt;
&lt;p&gt;
接口测试，一般会涉及到数据库操作，需要验证登录啊，参数什么的。
&lt;/p&gt;
&lt;p&gt;
Django 里面，每个测试用例之间是通过事务互相隔离的，所以不用担心互相之间会有影响。
&lt;/p&gt;
&lt;p&gt;
接口测试可以通过 &lt;code class=&#34;verbatim&#34;&gt;django.test.Client&lt;/code&gt; 来访问你的接口，然后比对返回结果，或者比对数据库的数据来验证。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
fixtures
&lt;/h2&gt;
&lt;p&gt;
有时候一些接口是依赖已有数据的，比如一个返回所有用户的接口，那测试的时候数据库是需要有用户才能返回的。这个可以通过 fixture 来 moke 数据。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;fixture&lt;/code&gt; 就是一些 json 文件，里面放的是和 model 的数据，这样一个测试如果需要某几个 model 对应的表里面事先有数据，那可以把他们放到 fixture 文件里面，让 django 在运行之前先 load 到数据库就可以了。
&lt;/p&gt;
&lt;p&gt;
这些 json 文件自己编写会死，Django 提供了 &lt;code class=&#34;verbatim&#34;&gt;manage.py dumpdata --indent 4 [app_label[.ModelName] [app_label[.ModelName]&lt;/code&gt; 功能，可以方便你导出数据库里面已有的数据。不指定 app_label 和 modelname 就会导出全部的，一般只导出自己需要的就好。注意 json 文件是可以支持缩进的。
&lt;/p&gt;
&lt;p&gt;
如果从比如开发库之类的倒数据，会觉得数据有点乱，从测试库倒数据似乎比较清净，因为每次测试都是一个空的数据库。有一个方法是在测试用例里面创建依赖的数据，但是测试执行完了再执行 &lt;code class=&#34;verbatim&#34;&gt;manage.py dumpdata&lt;/code&gt; 已经什么数据都没有了。这个时候可以在测试用例里面使用 &lt;code class=&#34;verbatim&#34;&gt;django.core.management.call_command&lt;/code&gt; 来执行 dump，例如 
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;call_command(
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;dumpdata&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;--indent&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;4&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app_label&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;ModelName&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app_label&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;ModelName&amp;#39;&lt;/span&gt;
)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这个其实类似前面 &lt;code class=&#34;verbatim&#34;&gt;setUpClass&lt;/code&gt; 里面的加载 fixtures 的代码用了类似的方法 &lt;code class=&#34;verbatim&#34;&gt;call_command(&amp;#39;loaddata&amp;#39;, *cls.fixtures, **{&amp;#39;verbosity&amp;#39;: 0, &amp;#39;database&amp;#39;: db_name})&lt;/code&gt; 。
&lt;/p&gt;
&lt;p&gt;
命令行执行测试的时候，会打印出来 dump 出来的数据，把他们存到一个 json 文件然后引入就可以了。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
给测试提速
&lt;/h2&gt;
&lt;p&gt;
有一个提升测试速度的方法，是使用 &lt;code class=&#34;verbatim&#34;&gt;-k&lt;/code&gt; 参数，这个参数会保留测试的数据库，不会每次都删除重建，这样节省一些时间。
&lt;/p&gt;
&lt;p&gt;
还可以使用 &lt;code class=&#34;verbatim&#34;&gt;--parallel N&lt;/code&gt; 参数来增加并行数量。如果你用 coverage 那整个命令是类似这样的 &lt;code class=&#34;verbatim&#34;&gt;coverage run --parallel-mode --concurrency=multiprocessing manage.py test -k --parallel 3&lt;/code&gt; 。使用并行之后，会发现 coverage 不工作了，这是因为并行的时候，每个线程都会单独写一个 coverage 结果文件，所以执行 &lt;code class=&#34;verbatim&#34;&gt;coverage report&lt;/code&gt; 之前，执行一下 &lt;code class=&#34;verbatim&#34;&gt;coverage combine&lt;/code&gt; 合并到一个文件就可以了。
&lt;/p&gt;
&lt;p&gt;
Django 还是做的挺不错的。测试这么方便，实际很适合使用 TDD 方式开发。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
其他
&lt;/h2&gt;
&lt;p&gt;
看到&lt;a href=&#34;https://adamj.eu/tech/2019/07/15/djangos-test-case-classes-and-a-three-times-speed-up/&#34;&gt;一篇文章&lt;/a&gt;，从 &lt;code&gt;TransactionTestCase&lt;/code&gt; 替换到 &lt;code&gt;TestCase&lt;/code&gt; 速度提升了 3 倍。
&lt;/p&gt;
&lt;p&gt;
Django 里面有三个测试类
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;SimpleTestCase&lt;/code&gt; 是最简单的。提供 &lt;code&gt;unittest.TestCase&lt;/code&gt; 基础的功能。默认屏蔽了数据库的访问，因为对数据库里面的修改没有隔离，所以应该在没有数据库操作的时候使用他。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;TransactionTestCase&lt;/code&gt; 继承自 &lt;code&gt;SimpleTestCase&lt;/code&gt; ，允许数据库操作，测试完毕之后会删除数据库里面的所有数据。会比较慢。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;TestCase&lt;/code&gt; 是我们平时用的。继承自 &lt;code&gt;TransactionTestCase&lt;/code&gt; ，使用事务来回滚所有操作，这样比遍历所有表快一点，这样你的操作也不能真实的提交，但是我们跑测试的时候一般也不需要提交。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;code&gt;TransactionTestCase&lt;/code&gt; 允许你的代码自己使用和管理事务， &lt;code&gt;TestCase&lt;/code&gt; 自己使用了事务。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Add Disk for Aws</title>
      <link>https://wdicc.com/add-disk-for-aws/</link>
      <pubDate>Wed, 19 Jun 2019 15:29:33 +0800</pubDate>
      
      <guid>https://wdicc.com/add-disk-for-aws/</guid>
      <description>&lt;p&gt;
AWS 的 ec2 支持不停机扩展磁盘，体验还不错，记录一下操作。
&lt;/p&gt;
&lt;p&gt;
先看看磁盘是不是支持，例如下面的 GPT 的是支持的
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo gdisk -l /dev/xvda
GPT fdisk (gdisk) version 0.8.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.
Disk /dev/xvda: 20971520 sectors, 10.0 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): 826F22DD-540A-4299-AB06-F03EE98F1CAF
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 20971486
Partitions will be aligned on 2048-sector boundaries
Total free space is 2014 sectors (1007.0 KiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            4096        20971486   10.0 GiB    8300  Linux
 128            2048            4095   1024.0 KiB  EF02  BIOS Boot Partition&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
目前磁盘大小
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        2.0G   56K  2.0G   1% /dev
tmpfs           2.0G     0  2.0G   0% /dev/shm
/dev/xvda1      9.8G  7.3G  2.4G  76% /&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
去 aws 后台调整一下磁盘大小，只能增加不能减少。这个也可以通过 aws 的命令行来做。
&lt;/p&gt;
&lt;p&gt;
然后等后台显示完成之后，回来看磁盘大小，可以看到 &lt;code class=&#34;verbatim&#34;&gt;xvda&lt;/code&gt; 已经是 15G 了， &lt;code class=&#34;verbatim&#34;&gt;xvda1&lt;/code&gt; 还是 10G。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0  15G  0 disk
└─xvda1 202:1    0  10G  0 part /&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
扩展分区大小
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[wd@ba2 ~]$ sudo growpart /dev/xvda 1
CHANGED: disk=/dev/xvda partition=1: start=4096 old: size=20967390,end=20971486 new: size=31453150,end=31457246&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
扩展文件系统大小
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo resize2fs /dev/xvda1
resize2fs 1.42.12 (29-Aug-2014)
Filesystem at /dev/xvda1 is mounted on /; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 1
The filesystem on /dev/xvda1 is now 3931643 (4k) blocks long.&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
看看大小
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        2.0G   56K  2.0G   1% /dev
tmpfs           2.0G     0  2.0G   0% /dev/shm
/dev/xvda1       15G  7.3G  7.3G  50% /&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
参考链接: &lt;a href=&#34;https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&#34;&gt;&lt;a href=&#34;https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&#34;&gt;https://docs.amazonaws.cn/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debuging Django</title>
      <link>https://wdicc.com/debuging-django/</link>
      <pubDate>Mon, 29 Apr 2019 14:41:12 +0800</pubDate>
      
      <guid>https://wdicc.com/debuging-django/</guid>
      <description>&lt;p&gt;
起初 hackernews 看到一个文章 &lt;a href=&#34;https://news.ycombinator.com/item?id=19717786&#34;&gt;PySnooper: Never use print for debugging again&lt;/a&gt;，觉得挺有意思的，结果把 hackernews 的讨论看了一下发现有意思东西更多一点，总结一下。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/cool-RR/pysnooper&#34;&gt;PySnooper&lt;/a&gt;: Never use print for debugging again，只需要给函数加一个装饰器，就可以把函数执行的每一步的结果都打印出来。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://django-extensions.readthedocs.io/en/latest/runserver_plus.html&#34;&gt;django-extensions&lt;/a&gt; 的 runserver-plus 配合 &lt;a href=&#34;https://werkzeug.palletsprojects.com/en/0.15.x/debug/#using-the-debugger&#34;&gt;Werkzeug&lt;/a&gt; 可以实现在遇到异常的时候，支持在 web 上面调试代码，打印异常的时候的上下文内容什么的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Python 自己的 &lt;a href=&#34;https://docs.python.org/3/library/functions.html#breakpoint&#34;&gt;breakpoint&lt;/a&gt; 函数，执行到的时候默认会进入 pdb.set_trace() 状态方便你进行上下文调试。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/gruns/icecream&#34;&gt;icecream&lt;/a&gt; 提供了一个方便的 ic 函数，可以无感的加入到你的代码里面，不影响你的代码的执行结果，但是会打印传给它的参数和执行结果。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/robdmc/behold&#34;&gt;Behold&lt;/a&gt;: A debugging tool for large Python projects，可以替代你写冗长的打印命令。不过感觉它自己的语法似乎也并不方便。。。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
VS Code 提供的 &lt;a href=&#34;https://code.visualstudio.com/docs/editor/debugging#_logpoints&#34;&gt;Logpoints&lt;/a&gt; 和 Visual Studio 提供的 &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/debugger/using-breakpoints?view=vs-2019#BKMK_set_a_data_breakpoint_managed&#34;&gt;Break When Value Changes&lt;/a&gt;。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/cknd/stackprinter&#34;&gt;stackprinter&lt;/a&gt; 可以让你的堆栈打印更友好，打印堆栈的时候还可以输出上下文的取值。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
pdb, epdb，ipdb, 应该都是类似的东西，其中 pdb 是自带的。通过给代码增加 import ipdb ipdb.set_trace() 调试。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/tylerwince/pydbg&#34;&gt;pydbg&lt;/a&gt; 替代 print 的。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
另外&lt;a href=&#34;https://stribny.name/blog/2019/06/debugging-python-programs&#34;&gt;一篇文章&lt;/a&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
可以使用 f-string 调试
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;i={i}, processed_word={processed_word}&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#888&#34;&gt;# python 3.6&lt;/span&gt;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(f&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;{i=}, {processed_word=}&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#888&#34;&gt;# python 3.8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
PySnooper: 感觉有点太重了，一般也不是总是需要打印这些。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 logging： 这个和 f-string 感觉没啥大差别。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 pdb 的 breakpoint() 进入 pdb 交互。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 vscode。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
使用 stackprinter。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>How to Create an Index in Django Without Downtime</title>
      <link>https://wdicc.com/how-to-create-an-index-in-django-without-downtime/</link>
      <pubDate>Fri, 26 Apr 2019 11:46:27 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-create-an-index-in-django-without-downtime/</guid>
      <description>
&lt;p&gt;
django 自己带了一个 ORM 实现，基本可以通过 ORM 管理数据库，这样用户可以在不会 SQL 的情况下使用数据库。在对 model 的属性（字段）做了修改之后，通过执行 &lt;code class=&#34;verbatim&#34;&gt;makemigrations&lt;/code&gt; 可以生成一个 migrate 文件，然后执行 &lt;code class=&#34;verbatim&#34;&gt;migrate&lt;/code&gt; 命令可以把这些修改应用到数据库。同时在数据库里面，也会记录当前 migrate 执行的状态，这样能保证数据库的状态和 django 自己认为的数据库的状态是一致的。
&lt;/p&gt;
&lt;p&gt;
但是这里可能会有一个问题，我们有多个数据库环境，也有多个人一起开发，这样就会导致这个有点混乱，多个人修改 model 后都执行了 &lt;code class=&#34;verbatim&#34;&gt;makemigrations&lt;/code&gt; 的话，可能会有冲突和问题（实际上 django 已经考虑过这个问题的，migrate 文件都是按照时间戳来命名的，冲突可能性也不大，但是为了避免新手加入弄不好，所以我们采取了另外一个方法做这个事情）。
&lt;/p&gt;
&lt;p&gt;
下面的内容翻译自 &lt;a href=&#34;https://realpython.com/create-django-index-without-downtime/&#34;&gt;https://realpython.com/create-django-index-without-downtime/&lt;/a&gt; ，我们使用了里面提到的 &lt;code class=&#34;verbatim&#34;&gt;sqlmigrate&lt;/code&gt; 的方式。
&lt;/p&gt;
&lt;p&gt;
管理数据库变更在软件开发中是一个比较大的挑战。幸运的是，从 django 1.7 开始有了内置的数据库变更处理框架。这个框架对于处理数据库变更来说很强大很好用。但是为了保证框架提供的灵活性，有一些妥协在里面。为了理解 django 数据库变更框架的限制，我们将解决一个有名的问题：如何在不停机情况下通过 django 创建索引。
&lt;/p&gt;
&lt;p&gt;
在这个教程里面，你将学习到：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
django 是什么时候和如何产生数据库变更的
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
django 是如何执行变更的
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如何按照需要编辑这些变更
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
这篇文章面向的是对 django 数据库变更（migrations）已经有所了解的人的。如果对这些还不了解，那可以先看看 &lt;a href=&#34;https://realpython.com/django-migrations-a-primer/&#34;&gt;Django Migrations: A Primer&lt;/a&gt; 。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
在 django 里面创建索引存在的问题
&lt;/h1&gt;
&lt;p&gt;
一个常见的变更是当你的数据增加的时候会需要建索引。索引可以查询的速度和应用的响应速度。
&lt;/p&gt;
&lt;p&gt;
大部分数据库里面增加索引需要在表上面加一个排它锁。当索引创建的时候，排它锁不允许进行数据修改（DML）操作，例如 UPDATE, INSERT, 和 DELETE 。
&lt;/p&gt;
&lt;p&gt;
当数据库执行这些操作的时候，会立刻加锁。例如如果一个用户登录的时候，django 会更新 auth_user 表的 last_login 字段。为了执行这个操作，数据库会先请求一个行锁，如果这行被其他连接加了锁，那你可能会得到一个&lt;a href=&#34;https://docs.djangoproject.com/en/2.1/ref/exceptions/#database-exceptions&#34;&gt;数据库异常&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
锁表会让系统在做变更的时候不可用。表越大，创建索引的时间越长，系统不可用时间越长。
&lt;/p&gt;
&lt;p&gt;
一些数据库提供了不锁表建索引的方法。例如，在 PostgreSQL 里面可以使用 &lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createindex.html&#34;&gt;CONCURRENTLY&lt;/a&gt; 关键字：
&lt;/p&gt;
&lt;div class=&#34;src src-sql&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;INDEX&lt;/span&gt; CONCURRENTLY ix &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;table&lt;/span&gt; (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;column&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在 Oracle 里面，有一个 ONLINE 选项允许在创建索引的时候执行 DML 操作：
&lt;/p&gt;
&lt;div class=&#34;src src-sql&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;INDEX&lt;/span&gt; ix &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;table&lt;/span&gt; (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;column&lt;/span&gt;) ONLINE;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在生成数据库变更的时候，django 不会使用这些关键字。执行这些变更创建索引会导致数据库增加表的排他锁，而阻止 DML 操作。
&lt;/p&gt;
&lt;p&gt;
异步创建索引也有一些潜在的问题。最好提前了解一下自己数据库可能存在的问题。例如，在 PostgreSQL 里面异步创建索引的时候时间会比较长，因为它需要对表做一些额外的扫描。
&lt;/p&gt;
&lt;p&gt;
这篇文章里面，会使用 django 的数据库变更在一个大表上面创建索引而不会带来停机时间。
&lt;/p&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
配置
&lt;/h1&gt;
&lt;p&gt;
这里将在一个叫 app 的应用里面使用一个 Sale 模型。在真实世界，类似 Sale 这样的模型一般是数据库的主要的表，会存储大量的数据。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;# models.py&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Sale&lt;/span&gt;(models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Model):
    sold_at &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;DateTimeField(
        auto_now_add&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
    )
    charged_amount &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;PositiveIntegerField()
To create the table, generate the initial migration &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;apply&lt;/span&gt; it:&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
生成初始的数据库变更，并创建这个表：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py makemigrations
Migrations &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;:
  app/migrations/0001_initial.py
    - Create model Sale

$ python manage migrate
Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0001_initial... OK&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
过一段时间，sales 表会变的很大，用户会开始抱怨访问起来比较慢。通过监控数据库，发现大量查询都使用了 sold_at 列。为了提速，你决定给这列加一个索引。
&lt;/p&gt;
&lt;p&gt;
为了给 sold_at 加索引，对模型做如下变更：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;# models.py&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Sale&lt;/span&gt;(models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Model):
    sold_at &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;DateTimeField(
        auto_now_add&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
        db_index&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,  &lt;span style=&#34;color:#888&#34;&gt;# 变更在这里&lt;/span&gt;
    )
    charged_amount &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;PositiveIntegerField()&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
如果你执行这个数据库变更，django 会在表上面创建索引，表会加锁直到索引创建完毕。在一个很大的表上面创建索引的时候会需要一些时间，你想要避免停机。
&lt;/p&gt;
&lt;p&gt;
在本地开发环境的时候，数据库比较小连接也不多，这个变更会很快执行完毕。但是，在有很多连接的大数据库，加锁创建索引会需要一些时间。
&lt;/p&gt;
&lt;p&gt;
下面的步骤会讲如何通过修改 django 生成的数据库变更来达到不停机创建索引的操作。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
Fake Migration
&lt;/h1&gt;
&lt;p&gt;
首先尝试手工建立这个索引。我们将生成这个数据库变更，但是并不用 django 执行。而使用在数据库里面手动执行的方式，然后让 django 相信我们已经做了这个变更。
&lt;/p&gt;
&lt;p&gt;
首先，生成数据库变更：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;$&lt;/span&gt; python manage&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;py makemigrations &lt;span style=&#34;color:#333&#34;&gt;--&lt;/span&gt;name add_index_fake
Migrations &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;:
  app&lt;span style=&#34;color:#333&#34;&gt;/&lt;/span&gt;migrations&lt;span style=&#34;color:#333&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40e;font-weight:bold&#34;&gt;0002&lt;/span&gt;_add_index_fake&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;py
    &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; Alter field sold_at on sale&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
使用 sqlmigrate 命令查看 django 在这次变更里面打算使用的 SQL：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py sqlmigrate app &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0002&lt;/span&gt;

BEGIN;
--
-- Alter field sold_at on sale
--
CREATE INDEX &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale_sold_at_b9438ae4&amp;#34;&lt;/span&gt; ON &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sold_at&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;;
COMMIT;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
为了不加锁创建索引，需要对准备在数据执行的命令做一个修改，增加 CONCURRENTLY 关键字：
&lt;/p&gt;
&lt;div class=&#34;src src-sql&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;app&lt;span style=&#34;color:#333&#34;&gt;=#&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;INDEX&lt;/span&gt; CONCURRENTLY &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale_sold_at_b9438ae4&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale&amp;#34;&lt;/span&gt; (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sold_at&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
注意这里没有执行 BEGIN 和 COMMIT 部分，忽略掉这个可以避免数据库创建事务来执行，关于事务后面会讨论。
&lt;/p&gt;
&lt;p&gt;
After you executed the command, if you try to apply migrations, then you will get the following error:
执行之后，如果执行生成的数据库变更，会遇到下面的错误：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate

Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0002_add_index_fake...Traceback &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;most recent call last&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;:
  File &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;venv/lib/python3.7/site-packages/django/db/backends/utils.py&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;85&lt;/span&gt;, in _execute
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; self.cursor.execute&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;sql, params&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;


psycopg2.ProgrammingError: relation &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale_sold_at_b9438ae4&amp;#34;&lt;/span&gt; already exists&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
django 会报错说这个索引已经存在了，所以没法继续执行这个数据库变更了。因为我们已经在数据库里面创建了这个索引，所以需要告诉 django 已经执行了。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
How to Fake a Migration
&lt;/h2&gt;
&lt;p&gt;
django 提供了一个内置的方法来标记一个变更已经执行过了，就是使用 –fake 参数。
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate --fake
Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0002_add_index_fake... FAKED
Django didn’t raise an error this time. In fact, Django didn’t really apply any migration. It just marked it as executed &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;or FAKED&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
使用 fake 的时候需要注意的几个问题：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
手动执行的命令必须要和 django 生成的有相同的效果：记得使用 sqlmigrate 来生成 SQL。如果两个命令不一致，会导致数据库和 django 里面的模型之间的状态不一致。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
其他没有执行的数据库变更也会 faked：如果有多个没有应用的数据库变更的时候，它们也会被 fake。执行变更前，确认是不是只有你想要的变更被 fake，否则可能会导致数据库和 django 不一致。有一个方式是指定需要 fake 的变更。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
需要有直接连接数据库的权限：你需要在数据库执行那个 SQL。同时，在生产数据库执行命令是危险的，应该尽量避免。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
自动化的工具可能需要调整：如果你有自动部署工具（例如 CI，CD 或者其他工具），可能需要对它们进行调整。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Cleanup
&lt;/h2&gt;
&lt;p&gt;
继续下一步之前，需要把数据库回复到初始的状态。执行下面的操作：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0001&lt;/span&gt;
Operations to perform:
  Target specific migration: 0001_initial, from app
Running migrations:
  Rendering model states... DONE
  Unapplying app.0002_add_index_fake... OK&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
django 把第二步做的修改回滚了，现在可以安全的把变更文件也删除了：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ rm app/migrations/0002_add_index_fake.py&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
确认下是不是都 ok 了：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py showmigrations app
app
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;X&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0001_initial&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
只有第一个变更被执行了，并且也没有其他变更了。
&lt;/p&gt;
&lt;h1 id=&#34;headline-6&#34;&gt;
Execute Raw SQL in Migrations
&lt;/h1&gt;
&lt;p&gt;
在上一个小节里面，通过在数据库直接执行 SQL 然后 fake 那个数据库变更达到我们的目的。还有一个更好的办法。
&lt;/p&gt;
&lt;p&gt;
Django 提供了一个方法可以在数据库变更的时候通过 RunSQL 来执行原始 SQL。这里我们试着使用它来代替我们直接在数据库执行 sql。
&lt;/p&gt;
&lt;p&gt;
首先，生成一个空的数据库变更：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py makemigrations app --empty --name add_index_runsql
Migrations &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;:
  app/migrations/0002_add_index_runsql.py&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
编辑变更文件，增加一个 RunSQL 操作：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;# migrations/0002_add_index_runsql.py&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; migrations, models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Migration&lt;/span&gt;(migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Migration):
    atomic &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False

    dependencies &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;),
    ]

    operations &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;RunSQL(
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;CREATE INDEX &amp;#34;app_sale_sold_at_b9438ae4&amp;#34; &amp;#39;&lt;/span&gt;
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;ON &amp;#34;app_sale&amp;#34; (&amp;#34;sold_at&amp;#34;);&amp;#39;&lt;/span&gt;,
        ),
    ]&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
执行这个变更的时候，会有如下的输出：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate
Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0002_add_index_runsql... OK&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
看着好像没啥问题，但是其实有一个问题，再次生成数据库变更：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py makemigrations --name leftover_migration
Migrations &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;:
  app/migrations/0003_leftover_migration.py
    - Alter field sold_at on sale&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
django 又生成了一次相同的变更，这是怎么回事呢？
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Cleanup
&lt;/h2&gt;
&lt;p&gt;
Before we can answer that question, you need to clean up and undo the changes you made to the database. Start by deleting the last migration. It was not applied, so it’s safe to delete:
回答那个问题前，先回滚一下对数据库做的操作。因为最后那个变更没有执行，所以可以直接删除：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ rm app/migrations/0003_leftover_migration.py&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
列出所有的变更：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py showmigrations app
app
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;X&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0001_initial
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;X&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0002_add_index_runsql&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
第三个变更消失了，但是第二个变更已经执行了，所以还在。我们需要回滚到初始的状态，执行回滚的变更看看：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate app &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0001&lt;/span&gt;
Operations to perform:
  Target specific migration: 0001_initial, from app
Running migrations:
  Rendering model states... DONE
  Unapplying app.0002_add_index_runsql...Traceback &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;most recent call last&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;:

NotImplementedError: You cannot reverse this operation&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
django 无法回滚那个数据库变更。
&lt;/p&gt;
&lt;h1 id=&#34;headline-8&#34;&gt;
Reverse Migration Operation
&lt;/h1&gt;
&lt;p&gt;
To reverse a migration, Django executes an opposite action for every operation. In this case, the reverse of adding an index is to drop it. As you’ve already seen, when a migration is reversible, you can unapply it. Just like you can use checkout in Git, you can reverse a migration if you execute migrate to an earlier migration.
回滚一个数据库变更，django 会执行一个反向的操作。我们这种情况下，增加索引的反向操作就是删除这个索引。就是你看到的，如果一个变更是可回滚的，那你可以回滚它。就和你可以在 git 里面使用 checkout 一样，你可以通过执行前一个变更来回滚后面的变更。
&lt;/p&gt;
&lt;p&gt;
很多内置的变更都定义了回滚的操作。例如，增加一个字段的回滚操作是删除那个字段。增加一个模型的反向操作是删除那个对于的数据库表。
&lt;/p&gt;
&lt;p&gt;
有一个操作是无法回滚的。例如，删除一个字段或者删除一个模型是无法回滚的，因为一旦这个操作执行了，数据就没了，回滚不了了。
&lt;/p&gt;
&lt;p&gt;
在前一个小节，我们使用了 RunSQL 操作。当尝试回滚的时候遇到了错误。通过错误信息可知，有一些操作无法回滚。默认情况下 django 无法回滚原始 SQL。因为 django 不知道实际执行的是什么，不能自动产生回滚对应的操作。
&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
How to Make a Migration Reversible
&lt;/h2&gt;
&lt;p&gt;
想要一个数据库变更可以回滚，那里面的所有操作必须都是可以回滚的。不能只回滚一部分，所以某一个不可回滚的操作，会导致整个数据库变更都不能回滚。
&lt;/p&gt;
&lt;p&gt;
为了使得 RunSQL 操作可以回滚，需要提供在回滚的时候执行的 SQL。可以通过 reverse_sql 参数提供。
&lt;/p&gt;
&lt;p&gt;
增加索引的回滚操作是删除它。增加一个 reverse_sql 参数：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;# migrations/0002_add_index_runsql.py&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; migrations, models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Migration&lt;/span&gt;(migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Migration):
    atomic &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False

    dependencies &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;),
    ]

    operations &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;RunSQL(
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;CREATE INDEX &amp;#34;app_sale_sold_at_b9438ae4&amp;#34; &amp;#39;&lt;/span&gt;
            &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;ON &amp;#34;app_sale&amp;#34; (&amp;#34;sold_at&amp;#34;);&amp;#39;&lt;/span&gt;,

            reverse_sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;DROP INDEX &amp;#34;app_sale_sold_at_b9438ae4&amp;#34;;&amp;#39;&lt;/span&gt;,
        ),
    ]&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
再执行一下回滚看看：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py showmigrations app
app
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;X&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0001_initial
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;X&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0002_add_index_runsql

$ python manage.py migrate app &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0001&lt;/span&gt;
Operations to perform:
  Target specific migration: 0001_initial, from app
Running migrations:
  Rendering model states... DONE
 Unapplying app.0002_add_index_runsql... OK

$ python manage.py showmigrations app
app
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;X&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0001_initial
 &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; 0002_add_index_runsql&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
第二个数据库变更也回滚了，索引被删除了。现在可以删除数据库变更文件了。
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ rm app/migrations/0002_add_index_runsql.py&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
应该尽量提供一个 reverse_sql。当一个原始 SQL 操作不需要回滚操作的时候，可以通过 migrations.RunSQL.noop 标记这个操作是可以回滚的。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;RunSQL(
    sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;,  &lt;span style=&#34;color:#888&#34;&gt;# Your forward SQL here&lt;/span&gt;
    reverse_sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;RunSQL&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;noop,
),&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;headline-10&#34;&gt;
Understand Model State and Database State
&lt;/h1&gt;
&lt;p&gt;
在上一步尝试通过手动执行 RunSQL 来创建索引的时候，即使数据库已经创建了索引，django 还是会生成对应的数据库变更。为了理解这是为什么，需要先理解 django 是如何决定生成一个新的数据库变更的。
&lt;/p&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
When Django Generates a New Migration
&lt;/h2&gt;
&lt;p&gt;
Django 在生成和执行数据库变更的时候，同步数据库和模型之间的状态。例如，当给一个模型增加一个字段的时候，Django 会在数据库里面增加一列。当从模型删除一个字段的时候，Django 会从对应的表删除那个字段。
&lt;/p&gt;
&lt;p&gt;
为了同步数据库到模型的状态，Django 会维护模型对应的状态。为了同步模型到数据库的状态，Django 生成数据库变更。生成的数据库变更会翻译成对应的不同类型的数据库里面可执行的操作。当所有的数据库变更执行之后，预期上数据库和模型之间就应该是一致的状态了。
&lt;/p&gt;
&lt;p&gt;
为了得到数据库的状态，Django 会聚合之前的所有数据库变更。当聚合之后的状态和模型当前的状态不一致的时候，Django 会生成新的数据库变更。
&lt;/p&gt;
&lt;p&gt;
上一个例子里面，我们使用原始 SQL 创建索引。因为我们用的不是常见的操作，Django 这个时候并不知道我们已经创建了这个索引。
&lt;/p&gt;
&lt;p&gt;
当 Django 聚合所有的数据库变更，然后和模型当前的状态比较之后，发现少了一个索引。这就是为什么即使你手动创建了那个索引，Django 依然会认为缺少这个索引而产生对应的数据库变更。
&lt;/p&gt;
&lt;h2 id=&#34;headline-12&#34;&gt;
How to Separate Database and State in Migrations
&lt;/h2&gt;
&lt;p&gt;
因为 Django 不能用我们想要的方式创建索引，我们需要提供我们想要执行的 SQL 同时还需要告诉 Django 知道我们已经创建了。
&lt;/p&gt;
&lt;p&gt;
换句话说，你需要在数据库里面执行一些语句，同时提供给 Django 对应的数据库变更来同步它内部的状态。Django 提供了一个特殊的数据库变更操作叫做 &lt;a href=&#34;https://docs.djangoproject.com/en/2.1/ref/migration-operations/#separatedatabaseandstate&#34;&gt;SeparateDatabaseAndState&lt;/a&gt; ，这个操作比较少见，一般只是在现在这种情况下才会使用。
&lt;/p&gt;
&lt;p&gt;
修改一个数据库变更比从头写一个容易多了，所以我们先生成一个变更，然后再修改它：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py makemigrations --name add_index_separate_database_and_state

Migrations &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;:
  app/migrations/0002_add_index_separate_database_and_state.py
    - Alter field sold_at on sale&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
下面是 Django 生成的变更，和之前的一样：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#888&#34;&gt;# migrations/0002_add_index_separate_database_and_state.py&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; migrations, models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Migration&lt;/span&gt;(migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Migration):

    dependencies &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;),
    ]

    operations &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;AlterField(
            model_name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;sale&amp;#39;&lt;/span&gt;,
            name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;sold_at&amp;#39;&lt;/span&gt;,
            field&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;DateTimeField(
                auto_now_add&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
                db_index&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
            ),
        ),
    ]&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Django 给 sold_at 字段生成了一个 AlterField 操作。这个操作会创建索引并更新状态。我们希望保留这个操作，但是提供不同的命令在数据库执行。
&lt;/p&gt;
&lt;p&gt;
再说一次，可以通过 django 来生成这个命令：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py sqlmigrate app &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0002&lt;/span&gt;
BEGIN;
--
-- Alter field sold_at on sale
--
CREATE INDEX &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale_sold_at_b9438ae4&amp;#34;&lt;/span&gt; ON &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sold_at&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;;
COMMIT;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在适当的地方添加 CONCURRENTLY 关键字：
&lt;/p&gt;
&lt;div class=&#34;src src-sql&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;INDEX&lt;/span&gt; CONCURRENTLY &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale_sold_at_b9438ae4&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;app_sale&amp;#34;&lt;/span&gt; (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sold_at&amp;#34;&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
接下来，编辑数据库变更文件，使用 SeparateDatabaseAndState 来执行修改后的 SQL：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#888&#34;&gt;# migrations/0002_add_index_separate_database_and_state.py&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; migrations, models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Migration&lt;/span&gt;(migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Migration):

    dependencies &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;),
    ]

    operations &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;SeparateDatabaseAndState(
            state_operations&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;[
                migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;AlterField(
                    model_name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;sale&amp;#39;&lt;/span&gt;,
                    name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;sold_at&amp;#39;&lt;/span&gt;,
                    field&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;DateTimeField(
                        auto_now_add&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
                        db_index&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
                    ),
                ),
            ],

            database_operations&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;[
                migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;RunSQL(sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                    CREATE INDEX CONCURRENTLY &amp;#34;app_sale_sold_at_b9438ae4&amp;#34;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                    ON &amp;#34;app_sale&amp;#34; (&amp;#34;sold_at&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;, reverse_sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                    DROP INDEX &amp;#34;app_sale_sold_at_b9438ae4&amp;#34;;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;),
            ],
        ),

    ],&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
SeparateDatabaseAndState 操作接收两个列表参数：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
state_operations 是应用到模型内部状态变更上面的。这些操作不会影响数据库。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
database_operations 是应用的数据库的变更。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
我们保留了 django 产生的 state_operations 操作。这是我们使用 SeparateDatabaseAndState 的时候的通常的做法。注意字段上面增加了 db_index=True 。这个操作是让 django 知道那个字段上有一个索引。
&lt;/p&gt;
&lt;p&gt;
然后在 django 生成的 SQL 的基础上增加了 CONCURRENTLY 关键字。然后使用了 &lt;a href=&#34;https://docs.djangoproject.com/en/2.1/ref/migration-operations/#runsql&#34;&gt;RunSQL&lt;/a&gt; 这个特殊动作执行了一个原始 SQL。
&lt;/p&gt;
&lt;p&gt;
执行这个数据库变更的时候，会有如下的输出：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate app
Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0002_add_index_separate_database_and_state...Traceback &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;most recent call last&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;:
  File &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;/venv/lib/python3.7/site-packages/django/db/backends/utils.py&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;83&lt;/span&gt;, in _execute
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; self.cursor.execute&lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
psycopg2.InternalError: CREATE INDEX CONCURRENTLY cannot run inside a transaction block&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
注意上面这个输出报错了。
&lt;/p&gt;
&lt;h1 id=&#34;headline-13&#34;&gt;
Non-Atomic Migrations
&lt;/h1&gt;
&lt;p&gt;
在 SQL 里面，CREATE, DROP, ALTER, 和 TRUNCATE 操作是数据库定义语句（DDL）。在支持在事务里面执行 DDL 的数据库，例如 &lt;a href=&#34;https://wiki.postgresql.org/wiki/Transactional_DDL_in_PostgreSQL:_A_Competitive_Analysis#Transactional_DDL&#34;&gt;PostgreSQL&lt;/a&gt;，Django 默认会在事务里面执行数据库变更操作。然而，按照上面的错误，PostgreSQL 不能在事务里面执行异步索引创建。
&lt;/p&gt;
&lt;p&gt;
为了能在数据库变更里面异步创建索引，需要告诉 django 不要在事务里面执行这个变更。需要设置如下：
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;# migrations/0002_add_index_separate_database_and_state.py&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;django.db&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; migrations, models

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Migration&lt;/span&gt;(migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;Migration):
    atomic &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False

    dependencies &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;app&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;0001_initial&amp;#39;&lt;/span&gt;),
    ]

    operations &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [
        migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;SeparateDatabaseAndState(
            state_operations&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;[
                migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;AlterField(
                    model_name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;sale&amp;#39;&lt;/span&gt;,
                    name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;sold_at&amp;#39;&lt;/span&gt;,
                    field&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;models&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;DateTimeField(
                        auto_now_add&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
                        db_index&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;True,
                    ),
                ),
            ],

            database_operations&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;[
                migrations&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;RunSQL(sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                    CREATE INDEX CONCURRENTLY &amp;#34;app_sale_sold_at_b9438ae4&amp;#34;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                    ON &amp;#34;app_sale&amp;#34; (&amp;#34;sold_at&amp;#34;);
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;,
                reverse_sql&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                    DROP INDEX &amp;#34;app_sale_sold_at_b9438ae4&amp;#34;;
&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;                &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;),
            ],
        ),

    ],&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
之后就可以执行了：
&lt;/p&gt;
&lt;div class=&#34;src src-shell&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ python manage.py migrate app
Operations to perform:
  Apply all migrations: app
Running migrations:
  Applying app.0002_add_index_separate_database_and_state... OK&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样就执行了这个变更而没有任何停机时间。
&lt;/p&gt;
&lt;p&gt;
使用 SeparateDatabaseAndState 的时候还有一下需要考虑的问题：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
数据库操作必须和状态操作一致：数据库状态和模型的状态不一致可能会导致很多问题。好的做法是在 state_operations 使用 django 产生的变更，然后 database_operations 使用编辑之后的 django 通过 sqlmigrate 产生的 SQL。（其实就是上面例子里面的方式）
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
非原子性的数据库操作在遇到错误的时候不能回滚：如果在执行数据库变更的时候遇到了错误，那你将不能回滚。这时候就必须整个回滚或者手动操作执行了。把尽量少的非原子性的操作放一起比较好。如果有其他的操作，可以把它们放到另一个单独的数据库变更里面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
数据库变更也可能和数据库类型有关：django 会根据使用的后端数据库类型产生 SQL。可能可以支持其他类型的数据库，但是并不能保证一定可以。如果需要支持不同数据库类型，那需要根据需要修改一下这个方案。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;headline-14&#34;&gt;
Conclusion
&lt;/h1&gt;
&lt;p&gt;
这篇文章主要是解决了一个大量数据的数据库里面，想要提高用户响应速度，但是不想增加停机时间的问题。
&lt;/p&gt;
&lt;p&gt;
（我感觉作者废话太多了，实在懒得翻译了。。。）
&lt;/p&gt;
&lt;p&gt;
By the end of the tutorial, you managed to generate and safely modify a Django migration to achieve this goal. You tackled different problems along the way and managed to overcome them using built-in tools provided by the migrations framework.
&lt;/p&gt;
&lt;p&gt;
In this tutorial, you learned the following:
&lt;/p&gt;
&lt;p&gt;
How Django migrations work internally using model and database state, and when new migrations are generated
How to execute custom SQL in migrations using the RunSQL action
What reversible migrations are, and how to make a RunSQL action reversible
What atomic migrations are, and how to change the default behavior according to your needs
How to safely execute complex migrations in Django
The separation between model and database state is an important concept. Once you understand it, and how to utilize it, you can overcome many limitations of the built-in migration operations. Some use cases that come to mind include adding an index that was already created in the database and providing vendor specific arguments to DDL commands.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Readings</title>
      <link>https://wdicc.com/readings/</link>
      <pubDate>Fri, 19 Apr 2019 15:38:57 +0800</pubDate>
      
      <guid>https://wdicc.com/readings/</guid>
      <description>
&lt;h1 id=&#34;headline-1&#34;&gt;
﻿1984 ([英] 乔治·奥威尔)
&lt;/h1&gt;
&lt;p&gt;
这书看完我觉得这根本就是一本恐怖小说，当里面的内容正在和将要发生的时候你就不会觉得里面的描述有点搞笑了。不过看到后面有译者的补充内容说和其他国家的朋友讨论的时候，大家都会有各种不同的带入感，觉得也挺有意思的。这可能是所谓的普世价值吧，大家都觉得不应该这样。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;思想罪可是件要不得的事情，老兄，”他庄重地说，“它很阴险。你甚至还不知道发生了什么事，它就抓住了你。你知道它怎样抓住我的吗?在睡梦里!&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这里是温斯顿一个朋友讲他怎么被抓的，因为说梦话说了一些不该说的，被女儿举报。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;谁能控制过去就控制未来;谁能控制现在就控制过去&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
拗口么，控制了现在就可以（通过修改历史）控制过去。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;不是!不光是要你们招供，也不光是要惩罚你们。你要我告诉你为什么把你们带到这里来吗?是为了给你们治病。是为了使你神志恢复健全!

温斯顿，你要知道，凡是我们带到这里来的人，没有一个不是治好走的。我们对你犯的那些愚蠢罪行并不感到兴趣。党对表面行为不感兴趣，我们关心的是思想。我们不单单要打败敌人，我们要改造他们。你懂得我的意思吗?“&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
犯了思想罪的人都病了，需要治。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;党越有力量，就越不能容忍;反对力量越弱，专制暴政就越严。果尔德施坦因及其异端邪说将永远存在。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
1Q84 (村上春树)
&lt;/h1&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;姑且礼貌的问问。可是希望得到回答的哟。嘴不利索的话，点头或者摇头。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这个书是看完上面的 1984 之后翻的，看了第二章感觉就有意思起来了，很会通过故事吸引人。不过这个书里面的隐喻实在好难懂啊，看别人的书评才能理解一些，可能作者厉害的地方就在这里吧。。。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
伟大的博弈:华尔街金融帝国的崛起(1653～2011)(珍藏版) (约翰·S·戈登)
&lt;/h1&gt;
&lt;p&gt;
这本书几乎是从美国建国讲起，讲到后面华尔街兴起，以及美国的金融市场是怎么一步一步发展起来的，华尔街的起起落落，和看故事书一样。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;作为新兴工业经济基石的钢铁也彻底改变了华尔街的外观。许多建于19世纪50年代的陈旧的6层小办公楼被一一推倒，让位给“摩天大楼”（skyscraper）——这个词在1883年才被创造出来。钢铁建材的出现和电梯的发明使摩天大楼成为可能，而纽约狭小的城市面积更使得摩天大楼的大量出现不可避免。纽约古老街区里窄窄的街道从此开始熟识摩天大楼巨大的投影和楼宇之间漏出的些许阳光。这种趋势引起了市民和市府官员们的警觉，当40层的“衡平保险公司大厦”（Equitable Building）在雪松大街和青松大街之间的百老汇上开始建造时，它严严实实地占据了整个街区，这直接导致美国第一部城市规划条例的颁布。就像快餐一样，城市规划条例也发源于华尔街。事实上，美国文化中很多与金钱无关的传统都与华尔街有关。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
一些美国的文化据说是发源于华尔街，比如快餐是因为股价上下波动很快大家忙到没时间吃饭，所以有了快餐。。。城市规划是因为华尔街发展太快不得不开始进行必要的规划。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;荷兰人早在导演和参与“郁金香泡沫”时练就的投机技术，很快就被运用到了北美新大陆。发生在这块处女地的第一次金融投机活动是针对当时原始的货币——贝壳串珠进行的投机，这次金融投机揭开了北美350年的金融史——同时也是350年的投机史的序幕。这些投机技术在以后的历史中被反复应用，投机者们沉溺其中，乐此不疲。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
从郁金香泡沫开始讲投机，囤积贝壳让贝壳价值上涨获利。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;荷兰人发明了最早的操纵股市的技术，例如卖空（short-selling，指卖出自己并不拥有的股票，希望在股价下跌后购回以赚取差价）、“洗盘”（bear raid，指内部人合谋卖空股票，直到其他股票拥有者恐慌并全部卖出自己的股票导致股价下跌，内部人得以低价购回股票以平仓来获利）、对敲（syndicate，指一群合谋者在他们之间对倒股票来操纵股价），以及逼空股票（corner，也称杀空或坐庄某一只股票，或囤积某一种商品，指个人或集团秘密买断某种股票或商品的全部流通供应量，逼迫任何需要购买这种股票或商品的其他买家不得不在被操纵的价位上购买）。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;（这种总是期望有人会愿意出价更高的想法，长期以来被称为投资的博傻理论）&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;。这时候菲利普斯开始买进贝壳串珠，并囤积起来。实际上，他把贝壳串珠装在桶里埋在地下，以减少贝壳串珠的流通量。几周之内，他就控制了串珠市场，成功地抬高了价格。到1666年，3颗白串珠就相当于1个斯图弗。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
控制市场上面的量，控制价格。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;最常见的铸币是西班牙的里亚尔银币（Spanish real），经常被切成2块、4块、8块来找零钱。这就是为什么直到今天，纽约证券交易所还是以一美元的1/8为最小单位来报价，而不是1/10。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;到18世纪90年代，尽管费城的发展速度远远低于纽约，但它依然是那时美国的金融中心。美国的第一家银行——北美银行（Bank of North America）是在费城成立的；美国的第一家证券交易所——费城证券交易所（Philadelphia Stock Exchange）在1790年成立。在此后的10年内，费城仍然是美国的首都，而华盛顿那时尚在建设之中，因此，汉密尔顿的中央银行——美国银行（Bank of the United States[35]）也于1791年在费城成立。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
早期的时候，费城是金融中心，纽约还排不上号。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;·资本市场的繁荣催生了第一批专业的证券经纪人，他们需要一个专用的交易场所；为了防止在门口偷听价格“搭便车”的场外交易发生，也为了防止经纪人们无休止地杀低交易佣金，他们签订了著名的《梧桐树协议》——这一向被认为是纽约交易所的源头，而本质上是一个卡特尔——价格同盟。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
开始的时候证券交易是小部分人聚集起来做的一个事情，他们为了保证自己的佣金利益，搞了这个协议，很多年之后（似乎是19xx年）才放开佣金，那会都是固定佣金。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;·在这一时期，有限责任制度——现代企业制度的基石得以奠定，美国各州通过了《普通公司法》，带动了新一轮的经济增长，从1792年到1817年，联邦税收在25年内增长了9倍。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
公司法颁布之前企业都不能像人一样拥有自己的财产。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;18世纪末期，经纪人这个概念的含义要比今天宽泛得多。这个词早在14世纪就从法语引入到英语中，它的法语原意是：把一桶酒分装成一杯一杯或一瓶一瓶后再卖出的人。在17世纪之前，这个词一直特指零售商和批发商，此后，它就完全被用来特指自己不直接参与生产的中介人。到这个时期，“经纪人”的含义逐渐演变为：将买方和卖方撮合在一起，并对促成的交易收取佣金的人&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
broker 这个词在计算机领域也有，做代理，分发这类事情的，叫做 broker。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;美国银行股票（很快被简称为“BUS”）的交易在1791年春就已经开始了。这一年7月，该股票正式认购时，在一小时之内就全部卖光，随后股价一路攀升。这个新生国家的第一次大规模的股票公开发行（IPO）启动了它的第一轮牛市。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;股票的含义才被特指为代表所有权的证券，而债券被特指为代表债权的证券&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;《梧桐树协议》。这被公认为是纽约证券交易所的最初起源，但本质上却是一个经纪人的卡特尔，纽约证券交易所的这一本质直到180多年后才得以改变。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;”杰斐逊一向痛恨投机者，此时几乎掩饰不住自己的兴奋，他算了一下，投机者损失总值达到了500万美元，这相当于当时纽约的房地产总值。他的结论是，股市恐慌所带来的损失跟自然灾害摧毁纽约所带来的损失是一样的。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
股市恐慌带来的损失也会很大。带来失业，市场不景气，各种连锁反应。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;投机一直是一个颇受争议的名词，至少在华尔街以外的地方是这样。投机者经常被看成是资本主义市场发展进程中的寄生虫，他们并不创造财富，但却能从中谋利


投机有助于确保市场产生最公正的价格

另外，投机很像色情，给它下个定义或许很难，但明眼人却一眼就能辨别出来。正如20世纪初伟大的英国金融家欧内斯特·卡塞尔（Ernest Cassel）爵士所说：“当我年轻的时候，人们称我为赌徒；后来我的生意规模越来越大，我被称为一名投机者；而现在我被称为银行家。但其实我一直在做同样的工作。”&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
有投机机会会带来交易量，这样会有博弈，所以有助于确保公平。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;一些债券以可转换债券的形式发行（意味着债券持有者可以根据需要把它们转换成股票），有一批可转换债券甚至允许持有人随心所欲地在债券和股票之间来回转换，这在华尔街的历史上是绝无仅有的，这种特性使它成为近乎完美的投机工具。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
股票上涨的时候，换成股票兑现，股票下跌的时候，换成债券又会保值。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[91]格雷欣法则（Gresham’s Law），指使用者保留贵重的货币，而优先选择使用价值低的货币。托马斯· 格雷欣（Thomas Gresham, 1519~1579），英国金融家，皇家证券交易所（Royal Exchange）的创始人。—译者注&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
也就是劣币驱逐良币。因为保值的东西不容易贬值，而不保值的东西最好尽快兑现，要不可能过几天就不值钱了。所以会保留良币，使用劣币，这样市场上就只能看到劣币了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1861年　美国南北战争爆发。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;从私募走向公募：传统上，政府为战争进行融资，主要依靠征税和大量印钞，这是南北方政府同时能想到并做到的。而华尔街上年轻的银行家——库克为北方政府所做的是南方政府所没有想到的。他没有采用传统上私下向银行和经纪商出售债券的方式，即私募发行，而是革命性地通过华尔街向公众发售战争国债，即公募发行。他告诉普通美国人，购买这些战争债券不仅是一种爱国的表现，也是一笔很好的投资。到战争后期，库克出售国债的速度已经超过北方政府为战争花钱的速度。而与此同时，严重依赖印钞票支付战争费用的南方政府，面对相对于战前高达9000%的通货膨胀率无奈地接受了战败的结局。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
北方军有华尔街这些金融大鳄的点子和支持，很好的募集到了支持战争的钱，打赢了南方军。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1865年　南方邦联军投降，美国内战结束。不久，林肯遇刺。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1868年11月30日，两个交易所颁布了同样的监管条例，要求对所有在交易所拍卖的股票进行登记，并且，任何新股发行都必须提前30天通知交易所。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在这之前，企业几乎可以随意增发股票，所以没人知道一个公司在市场上到底有多少股票。这个简直不敢想，居然这会才规定。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;对于研究华尔街的历史学家而言，道琼斯指数同样是无价的，因为它是现存最早的股票市场的连续平均指数，从1896年就开始有了记录。发明这个绝妙而又简单的办法的天才是查尔斯·道[130]，他也是《华尔街日报》（Wall Street Journal）的创办人之一。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
道琼工业指数的诞生。。。。。这个哥们居然还是华尔街日报的创办人。。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;意大利在15世纪文艺复兴时期出现了复式记账法（double-entry bookkeeping）


但是，由谁来作这个报告呢？公司内部的财务人员毕竟是为公司管理层工作，所以很难做到真正地独立。这时，独立会计师的人数迅速增加。1884年，在纽约、芝加哥和费城的商业电话簿上只能找到81个会计师，仅过了5年，这个数字就达到了322。1882年会计师及簿记师协会（Institute of Accountants and Bookkeepers）在纽约成立，并且开始向那些通过了严格考试的人员发放资格证书。1887年，美国公共会计师协会（American Association of Public Accountants）成立，它是现在美国会计行业管理机构的前身。1896年，纽约州通过立法奠定了这项职业的法律基础，并使用“注册会计师”这样一个称号来表示这些人是符合法律标准的会计师。纽约州的法律和“注册会计师”（Certified Public Accountant，CPA）这个名词马上也被其他州采用了。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
股票价格是会和一个公司运营到底怎么样有关系的，公司运营的不好，股票自然会跌，但是这之前公司记账都是自己记的，那简直想怎么记怎么记。。。这会开始有了第三方的记账机构。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;19世纪90年代　华尔街取得两大进步：股票市场平均指数和现代会计制度出现。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;·再一次，依仗摩根巨大的影响力，摩根和华尔街的银行家们阻止了这场可能将美国经济拖入深渊的金融恐慌。美国这个当时世界上最强大的经济实体，在危机中不得不依靠摩根个人来扮演中央银行角色，这一事实促成了美联储在1913年成立。这一年，成为美国金融历史的分水岭。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
摩根牛逼到不行，各种救市，拯救美国经济。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;这种不安远不仅限于华尔街，那年秋天，西奥多·罗斯福在麦金利死后继任总统，他坚信并提倡政府对经济的干预，以防止某些强大的经济力量变成政治上的霸权。当1904年美国司法部宣布按照《谢尔曼反托拉斯法案》（Sherman Antitrust Act）起诉并要求拆分北方证券公司（Northern Securities Corporation）时，J·P·摩根被惊得目瞪口呆。北方证券公司是摩根处理E·H·哈里曼和詹姆斯·J·希尔关于北太平洋铁路公司的经济纠纷而成立的一家公司。摩根火速赶到了华盛顿，想搞明白为什么西奥多·罗斯福不能像绅士之间的交往那样事先告诉他，以便私下里达成一个双方满意的解决方案。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
反垄断。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;中央银行的职能是监控商业银行，管理货币供应，同时在金融市场恐慌或银行危机时期担当最后贷款人（lender of last resort）的角色。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
中央银行就是主持金融市场的，和。。救市的。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;“经济学”在本质上是研究市场中人的学问&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
股票是人心的体现，贪念，欲望。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1913年12月23日，国会立法批准设立美联储，这一年成为美国金融史上的分水岭。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;人类社会有一条铁律：在没有外来压力时，任何组织的发展都会朝着有利于该组织精英的方向演进。这条规律既适用于津贴丰厚的公司管理层，也适用于被领袖人物控制的工会，既适用于美国国会，也适用于好莱坞。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
所以如果工人不罢工，那就只有可能被剥削的越来越严重，嗯，996。。。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;在华尔街200年的历史上，不论出现过什么样的阴谋诡计，仍然有两条游戏规则从来没有被亵渎过。第一条是“成交了就是成交了”（A deal is a deal）

第二条同样神圣的规则是，私人契约的隐私权不受侵犯&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这个是平等交易的基石吧。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;·1933年，美国取消金本位制，颁布《证券法》和《格拉斯-斯蒂格尔法》；1934年，美国颁布《证券交易法》；同年，依据该法成立了美国证监会；1940年，美国颁布《投资公司法》和《投资顾问法》。至此，美国资本市场在自我演进超过百年之后第一次出现了关于证券发行、交易和投资基金的法律，也第一次建立了监管机构，这一系列制度建设形成了现代金融体系监管的基本框架，也为随后几十年美国金融市场的发展奠定了基础。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;5月27日，罗斯福签署了《联邦证券法》（Federal Securities Act），这是美国历史上第一部规范证券交易的法律，它要求所有的新股发行都必须在美国证券交易委员会（Securities and Exchange Commission，即美国证监会）注册，而且必须披露特定的信息。6月5日，国会取消了美国的金本位制，&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
进一步规范市场。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;尽管惠特尼百般阻挠，罗斯福总统还是提交了一项法案，于是，惠特尼和交易所决定由他们自己动手先来改革华尔街上最有问题的那些行为。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1934年2月13日，交易所委员会投票通过法令，禁止联手坐庄，同时也禁止专门经纪人将内幕信息透漏给他们的朋友，并禁止专门经纪人购买他们所做市股票的期权。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;为了防止卖空投机和股市恐慌时打压市场，卖空单只有在股价上升时——也就是说卖空股票的价格高于上一个成交价时——才被认定有效。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;为了防止今后单一金融风险再次扩散为金融系统风险，纽约证券交易所于1964年第一次建立了风险基金。就像19世纪交易所和经纪人委员会采取行动抑制过度的投机行为以及投资银行一致要求上市公司出具年度报告和独立的会计报表一样，华尔街的参与者们再一次意识到，他们有着超越各自利益的共同利益，需要大家共同维护。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
只有规范的市场，才是健康的，持续发展的。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;美里尔将这一切彻底改变了。他严格培训他的客户经理们——这些人现在被称做注册代理人（registered representative），让他们掌握经纪业务的基本知识，并且，美里尔在他们刚刚开始工作时就给他们支付固定工资，而不是让他们完全依靠佣金过活&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
专业的代理人出现，专业的事情有专业的人员做更加靠谱，这个是社会分工和规模化必须走的路。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;格雷厄姆被称为“现代证券分析之父”，他倡导的基本面研究和开创的证券分析方法在一定程度上改变了华尔街此前盛行的投机风气，并为现代资产管理业奠定了基础。其著作《证券分析》和《聪明的投资者》影响甚广。巴菲特早年曾向格雷厄姆学习投资。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
理性的分析证券市场的规律，分析股票的走向。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;纽约证券分析协会（New York Society of Security Analysts）于20世纪30年代成立&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1960年，这个预言变成了现实，养老基金和工会拥有数以十亿计的资金，它们成为华尔街的大玩家。那一年，美国中部卡车司机联合工会（Teamsters）持有的股票价值为2350万美元，美国矿工联合工会（United Mine Workers Union）有1640万美元投资在华尔街。1961年，联邦政府预算总额只有不到1000亿美元，而所有非保险类养老基金持有的股票市值就有174亿美元之多。在那个时期，养老基金每年都有10亿美元的资金进入股市，有20亿美元进入债市。除此以外，随着千百万美国家庭开始有能力购买原先是奢侈品的人寿保险，这些人寿保险的承办主体——保险公司也越来越多地成为华尔街的主要投资者。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
保险金的进入，让这个市场更大，也就更加需要稳定和健康的市场。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;道琼斯指数是按照价格加权而不是按照市值加权计算，这意味着在道琼斯平均指数的计算过程中，高价股票的影响大于低价股票，而股票市值的大小对指数的影响却没有被考虑进来（股票的市值=股票价格×股票总流通股）&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1965年，自动报价机终于与一块电子显示屏相连接，使整个大厅的人都可以同步看到正在打印的记录单上的股价信息&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;《联邦证券法》就要求经纪人为客户寻找到股票的最好报价&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;纽约证券交易所的专门经纪人们通过交易所的管理委员在1955年制定了《394条例》（Rule 394），该条例禁止会员公司买卖交易所以外的股票，“除非是在交易所特别豁免的情况下”。换句话说，联邦法律要求经纪人们去寻找能给出最好价格的市场，而纽约证券交易所却禁止他们这样去做。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;1975年5月1日，《梧桐树协议》签订183年之后，固定佣金制在华尔街上寿终正寝，几年之后，它也将从伦敦交易所消失&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;纳斯达克是“美国证券交易商自动报价系统”（National Association of Securities Dealers Automated Quotation System）&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;到20世纪80年代末期，美国事实上只剩下两个证券交易市场：一个是纽约证券交易所，主要交易挂牌证券，它们市值较大，并被广泛持有；另一个是纳斯达克市场，主要交易那些市值较小的、未在交易所挂牌的股票。当然，也有明显的例外，例如英特尔和微软这两家大公司都是在纳斯达克交易，而不是“主板”[202]&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;以萨班尼斯和奥克利两位提案人命名的《萨班尼斯和奥克利法案》（Sarbanes-Oxyley Act）为财务会计制度带来了巨大的变化，其中包括禁止会计师事务所为同一家公司同时提供审计和咨询服务。此外，股票期权必须在授予员工之际便计入公司当期费用，而不能等到期权执行时再计入公司费用，以便能使投资者更清楚地了解到公司的价值。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;·2001年11月，美国安然公司财务丑闻被接连曝光，安然公司股价一路由每股90美元下滑至每股30美分。2001年12月2日，在全球拥有3000多家子公司、名列《财富》杂志“美国500强”第七名、掌控着美国20%的电能和天然气交易、被誉为“华尔街宠儿”的安然公司申请破产保护。不久，其聘请的会计师事务所安达信——一个有90多年历史的世界级会计师事务所退出审计市场。&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Blogs Weechat Official Accounts and Freedom</title>
      <link>https://wdicc.com/blogs-weechat-official-accounts-and-freedom/</link>
      <pubDate>Thu, 28 Mar 2019 11:18:37 +0800</pubDate>
      
      <guid>https://wdicc.com/blogs-weechat-official-accounts-and-freedom/</guid>
      <description>&lt;p&gt;
十几年前，还没有微博的时候，大家热衷于开 blog 写点自己想写的东西，出来了一大批 blog 平台，不管写多少内容有没有什么价值，很多人都会开一个自己的 blog。同时也有不少人自己搭建自己的 blog 平台，那会还有人卖空间专门搭 blog 用，提供一个虚拟主机，可以一键弄一个自己的 wordpress。
&lt;/p&gt;
&lt;p&gt;
我最早的时候的 blog 是自己搭建的，后来也用过 wordpress，也去新浪开过博客。现在看开 blog 其实满足了用户的两个诉求，一个是写东西表达自己的想法，一个是社交。单纯的表达自己的想法可能也是一种发泄输出吧，写下来会觉得有了输出，之后会觉得告一个段落。至于社交，一般是几个好友会互相关注对方的 blog，比如当时的 msn space，qq 空间这些会直接在 im 工具里面提醒你。对于感兴趣的人不管是朋友还是陌生人，可以留个言什么的互相交流。以前在各个平台开的博客现在有的是平台死了文章没有了，有的是自己都忘记用什么账号开的了，找不到了。倒是自己搭的平台因为自己持续的在把数据保留下来，现在还有一些历史数据，现在回看这些内容感觉也挺好玩挺温馨的。
&lt;/p&gt;
&lt;p&gt;
到了现在，blog 基本都死了，出现了微信公众号这个东西，我一直觉得微信公众号是一个反互联网的东西，他们想了很多办法来防止里面的内容被外部抓到，比如我自己发布的内容想在自己网站提供一个列表给大家看就不行，因为虽然提供了在 pc 浏览器看内容的方式，但是只能看单篇，想看其他的必须用手机扫了码之后在手机看，并没有提供 pc 的列表页。只能是发一篇把一篇文章地址加入到自己的列表里面。
&lt;/p&gt;
&lt;p&gt;
内容格式支持 html，编辑器不好用还催生了一批辅助工具，从这些工具复制源码之后，确实可以有效果，但是因为微信实际并不能编辑源码，有时候遇到复制的奇葩的代码，会发现无论如何都编辑不好。而且关键是微信官方对待公众号和对待聊天功能一样，并没有多少兴趣去把这个东西做到极致，也可能是因为他们从 qq 那边看到，功能怎么样和用户用不用其实并不是那么的强相关吧，并不是提供了用户所有想要的功能用户就会用，这样反而增加了产品的复杂度可能得不偿失。
&lt;/p&gt;
&lt;p&gt;
公众号还有一个问题是，他们天然倾向于满足用户的需求，用户需要低俗八卦那他就会想办法多制造这些内容，而且这些东西在那些人的圈子里面流窜，获得更多的用户。比如那些养生的东西，这能吃那不能吃的文章在中老年圈子里面就流传的很快。但是一篇反过来避谣的文章就流传不起来，因为这些人不会关注这样的公众号。造谣一时爽，避谣跑断腿。只是拿这样的一篇文章如何能说服对方呢？对方首先一个并没有看到多少人支持这个观点，另外一个可能会说好好我信你了，然后就完事了，也不会转发打自己的脸，不会觉得要对那些看了自己转发的文章的人负责。
&lt;/p&gt;
&lt;p&gt;
微博上面相对好一点，在原微博上可以直接可以看到不同观点，反对的微博也可能会再次出现在自己的时间线也同样可以看到针对这个微博大家的观点，这也是一个学习的过程，反思自己之前为什么会没有在第一时间看到其他提出来的问题呢，自己也会持续提升自己的判断辨别能力。但是微博上面又会放大参与者的情绪，导致一些极端的情况，这就另说了。
&lt;/p&gt;
&lt;p&gt;
今天还听了另外一个观点，可以一起聊聊。现在各种算法会依据你看的内容不停推荐类似的内容，比如你喜欢看猫，那就持续的推猫的内容，让你不停的看下去。最开始可能是今日头条开始这么做的吧，后面网易新闻也跟进了。我一直用的是网易新闻，期间试过看今日头条，发现里面内容质量不高之后就删掉了，直到某天网易新闻也开始做了类似的事情，新闻每次刷新都会给你推荐新的，导致没有看完的时候，就把网易新闻也删除了。换了即刻，现在发现即刻也可以乱推一些东西之后，取消关注了很多的频道，现在用的也不多了。
&lt;/p&gt;
&lt;p&gt;
你喜欢看什么，就尽量多的给你推什么，这个算法有问题么？其实挺美好的，这样不就不用你来回自己去找想看的内容了吗？但是这样其实也会有几个问题，一可能会让你接触不到其他你没接触到但是有可能喜欢的东西，二可能会让人的思路变得极端。每天都环绕在一个没有争议的环境里面，慢慢的可能会失去辨别能力，也很更加不容易接受不同的东西。
&lt;/p&gt;
&lt;p&gt;
说回那个观点，那个观点讲的就是比如看了一个宣扬极端观点的视频，他持续给你推荐这些视频的话，会不会容易把这个人变的很极端？按说是存在这种可能的，当然如果这个人自己确实对这个感兴趣那总也是会自己找这些信息看的，不过是这种推荐可能节约了他的时间。
&lt;/p&gt;
&lt;p&gt;
标题为啥还提到了自由呢？微信我感觉就是不自由的，把大家圈进来之后就只能在这里面玩，决不允许有出去的机会。并且也没有意愿提供一个自由的环境。群里发一个链接，还需要先经过微信的审核，如果他们不想让你打开你就打不开，比如淘宝的链接就打不开。话说这个居然没有反垄断法来管理也是有意思。微博上面发的内容相对自由一点，但是微博的审查也比较厉害，当然这个是也有国家层面的事情，不多说了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Co. founders</title>
      <link>https://wdicc.com/co-founders/</link>
      <pubDate>Wed, 13 Feb 2019 18:14:39 +0800</pubDate>
      
      <guid>https://wdicc.com/co-founders/</guid>
      <description>
&lt;p&gt;
和别人一起搞了一个公司，算是一个技术合伙人。目前参与技术团队的组建，产品团队的组建等。目前公司运行了大概 2 年不到，稍微总结一下。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
需要什么样子的合伙人
&lt;/h2&gt;
&lt;p&gt;
开公司前应该需要先弄清楚自己需要什么样子的合伙人。一般来说都会找一个和自己能力互补的，比如自己搞技术的，找一个产品或者运营方向比较强的。这样大家分工协作，以最少的资金发挥最大效力。
&lt;/p&gt;
&lt;p&gt;
但是这里其实有一个问题，怎么评价对方的能力。因为是补充自己不专业的部分，那自己一般并没有能力仔细考核对方的能力，怎么办？
&lt;/p&gt;
&lt;p&gt;
国外公司招聘技术人员，会倾向于考核算法等基础能力，即使你工作年头再长，也不看你做的系统业务有多牛逼，只看你的基础技术能力如何，对一些底层协议了解情况等等。为什么呢？
&lt;/p&gt;
&lt;p&gt;
我感觉因为我们做的事情事情通常有很大的不确定性，技术是为业务服务的，业务方向随市场情况走。技术这块来说，算法协议这些东西都是不变的，了解了原理，那不管是用什么语言，为什么业务服务，都可以随机应变，很快可以适应。
&lt;/p&gt;
&lt;p&gt;
类似的，我们找合伙人实际上也不应该只考虑对方看着目前刚好符合需求，而更多的应该去看看这个人的过往业绩，是否在你不擅长的领域做了很多让你值得给出好评的成绩，同时也需要注意，是他做出来的，还是依赖公司的品牌做的。
&lt;/p&gt;
&lt;p&gt;
另外也需要看看对方的团队组建能力，毕竟不可能单打独斗打天下，那必定会涉及到招聘，如果对方目前的团队战斗能力明显不行，那你也不要抱很大希望对方将来可以组建出来强大的团队。考核团队可能也简单，看看对方的团队的人都来自哪里，擅长做什么就好。
&lt;/p&gt;
&lt;p&gt;
总结下来似乎 2 点：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
过往的业绩，擅长的业务方向，擅长的工作方式。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
团队组建能力。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
需要有亲自动手的决心
&lt;/h2&gt;
&lt;p&gt;
合伙开公司，公司是自己的，当然这个是基于一定的股份比例来的，可能至少超过 5% 吧，具体多少看你，简单说就是一个让你觉得这个公司我需要想尽办法让他维持下去的比例。如果你找合伙人，也至少应该给到合伙人让他觉得公司是他自己的这样一个比例的股份。
&lt;/p&gt;
&lt;p&gt;
公司是自己的，那就需要有亲自动手的决心。基于别人的成果，有时候很容易做出来一些让自己觉得自己牛逼的成绩。比如在一个大公司里面，做一个产品很容易就可以获得几十万的流量，或者做一个系统的时候，有很多公司资源可以使用，让你相对轻松的搭建一个复杂系统。如果离开公司，自己有没有兴趣和能力从头做这些事情呢？必须要有，因为你不做就没人做了。
&lt;/p&gt;
&lt;p&gt;
创业一般都是搞一个不太成熟的领域，这里面很多事情都需要去摸索，想要快速发展，必须要亲自动手才能快速得到反馈，快速知道自己是否应该调整方向适应市场。如果让其他人做，那经过反馈，指导，反馈，指导这样的多次循环可能才会发现是需要我们调整方向，而不是办事的人有问题。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
实事求是，合伙人之间公开信息
&lt;/h2&gt;
&lt;p&gt;
合伙人之间信息共享，发挥集体的智慧。毕竟找合伙人的目的是为了补充自己的短处，那么就应该多利用合伙人的能力，以发挥最大的效力，合伙人之间应该公开所有信息，以便让大家清楚目前整个公司的目标和问题，能出力的多出力。
&lt;/p&gt;
&lt;p&gt;
一定避免遇事只是自己发愁，还有各种刻意遮掩的情况，多发挥集体智慧。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
你打算在这个事情上面投入多久
&lt;/h2&gt;
&lt;p&gt;
如果不是热爱一个事情，恐怕大部分时候很难坚持下去，遇到挫折的时候容易放弃。创业这个事情基本上不会是一个短期的事情，尤其对于创始人来说，一般需要至少 5 年才能看到成效，想上市的话，可能需要 10 年之后才能看到。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
搞明白增长点
&lt;/h2&gt;
&lt;p&gt;
创业之前肯定大家都会有一个有一个预期的增长点，比如用户量，收入，或者市场占有率什么的，这些是用来评估你公司市值的主要手段。那么如果找到一个可以实现的增长点，这个是需要在整个创业过程中思考的。要注意是可以实现的，还没有实现的，可以一时拿出去忽悠人，但是如果过 1-2 年依然不见成效，那会被人厌烦。当然如果在这个时间段里面发现了其他的可实现的增长点也可以可以的，主要是搞的时间越长，留给你可以继续吹牛的时间的就越短，利用好这些时间。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
那些必须搞明白而一开始搞不明白的问题
&lt;/h2&gt;
&lt;p&gt;
一些必须解决的问题，不会自己消失，在整个过程中需要持续的投入去想办法解决，如果确实觉得那也可以提前思考退路，早一点想多一些时间，总比到最后钱花没了也还是死在了这些一开始就存在的问题上面。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Notes
&lt;/h2&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
&lt;a href=&#34;http://simplebits.com/2019/06/25/dribbble.html&#34;&gt;WHAT I LEARNED CO-FOUNDING DRIBBBLE&lt;/a&gt; 
&lt;/h3&gt;
&lt;p&gt;
作者指出来几个地方，我大致总结一下。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
找一个合的来的比较熟悉的合伙人。和结婚一样，以后会有大量的时间和这个合伙人一起度过。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
一开始他们邀请一些内测用户的时候，会给一个免费的 T-shirt，这样会让对方有一点愧疚感，而更加好的测试。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
前 100 个用户很重要。你得仔细听他们的反馈啥的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
你还得自己决定走那条路，用户会有很多的建议意见，但是最后怎么做还是取决于你自己。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不要害怕丢弃一些东西，比如可能是花了很多会议，时间，精力做出来的东西。可以多内部测试，不着急发布。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
慢慢小迭代，别一次步子太大，容易伤害已经熟悉你的产品的用户，导致他们离开。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
干自己也不清楚的事情也没啥，可以笑对自己犯的错误是一种好品质。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
脸皮要厚。多看看正向的事情，有那么多喜欢用你的东西的用户呢。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
别跟风流行的东西，这些东西会不停的变的，主要是看是否有益于解决你面对的问题。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
另一个别着急跟风的原因是，很多东西会消失，没啥。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
流行的东西会消失，现在做的东西也会没有，但是人不会啦，人是最重要的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
多搞搞业余的项目让你跟上时代。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
没有 13 。。。因为不吉利。。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
别迷信。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
找个好律师和会计。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
要认识到自己有时候很固执。比如纠结输出的 HTML 代码格式拒绝使用 SASS，但是实际上大家都已经不直接看源码啦，而是通过 dev tools 看。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
通过写作，分享你学会的东西。也不用担心自己是不是专家啦，总是会有人受益的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
别融资。融资容易导致公司目标变化，可能失去初心。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
注意身体健康。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
适当的时候能放得下。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
&lt;a href=&#34;http://www.paulgraham.com/yahoo.html&#34;&gt;What happend to yahoo&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;
钱带来的问题
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Yahoo 当时的 banner 广告收入已经比较高了，赚钱比较容易的时候可能就会比较容易产生惰性。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Yahoo 当时还有一个模式是投资一些小的 startup 通过买他们广告来获取流量，这样两方都会有成长，说服投资者这个模式是未来。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
当时所有的搜索引擎都卖 bnnaer 广告，所以他们都叫自己门户网站，而不是搜索引擎。意思是用户不用找了，我们这里就是最全的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
当时所有程序员都使用 Google 搜索而不用 Yahoo 的时候，提议过 David Filo 是不是考虑收购 Google，但是 Filo 说搜索只占我们 6% 的流量而已，做的好坏都差不多没什么价值。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
当人们不停的为 banner 广告付钱的时候，你不会认真对待搜索的。Google 不被这个影响。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
黑客文化（或者叫以黑客为中心，hacker-centric，或者叫工程师文化）
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Yhaoo 因为自己的商业模式（卖 banner）叫自己做媒体公司，即使实际上看公司更像是软件开发公司。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
以及因为惧怕微软，一旦叫做软件公司，那么可能会被微软狙杀，类似 Netscape（但是据说 Netscape 是微软狙杀的最后一个大公司）。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
其实假装是媒体公司躲开微软也挺好，但是实际上 Yahoo 也努力让自己认为自己是媒体公司，
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
这样导致他们和 Google 之类的比缺少黑客文化，要做的事情都是由产品经理和设计师来制定的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
因为不需要程序员思考，这样他们也不能吸引聪明的程序员加入，充满了 bad programmers。一旦开始有 bad 程序员，就会陷入螺旋式的下降，因为好的程序员只想和好的程序员一起工作。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
一个科技公司需要会以程序员为中心，一个媒体公司可不是这样的。Google 到有 500 人的时候，在餐厅还可以听到程序员在谈论怎么处理 SEO 好，Yahoo 的程序员就不需要思考这些，他们只需要完成产品经理的想法就可以了。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
为了保证黑客文化，据说 Mark Zuckergberg 说早期的时候他们甚至对于 HR 和 Marketing 职位也雇佣程序员。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
所有需要做好软件的公司，都应该需要有黑客文化，否则就不会吸引到好的程序员，也就做不好软件，即使招聘再多的产品经理也没用。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://wdicc.com/resume-en/</link>
      <pubDate>Tue, 12 Feb 2019 15:14:28 +0800</pubDate>
      
      <guid>https://wdicc.com/resume-en/</guid>
      <description>

&lt;p&gt;中文版&lt;a href=&#34;https://wdicc.com/resume/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;experience&#34;&gt;Experience&lt;/h2&gt;

&lt;h3 id=&#34;brilliantaero-com-2017-present-co-founder-tech-and-product-leader&#34;&gt;BrilliantAero.com (2017 - present), Co-founder, tech and product leader&lt;/h3&gt;

&lt;p&gt;Build and lead both engineer team and product team, wrote application for iOS, Android, setup website. Mainly using JavaScript, Python, and React Native related technology.&lt;/p&gt;

&lt;h3 id=&#34;qunar-com-2010-2016-senior-technical-director&#34;&gt;Qunar.com (2010 - 2016), senior technical director&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Build up a team to analyse data for Vacation BU, including log collection, ETL, and displays.&lt;/li&gt;
&lt;li&gt;Build up a team to operation and maintain more than hundred PostgreSQL servers, and setup the monitor system.&lt;/li&gt;
&lt;li&gt;Developed and maintained the CPM and CPC AD delivery system, the page view is about 1 billion per day at the moment.&lt;/li&gt;
&lt;li&gt;Mobile App and web site for ticket booking related business&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;taobao-com-2009-2010-software-engineer&#34;&gt;Taobao.com (2009 - 2010), software engineer.&lt;/h3&gt;

&lt;p&gt;Analyze data for linezing.com which collecting data/logs from taobao.com using Hadoop/Hive, and some development work for the user website. Tech stack: SQL, Java, Shell, HTML, JavaScript.&lt;/p&gt;

&lt;h3 id=&#34;yahoo-china-2007-2009-sre&#34;&gt;Yahoo China (2007 - 2009), SRE&lt;/h3&gt;

&lt;p&gt;Wrote a Nagios plugin to do centralize monitoring. Basic SRE duty.&lt;/p&gt;

&lt;h2 id=&#34;education&#34;&gt;Education&lt;/h2&gt;

&lt;p&gt;BeiHang University(AKA BUAA), China, bachelor (1998-2002)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>简历</title>
      <link>https://wdicc.com/resume/</link>
      <pubDate>Tue, 12 Feb 2019 15:09:22 +0800</pubDate>
      
      <guid>https://wdicc.com/resume/</guid>
      <description>

&lt;p&gt;做过很多岗位，整理总结一下自己的工作经历。 English version &lt;a href=&#34;https://wdicc.com/resume-en/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;工作经历&#34;&gt;工作经历&lt;/h2&gt;

&lt;h3 id=&#34;新晨航空-2017-现在-公司合伙人-技术和产品负责人&#34;&gt;新晨航空（2017 - 现在），公司合伙人，技术和产品负责人&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;组建团队，做了相应的 APP 和网站。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要开发语言是 React Native 相关技术，后端是 Python。&lt;/p&gt;

&lt;h3 id=&#34;去哪儿网-2010-2016-高级技术总监&#34;&gt;去哪儿网（2010 - 2016），高级技术总监&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;数据工作：带领团队建立了度假部门的统计体系，包括日志收集分析入库展示等工作。&lt;/li&gt;
&lt;li&gt;PostgreSQL DBA 团队：带领团队维护公司几百个 pg 实例，建立了相应的监控体系。&lt;/li&gt;
&lt;li&gt;广告系统：带领团队负责了公司的 CPM 广告系统，之后还开发了度假部门的 CPC 广告系统。日 pv 达十亿。&lt;/li&gt;
&lt;li&gt;度假无线团队：开发维护去哪儿 APP 里面度假模块（iOS, Android），还有 HTML5 版本的度假网站。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要开发语言比较多，基本主流的都用了，包括 Perl，Lua，Python, Java 等。&lt;/p&gt;

&lt;h3 id=&#34;淘宝网-2009-2010-开发工程师&#34;&gt;淘宝网（2009 - 2010），开发工程师&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;做了一些基于 Hadoop 和 Hive 的统计，以及量子统计的 Web 后台界面的开发。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要开发语言是 SQL, Java, Shell, HTML, JavaScript。&lt;/p&gt;

&lt;h3 id=&#34;yahoo-中国-2007-2009-sre&#34;&gt;Yahoo 中国（2007 - 2009），SRE&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;战略数据平台部的 AppOPS 职位(类似 SRE)，负责大概 100 台机器的运维。期间开发了一个基于 Nagios 的中心配置的监控插件，方便实现个性化的监控需求。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要开发语言是 PHP，Perl，Shell。&lt;/p&gt;

&lt;h2 id=&#34;学历&#34;&gt;学历&lt;/h2&gt;

&lt;p&gt;北京航空航天大学 2002 年毕业，非 CS 专业。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zero to $1B: 8 Lessons Scaling a Startup</title>
      <link>https://wdicc.com/8-lessons-scaling-a-startup/</link>
      <pubDate>Tue, 22 Jan 2019 18:25:37 +0800</pubDate>
      
      <guid>https://wdicc.com/8-lessons-scaling-a-startup/</guid>
      <description>
&lt;p&gt;
原文是这里 &lt;a href=&#34;https://medium.com/@swaaanson/zero-to-1b-8-lessons-scaling-a-startup-f9a4b631de61&#34;&gt;Zero to $1B: 8 Lessons Scaling a Startup&lt;/a&gt;，这里只是部分翻译 + 我自己的理解。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Lesson #1: 要谦虚的同时，保持自信
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
要相信你是最牛逼的，可以搞定一切问题。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
也要够谦虚知道可能有不足，幼稚的地方，要听取别人的意见建议。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
也要谦逊的知道你自己的技能不一定适合公司的各个阶段，还需要不断提升自己的能力。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Lesson #2: 可能会需要同时创立不止一个公司，可能是一系列公司
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
把你自己的领导能力看成是产品，多征求用户（也就是员工）的意见，严肃对待批评，但是不要当作是针对你自己的，对新的战略做做 A/B 测试。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
雇佣一个教练（？）。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不管规模多大，每 6 个月给团队做一个 360 度的评测。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://paulgraham.com/identity.html&#34;&gt;Keep your identity small&lt;/a&gt; 这个意译似乎是说：不要给自己贴过多的标签，这会让你更陷入很多的无意义的争论。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Lesson #3: 你的快乐和你创业公司的成功的关联性可能是 0.64
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
经常锻炼身体，保证充足的睡眠，开始做做冥想。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
避免自娱自乐。比如某个月收益不错，就开始用这个推算我们未来三年怎么怎么样，某个月行情不行，就奔溃的不行。别着急想那么远，多看看眼前的事情吧。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
开始募集资金的是，根据市场反馈及早做调整。我们 A 轮的时候，被 42 次拒绝之后，我们进行了重组，更改了我们的要价，然后就找到了一家对我们有信心的投资。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Lesson #4: 好的公司胜在产品创新和商业模式创新上
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
获取客户的模式是商业模式的竞争。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
早期的创始人需要多花点时间想想商业模式创新和获取客户的策略。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Lesson #5: 企业文化是用来帮助你成功的一个自我实现的故事
&lt;/h2&gt;
&lt;p&gt;
如果要设计企业文化，那有几步参考
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
确定你们这个行业里面成功的公司具备的特征是啥。比如共享单车企业（需要速度）和做医疗的企业（需要严谨）就不一样。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
确定什么样子的企业文化会带来那些特征。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
持续基于那些企业文化招聘和管理你的团队。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Lesson #6: 有一个不合理的动机是有帮助的
&lt;/h2&gt;
&lt;p&gt;
这里作者讲了一个自己的事情，他当年在选择去斯坦福商学院还是创业的时候，想问问斯坦福那边是不是可以晚几年去，对方说你创业啥时候都可以，斯坦福可就这么一个机会。不过作者后面还是去创业了，现在牛逼的时候说每年都会拿出了那个信看看，激励自己。。。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
有一个不合理的动机有时候不止有帮助，可能还是必须的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
招聘的时候，也招聘这样有有自我实现需求的（with chips on shoulder)。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Lesson #7: 创业成功的一个秘密方法是对厌倦的事情的极高的忍耐力
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
创业公司最值钱的工作往往是最不性感的那部分（最无聊的）。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
好好处理好它们。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
Lesson #8: 公司规模扩大也需要你自己能处理更多事情（早一点顾一个 EA 吧）
&lt;/h2&gt;
&lt;p&gt;
不少创业者都对长时间工作很自豪。那挺2的。你应该自豪的是你带来的巨大的杠杆作用（通常也会带来长时间工作）。当我每周工作 100 小时的时候，我并没有感觉的满足，我知道 1 可能是我没有委托足够的事情出去，或者 2 我没有合适的人来给我委托。
&lt;/p&gt;
&lt;p&gt;
这个说的没错，但是感觉是作者在给自己的一个公司做宣传。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Year in Sound</title>
      <link>https://wdicc.com/the-year-in-sound/</link>
      <pubDate>Sun, 13 Jan 2019 13:07:44 +0800</pubDate>
      
      <guid>https://wdicc.com/the-year-in-sound/</guid>
      <description>&lt;p&gt;
自从发现 &lt;a href=&#34;https://www.nytimes.com/column/the-daily&#34;&gt;NYTimes 的 The Daily&lt;/a&gt; 之后，听的比较多，2018 年底，他们有一期 &lt;a href=&#34;https://www.nytimes.com/2018/12/24/podcasts/the-daily/2018-year-in-sound.html&#34;&gt;The Year in Sound&lt;/a&gt; 对 2018 年的一个总结，听的时候觉得可以总结一下里面的事件。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
6 月份 Trump 和三胖在新加坡会面。前后还来回磨叽了几次。三胖同意解除核装置。后面三胖和南韩总统在边界还一起握手。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Robert Mueller 调查俄罗斯影响 2016 竞选。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
fb 爆出来用户数据被一家公司 Cambridge Analytica 拿去可能影响了竞选，并且似乎 fb 自己知道这个事情。Mark Zuckerberg 被叫去听证会询问。后面 Sundar Pichai 因为给中国定制搜索引擎的事情也被叫去过。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
2 月 14 号 Florida high school 17 人死于&lt;a href=&#34;https://en.wikipedia.org/wiki/Stoneman_Douglas_High_School_shooting&#34;&gt;枪击案&lt;/a&gt;。学生对控枪的&lt;a href=&#34;https://edition.cnn.com/2018/02/17/us/florida-student-emma-gonzalez-speech/index.html&#34;&gt;抗议&lt;/a&gt;。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
3 月 4 号，居住在英国的前 Russian spy 和她女儿被人&lt;a href=&#34;https://www.bbc.com/news/uk-43315636&#34;&gt;下毒&lt;/a&gt;。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
移民政策的变更，分开孩子和大人，起诉大人，导致很多人孩子后面找不到了。后面把这个政策取消了。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Brett Kavanaugh 接替  Anthony Kennedy 成为大法官。Kavanaugh 还被一个博士爆出来说在高中时期（40年前）被试图性侵，开了听证会。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Trump 的律师 Micheal Cohen 被 Trump 开掉，以及后面反过来和 Mueller 配合指证 Trump。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Trump 和普京会面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
California 大火。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
美国记者 Jamal Khashoggi 在沙特阿拉伯驻土耳其伊斯坦布尔的使馆里面被肢解。Trump 表示相信沙特王子不是他干的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
中美贸易战。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
中期选举，民主党占了 house(似乎是众议院) 的多数。Nancy Pelosi 当选为 house 发言人。 Trump 年底嚷嚷要建墙要资金，议院不同意，直接把政府 shutdown 了，截至发稿还没谈妥。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
还有一些应该没记录，可能会有遗漏。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Iptv2</title>
      <link>https://wdicc.com/iptv2/</link>
      <pubDate>Thu, 10 Jan 2019 10:20:56 +0800</pubDate>
      
      <guid>https://wdicc.com/iptv2/</guid>
      <description>
&lt;p&gt;
之前写过&lt;a href=&#34;https://wdicc.com/BJ-Chinaunicom-iptv/&#34;&gt;一篇关于 iptv 的帖子&lt;/a&gt;，里面用到了一个副路由，这样我家里其实就有两个路由器，这样用了比较长一段时间。
&lt;/p&gt;
&lt;p&gt;
最近联通给换了一个光猫，很容易就可以 hack 进管理界面，就又折腾了一下 iptv 的事情。
&lt;/p&gt;
&lt;p&gt;
iptv 和上网通道都是通过一根光纤进来的，通过不同的 vlan 区分数据。vlan 是二层的，收到这些数据之后如果有必要，可以通过 vlan id 来过滤出来，比如有的光猫会提供把 iptv 流量过滤到 4 口，其他上网流量过滤到光猫的其他口。我之前的猫就这样设置的，看 iptv 只能连接光猫的 4 口。如果光猫允许设置，那可以把 iptv 流量打上 tag 继续发到比如 1 口，这样 1 口就又有上网流量，又有 iptv 流量了，下一级路由就可以只通过这一条线来收两个流量了。
&lt;/p&gt;
&lt;p&gt;
iptv 那个通道除了提供了组播数据（这个是具体的视频数据的来源）之外，还提供了一个只提供了必要的服务的互联网，比如提供了频道列表，各频道的节目表等等。
&lt;/p&gt;
&lt;p&gt;
有的光猫可能会提供 pppoe 拨号功能和 wifi，不过一般没人用，因为性能差。所以一般我们会配置光猫做桥接，把数据透传下来，让下一级来拨号和提供 wifi。
&lt;/p&gt;
&lt;p&gt;
（下面部分限于我自己的理解很有可能说错，欢迎指正）
&lt;/p&gt;
&lt;p&gt;
iptv vlan 我看也提供了路由功能，也可以桥接透传。比如我之前的方式就是使用了光猫提供的路由功能，接了一个路由器，以光猫为上级路由器，然后会获取到一个内网的 ip。然后二级路由器上通过 udpxy 提供服务给内网用户用。
&lt;/p&gt;
&lt;p&gt;
那这样的话，似乎可以直接在我的主路由上找一个网卡和光猫 iptv 口接起来，然后跑一个 dhcp 获取一下 ip 不就可以省掉副路由了么？ &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;del&gt;不过我在 R6300v2 上尝试没成功&lt;/del&gt; &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。在新的软路由里面搞成功了。这里面也不需要跑 igmpproxy，我理解实际用的是上级光猫发过来的数据。
&lt;/p&gt;
&lt;p&gt;
然后 igmpproxy 是怎么回事呢，我理解比如 iptv 是接到了路由器而不是光猫的时候，那么就需要路由器把光猫的那些数据转发下去，这个时候光猫需要通过桥接方式把数据给过来，然后需要把数据发到下级路由，这个时候还不能直接让这个数据在 lan 里面乱跑，否则会影响我们的网速，通过 igmpproxy 可以把上级光猫给过来的组播数据转发到某个端口，然后下级设备比如你把 iptv 接到这个端口，就可以通过那个端口获取这些 iptv 的组播数据了。这样 iptv 就不用接到光猫了，接到你的路由器就可以了。&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-3&#34; href=&#34;#footnote-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;p&gt;
对于 udpxy，有一个 status 页面，里面会显示一些信息，里面有一个 Multicast Address 很重要，必须是上级光猫给的 ip 才行，也就是上面讲的那个 ip，这样才能获取到数据。如果线路配置有问题，那这里的 ip 会显示 169.xx 或者 0.0.xx 啥的，那一般是不行的。
&lt;/p&gt;
&lt;p&gt;
&lt;del&gt;我目前也没明白一点，我之前在 R6300v2 里面设置的时候，和光猫还是一条线，然后通过 udpxy 就可以看，不知道是怎么做到的。&lt;/del&gt; &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
Footnotes
&lt;/h1&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
这个我在 openwrt 里面通过了，openwrt 比梅林灵活，我从猫接了两条线给路由器，一条用来 pppoe 上网，一条获取一个内部 ip 用来通过 udpxy 转发看 iptv。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-2&#34;&gt;&lt;a href=&#34;#footnote-reference-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
又试了一下，梅林 rom 下，在内部网络 -&amp;gt; iptv 配置里面，LAN 端口都选择无，使用 DHCP 路由选择 Microsoft（其他的没试过，按说应该都可以，只要不是无），UDP 代理选一个端口，IGMP 停用，这样就会启动一个 dhcp 客户端获取到一个内网的 ip，udpxy 会转发那个 ip 获取到的数据。这样实际是和我说的接两条线的方式是一样的。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-3&#34;&gt;&lt;a href=&#34;#footnote-reference-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
这里就是那个梅林 rom 里面的 iptv 配置里面关于 LAN 端口和 igmp 的配置部分的用途了，需要告诉 rom 路由器的哪个 lan 端口接了 iptv，以及要启用 igmp 转发。这里说的 iptv 是指给我们的那个盒子，这么结之后就和把 iptv 盒子接到光猫是一样的，路由器会把盒子的请求都转发给光猫。这样实际那个 iptv 盒子完全不知道是通过路由器访问的。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Amap Work With Code Push</title>
      <link>https://wdicc.com/amap-work-with-code-push/</link>
      <pubDate>Sat, 05 Jan 2019 09:53:09 +0800</pubDate>
      
      <guid>https://wdicc.com/amap-work-with-code-push/</guid>
      <description>&lt;p&gt;
我们 app 用了高德地图和 codepush，iOS 里面之前用的高德地图 sdk 的 5.x 版本，最近想升级到最新的 6.6.0 发现和 codepush 出现了 symbol 的冲突，主要是两个函数 &lt;code class=&#34;verbatim&#34;&gt;aes_decrypt_key128&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;aes_encrypt_key128&lt;/code&gt; 。
&lt;/p&gt;
&lt;p&gt;
高德地图是不开源的，万幸我们有 codepush 的源码，所以思路是只需要把 codepush 里面冲突的函数改个名字就好了。
&lt;/p&gt;
&lt;p&gt;
改代码很简单，主要是怎么和项目集成。我用的是 &lt;a href=&#34;https://github.com/ds300/patch-package#readme&#34;&gt;patch-package&lt;/a&gt; ，做法如下。
&lt;/p&gt;
&lt;p&gt;
给 &lt;code class=&#34;verbatim&#34;&gt;package.json&lt;/code&gt; 的 scripts 增加一个 &lt;code class=&#34;verbatim&#34;&gt;postinstall&lt;/code&gt;
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;postinstall&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;patch-package&amp;#34;&lt;/span&gt;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后就是改 &lt;code class=&#34;verbatim&#34;&gt;node_modules/react-native-code-push&lt;/code&gt; 下面的文件，改完之后，执行一下 &lt;code class=&#34;verbatim&#34;&gt;yarn patch-package react-native-code-push&lt;/code&gt; 会生成一个类似 &lt;code class=&#34;verbatim&#34;&gt;patches/react-native-code-push+5.5.1.patch&lt;/code&gt; 的文件，确认一下这个文件里面是不是包含了你修改的内容。
&lt;/p&gt;
&lt;p&gt;
这就可以了，以后执行 &lt;code class=&#34;verbatim&#34;&gt;yarn install&lt;/code&gt; 的时候会自动打这个 patch。
&lt;/p&gt;
&lt;p&gt;
这个方式比 fork 一份对方的代码好一点，有时候有些代码发到 npm 的是编译之后的版本，fork 之后也不好用，除非你也发布一个。用 patch 的方式会好一点，安装的还是对方发布的。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Packaging</title>
      <link>https://wdicc.com/android-packaging/</link>
      <pubDate>Sun, 02 Dec 2018 16:52:34 +0800</pubDate>
      
      <guid>https://wdicc.com/android-packaging/</guid>
      <description>&lt;p&gt;
国内市场因为 android 的发布渠道比较多，所以一般我们会想要追踪一下用户使用的包是从哪里下载安装的。
&lt;/p&gt;
&lt;p&gt;
Android 打包支持 buildTypes ，一般这个会用来区分不同的环境，比如 dev，beta，prod 等，不同环境可能会有一些不同的设置，比如 dev 会打开更多的日志输出什么的。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;    android{
        buildTypes {
            debug {
                ...
            }
            release {
                ...
            }
            beta {
                ...
            }
        }
    }&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
还有一个支持是 productFlavors，一般用这个来区分不同的渠道，不同渠道也可以有一些不同的设置，类似上面的 buildTypes。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;    android {  
        productFlavors {
            xiaomi {}
            baidu {}
            wandoujia {}
            x360 {}
        }

        productFlavors.all {
            flavor -&amp;gt; flavor.manifestPlaceholders = [CHANNEL_ID: name]
        }
    }&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
配合 &lt;code class=&#34;verbatim&#34;&gt;AndroidManifext.xml&lt;/code&gt; 文件的配置
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;   &amp;lt;meta-data android:name=&amp;#34;CHANNEL_ID&amp;#34; android:value=&amp;#34;${CHANNEL_ID}&amp;#34; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在代码里面取到这个，然后设置渠道。
&lt;/p&gt;
&lt;p&gt;
这样就可以打渠道包了 &lt;code class=&#34;verbatim&#34;&gt;./gradlew assembleWandoujiaRelease&lt;/code&gt; 编译 &lt;code class=&#34;verbatim&#34;&gt;wandoujia&lt;/code&gt; 这个渠道的 &lt;code class=&#34;verbatim&#34;&gt;releases&lt;/code&gt; 包。这个方式有一个问题是，每一个渠道包都需要从头编译一次，一个渠道 10 分钟，那所有渠道下来，就可能需要一个小时了，关键是很多无用功。
&lt;/p&gt;
&lt;p&gt;
受不了这个，然后发现了美团的思路。有一个民间的方案 &lt;a href=&#34;https://github.com/GavinCT/AndroidMultiChannelBuildTool&#34;&gt;https://github.com/GavinCT/AndroidMultiChannelBuildTool&lt;/a&gt; 。
&lt;/p&gt;
&lt;p&gt;
这个方案的主要思路是 apk 只编译一次，编译好之后，通过在 apk 里面增加不同名字的文件的方式来区分不同的渠道。app 运行的时候，读这个文件名字，然后设置对应的渠道。
&lt;/p&gt;
&lt;p&gt;
对于 v1 签名的 apk，在 META-INF 下面增加空文件不需要重新签名，所以只需要再次 zip 压缩就可以。
&lt;/p&gt;
&lt;p&gt;
对于 v2 签名的 apk，需要重新签名，可以使用 &lt;code class=&#34;verbatim&#34;&gt;apksigner&lt;/code&gt; 这个程序，这个是 android sdk 带的。我的 mac 系统路径是 &lt;code class=&#34;verbatim&#34;&gt;~/Library/Android/sdk/build-tools/*/apksigner&lt;/code&gt; ，因为会安装多个 build-tools 版本，所以会有多个，用哪个都可以。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;    cmd &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [apksigner, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sign&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;--ks&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;your_key_store_path&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;--ks-pass&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;pass:your_pass&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;--ks-key-alias&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;your_alias&amp;#34;&lt;/span&gt;, apk]
    check_call(cmd)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样就可以了。
&lt;/p&gt;
&lt;p&gt;
我看美团似乎弄了一个新的版本 &lt;a href=&#34;https://github.com/Meituan-Dianping/walle&#34;&gt;https://github.com/Meituan-Dianping/walle&lt;/a&gt; 看着挺复杂的，没研究过。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A* Search Algorithm</title>
      <link>https://wdicc.com/a-star-search-algorithm/</link>
      <pubDate>Sat, 24 Nov 2018 14:48:04 +0800</pubDate>
      
      <guid>https://wdicc.com/a-star-search-algorithm/</guid>
      <description>&lt;p&gt;
前段时间我们设想了一个需求，想帮助用户规划一下从 A -&amp;gt; B 的航线。对于路径规划从来没弄过，研究了一下，基本都在提这个 &lt;a href=&#34;https://en.wikipedia.org/wiki/A*_search_algorithm&#34;&gt;A 星寻路算法&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
先贴几个文章：
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
简单的讲解的文章例如 &lt;a href=&#34;https://www.jianshu.com/p/65282bd32391&#34;&gt;https://www.jianshu.com/p/65282bd32391&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
这个详细一点的 &lt;a href=&#34;https://blog.csdn.net/DinnerHowe/article/details/79380317&#34;&gt;https://blog.csdn.net/DinnerHowe/article/details/79380317&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
我写了一个简单的程序，这个程序没有做过任何的优化，只能说是解释了这个算法的逻辑而已，在终端里面可以可视化的把计算过程显示出来。效果可以看&lt;a href=&#34;https://gist.github.com/wd/69469977bf76d9091ca01714eae08f37&#34;&gt;这里&lt;/a&gt;。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 59
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 60
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 61
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 62
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 63
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 64
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 65
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 66
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 67
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 68
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 69
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 70
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 71
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 72
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 73
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 74
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 75
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 76
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 77
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 78
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 79
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 80
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 81
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 82
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 83
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 84
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 85
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 86
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 87
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 88
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 89
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 90
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 91
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 92
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 93
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 94
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 95
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 96
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 97
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 98
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 99
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;100
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;101
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;102
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;103
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;104
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;105
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;106
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;107
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;108
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;109
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;110
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;111
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;112
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;113
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;114
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;115
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;116
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;117
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;118
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;119
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;120
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;121
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;122
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;123
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;124
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;125
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;126
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;127
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;128
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;129
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;130
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;131
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;132
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;133
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;134
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;135
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;136
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;137
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;138
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;139
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;140
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;141
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;142
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;143
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;144
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;145
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;146
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;147
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;148
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;149
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;150
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;151
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;152
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;153
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;154
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;155
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;156
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;157
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;158
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;159
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;160
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;161
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;162
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;163
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;164
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;165
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;sys&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;random&lt;/span&gt;


RED &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666;background-color:#fff0f0;font-weight:bold&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;[31m&amp;#39;&lt;/span&gt;
GREEN &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666;background-color:#fff0f0;font-weight:bold&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;[32m&amp;#39;&lt;/span&gt;
GRAY &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666;background-color:#fff0f0;font-weight:bold&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;[35m&amp;#39;&lt;/span&gt;
NC &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666;background-color:#fff0f0;font-weight:bold&#34;&gt;\033&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;[0m&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Point&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;object&lt;/span&gt;):
    x &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;
    y &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;
    close &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False
    &lt;span style=&#34;color:#007020&#34;&gt;open&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False
    start &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False
    end &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False
    wall &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; False
    H &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt;
    G &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt;
    parent &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; None

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, &lt;span style=&#34;color:#333&#34;&gt;**&lt;/span&gt;kwargs):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; kwargs:
            self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; kwargs[&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;]

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; kwargs:
            self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; kwargs[&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;]

        self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}-{}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x, self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y)

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __str__(self):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{},H{:2},G{:2},F{:2},P{:3}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(
                self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key,
                self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;H &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;H &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
                self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
                self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;H &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
                self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;parent&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;parent &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt;  __lt__(self, other):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt; other&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; other&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt; other&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;get_area&lt;/span&gt;(width, height):
    area &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {}
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(width):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(height):
            point &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; Point(x&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;i, y&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;j)

            area[point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key] &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; point
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; area

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;show_result&lt;/span&gt;(area_hash):
    prev_y &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; point &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;sorted&lt;/span&gt;(area_hash&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;values()):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; ( prev_y &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y ):
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (prev_y &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;):
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
            prev_y &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;start:
            format &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; RED &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;S&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; NC
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;elif&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;end:
            format &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; RED &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;E&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; NC
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;elif&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;wall:
            format &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; GRAY &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;W&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; NC
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;elif&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;close:
            format &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; GREEN &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; NC
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt;:
            format &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;((format &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;({})  &amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(point), end&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;set_preset&lt;/span&gt;(area, start, end, wall):
    area[start]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;start &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; True
    area[end]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;end &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; True
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; wall:
        area[key]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;wall &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; True
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; area

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;is_valid_point&lt;/span&gt;(point, width, height):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;wall &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;or&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;close:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;or&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt; width:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;or&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt; height:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; False

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; True

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;get_around&lt;/span&gt;(area, point, width, height):
    n &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}-{}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x, point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)
    s &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}-{}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x, point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)
    l &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}-{}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;, point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y)
    r &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}-{}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;, point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y)

    res &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {}
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; [n, s, l, r]:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; key &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; area &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;and&lt;/span&gt; is_valid_point(area[key], width, height):
            area[key]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;parent &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; point
            area[key]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; area[key]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; area[key]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; (point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;99&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;
            res[key] &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; area[key]

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; res

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;get_H&lt;/span&gt;(point, end_point):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;abs&lt;/span&gt;(point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; end_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;x) &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;abs&lt;/span&gt;(point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; end_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;y)

step &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;
opened &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {}

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;go&lt;/span&gt;(area, start, end, width, height):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;global&lt;/span&gt; step, opened
    start_point &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; area[start]
    end_point&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; area[end]
    start_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;close &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; True

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; start_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; opened:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;del&lt;/span&gt; opened[start_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key]

    points &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; get_around(area, start_point, width, height)
    opened&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;update(points)

    rnd &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;choice(&lt;span style=&#34;color:#007020&#34;&gt;list&lt;/span&gt;(opened))
    next_point &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; area[rnd]
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;for&lt;/span&gt; key, point &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;in&lt;/span&gt; opened&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;items():
        point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;H &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; get_H(point, end_point)

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;H &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;=&lt;/span&gt; next_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;H &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; next_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;G:
            next_point &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; point

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;step {}: {}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(step, next_point))
    step &lt;span style=&#34;color:#333&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; step &lt;span style=&#34;color:#333&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;3&lt;/span&gt;:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;pass&lt;/span&gt;

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; next_point &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;and&lt;/span&gt; next_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; end:
        go(area, next_point&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key, end, width, height)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;get_result&lt;/span&gt;(area, start, end):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}{}{} &amp;lt;- &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(RED, area[end]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key, NC), end&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
    parent &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; area[end]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;parent
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(parent&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key &lt;span style=&#34;color:#333&#34;&gt;!=&lt;/span&gt; start):
        get_result(area, start, parent&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key)
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;{}{}{}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;format(RED, area[start]&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;key, NC), end&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;main&lt;/span&gt;():
    width &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;10&lt;/span&gt;
    height &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;10&lt;/span&gt;
    start &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;1-3&amp;#39;&lt;/span&gt;
    end &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;8-4&amp;#39;&lt;/span&gt;
    wall &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;2-2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;3-2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;3-3&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;3-4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;3-5&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;3-6&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;5-4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;2-6&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;1-6&amp;#39;&lt;/span&gt;]

    area &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; get_area(width, height)
    area &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; set_preset(area, start, end, wall)
    go(area, start, end, width,  height)
    show_result(area)
    get_result(area, start, end)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    main()&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这个算法通过调整 G 和 H 的计算逻辑，可以平衡寻路速度和路径是否最短。另外，对于 open 列表的维护，也可以使用一些适合自己的数据结构来得到比较快速的查找。上面第二个帖子里面比较详细的列了一些改进算法的思路。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Phpbb Auth Plugin</title>
      <link>https://wdicc.com/phpbb-auth-plugin/</link>
      <pubDate>Sat, 17 Nov 2018 21:15:50 +0800</pubDate>
      
      <guid>https://wdicc.com/phpbb-auth-plugin/</guid>
      <description>&lt;p&gt;
这几天我们这里需要搞一个论坛，我搜了一些，选了 phpbb，这个毕竟年头比较久远，也支持 PostgreSQL。
&lt;/p&gt;
&lt;p&gt;
我们自己本身有自己的会员逻辑，所以就需要把他的登陆和我们自己的结合，而 phpbb 也支持自己作 &lt;a href=&#34;https://wiki.phpbb.com/Authentication_plugins&#34;&gt;Auth Plugin&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
涉及到的文件有几个
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
includes/auth/auth_foo.php：这个是具体的 auth 逻辑代码的地方。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
config/default/container/services_auth.yml：这个是注册这个 auth 逻辑的地方。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
template 模板文件：这个我没涉及到，所以没去了解。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
service 文件的配置：
&lt;/p&gt;
&lt;div class=&#34;src src-yml&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;auth.provider.skyreq:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;class:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;phpbb\auth\provider\foo&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;arguments:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;@dbal.conn&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;@config&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;@passwords.manager&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;@request&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;@user&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;@service_container&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;%core.root_path%&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;%core.php_ext%&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;tags:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;-&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;name:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;auth.provider&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
上面配置里面 arguments 指定的，是 auth_foo.php 的 constructor 接受的参数。可以需要什么配置什么，个数要对应。
&lt;/p&gt;
&lt;p&gt;
配置这个之后，只需要在 &lt;code class=&#34;verbatim&#34;&gt;auth_foo.php&lt;/code&gt; 里面实现具体的逻辑就可以了。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;init_method&lt;/code&gt; 这个方法是在后台用户选中这个 auth 方法的时候执行的，比如你如果有一些配置的话就可以在这里验证。如果需要用户录入配置的话，还需要配合 template 文件，好提供录入的界面。我这里没有这个需求。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;login_method&lt;/code&gt; 这个方法是在用户登陆的时候会调用。会传入用户名和密码两个参数。实现逻辑可以参考 auth_db 这个模块。phpbb 为了安全，对于管理员用户会有一个二次验证的过程，管理员的 session 过期时间也会短一些。所以我们必须要实现这个，否则一个管理员就无法访问后台了。我这里是完全复制的 auth_db 的逻辑，里面改动了一点增加了一个硬编码只允许几个我指定的用户登陆。然后验证也完全用的 phpbb 的密码逻辑。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;autologin_method&lt;/code&gt; 这个方法是在用户 session 创建的时候通过外部逻辑实现验证的时候调用。自己实现认证主要是在这里实现。我的需求是通过 cookie 验证，如果用户不存在，会直接新建一个用户，如果已经存在，会直接用那个用户登陆。这样一个用户在我的系统的其它页面登陆之后，访问 phpbb 就会自动登陆了。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;logout_method&lt;/code&gt; 登出的逻辑。我这没有需求，不希望用户从论坛登出。所以留空就可以了。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;validate_session_method&lt;/code&gt; session 验证逻辑，这个是验证一个用户的 session 是否有效。如果无效会触发自动登陆。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fear, trust and JavaScript: When types and functional programming fail</title>
      <link>https://wdicc.com/fear-trust-and-javascript/</link>
      <pubDate>Thu, 01 Nov 2018 12:56:20 +0800</pubDate>
      
      <guid>https://wdicc.com/fear-trust-and-javascript/</guid>
      <description>
&lt;p&gt;
翻译自 &lt;a href=&#34;https://www.reaktor.com/blog/fear-trust-and-javascript/&#34;&gt;Fear, trust and JavaScript: When types and functional programming fail&lt;/a&gt; , 最早是 &lt;a href=&#34;https://news.ycombinator.com/item?id=18314628&#34;&gt;hacker news&lt;/a&gt; 看到的。
&lt;/p&gt;
&lt;p&gt;
只是翻译大意。
&lt;/p&gt;
&lt;p&gt;
作为开发人员，我们需要减少对代码执行失败的恐惧，增强对代码的信心。很多 javascript 开发人员从函数式编程语言和强类型语言里面借鉴思路来将信任交给工具和代码来减少恐惧。类似可选类型，函数转换，和只读化这些思想可以帮助写出更好的 javascript 代码。当把这些想法都加入到 javascript 里面，会有一些妥协，协作起来比较差，并且最终会导致将信任从开发人员交给代码和工具的想法失败。
&lt;/p&gt;
&lt;p&gt;
举例来看看 javascript 里面是如何在两种观点下面处理数据的：理解数据的结构和修改数据。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
Fear and the shape of data
&lt;/h1&gt;
&lt;p&gt;
在类似 javascript 的动态语言里面，很难知道你数据的结构。默认的方式是依赖公约(convention)。相信其它程序员和其它系统按照协议给你正确的数据。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;fetchUser(id).then( user =&amp;gt; {
 &lt;span style=&#34;color:#888&#34;&gt;// Got my user!
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;})

&lt;span style=&#34;color:#888&#34;&gt;// Later
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;render(user.name) &lt;span style=&#34;color:#888&#34;&gt;// He has a name
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
我一般管这种方式叫「假装这是你要的」。在高可信的环境下，这个会工作的挺好。
&lt;/p&gt;
&lt;p&gt;
但是恐惧会悄悄的到来。代码的复杂度会增加。代码会是不同开发人员基于不同的公约(convention)开发的。你收到的数据来自于不可控的上游以及不稳定的格式。会开始看到空指针错误。对代码的信任会崩塌，对数据格式的疑问会引起焦虑而不是信任。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
这个数据里面到底有什么值？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
我可以删除里面的数据而不产生影响吗？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
我可以把这个数据传入这个函数吗？
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
例如下面这个。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;fetchUser(id).then( user =&amp;gt; {
 &lt;span style=&#34;color:#888&#34;&gt;// Got my user!
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#333&#34;&gt;!&lt;/span&gt;user &lt;span style=&#34;color:#333&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;!&lt;/span&gt;user.name) {
   &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Error&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;wat&amp;#39;&lt;/span&gt;)
 }
})

&lt;span style=&#34;color:#888&#34;&gt;// Later
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(user &lt;span style=&#34;color:#333&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; user.name) {
  render(user.name)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这是防御性编程(defensive programming)。在你不再信任你的代码会在适当的时候提供你期望的数据的时候会这么写。漂亮的代码会因为这些检查变得乱七八糟的，失去可读性，代码变得脆弱和很难改变。恐惧会增加，会越来越难相信代码会工作的很好。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Optional types: Pretend really hard
&lt;/h2&gt;
&lt;p&gt;
有一种消除恐惧的方法是通过 &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;TypeScript&lt;/a&gt; 或者 &lt;a href=&#34;https://flow.org/&#34;&gt;Flow&lt;/a&gt; 引入可选的类型检查。接收到一个 user 之后，声明这是 User 类型，这以后只当作 User 类型用。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;interface&lt;/span&gt; User{
  id&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; number
  name&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; string
  email&lt;span style=&#34;color:#333&#34;&gt;?:&lt;/span&gt; string
}

fetchUser(id).then((user&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; User) =&amp;gt; {
 &lt;span style=&#34;color:#888&#34;&gt;// Got my User!
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;})

&lt;span style=&#34;color:#888&#34;&gt;// Later
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;render(user.name) &lt;span style=&#34;color:#888&#34;&gt;// Compiler says he has a name
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样假装其实挺难的。你把你的信任转移到其它地方了。你依然相信其它系统会给你正确的数据结构。在代码里面，你信任你给那个数据赋予的类型，在你使用不当的时候，编译器会报错。代替相信开发人员知道数据的结构并且正确的使用它，你信任开发人员会写出正确的类型，信任编译器不会对这些类型撒谎。
&lt;/p&gt;
&lt;p&gt;
增加类型设定并没有解决潜在的问题，它会提升数据在代码里面的一致性，但是对于外来数据没有任何限制。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Validation: Trust but validate
&lt;/h2&gt;
&lt;p&gt;
在一个互相不太信任的环境里面，你或者需要在各种地方做数据校验。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;fetchUser(id).then(user =&amp;gt;{
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; validationErrors &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; validate(user)
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (validationErrors) {
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Error&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;wat&amp;#39;&lt;/span&gt;)
  }
 &lt;span style=&#34;color:#888&#34;&gt;// got my User!
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;})

&lt;span style=&#34;color:#888&#34;&gt;// Later
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;render(user.name) &lt;span style=&#34;color:#888&#34;&gt;//He has a name
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
你可以手动做这些，不过这些验证可能是临时的（应该是说不太通用），费力的，并且容易出错的。或者，你可以使用 &lt;a href=&#34;http://json-schema.org/&#34;&gt;JSON schema&lt;/a&gt; 定义和 &lt;a href=&#34;https://github.com/epoberezkin/ajv&#34;&gt;ajv&lt;/a&gt; 或者其它工具来验证数据是不是符合 schema 定义。这么做可以让其它用户复用，例如生成文档，但是这个似乎不那么明确也容易出错，因为你需要手动写这样的定义。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;
    },
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
    },
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;age&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;
    }
  },
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Optional types + validation
&lt;/h2&gt;
&lt;p&gt;
或者你也可以同时使用类型检查和数据验证。类型检查减少内部对数据的恐惧，数据校验建立对外来数据的信任。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;interface&lt;/span&gt; User{
  id&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; number
  name&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; string
  email&lt;span style=&#34;color:#333&#34;&gt;?:&lt;/span&gt; string
}

fetchUser(id).then((user&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; User) =&amp;gt;{
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; validationErrors &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; validate(user)
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (validationErrors) {
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Error&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;wat I trusted you&amp;#39;&lt;/span&gt;)
  }
 &lt;span style=&#34;color:#888&#34;&gt;// got my User!
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;})

&lt;span style=&#34;color:#888&#34;&gt;// Later
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;render(user.name) &lt;span style=&#34;color:#888&#34;&gt;//He has a name
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
为了避免同时写两套类型定义给数据验证和类型检查，你可以使用 Typescript 和 Flow 或者使用类似 &lt;a href=&#34;https://github.com/pelotom/runtypes&#34;&gt;runtypes&lt;/a&gt;(TS), &lt;a href=&#34;https://github.com/seanhess/runtime-types&#34;&gt;runtime-types&lt;/a&gt;(Flow) 或者 &lt;a href=&#34;https://github.com/YousefED/typescript-json-schema&#34;&gt;typescript-json-schema&lt;/a&gt;(TS) 这样的库。经过这几步之后，你可能开始信任你的数据了。但是这里还有更深的问题，等一会会说。
&lt;/p&gt;
&lt;h1 id=&#34;headline-5&#34;&gt;
Fear and changing data
&lt;/h1&gt;
&lt;p&gt;
那么当改变数据的时候呢？默认情况下，javascript 里面的数据可以随意改变。举个例子，这个函数接收一个文档，然后改变了一个字段的格式，增加了一个字段。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; formatDocument(doc, source) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(doc.creationDate) {
    doc.creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; convertTimeToUtc(doc.creationDate)
  } &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; {
    doc.creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;null&lt;/span&gt;
  }
  doc.source &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; source
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
但是在这种风格下，数据流就很难掌控了，恐惧会开始出现。如果我们的数据在很多地方都用了呢？数据在我这里是什么值？如何才能相信数据在此时此刻是我期望的？这个例子比较无聊，但是问题在大量代码或者同步系统里面会变得更严重。
&lt;/p&gt;
&lt;p&gt;
你想要依赖类型检查，但是这些类型定义也救不了你。在 typescript 和 flow 里面，下面的函数有相同的类型定义。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; formatDocument(doc&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; Document, source&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;String&lt;/span&gt;) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(doc.creationDate) {
    doc.creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; convertTimeToUtc(doc.creationDate)
  } &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; {
    doc.creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;null&lt;/span&gt;
  }
  doc.source &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; source
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; formatDocument(doc&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; Document, source&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;String&lt;/span&gt;) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(doc.creationDate) {
    doc.creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; convertTimeToUtc(doc.creationDate)
  } &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; {
    doc.creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;null&lt;/span&gt;
  }
  doc.source &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; source
  child_process.exec(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sudo rm -rf /&amp;#34;&lt;/span&gt;)
  launchRocket()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
其中一个是你想要的，另一个会把城市炸飞。类型检查对这些无能为力。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Convention: Pretend immutability
&lt;/h2&gt;
&lt;p&gt;
为了写更好的代码，你们团队决定使用只读风格来写代码。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; formatDocument(doc&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; Document, source&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;String&lt;/span&gt;) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; {
    creationDate&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; sanitizeDate(doc.creationDate),
    source&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; source,
    text&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; doc.text
  }
  &lt;span style=&#34;color:#888&#34;&gt;// Not mutating data
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#888&#34;&gt;// Not deleting root dir
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#888&#34;&gt;// Not launching rocket
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;}

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; sanitizeDate(date) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; date &lt;span style=&#34;color:#333&#34;&gt;?&lt;/span&gt; convertTimeToUtc(date) &lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;null&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
你赞同使用 const 而不是 var，使用复制修改而不是直接修改。使用赋值来表示修改。开始使用三目运算符(ternary operator) 来代替 if 语句。函数返回新的值而不是修改。使用 map，filter，reduce 以及其它函数式的方法产生新的数据，而不是直接修改。
&lt;/p&gt;
&lt;p&gt;
不可改变的数据约定在 javascript 世界里面会带来便利，在 javascript 生态里面工作的挺好。但是这个严重依赖于开发人员的自律和互相信任。你相信开发人员会按照协议例如避免直接修改数据或者在数据发生改变的时候明确的指出来。你可能需要更健壮一点的东西。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Libraries: Pretend really hard
&lt;/h2&gt;
&lt;p&gt;
你可以通过使用数据转换和只读数据结构的辅助工具来把对开发人员的信任转移到工具上。可选的有例如 &lt;a href=&#34;http://ramdajs.com/&#34;&gt;Ramda&lt;/a&gt;，&lt;a href=&#34;https://github.com/calmm-js/partial.lenses&#34;&gt;partial.lenses&lt;/a&gt;，&lt;a href=&#34;https://github.com/gcanti/monocle-ts&#34;&gt;monocle-ts&lt;/a&gt; 以及其它的。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;*&lt;/span&gt; as R from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;ramda&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; formatDocument(doc, source) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; sanitizeDate(creationDate)
  &lt;span style=&#34;color:#888&#34;&gt;// Return a new copy of the data
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; R.merge(doc, {creationDate, source})
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这些工具的一个基本原则是把这些数据当作不可变的。但是 &lt;a href=&#34;http://ramdajs.com/0.14/docs/#assoc&#34;&gt;Ramda 也只是浅拷贝&lt;/a&gt;，不过如果对于不可变数据的约定足够，那大家还是可以假装它是。你可能会得到一点性能影响，但是你会得到对代码的信任。如果我们普遍使用这类工具以及这样的约定，会让这个工作的很好。
&lt;/p&gt;
&lt;p&gt;
强制使用只读数据结构又想避免性能影响，可以试试看 &lt;a href=&#34;https://github.com/facebook/immutable-js&#34;&gt;Immutable.js&lt;/a&gt;， &lt;a href=&#34;https://github.com/rtfeldman/seamless-immutable&#34;&gt;seamless-immutable&lt;/a&gt; 或者 &lt;a href=&#34;http://swannodette.github.io/mori/&#34;&gt;Mori&lt;/a&gt;。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;*&lt;/span&gt; as I from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;Immutablejs&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt; formatDocument(doc, source) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; creationDate &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; sanitizeDate(creationDate)
  &lt;span style=&#34;color:#888&#34;&gt;// Cant&amp;#39;t mutate doc
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; doc.merge({creationDate, source})
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这么做使得数据本身是不可变的，只能通过暴露出来的只读途径去使用数据。但是只会应用到这些数据内部的数据结构。大量的其它 javascript 代码依赖于 javascript 的原生数据结构，你得在这些数据类型间来回转换，对于原生的数据类型不再信任了。
&lt;/p&gt;
&lt;p&gt;
这些方法都有自己的局限性，但是大部分都和类型检查冲突。
&lt;/p&gt;
&lt;h1 id=&#34;headline-8&#34;&gt;
Trusting JavaScript
&lt;/h1&gt;
&lt;p&gt;
前面的例子引入了一些可以写出更高效的 javascript 代码的工具：类型检查，函数式转换，不可变数据结构。但是这些工具都有自己的局限性，很难一起配合。
&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Optional types give a false sense of security
&lt;/h2&gt;
&lt;p&gt;
对于 javascript 来说，类型检查设计之初就是可选的，并不是所有东西都被定义了类型，你也没法相信所有东西都有类型。Flow 不可靠，而 &lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/type-compatibility.html&#34;&gt;typescript 故意不可靠&lt;/a&gt;，这意味着有些情况下类型是错误的但是编译器会忽略。
&lt;/p&gt;
&lt;p&gt;
并且 javascript 的类型检查有时候会撒谎。javascript 有些东西很难或者说不可能通过 typescript 或者 flow 定义类型。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Higher order functions
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Ramda 的 &lt;a href=&#34;http://ramdajs.com/0.14/docs/#call&#34;&gt;call&lt;/a&gt;, &lt;a href=&#34;http://ramdajs.com/0.14/docs/#compose&#34;&gt;compose&lt;/a&gt;, &lt;a href=&#34;http://ramdajs.com/0.14/docs/#chain&#34;&gt;chain&lt;/a&gt;, &lt;a href=&#34;http://ramdajs.com/0.14/docs/#lift&#34;&gt;lift&lt;/a&gt;, and &lt;a href=&#34;http://ramdajs.com/0.14/docs/#lens&#34;&gt;lenses&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
partial.lenses 的 &lt;a href=&#34;https://github.com/calmm-js/partial.lenses/issues/55&#34;&gt;functions&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Dynamic functions
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Ramda 的 &lt;a href=&#34;http://ramdajs.com/0.14/docs/#invert&#34;&gt;invert&lt;/a&gt;, &lt;a href=&#34;http://ramdajs.com/0.14/docs/#dissoc&#34;&gt;dissoc&lt;/a&gt;, &lt;a href=&#34;http://ramdajs.com/0.14/docs/#mergeWith&#34;&gt;mergeWith&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Immutable.js 的&lt;a href=&#34;https://github.com/facebook/immutable-js/blob/master/type-definitions/Immutable.d.ts&#34;&gt;几乎所有内容&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Monkey-patched anything
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
AWS SDK 客户端 &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/using-promises.html#w2ab1c17c15c14c17&#34;&gt;promises&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Bluebird &lt;a href=&#34;http://bluebirdjs.com/docs/api/promisification.html&#34;&gt;promisified APIs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Highly dynamic data structures
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
ElasticSearch &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/api-reference.html#api-get&#34;&gt;schemas&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
winston &lt;a href=&#34;https://github.com/winstonjs/winston#creating-your-own-logger&#34;&gt;custom loggers&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
想要把这些的类型都痛够 typescript 或者 flow 定义出来，得牺牲下面的原则：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
牺牲类型安全，也就使用类型检查的主要原因：使用 any 来定义他们，不对他们进行类型检查。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
牺牲便利性：让这些方法不那么通用，以便可以定义更加准确的类型。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
牺牲其它开发人员的时间：让使用这些函数的人提供正确的类型，例如 &lt;code class=&#34;verbatim&#34;&gt;Ramda.pipe&amp;lt;User, Array&amp;lt;string&amp;gt;, string, int&amp;gt;(..)&lt;/code&gt; 。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
这样你开始混合使用这些工具，把他们的类型定义混合进来。这样把信任从工具的开发人员转移到了开发人员的类型定义上。这些库部分会包含 any 类型，调用这些方法会悄悄的失去对类型的检查。使用 Flow 的时候，如果一个文件没有 &lt;code class=&#34;verbatim&#34;&gt;@flow&lt;/code&gt; 注解，会默默的关闭类型检查。
&lt;/p&gt;
&lt;p&gt;
你可以通过广泛的使用类型检查来避免这个问题，不允许使用 any 类型，设置检查工具对没有做类型检查的文件报错，以及其它的一些严格的设置。
&lt;/p&gt;
&lt;p&gt;
但是这很像是在堵住一艘正在漏水的船的洞一样。问题不仅在于你不相信系统里面的类型，而是你认为可以。你依赖类型检查来告诉你修改有问题，但是因为有时候会使用 any 类型，或者使用某个库，或者某些问题导致类型检查被禁用，而并不会告诉你。JavaScript 里面的类型和其它语言里面的类型不一样：他们不能以相同的方式被信任。
&lt;/p&gt;
&lt;p&gt;
最终，类型检查的有效性依赖于使用的团队的知识和信念。如果团队有比较高的信念和知识，他们就可以给更高的信任到类型检查上。但这取决于团队维持这个信任的的注意力和纪律性，恐惧会从许多微妙的途径蔓延开。
&lt;/p&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
Functional programming. Types. JavaScript. Pick two
&lt;/h2&gt;
&lt;p&gt;
类型检查和基础的函数式编程方法例如 maps，filters，reducers 等可以在 javascript 里面用的还可以。但是当你想要更深入一点的时候就会遇到问题。两个例子：
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/facebook/immutable-js&#34;&gt;Immutable.js&lt;/a&gt; 是一个给 javascript 用的持久的，只读数据结构类型。提供了常用的 javascript 数据结构，不依赖于就地修改数据。包括了内置的用于 &lt;a href=&#34;https://github.com/facebook/immutable-js/blob/master/type-definitions/Immutable.d.ts&#34;&gt;typescript&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/facebook/immutable-js/blob/master/type-definitions/immutable.js.flow&#34;&gt;flow&lt;/a&gt; 的类型定义（可以点过去看看）。里面有数不清的 any 类型，禁用了对这些值的类型检查。这样依赖用户通过其它类型检查提供正确的类型的数据。基本上，你每次用这个库时，要么选择不使用类型检查，要不就需要额外的工作保证类型是正确的。这阻碍了函数式编程的使用。
&lt;/p&gt;
&lt;p&gt;
Ramda 是另一个给 jvascript 使用的函数式编程工具。一些类型定义可以在&lt;a href=&#34;https://github.com/types/npm-ramda#status&#34;&gt;这里&lt;/a&gt;找到，以及这个评论：
&lt;/p&gt;
&lt;p&gt;
“注意：很多 Ramda 里面的函数还不是很好定义类型，问题主要集中在偏函数应用(Partial Application)，柯里化(curring) 和 代码组合(composition) 上，尤其在表达通用类型上。是的，这些可能是你最初使用 Ramda 的原因，这些问题导致 Ramda 很难给 typescript 写类型定义。一些关于 TS 的链接在下面可以找到”
&lt;/p&gt;
&lt;p&gt;
尽管有像 &lt;a href=&#34;https://github.com/gcanti&#34;&gt;Giulio Canti&lt;/a&gt; 这样令人印象深刻的工作，每次你选择高级一点的函数式编程概念的时候，例如不可变数据结构，函数组合，科里化，你基本上需要选择抛弃类型检查或者更多的代码来保证类型检查工作正常。这回阻碍函数式编程。
&lt;/p&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
Why we can’t have nice things in JavaScript
&lt;/h2&gt;
&lt;p&gt;
不可变数据结构在广泛被使用的时候工作的会挺好。但是 javascript 生态设计是基于可变数据结构的，&lt;a href=&#34;http://tagide.com/blog/research/constraints&#34;&gt;你不可能通过一个工具库来强制不可变&lt;/a&gt;，javascript 的类型检查也不足以处理作为库工具使用的不可变数据结构。
&lt;/p&gt;
&lt;p&gt;
类型检查在被广泛使用的时候工作的挺好。但是 javascript 里面的类型检查在设计时就是可选的，为了兼容 javascript 做的一些妥协。
&lt;/p&gt;
&lt;p&gt;
类型检查，不可变数据结构，以及函数式编程都互相支持，就像他们在其它语言里面一样。类型检查可以用来加强不可变数据，即使内部的数据结构是可变的或者类型在运行时不存在。类型检查可以帮助开发人员可以在使用函数组合或者使用 lenses 转换数据的时候能更好对接。能知道支持类型的时候函数转换会更加简单一点。知道数据是不可变的时候，函数转换会更加有效。
&lt;/p&gt;
&lt;h1 id=&#34;headline-12&#34;&gt;
Learning to code with fear
&lt;/h1&gt;
&lt;p&gt;
怎么伴随着恐惧编程？写更好的 javascript。一开始就假设对代码不信任，学习更多的技巧来编写功能化的 javascript 来避免琐碎的部分。有必要的话引入类型检查。使用不可变数据，不过只在有需要的时候或者想要强制约定的时候使用。只在有意义的时候使用类型检查，在功能性数据处理或者不可变类型可以提供更多好处的时候抛弃他们。当不使用类型检查的时候，多使用组合函数或者 lenses(透镜？) 。
&lt;/p&gt;
&lt;p&gt;
或者改变游戏使用 &lt;a href=&#34;http://www.purescript.org/&#34;&gt;Purescript&lt;/a&gt;。或者 &lt;a href=&#34;https://bucklescript.github.io/&#34;&gt;ReasonML&lt;/a&gt;, &lt;a href=&#34;http://elm-lang.org/&#34;&gt;Elm&lt;/a&gt;, 甚至 &lt;a href=&#34;https://clojurescript.org/&#34;&gt;ClojureScript&lt;/a&gt;。这些现在就可用。如果有需要，这些可以在 javascript 生态系统使用。这些从代码层面提供更高的信任，提供可以互相配合且工作的很好的不可变数据结构，函数式编程，以及类型系统。
&lt;/p&gt;
&lt;p&gt;
使用其中的任何一个语言都不能解决你的所有问题。这会引入他们自己的一下问题。但是可能会给你更高层面的对代码的信任，以及增加或者减少信任更好的工具。&lt;a href=&#34;https://www.reaktor.com/blog/fear-trust-and-purescript&#34;&gt;我的下一篇文章，会探讨下如何在 purescript 里面把这些思想结合起来。&lt;/a&gt;（这个是这个哥们的另一篇文章，标题叫 Fear, trust and PureScript: Building on trust with types and functional programming，力挺 PureScript）。
&lt;/p&gt;
&lt;p&gt;
但是在 javascript 里面，恐惧永远都伴随着你。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Typescript and Jest</title>
      <link>https://wdicc.com/typescript-and-jest/</link>
      <pubDate>Thu, 01 Nov 2018 11:59:29 +0800</pubDate>
      
      <guid>https://wdicc.com/typescript-and-jest/</guid>
      <description>&lt;p&gt;
最近在折腾 typescript，把很多项目改成了 ts 的。有一个老项目，改的过程中感觉各种不踏实，打算还是先写点测试用例，就折腾了一下 jest。各种坑。。。
&lt;/p&gt;
&lt;p&gt;
首先需要加一个 &lt;code class=&#34;verbatim&#34;&gt;tsconfig.json&lt;/code&gt;
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;es2015&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;es2015&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;lib&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;es2015&amp;#34;&lt;/span&gt;
    ],
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;outDir&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;./lib&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;declaration&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,

    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noEmit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;moduleResolution&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;esModuleInterop&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;allowSyntheticDefaultImports&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,

    &lt;span style=&#34;color:#888&#34;&gt;/* Strict Type-checking */&lt;/span&gt;
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;strictNullChecks&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noImplicitAny&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noImplicitThis&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;alwaysStrict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,

    &lt;span style=&#34;color:#888&#34;&gt;/* Additional Checks */&lt;/span&gt;
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noUnusedLocals&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,                &lt;span style=&#34;color:#888&#34;&gt;/* Report errors on unused locals. */&lt;/span&gt;
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noUnusedParameters&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,            &lt;span style=&#34;color:#888&#34;&gt;/* Report errors on unused parameters. */&lt;/span&gt;
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noImplicitReturns&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,             &lt;span style=&#34;color:#888&#34;&gt;/* Report error when not all code paths in function return a value. */&lt;/span&gt;
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noFallthroughCasesInSwitch&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,    &lt;span style=&#34;color:#888&#34;&gt;/* Report errors for fallthrough cases in switch statement. */&lt;/span&gt;
  },
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;include&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
     &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;*.ts&amp;#34;&lt;/span&gt;
  ],
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;exclude&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node_modules&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;__tests__&amp;#34;&lt;/span&gt;
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后安装一个 &lt;code class=&#34;verbatim&#34;&gt;typescript&lt;/code&gt; 就可以通过 &lt;code class=&#34;verbatim&#34;&gt;yarn tsc&lt;/code&gt; 命令编译了，生成的 js 在 &lt;code class=&#34;verbatim&#34;&gt;lib&lt;/code&gt; 下面。
&lt;/p&gt;
&lt;p&gt;
测试如果是用 js 写，那么直接装 &lt;code class=&#34;verbatim&#34;&gt;jest&lt;/code&gt; 就可以了。但是我们既然项目都改成 ts 了，那么还是希望用 ts 写。那就需要用到 &lt;code class=&#34;verbatim&#34;&gt;ts-jest&lt;/code&gt; 。这货的配置可以写到 &lt;code class=&#34;verbatim&#34;&gt;package.json&lt;/code&gt; 里面。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
 &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;test-projct&amp;#39;&lt;/span&gt;,
 &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;0.0.1&amp;#34;&lt;/span&gt;,
 ........
 &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;jest&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;preset&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;ts-jest&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;testEnvironment&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;testMatch&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [ &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;**/__tests__/*-test.ts&amp;#34;&lt;/span&gt; ],
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;globals&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;ts-jest&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;babelConfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;isolatedModules&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;isolatedModules&lt;/code&gt; 表示说测试的时候先不做 type 检查。我这情况是，要改那些文件比较大一时都弄不好，可能 type 只改了部分，但是这个时候改到某个方法的时候，需要先加测试，以免改前改后不一致，所以这个时候只能忽略掉 type 检查了。
&lt;/p&gt;
&lt;p&gt;
这样配置之后，就可以用 ts 写 test 了。test 文件放到 &lt;code class=&#34;verbatim&#34;&gt;__tests__&lt;/code&gt; 目录里面，用 &lt;code class=&#34;verbatim&#34;&gt;*-test.ts&lt;/code&gt; 命名。这样这目录也可以放一些非测试用文件了，比如测试用例用到的一些 mock 文件之类。
&lt;/p&gt;
&lt;p&gt;
这样看着一切美好。直到我遇到了一个问题，我的那些需要测试的方法，有些是私有的，又不想因为这个改成 public 的，那么是不是有办法可以测试？这样就找到了 &lt;code class=&#34;verbatim&#34;&gt;rewire&lt;/code&gt; ，这个可以把你的模块的内容随意替换组合，方便你做 mock。我要做的也覆盖了。这样完美了。
&lt;/p&gt;
&lt;p&gt;
但是发现，rewire 不支持 typescript。在 ts 文件里面 rewire 一个模块之后，并没有多出来那些 &lt;code class=&#34;verbatim&#34;&gt;__get__&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;__set__&lt;/code&gt; 方法。没仔细去研究代码，找到了 &lt;code class=&#34;verbatim&#34;&gt;babel-plugin-rewire&lt;/code&gt; ，给 &lt;code class=&#34;verbatim&#34;&gt;package.json&lt;/code&gt; 增加配置如下。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;babel&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;presets&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;
    ],
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;plugins&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
          &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;babel-plugin-rewire&amp;#34;&lt;/span&gt;
        ]
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
发现还是不行，并没有什么效果。查了之后发现，是因为 ts-test 根本不会去调用 babel 的缘故，所以上面的那个 &lt;code class=&#34;verbatim&#34;&gt;babelConfig&lt;/code&gt; 就是这个用途，让 ts-test 去使用 babel。
&lt;/p&gt;
&lt;p&gt;
目前还有一个问题是怎么让这个 package 在别人安装使用的时候自动编译为 js，这样让 js 用户也可以用。尝试过在 &lt;code class=&#34;verbatim&#34;&gt;package.json&lt;/code&gt; 里面增加 build 发现不行。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;tsc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;postinstall&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;[ -f ../../node_modules/.bin/tsc ] &amp;amp;&amp;amp; ../../node_modules/.bin/tsc || echo &amp;#39;no typescript found, skip build&amp;#39;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;jest&amp;#34;&lt;/span&gt;
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
安装这个模块之后在 &lt;code class=&#34;verbatim&#34;&gt;./node_modules/test-module/&lt;/code&gt; 下面执行 &lt;code class=&#34;verbatim&#34;&gt;tsc&lt;/code&gt; 并不会产出 &lt;code class=&#34;verbatim&#34;&gt;lib&lt;/code&gt; 目录的编译文件。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade to React 16.3</title>
      <link>https://wdicc.com/upgrade-to-react-16.3/</link>
      <pubDate>Mon, 22 Oct 2018 16:21:30 +0800</pubDate>
      
      <guid>https://wdicc.com/upgrade-to-react-16.3/</guid>
      <description>
&lt;p&gt;
随着 React native 升级，React 也升级到了 16.5 了。原来的改成新的生命周期了。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; ExampleComponent &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;extends&lt;/span&gt; React.Component {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;static&lt;/span&gt; getDerivedStateFromProps(nextProps, prevState) {
    &lt;span style=&#34;color:#888&#34;&gt;// Called after a component is instantiated or before it receives new props.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Return an object to update state in response to prop changes.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Return null to indicate no change to state.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  }

  UNSAFE_componentWillMount() {
    &lt;span style=&#34;color:#888&#34;&gt;// New name for componentWillMount()
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Indicates that this method can be unsafe for async rendering.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Prefer componentDidMount() instead.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  }

  UNSAFE_componentWillUpdate(nextProps, nextState) {
    &lt;span style=&#34;color:#888&#34;&gt;// New name for componentWillUpdate()
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Indicates that this method can be unsafe for async rendering.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Prefer componentDidUpdate() instead.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  }

  UNSAFE_componentWillReceiveProps(nextProps) {
    &lt;span style=&#34;color:#888&#34;&gt;// New name for componentWillReceiveProps()
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Indicates that this method can be unsafe for async rendering.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// Prefer static getDerivedStateFromProps() instead.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
React 在后面的版本里面，这几个方法都会被加上 &lt;code class=&#34;verbatim&#34;&gt;UNSAFE_&lt;/code&gt; ，直到被移除。
&lt;/p&gt;
&lt;p&gt;
我们在 &lt;code class=&#34;verbatim&#34;&gt;componentWillReceiveProps&lt;/code&gt; 里面主要是做了一个事情是根据后端反的数据来更新界面内容。因为我们用了 redux + saga，所以需要在这里做这个事情，如果是通过回调来更新数据的话，就不用这么麻烦了，直接在回调里面设置 state 就可以了。
&lt;/p&gt;
&lt;p&gt;
因为在 &lt;code class=&#34;verbatim&#34;&gt;getDerivedStateFromProps&lt;/code&gt; 里面不让接触现在的 &lt;code class=&#34;verbatim&#34;&gt;this.props&lt;/code&gt; ，所以也不能简单的把原来 &lt;code class=&#34;verbatim&#34;&gt;componentWillReceiveProps&lt;/code&gt; 的代码直接复制过来用。解决思路下面的链接都提到了很多，我自己总结有那几个。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
和 prevState 做比较
&lt;/h1&gt;
&lt;p&gt;
比如想象一个页面有两个按钮，一个点了之后会 setState 为 &lt;code class=&#34;verbatim&#34;&gt;test1&lt;/code&gt; ，另一个按钮点了之后，会通过网络请求更新 store，然后更新 props 为 &lt;code class=&#34;verbatim&#34;&gt;test2&lt;/code&gt; ，那这个时候只需要和当前的 state 做比较就可以决定是不是要设置新的 state 了。
&lt;/p&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
把 preProps 保存到 state 然后和 prevState 做比较
&lt;/h1&gt;
&lt;p&gt;
这么做基本就和原来使用 &lt;code class=&#34;verbatim&#34;&gt;componentWillReceiveProps&lt;/code&gt; 基本一样了。没什么好说的了。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
在 render 里面综合 state 和 props 的值
&lt;/h1&gt;
&lt;p&gt;
比如有时候页面显示的是用户录入和 props 的数据综合的，那可以在 render 里面做这个合并的工作。
&lt;/p&gt;
&lt;h1 id=&#34;headline-4&#34;&gt;
参考链接
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/reactjs/rfcs/blob/master/text/0006-static-lifecycle-methods.md#common-problems&#34;&gt;React 关于新的生命周期的 rfc&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops&#34;&gt;关于使用场景比较多升级的时候处理比较麻烦的 componentWillReceiveProps 方法&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/reactjs/reactjs.org/issues/721&#34;&gt;关于 componentWillReceiveProps 方法和 getDerivedStateFromProps 的讨论&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://zhuanlan.zhihu.com/p/33925435&#34;&gt;关于新的生命周期国内人的中文解释&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/fi3ework/blog/issues/37&#34;&gt;另一篇国人的解释&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&#34;&gt;React 官方关于 getDerivedStateFromProps 使用的一些建议&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/reactjs/rfcs/pull/40&#34;&gt;关于为啥不在 getDerivedStateFromProps 里面加一个 prevProps 的讨论&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cleanup Your Disk Space</title>
      <link>https://wdicc.com/cleanup-your-disk-space/</link>
      <pubDate>Fri, 12 Oct 2018 12:26:47 +0800</pubDate>
      
      <guid>https://wdicc.com/cleanup-your-disk-space/</guid>
      <description>&lt;p&gt;
200 多 G 的空间，说没就没。搞个开发真不容易。
&lt;/p&gt;
&lt;p&gt;
清理 yarn npm 开发的 cache，这些有需要的会再次下载
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn cache clean
npm cache clean&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
清理 gradle android 开发的 cache，这些有需要的话 android-studio 会在生成
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rm -rf ~/.gradle/&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
清理 xcode ios 开发的东西，这些清理掉了需要用的话 xcode 会再生成
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rm -rf ~/Library/Developer/&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
清理 brew 安装的软件的旧版本，这个执行之后 python 可能会不正常，执行一下 &lt;code class=&#34;verbatim&#34;&gt;pyenv rehash&lt;/code&gt; 之类的命令
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;brew cleanup&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R.I.P Maomao</title>
      <link>https://wdicc.com/r.i.p-maomao/</link>
      <pubDate>Fri, 28 Sep 2018 10:33:30 +0800</pubDate>
      
      <guid>https://wdicc.com/r.i.p-maomao/</guid>
      <description>&lt;p&gt;
毛毛应该是 2004 年上半年&lt;a href=&#34;https://wdicc.com/about-mao/&#34;&gt;我从一个人家里抱回来的&lt;/a&gt;，到现在 14 岁多一点。&lt;a href=&#34;https://wdicc.com/diabetic-cat-maomao/&#34;&gt;从 2013.12.29 发现得了糖尿病&lt;/a&gt;，到现在是 4 年多一点，等于是大概 10 岁左右的时候得的。
&lt;/p&gt;
&lt;p&gt;
前面 10 年是无忧无虑欢乐的 10 年，猫基本什么都不用管，只有刚开始第一次长假出去玩的时候，拜托过朋友给中间来看看。后面出去玩基本就把两只猫都扔家里了，给他们弄足够的水和吃的，最长出去玩的时间得有 10 天，回来猫只是会比较粘人，其它基本还好。
&lt;/p&gt;
&lt;p&gt;
自从毛毛病了之后，就和养了一个孩子一样，必须每天早晚 2 针胰岛素。参考上面的文章，通过自己学习，掌握了采血，通过稀释来配胰岛素等。所以开始还需要定期配好稀释好的胰岛素，一次大概配置 20 针左右，放到冰箱，然后每天 2 针，10 天左右就需要重新配置。配药的时候，需要注意量和不能有空气，每次和老婆就像吸毒人员一样，小心翼翼的配好。直到后面加了糖猫猫的群，发现了 bd 针，才开始不在自己稀释配药了。
&lt;/p&gt;
&lt;p&gt;
毛毛病了之后，我们基本就很难出远门了，因为必须要回来打针。所以出去几次远门都拜托朋友、cc 妈妈等过来给定期打针。直到今年，才开始尝试给带着猫回家，去了一趟我们家，一趟 cc 家，整体猫虽然很害怕，不过也还好，没出什么问题。
&lt;/p&gt;
&lt;p&gt;
这次本来打算带着他们去沈阳的，结果没想到毛毛出事了。都是我的问题，我知道猫可以活 10 到 20 年，我曾经无处次想过猫死的时候的情形，没想到昨天就这么来了。昨天一晚没有睡，我早上感觉浑身乏力，以为是饿的，去吃了早点才发现不是这个原因。下定决心给他安乐的是我，我可能太薄情了，看着他抽搐受不了。毛毛病了这几年，我们也还断断续续的去了很多次医院，也有几次病危，但是都挺过来了。
&lt;/p&gt;
&lt;p&gt;
糖尿病猫做无碳水疗法需要喂高蛋白的猫粮，我们家没有条件给妞妞和毛毛分开喂食，只能一起吃。前段时间妞妞身体也不舒服过一次，去医院做 b 超，说是他的有一个肾萎缩的很厉害，建议我们喂老年猫粮，少喂高蛋白的。我也很发愁怎么搞。我和老婆两个北漂，父母多不在这里不能帮忙。
&lt;/p&gt;
&lt;p&gt;
现在只剩妞妞一个了，打算还是带着他去沈阳，还有乌龟一起。要不一只猫在家估计很孤单也会有问题，妞妞是一个特别粘人的猫。妞妞比毛毛大一岁，今年 15 岁多一点，希望能健康活着。
&lt;/p&gt;
&lt;p&gt;
毛毛病了之后，我就发现经过了童年成年到中年，也到了要开始有生离死别的时候了。当你喜爱的人一个一个都离开你的时候，为了什么活着？我和老婆没有孩子，当父母都百年之后我真不知道我会不会去选择提前结束。快乐的前半生即将或者已经过去了，后面怎么面对？
&lt;/p&gt;
&lt;p&gt;
安息吧毛毛，我们爱你。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Typescript for React Native</title>
      <link>https://wdicc.com/typescript-for-react-native/</link>
      <pubDate>Sun, 16 Sep 2018 16:36:17 +0800</pubDate>
      
      <guid>https://wdicc.com/typescript-for-react-native/</guid>
      <description>&lt;p&gt;
前几天研究 settimeout 的问题的时候，发现 &lt;a href=&#34;https://github.com/ocetnik/react-native-background-timer&#34;&gt;react-native-background-timer&lt;/a&gt; 自己没有 typescript 的 type 文件，但是有人给写了一个 &lt;a href=&#34;https://www.npmjs.com/package/@types/react-native-background-timer&#34;&gt;@types/react-native-background-timer&lt;/a&gt;，这个包算偏门了，都有人写了 type 文件，我感觉是时候试试看 typescript 了。
&lt;/p&gt;
&lt;p&gt;
搜了一下，发现没有多少在 rn 里面使用 ts 的，有一些关于 react 的，又很奇怪，大都基于 webpack 的。后来找到一篇&lt;a href=&#34;https://facebook.github.io/react-native/blog/2018/05/07/using-typescript-with-react-native&#34;&gt;官方的 blog 上面的&lt;/a&gt;，然后结合自己的研究，找到了思路。我是基于已有项目来做的，那个 blog 是基于新项目，大同小异。
&lt;/p&gt;
&lt;p&gt;
首先装几个包，这几个包里面， &lt;code class=&#34;verbatim&#34;&gt;=typescript&lt;/code&gt; 提供 typescript 的编译器， &lt;code class=&#34;verbatim&#34;&gt;react-native-typescript-transformer&lt;/code&gt; 提供了从 ts 代码到 js 代码的转换支持， @types 的两个包提供了 react 和 react-native 的 type 文件。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ yarn add -D typescript react-native-typescript-transformer @types/react @types/react-native&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在项目的根目录还需要准几个文件。 tsconfig.json，你的目录里面可能已经有一个 &lt;code class=&#34;verbatim&#34;&gt;jsconfig.json&lt;/code&gt; 了，那个是给 eslint 用的。tsconfig.json 同时给 typescript 和 tslint 使用。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;compilerOptions&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;es2015&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;es2015&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;lib&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
      &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;es2015&amp;#34;&lt;/span&gt;
    ],
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;jsx&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;noEmit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;moduleResolution&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;esModuleInterop&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;types&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
       &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;react&amp;#34;&lt;/span&gt;,
       &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;react-native&amp;#34;&lt;/span&gt;
     ],
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;allowSyntheticDefaultImports&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;
  },
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;include&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
     &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;./app/**/*&amp;#34;&lt;/span&gt;
  ],
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;exclude&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node_modules&amp;#34;&lt;/span&gt;
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这里面的 include/exclude 按照需要调整，注意里面没有 output，我们并不需要 typescript 输出 js 文件。（当然，也可以用输出 js 文件的方式来做这个事情，但是这样就不太好自动化了，细节不说了）
&lt;/p&gt;
&lt;p&gt;
然后还需要一个 rn-cli.config.js，这个是给 &lt;code class=&#34;verbatim&#34;&gt;react-native-typescript-transformer&lt;/code&gt; 用的。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;module.exports &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {
  getTransformModulePath() {
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; require.resolve(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;react-native-typescript-transformer&amp;#39;&lt;/span&gt;);
  },
  getSourceExts() {
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; [&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;ts&amp;#39;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;tsx&amp;#39;&lt;/span&gt;];
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后就可以写一些 &lt;code class=&#34;verbatim&#34;&gt;.ts&lt;/code&gt; 文件了。 &lt;code class=&#34;verbatim&#34;&gt;.ts&lt;/code&gt; 文件表示只有 js 代码， &lt;code class=&#34;verbatim&#34;&gt;.tsx&lt;/code&gt; 文件表示里面有 react 代码。写完之后可以执行一下 &lt;code class=&#34;verbatim&#34;&gt;yarn tsc&lt;/code&gt; 看看，是否有错误。没有错误的话，也可以在模拟器里面看看自己的 ts 代码是不是确实可以执行。
&lt;/p&gt;
&lt;p&gt;
你的代码可以在模拟器里面执行，主要是下面这段代码的作用。 &lt;code class=&#34;verbatim&#34;&gt;ts.transpileModule&lt;/code&gt; 会把 ts 代码转换成 js 代码，最终执行的是 js 代码。这里有一个需要注意的地方就是这里不管 ts 的语法错误，也就是你比如定义了一个 type 是 string 类型的变量，你给他做了 number 类型的赋值，这个在 js 里面是可以的，ts 是不允许的，但是这里并不会看到错误。执行 &lt;code class=&#34;verbatim&#34;&gt;yarn tsc&lt;/code&gt; 可以看到错误提示。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;module.exports.transform &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;function&lt;/span&gt;(src, filename, options) {
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;typeof&lt;/span&gt; src &lt;span style=&#34;color:#333&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;object&amp;#39;&lt;/span&gt;) {
    &lt;span style=&#34;color:#888&#34;&gt;// handle RN &amp;gt;= 0.46
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    ;({ src, filename, options } &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; src)
  }

  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (filename.endsWith(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#333&#34;&gt;||&lt;/span&gt; filename.endsWith(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;.tsx&amp;#39;&lt;/span&gt;)) {
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; tsCompileResult &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; ts.transpileModule(src, {
      compilerOptions,
      fileName&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; filename,
      reportDiagnostics&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;,
    })

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; errors &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; tsCompileResult.diagnostics.filter(
      ({ category }) =&amp;gt; category &lt;span style=&#34;color:#333&#34;&gt;===&lt;/span&gt; ts.DiagnosticCategory.&lt;span style=&#34;color:#007020&#34;&gt;Error&lt;/span&gt;
    )
.....
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
所以保证代码符合 typescript 有下面几个方法：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
使用支持 typescript 的编辑器，依靠编辑器的提示。vs code 配合 tslint 可以做到这个。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
提交代码之前执行 &lt;code class=&#34;verbatim&#34;&gt;yarn tsc&lt;/code&gt; 验证代码没问题之后再提交。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
在 git 的 commit-hook 里面增加一个 hook 自动执行 &lt;code class=&#34;verbatim&#34;&gt;yarn tsc&lt;/code&gt; 检查。git 也可以在 server 端做这个检查。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
为了保证这个，我在 git 的 commit-hook 里面增加了一个 hook。放到 &lt;code class=&#34;verbatim&#34;&gt;.git/hooks/pre-commit&lt;/code&gt; 就可以。
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#579&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#579&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#963&#34;&gt;has_ts_file&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;`&lt;/span&gt;git diff --cached --name-status | awk &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;$1 != &amp;#34;D&amp;#34; { print $2 }&amp;#39;&lt;/span&gt; | grep &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;.ts$&amp;#39;&lt;/span&gt; |wc -l&lt;span style=&#34;background-color:#fff0f0&#34;&gt;`&lt;/span&gt;

&lt;span style=&#34;color:#007020&#34;&gt;exec&lt;/span&gt; &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;1&lt;/span&gt;&amp;gt;&amp;amp;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;2&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$has_ts_file&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; -ge &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;then&lt;/span&gt;
    yarn tsc
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
但是 git 的 hooks 文件并不是 repo 的一部份，如何保证大家都是一样的配置呢？有一个 npm 包可以做这个事情。。 &lt;code class=&#34;verbatim&#34;&gt;yarn add -D pre-commit&lt;/code&gt; ，然后在 package.json 里面增加一些配置。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node node_modules/react-native/local-cli/cli.js start&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;jest&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;lint&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;node_modules/.bin/eslint app&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;./version-ios.sh&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;precommit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;./pre-commit&amp;#34;&lt;/span&gt;
    },
    &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;pre-commit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; [
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;precommit&amp;#34;&lt;/span&gt;
    ],
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
scripts 里面的 precommit 和 pre-commit 是新加的。那个 pre-commit 就是上面的那个脚本，放到项目目录一起管理就可以。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Background Task in React Native</title>
      <link>https://wdicc.com/background-task-in-react-native/</link>
      <pubDate>Sat, 08 Sep 2018 16:06:18 +0800</pubDate>
      
      <guid>https://wdicc.com/background-task-in-react-native/</guid>
      <description>&lt;p&gt;
react-native 支持 &lt;code class=&#34;verbatim&#34;&gt;setTimeout&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;setInterval&lt;/code&gt; 这些 js 的方法来设置 timer 执行一些任务。但是对于长时间执行的任务，比如你想每 1 分钟都执行一下网络请求看看是不是有新的数据，这个时候会有一个黄条警告和你说不要这么做。
&lt;/p&gt;
&lt;p&gt;
我们有类似需求，就找到了 &lt;a href=&#34;https://github.com/ocetnik/react-native-background-timer&#34;&gt;react-native-background-timer&lt;/a&gt; 这个包。这个用起来和 js 的 setTimeout 的方法一样，可以一直运行。
&lt;/p&gt;
&lt;p&gt;
我们另外还使用了 websocket 来和服务器保持数据同步。这样就必须要保证有网络问题的时候，可以自动重连保证链接。我们找到了 &lt;a href=&#34;https://github.com/pladaria/reconnecting-websocket&#34;&gt;reconnecting-websocket&lt;/a&gt; 这个包，他提供了自动重连功能。这个包是基于 js 写的，没有任何的 native 代码。我们用的过程中发现时不时会出现断开的情况，因为并不能稳定复现，我们一开始也没有太多时间研究这个问题，所以这个 bug 几乎是持续了几个月。另外，也主要是因为我们还有 pc 设备，也用了 websocket，但是那边表现就很稳定，所以基本可以确定是 android 的问题。
&lt;/p&gt;
&lt;p&gt;
我们试过自己手动断网，和手动重启服务器的方式断开 websocket，然后发现他都会重连。出现 bug 的时候，都是比如放了一个晚上，第二天来了之后，发现断开了。或者有时候似乎又不会断，总之是不很好的稳定可以复现。
&lt;/p&gt;
&lt;p&gt;
一开始怀疑是 android 进入省电模式之后，应用会出问题，把设备一直接着电源之后，似乎发现好像好了，但是实际上还是会出现断开的情况。后来给 app 增加了 &lt;code class=&#34;verbatim&#34;&gt;REQUEST_IGNORE_BATTERY_OPTIMIZATIONS&lt;/code&gt; 权限，试图解决，发现也不行。
&lt;/p&gt;
&lt;p&gt;
最近一个月总算有时间看看了，仔细研究了一下。给 app 增加了更多的 log，记录一下 websocket 的链接和断开的情况。发现一个情况，似乎整整 24h 的时候，会出现一个断开。断开之后有时候会连不上，有时候可以。因为是整整 24h，所以这个断开基本上可以肯定是 server 那边问题，但是断开不能重连依然是用户端这边的问题。
&lt;/p&gt;
&lt;p&gt;
后来我们找到了 24h 断开的原因，我们 websocket server 用的是 channel redis，&lt;a href=&#34;https://github.com/django/channels_redis/blob/master/channels_redis/core.py#L149&#34;&gt;里面默认是 24h 会断开&lt;/a&gt;。这个案子破了，定期倒是没问题，现在就是为啥不会重连的问题了。
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(
        self,
        hosts&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;None,
        prefix&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;asgi:&amp;#34;&lt;/span&gt;,
        expiry&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;60&lt;/span&gt;,
        group_expiry&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;86400&lt;/span&gt;,
        capacity&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;100&lt;/span&gt;,
        channel_capacity&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;None,
        symmetric_encryption_keys&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;None,
    ):&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
通过分析 websocket 的日志，发现断开之后，执行重连的时候，reconnect-websocket 避免过度重连，会增加一个延时，调用 &lt;a href=&#34;https://github.com/pladaria/reconnecting-websocket/blob/master/reconnecting-websocket.ts#L326&#34;&gt;this._wait()&lt;/a&gt;，问题就出在了这里，我们发现这个 promise 会卡住不能 resolve，这里面调用的就是 &lt;code class=&#34;verbatim&#34;&gt;setTimeout&lt;/code&gt; 。结合一开始说的，比较怀疑 rn 自己的 setTimeout 有问题，就试了一下使用 react-native-background-timer 来实现。改了之后运行了几天发现问题解决了。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;private&lt;/span&gt; _wait()&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Promise&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt; {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Promise&lt;/span&gt;(resolve =&amp;gt; {
            setTimeout(resolve, &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;._getNextDelay());
        });
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
继续看看为啥 rn 自己的 timer 有问题。
&lt;/p&gt;
&lt;p&gt;
找到了 &lt;a href=&#34;https://github.com/facebook/react-native/blob/master/Libraries/Core/Timers/JSTimers.js&#34;&gt;JSTimers.js&lt;/a&gt;，这里面通过调用 &lt;code class=&#34;verbatim&#34;&gt;Timing.createTimer&lt;/code&gt; 来创建 timer 的。Timing.createTimer 这个 native 模块的代码在&lt;a href=&#34;https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/modules/core/Timing.java#L324&#34;&gt;这里&lt;/a&gt;。这代码里面用到的包不熟悉，看了半天觉得看不明白，但是看到了这些。
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;void&lt;/span&gt; onHostPause() {
    isPaused.&lt;span style=&#34;color:#00c&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;);
    clearFrameCallback();
    maybeIdleCallback();
  }

  &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;void&lt;/span&gt; onHostResume() {
    isPaused.&lt;span style=&#34;color:#00c&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;false&lt;/span&gt;);
    &lt;span style=&#34;color:#888&#34;&gt;// TODO(5195192) Investigate possible problems related to restarting all tasks at the same
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// moment
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    setChoreographerCallback();
    maybeSetChoreographerIdleCallback();
  }&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
那个 &lt;code class=&#34;verbatim&#34;&gt;onHostPause&lt;/code&gt; 很可疑，我们知道 android 黑屏的时候，是会调用 app 的 onPause 的。继续找这个类实现了 &lt;a href=&#34;https://github.com/facebook/react-native/blob/master/ReactAndroid/src/main/java/com/facebook/react/bridge/LifecycleEventListener.java&#34;&gt;LifecycleEventListener&lt;/a&gt; 这个接口，里面注释写和 active 切换有关系，实际就是和 onPause 这些 activity 的生命周期挂钩的。
&lt;/p&gt;
&lt;p&gt;
app 放到后台之后，会调用 onHostPause，然后 timer 就都不执行了，所以那个 promise 一直不能 resolve，然后 reconnect-websocket 就不会连接。
&lt;/p&gt;
&lt;p&gt;
RN 提供了 &lt;a href=&#34;https://facebook.github.io/react-native/docs/headless-js-android.html&#34;&gt;Headless JS&lt;/a&gt; 来执行后台任务。我们就是改造了一下 reconnect-websocket 用 react-native-background-timer 就解决问题了。有需要可以用这个 &lt;a href=&#34;https://github.com/wd/reconnecting-websocket&#34;&gt;https://github.com/wd/reconnecting-websocket&lt;/a&gt; 。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>React Native Deeplink</title>
      <link>https://wdicc.com/react-native-deeplink/</link>
      <pubDate>Mon, 03 Sep 2018 18:00:56 +0800</pubDate>
      
      <guid>https://wdicc.com/react-native-deeplink/</guid>
      <description>&lt;p&gt;
App 一般都支持类似 &lt;code class=&#34;verbatim&#34;&gt;coolflight://list&lt;/code&gt; 这样的链接，可以直接打开 app 并打开列表，这个就是 deeplink。
&lt;/p&gt;
&lt;p&gt;
这个需要对 native 代码做一些修改，可以参考&lt;a href=&#34;https://reactnavigation.org/docs/en/deep-linking.html&#34;&gt;这里&lt;/a&gt;的修改，ios 和 android 都有写。这里有一个需要注意的是，对于 android 有一个配置是
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;    &amp;lt;data android:scheme=&amp;#34;mychat&amp;#34; android:host=&amp;#34;mychat&amp;#34; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这个里面配置 host 的话，后面使用的时候就需要类似 &lt;code class=&#34;verbatim&#34;&gt;mychat://mychat/list&lt;/code&gt; 这样的方式了，就是多了一层 mychat。这样也会导致 ios 和 android 的链接不统一，我查了&lt;a href=&#34;https://developer.android.com/training/app-links/deep-linking&#34;&gt;文档&lt;/a&gt;也没有查到没有设置 host 会有什么问题，我就去掉了，去掉之后，ios 和 android 的链接就统一了。都是 &lt;code class=&#34;verbatim&#34;&gt;mychat://list&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
另外 android 还有一个需要注意的地方是，activity 的 launchmod 需要设置为 &lt;code class=&#34;verbatim&#34;&gt;singleTask&lt;/code&gt; 要不会导致每次通过 deeplink 打开 app 都会新建一个，导致你有多个 js 在后台跑。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;lt;activity
  android:name=&amp;#34;.MainActivity&amp;#34;
  android:launchMode=&amp;#34;singleTask&amp;#34;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在 js 里面可以使用 &lt;code class=&#34;verbatim&#34;&gt;Linking.openURL(url).catch(err =&amp;gt; console.error(&amp;#39;An error occurred&amp;#39;, err))&lt;/code&gt; 打开一个 deeplink ，可以是别的 app 的，也可以是自己的。
&lt;/p&gt;
&lt;p&gt;
然后就是在 js 里面处理对应的 deeplink 了。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;componentDidMount() {
  Linking.getInitialURL().then((url) =&amp;gt; {
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (url) {
      console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;Initial url is: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; url);
    }
  }).&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;catch&lt;/span&gt;(err =&amp;gt; console.error(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;An error occurred&amp;#39;&lt;/span&gt;, err));

  Linking.addEventListener(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;._handleOpenURL);
}

componentWillUnmount() {
  Linking.removeEventListener(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;._handleOpenURL);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
在 &lt;code class=&#34;verbatim&#34;&gt;componentDidMount&lt;/code&gt; 里面，通过 &lt;code class=&#34;verbatim&#34;&gt;Linking.getInitialURL()&lt;/code&gt; 可以得到 app 冷启动的时候拿到的 link。通过 &lt;code class=&#34;verbatim&#34;&gt;Linking.addEventListener(&amp;#39;url&amp;#39;, callback)&lt;/code&gt; 可以拿到热启动 app 拿到的 link，分别处理或者统一处理都可以，看业务需求。
&lt;/p&gt;
&lt;p&gt;
我们用的是 React Navigation，他支持可以直接给 screen 设置 path，然后和 deeplink 匹配跳转。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; SimpleApp &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; createStackNavigator({
  Home&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; { screen&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; HomeScreen },
  Chat&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
    screen&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; ChatScreen,
    path&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;chat/:user&amp;#39;&lt;/span&gt;,
  },
});


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; prefix &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;mychat://&amp;#39;&lt;/span&gt;; &lt;span style=&#34;color:#888&#34;&gt;// 这里我们上面提到的统一了，所以不用区分 ios 和 android
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; MainApp &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; () =&amp;gt; &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;SimpleApp uriPrefix&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{prefix} &lt;span style=&#34;color:#333&#34;&gt;/&amp;gt;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样只需要定义一个 &lt;code class=&#34;verbatim&#34;&gt;uriPrefix&lt;/code&gt; 就可以了。
&lt;/p&gt;
&lt;p&gt;
我们为了把 navigation 和 redux 结合，自定义了 navigation 的 &lt;code class=&#34;verbatim&#34;&gt;navigation&lt;/code&gt; 属性，就不允许这么弄了。需要自己处理。
&lt;/p&gt;
&lt;p&gt;
主要思路是通过 &lt;code class=&#34;verbatim&#34;&gt;SimpleApp.router.getActionForPathAndParams(path, params)&lt;/code&gt; 得到 action，然后 dipatch 这个 action 就可以了。
&lt;/p&gt;
&lt;p&gt;
那个 &lt;code class=&#34;verbatim&#34;&gt;chat/:user&lt;/code&gt; 可以匹配到 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat/Jim&lt;/code&gt; 这样的 deeplink，然后那个 &lt;code class=&#34;verbatim&#34;&gt;user: Jim&lt;/code&gt; 会以 param 的方式给到 screen，通过 param.user 可以访问到。
&lt;/p&gt;
&lt;p&gt;
path 的格式支持的是这个 &lt;a href=&#34;https://github.com/pillarjs/path-to-regexp&#34;&gt;path-to-regexp&lt;/a&gt; 支持的格式，可以自定义表达式，具体可以参考那个文档。
&lt;/p&gt;
&lt;p&gt;
path 支持使用 &lt;code class=&#34;verbatim&#34;&gt;?&lt;/code&gt; 来表示一个字段是可选的，例如 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat/:user?&lt;/code&gt; 表示会匹配到 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat/Jim&lt;/code&gt; 。 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat/:user?/:msg?&lt;/code&gt; 这样的，可以匹配 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;mychat://chat/Jim&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;mychat://chat/Jim/hey&lt;/code&gt; 但是不能匹配 &lt;code class=&#34;verbatim&#34;&gt;mychat://chat//hey&lt;/code&gt; 。默认匹配的是 &lt;code class=&#34;verbatim&#34;&gt;([^\\/]+)&lt;/code&gt; 可以通过自定义表达式支持。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;  path&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;chat/:user([^\\/]*)?/:msg?&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>React Mobx</title>
      <link>https://wdicc.com/react-mobx/</link>
      <pubDate>Sun, 02 Sep 2018 19:18:16 +0800</pubDate>
      
      <guid>https://wdicc.com/react-mobx/</guid>
      <description>&lt;p&gt;
我们之前用的是 redux 来做的统一 store，最近一个新项目有同学用了 mobx，就了解了一下，刚开始看的时候，感觉比 redux 好啊？
&lt;/p&gt;
&lt;p&gt;
mobx 的逻辑是自动收集 store 属性被哪些 dom 使用，然后在属性被改变的时候，自动更新 dom。这样的模式显然比 redux 的 action，reducer，selector 那一套简单多了。
&lt;/p&gt;
&lt;p&gt;
给对应的组件加上 &lt;code class=&#34;verbatim&#34;&gt;@observer&lt;/code&gt; 装饰器之后，store 改变就会自动重现渲染组件。store 可以用下面的模式给到组件
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; store &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; TodoList();
&lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;TodoListView todoList&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{store} &lt;span style=&#34;color:#333&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
也可以用 &lt;code class=&#34;verbatim&#34;&gt;@inject&lt;/code&gt; 装饰器
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;@&lt;/span&gt;inject(store =&amp;gt; store)
&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;@&lt;/span&gt;observer
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; TodoListView {
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
之后都通过 &lt;code class=&#34;verbatim&#34;&gt;this.props&lt;/code&gt; 引用。
&lt;/p&gt;
&lt;p&gt;
一切都很美好，直到我看到了&lt;a href=&#34;https://mobx.js.org/best/react.html&#34;&gt;这个&lt;/a&gt;，这里列了一些 mobx 的坑。比如有讲到，mobx 为了能监控到对 store 的依赖和修改，其实是把 store 属性做了修改，所以 store 有一个属性是一个 Map，那么实际得到的是一个和 ES6 Map api 类似的一个对象，但是并不是原生的 Map。比如有一个属性是 Object，你给加了一个 key，例如 store.object[&amp;#39;a&amp;#39;] = &amp;#39;test&amp;#39;，那么这个修改并不能被监视，具体看那个文档吧。
&lt;/p&gt;
&lt;p&gt;
写 Javascript 基本就是从一个小坑爬出来掉到一个大坑里面。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Custom</title>
      <link>https://wdicc.com/android-custom/</link>
      <pubDate>Sun, 02 Sep 2018 08:00:16 +0800</pubDate>
      
      <guid>https://wdicc.com/android-custom/</guid>
      <description>&lt;p&gt;
我们给用户的设备，有 android pad 和 pc。pc 系统我之前基于 porteus 定制了一个，勉强可以用。apad 的系统一直没搞好。
&lt;/p&gt;
&lt;p&gt;
Android 系统必须要解锁之后才可以定制系统，否则没有 root 权限，system 分区的数据不能修改。
&lt;/p&gt;
&lt;p&gt;
Android 系统有四个重要的分区。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;boot&lt;/code&gt; ，和 linux 的类似，里面有 kernel 和 ramdisk，ramdisk 应该是在启动之后会成为 / 分区
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;recovery&lt;/code&gt; ，恢复分区，如果想对系统分区做什么操作，可以使用这里的程序引导系统，这个时候允许你进行一些操作。默认的 recovery 只能 wipe 和刷系统。自定义的 recovery 比较厉害，可以支持备份啊啥的一堆事情，比如 twrp 还有图形界面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;system&lt;/code&gt; ，系统分区，系统程序都在这里，包括系统自带的一些 app 等等。正常情况对这个分区是不能修改的，系统分区都是只读的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;data&lt;/code&gt; ，数据分区，这个分区是给用户使用的。用户安装的一下 app 以及一些数据都在这里。wipe 的时候就是会清空这个分区的数据。大家熟悉的 sdcard 那个分区，其实数据也是在这里的。data 分区里面 app 只能读取自己的数据，无法访问别的 app 的。但是放在 /sdcard 分区的数据，大家都可以访问（当然，还得有 sdcard 的权限）
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
前三个分区都可以定制。首先需要解锁 bootloader，这个各个定制版都可能有区别，比如华为我记得还需要去他们网站获取一个解锁码，获取的时候会提示你解锁之后就不给保了。原生的 android 都是去开发者选项里面打开，然后在启动的时候进 bootloader，执行 &lt;code class=&#34;verbatim&#34;&gt;fastboot oem unlock-go&lt;/code&gt; 。解锁的时候会自动 reset 系统，注意先备份数据。
&lt;/p&gt;
&lt;p&gt;
解锁之后，就可以刷自己的 recovery 了。刷之前建议先备份一下 &lt;code class=&#34;verbatim&#34;&gt;boot&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;recovery&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;system&lt;/code&gt; 分区，以方便自己回头可以刷回来。我用的是 twrp，其它的好像现在也么看到。这个得找和你的手机匹配的才行。具体方法是执行 fastboot boot twrpxxxxx.img 临时使用 twrp 启动，然后用通过 &lt;code class=&#34;verbatim&#34;&gt;adb shell&lt;/code&gt; 登录 shell，之后用 &lt;code&gt;dd if=/dev/block/mmcblk0pXX of=/sdcard/xxx.img&lt;/code&gt; 来备份，之后用 &lt;code&gt;adb pull /sdcard/xxx.img&lt;/code&gt; 下载到本地。具体各个分区的那个 XX 是什么，可以用 &lt;code class=&#34;verbatim&#34;&gt;fdisk -l&lt;/code&gt; 看。
&lt;/p&gt;
&lt;p&gt;
这里有一个需要注意的是，我发现我这使用临时启动到 twrp 的方式还是不能修改 system 分区，必须是把 twrp 刷入 recovery 之后才可以。就是这个导致我一直没有搞好 apad 的系统，我开始一直是用临时启动到 recovery 的方式来做的，对 system 做修改就是死机。
&lt;/p&gt;
&lt;p&gt;
现在比较新的系统都有一个 dm-verify ，想修改 system 分区就需要关闭这个，否则任何修改都会导致系统不能启动。我在 &lt;a href=&#34;https://forum.xda-developers.com/android/software/universal-dm-verity-forceencrypt-t3817389&#34;&gt;xda 找到一个&lt;/a&gt; 可以直接在 recovery 里面通过 sideload 刷就可以。
&lt;/p&gt;
&lt;p&gt;
关闭 dm-verify 之后就可以修改系统了。我还有一个需求是想系统启动之后，通过 iptables 对系统使用的网络做一些限制。想要在系统启动之后做一些事情，比较简单的就是修改 system 分区的那些 xxx.rc 加入自己的东西。我试了之后发现虽然程序可以执行，但是这种方式的程序，并不能直接操作 iptables 命令（执行不报错，但是无实际效果）。查了说大概是 kernel 级别的限制，这样难不成就去定制 kernel 了？
&lt;/p&gt;
&lt;p&gt;
Android 系统的 root 实际应该就是对系统 kernel 打了一个补丁，放了一个后门，允许通过 su 命令来获取 root 权限，这里获取的 root 权限可是货真价实的，可以执行 iptables 命令。
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://forum.xda-developers.com/apps/magisk&#34;&gt;Magisk&lt;/a&gt; 可以给系统 root。recovery 里面通过 sideload 刷入之后，系统会多出来一个 app，有程序想用 su 的话，这个 app 会弹一个提示问是不是允许。magisk 应该是给 kernel 打了补丁，关闭了 dm-verify（所以用 magisk 的话，就可以不用上面那个了），然后启动的时候，会 mount 一个 su.img 提供 su 命令，会启动一个 su 的 daemon。这个可以通过看 ramdisk 里面的内容可以看到。magisk 还会在你的 /data 分区装一个 app，一起配合使用。但是要注意一点，我们 wipe 系统之后，这个 app 也会被删除。但是前面说的那些 su.img 之类都是在 boot 分区的，那些都还有，一个没有 app 配合的 su 也可以用，就是所有程序都直接使用，没有限制了。所以如果是你自己用，那最最好是和 boot 一起刷，或者就是自己安装一个 app。
&lt;/p&gt;
&lt;p&gt;
对于 system 的修改，拿到 root 权限就可以了。但是对于 boot 分区，只能拿到一个 boot.img，想要修改，还需要使用一些工具把里面的内容解出来，以及之后再打包。我找到一个&lt;a href=&#34;https://forum.xda-developers.com/showthread.php?t=2319018&#34;&gt;工具&lt;/a&gt; 。
&lt;/p&gt;
&lt;p&gt;
android 系统启动的时候会读取一些 xxx.rc，这些 rc 类似 linux 下面那些，但是不像 linux 那些都是脚本，是有一个自己的格式的内容。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;on property:sys.boot_completed=1
    start wd-post-boot

service wd-post-boot /system/bin/sh /wd.post_boot.sh
    class late_start
    user root
    disabled
    oneshot&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
比如我上面这个，定义了一个 service &lt;code class=&#34;verbatim&#34;&gt;wd-post-boot&lt;/code&gt; ，然后让他在 &lt;code class=&#34;verbatim&#34;&gt;sys.boot_completed&lt;/code&gt; 这个 prop 值为 1 的时候执行一次。还有很多其它的方法，可以找 android 的文档看，我说的不能执行 iptables 就是这里的脚本里面不能执行。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Boot Linux Through PXE</title>
      <link>https://wdicc.com/boot-linux-through-pxe/</link>
      <pubDate>Mon, 02 Jul 2018 16:47:31 +0800</pubDate>
      
      <guid>https://wdicc.com/boot-linux-through-pxe/</guid>
      <description>
&lt;p&gt;
测试 porteus 的时候，每次都是做好 iso 之后写到一个 u 盘，然后用 u 盘启动看看效果，发现有点蛋疼，这浪费时间不说，我的 u 盘寿命估计也得少一截。就研究了一下 pxe 启动，这样每次改完之后通过 pxe 直接读取我改了之后的 iso 引导 linux 就好了。
&lt;/p&gt;
&lt;p&gt;
我这看 pxe 启动主要需要做两个事情，一个是 dhcp 的时候广播 tftp 的信息，一个是通过 nfs 共享给那个系统需要读取的文件。nfs 共享也可以改用 http 等其他服务。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
dnsmasq
&lt;/h2&gt;
&lt;p&gt;
广播 tftp 的信息，可以通过 dnsmasq 来做。dhcp 部分就不贴了，只贴 tftp 相关的。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;tftp-root=/srv/pxe/boot
dhcp-boot=/pxelinux.0
enable-tftp&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
网卡启动的时候会获取 &lt;code class=&#34;verbatim&#34;&gt;/pxelinux.0&lt;/code&gt; 然后获取 &lt;code class=&#34;verbatim&#34;&gt;/pxelinux.cfg/default&lt;/code&gt; （这个实际上有一个判断顺序，方便给不同的机器不同的配置）。然后根据这里面的配置，获取内核信息。然后加载内核。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
nfs
&lt;/h2&gt;
&lt;p&gt;
加载内核之后还需要系统文件，这个时候貌似有几个选择，比如通过 http 发送。我这用的是 nfs。想要通过 nfs 发送，内核得能支持 nfs mount。各 linux 的做法貌似不太一样。
&lt;/p&gt;
&lt;p&gt;
配置 nfs 的目录，在 &lt;code class=&#34;verbatim&#34;&gt;/etc/exports&lt;/code&gt; 里面加入类似这样的信息。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;/srv/pxe/porteus *(ro,fsid=0,no_subtree_check)
/srv/pxe/storage *(rw,fsid=1,no_root_squash,no_subtree_check)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后 &lt;code class=&#34;verbatim&#34;&gt;exportfs -rv&lt;/code&gt; ，这样 nfs 设置好了。
&lt;/p&gt;
&lt;p&gt;
我这 export 的目录和上面 tftp-root 的目录不一样，有的发行版可能会按照 tftp-root 的设置来读取，这个还得区分发行版看。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
其他
&lt;/h2&gt;
&lt;p&gt;
上面的例子只是写了一个大高，是实际使用相差很大。比如如何得到 &lt;code class=&#34;verbatim&#34;&gt;pxelinux.0&lt;/code&gt; ，如何让内核支持 nfs，以及在内核启动的时候加载 nfs 并使用 nfs 的数据启动，这些都和发行版有关系，还需要单看。
&lt;/p&gt;
&lt;p&gt;
参考
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.syslinux.org/wiki/index.php?title=PXELINUX&#34;&gt;PXELINUX&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Install Porteus to HD</title>
      <link>https://wdicc.com/install-porteus-to-hd/</link>
      <pubDate>Mon, 02 Jul 2018 16:23:54 +0800</pubDate>
      
      <guid>https://wdicc.com/install-porteus-to-hd/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;http://porteus.org/&#34;&gt;Porteus&lt;/a&gt; 是一个很好玩的系统，他基于 aufs 弄出来的一个「只读」系统，说是只读，实际上他也可以把修改保存到一个硬盘目录，然后启动的时候自动加载这些修改，这样就修改都还在。但是如果把这个目录删除，那么修改就都没有了，这就是所谓的只读。
&lt;/p&gt;
&lt;p&gt;
我开始的需求是需要搞一个 linux，然后给用户使用，并且希望用户只能用浏览器，不能使用其他东西，因为我们提供的服务就是一个网页。不能使用其他东西是为了避免使用的时候导致系统奔溃什么的，还得派人花时间去维护。然后看到有人推荐 &lt;a href=&#34;http://porteus-kiosk.org/index.html&#34;&gt;Kiosk&lt;/a&gt;，看了一下感觉这个东西太完美了，就是我想要的东西。然后就开始研究这个系统。研究的过程中发现了他是基于 Porteus 的，就开始看 porteus。
&lt;/p&gt;
&lt;p&gt;
Kiosk 确实也不错，但是我使用的时候想要定制支持中文输入法，打印机等设备，然后发现他阉割加定制的太多了，导致我看了几天居然还没有找到他的入口在哪里，尝试想搞定输入法，费了很多劲。kiosk 使用的是 openbox + tint2 ，后面看了 porteus 之后，他支持 mate，kde 这些桌面，并且也直接就支持 scim，所以打算还是基于这个定制比较简单一点。
&lt;/p&gt;
&lt;p&gt;
具体定制就不多说了，主要是定制好 iso 之后，怎么安装到硬盘。
&lt;/p&gt;
&lt;p&gt;
其实也相当简单，只需要把 u 盘上面的内容复制到一个硬盘分区，然后安装一个 bootloader 就可以了。
&lt;/p&gt;
&lt;p&gt;
安装 bootloader 的时候由于对这个东西不是特别熟悉，以及这么多年不搞 linux 之后又出来很多新的概念，所以走了一些弯路，一番&lt;a href=&#34;https://wdicc.com/grub2-and-uefi/&#34;&gt;学习&lt;/a&gt;之后，发现简单的很。可以参考&lt;a href=&#34;https://wdicc.com/grub2-and-uefi/#grub&#34;&gt;这里&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
然后就是需要弄一个 &lt;code class=&#34;verbatim&#34;&gt;grub.cfg&lt;/code&gt; 就可以了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;set timeout=1
set superusers=root
password_pbkdf2 root grub.pbkdf2.sha512.10000.xxxxxxxx
password guest guest

if [ x&amp;#34;$default&amp;#34; = xsaved ];then
 load_env;
 set default=&amp;#34;$saved_entry&amp;#34;;
fi

insmod vbe
insmod efi_gop
insmod efi_uga

insmod font
insmod part_gpt

search --label --no-floppy --set kgzx KGZX
set prefix=($kgzx)/boot/grub

if loadfont $prefix/fonts/unicode.pf2
then
    insmod gfxterm
    set gfxmode=auto
    set gfxpayload=keep
    terminal_output gfxterm
    insmod png
    background_image $prefix/grub.png
fi

menuentry &amp;#39;我的系统&amp;#39; --unrestricted {
  set root=&amp;#34;($kgzx)&amp;#34;
  linux /boot/syslinux/vmlinuz changes=/mnt/sda4/
  initrd /boot/syslinux/initrd.xz
  boot
}

menuentry &amp;#39;Cleanup&amp;#39; --users &amp;#34;guest&amp;#34; {
  set root=&amp;#34;($kgzx)&amp;#34;
  linux   /boot/syslinux/vmlinuz 3 restore=1
  initrd /boot/syslinux/initrd.xz
  boot
}

menuentry &amp;#39;Backup&amp;#39; --users &amp;#34;root&amp;#34; {
  search --file --set root /efi/Microsoft/Boot/bootmgfw.efi
  chainloader /efi/Microsoft/Boot/bootmgfw.efi
  boot
}&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
如果只是使用 mbr 方式，也可以用 grub-legacy 也就是 0.97 那个版本，安装操作类似的，grub.cfg 不一样，那个是叫做 &lt;code class=&#34;verbatim&#34;&gt;menu.lst&lt;/code&gt; 。然后那个版本不支持 uefi boot 和中文菜单。好像也不支持菜单设置密码？没啥特别的建议还是 grub2 吧。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Compile Kernel Module</title>
      <link>https://wdicc.com/compile-kernel-module/</link>
      <pubDate>Mon, 02 Jul 2018 16:13:56 +0800</pubDate>
      
      <guid>https://wdicc.com/compile-kernel-module/</guid>
      <description>&lt;p&gt;
使用 porteus 的时候，发现网卡不支持，找了一下发现有内核驱动可以用，那就需要编译一下内核的模块。
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.porteus.org/component/content/article/20-tutorials/development/91-compilation-and-usage-of-custom-porteus-kernel.html&#34;&gt;这里&lt;/a&gt;有一个帖子写了如何编译内核，主要步骤是先给内核打 aufs 的补丁，然后就是正常的 make config &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make modules_install 了。
&lt;/p&gt;
&lt;p&gt;
我这只是编译一个网卡驱动，操作步骤大概如下，把内核解压放到 /mnt/sda1/kernel 下面，然后把网卡驱动代码放到 /mnt/sda1/kernel/linux-4.16.3/drivers/net/wireless/rtl8821ce 下面。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# cd /mnt/sda1/kernel/linux-4.16.3/
# modprobe configs &amp;amp;&amp;amp; zcat /proc/config.gz &amp;gt; .config
# make oldconfig
# make prepare
# make modules_prepare
# export srctree=/mnt/sda1/kernel/linux-4.16.3
# ln -s /mnt/sda1/kernel/linux-4.16.3 /usr/src/linux
# cd drivers/net/wireless/rtl8821ce
# make&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后在这个目录下面会产生一个 rtl8821ce.ko 的文件。
&lt;/p&gt;
&lt;p&gt;
如果是遇到自己用的内核有一个模块没编译，那可以用下面的方式
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# after make modules_prepare
# make modules SUBDIRS=drivers/firmware/efi/&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样会在 drivers/firmware/efi/ 目录下面产生一个 xx.ko 之类的文件。
&lt;/p&gt;
&lt;p&gt;
把上面产生的 ko 文件放到你的 linux 的对应目录就可以使用 modprob 加载了，例如 &lt;code class=&#34;verbatim&#34;&gt;/lib/modules/4.16.3-porteus/kernel/drivers/net/wireless/8821ce.ko&lt;/code&gt; 。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Geodesy</title>
      <link>https://wdicc.com/geodesy/</link>
      <pubDate>Sun, 01 Jul 2018 08:10:05 +0800</pubDate>
      
      <guid>https://wdicc.com/geodesy/</guid>
      <description>&lt;p&gt;
坐标点之间的距离角度计算不能简单的用平面几何来算，得按照球面计算，PostgreSQL 提供了 gis 数据的计算支持，各种图形关系判断，距离计算等等。但是我们有时候也需要在 js 里面计算，开始的时候尝试自己按照公式写来着，写了一些发现太蛋疼了，因为只是单纯的看公式，缺少空间概念，算的对不对啥的都不知道。后来发现了这个 &lt;a href=&#34;https://github.com/chrisveness/geodesy&#34;&gt;js 库&lt;/a&gt;，简直太贴心了。
&lt;/p&gt;
&lt;p&gt;
提供了我用过的几个功能
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
度数表示转换，小数点形式到度分秒形式的互转。在 utm.js 里面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
计算线的真北角。point1.bearingTo(point2)，真北角计算是和线的方向有关系的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
和当前点夹角是 x，距离是 y 的点，point1.destinationPoint(y, x)。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
两点之间的距离，point1.distanceTo(point2)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
然后顺便记录一些东西。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;// 两条线的夹角的一半，普通角度
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; angle &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;360&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;180&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; bearing1 &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; bearing2) &lt;span style=&#34;color:#333&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;360&lt;/span&gt; &lt;span style=&#34;color:#888&#34;&gt;// 360 保证只有正的
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; halfAngle &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; angle &lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;180&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;?&lt;/span&gt; (&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;360&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; angle)&lt;span style=&#34;color:#333&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; angle&lt;span style=&#34;color:#333&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#888&#34;&gt;// 只要锐角
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;// 计算两条线夹角中线的真北角
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;// left,right bearing 需要是真北角
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; rightBearing &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; (bearing1 &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; bearing2)&lt;span style=&#34;color:#333&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; leftBearing &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;180&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; rightBearing

&lt;span style=&#34;color:#888&#34;&gt;// Math.sin 之类的方法使用的应该是小数形式的度数表示
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; angleToDecimal &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; halfAngle&lt;span style=&#34;color:#333&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;Math&lt;/span&gt;.PI&lt;span style=&#34;color:#333&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;180&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>UEFI Bootable Usb</title>
      <link>https://wdicc.com/uefi-bootable-usb/</link>
      <pubDate>Sat, 30 Jun 2018 07:30:58 +0800</pubDate>
      
      <guid>https://wdicc.com/uefi-bootable-usb/</guid>
      <description>
&lt;h1 id=&#34;headline-1&#34;&gt;
UEFI shell
&lt;/h1&gt;
&lt;p&gt;
UEFI firmware 应该会读取设备里面的分区，找到 ESP 然后再读里面的内容。我看到最简单的方式是把 u 盘格式化成 fat 然后建一个目录 &lt;code class=&#34;verbatim&#34;&gt;/boot/efi&lt;/code&gt; 然后下载一个 &lt;a href=&#34;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface#UEFI_Shell&#34;&gt;uefi shell&lt;/a&gt; 把 .efi 文件放到这个目录 &lt;code class=&#34;verbatim&#34;&gt;/boot/efi/shellx64.efi&lt;/code&gt; ，然后启动的时候就多了一个 uefi 菜单了，选择之后可以进入一个 uefi shell。
&lt;/p&gt;
&lt;p&gt;
uefi shell 里面有几个命令可以用。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
map
&lt;/h2&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;map&lt;/code&gt; 可以列出来当前机器的磁盘情况，找到你的 esp 分区。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
ls
&lt;/h2&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;ls&lt;/code&gt; 可以列出来磁盘目录里面的内容，比如 &lt;code class=&#34;verbatim&#34;&gt;ls fs0:\boot&lt;/code&gt; ，注意磁盘和目录之间用 &lt;code class=&#34;verbatim&#34;&gt;:&lt;/code&gt; ，目录层级之间用 &lt;code class=&#34;verbatim&#34;&gt;\&lt;/code&gt; 。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
bcfg
&lt;/h2&gt;
&lt;p&gt;
可以通过 &lt;code class=&#34;verbatim&#34;&gt;bcfg boot dump -v&lt;/code&gt; 列出来当前所有的 efi 菜单，注意每个项目都有一个序号，后面会用到。
&lt;/p&gt;
&lt;p&gt;
比如我想自己加一个菜单进去，那就找到最后那个的序号，然后执行 &lt;code class=&#34;verbatim&#34;&gt;bcfg add 8 fs0:\boot\grub\grubx64.efi GRUB&lt;/code&gt; (fat 系统不区分大小写)，指向我自己通过 &lt;code class=&#34;verbatim&#34;&gt;grub-install --efi-directory=/mnt/sda1/&lt;/code&gt; 放到 esp 分区的 grub 的 efi ，这样启动的时候就多了一个 GRUB 的选项，通过这个选项就可以进入 linux，然后使用更方便的 efibootmgr 来编辑这个菜单了。
&lt;/p&gt;
&lt;p&gt;
参考:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://wiki.archlinux.org/index.php/EFISTUB#UEFI_Shell&#34;&gt;UEFI Shell&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;headline-5&#34;&gt;
自己制作 iso
&lt;/h1&gt;
&lt;p&gt;
通过 &lt;a href=&#34;https://www.syslinux.org/wiki/index.php?title=Isohybrid#UEFI&#34;&gt;isohybrid&lt;/a&gt; 可以把一个 iso 做成支持 uefi 的格式，然后通过 dd 写入 u 盘之后，这个 u 盘就支持 uefi 启动了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;mkisofs \
 -o output.iso \
 -c boot/syslinux/isolinux.boot \
 -b boot/syslinux/isolinux.bin \
  -no-emul-boot -boot-load-size 4 -boot-info-table \
 -eltorito-alt-boot \
 -eltorito-platform 0xEF -eltorito-boot isolinux/efiboot.img \
  -no-emul-boot \
 CD_ROOT&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
efiboot.img 实际是一个 iso 格式的磁盘 img，可以通过下面的方式产生
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dd if=/dev/zero of=./efiboot.img bs=1M count=4
$ mount efiboot.img ./mnt
$ cp -r EFI /mnt
$ umount /mnt&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
EFI/boot 目录是 efi 启动你自己定义的内容，然后执行 &lt;code class=&#34;verbatim&#34;&gt;isohybrid --uefi output.iso&lt;/code&gt; 。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grub2 and UEFI</title>
      <link>https://wdicc.com/grub2-and-uefi/</link>
      <pubDate>Fri, 29 Jun 2018 20:03:54 +0800</pubDate>
      
      <guid>https://wdicc.com/grub2-and-uefi/</guid>
      <description>
&lt;p&gt;
这几天搞 Linux 又学习了一些新的东西。
&lt;/p&gt;
&lt;p&gt;
以前都是把 grub 装到 MBR，然后通过 grub 可以 chainloader 启动 windows。现在发现我装了之后并不能启动我的 windows 10 了，就只好研究了一下。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
GPT 分区
&lt;/h2&gt;
&lt;p&gt;
以前都是 MBR(Master Boot Record) 形式的分区，主分区 4 个，如果想要建更多，需要建扩展分区，然后再在扩展分区里面建立逻辑分区。现在发现有了 GPT(GUID Partition Table) 分区。这个方式呢，比 MBR 方式有好处，支持更多分区，支持大于 2.2TB 容量的磁盘。
&lt;/p&gt;
&lt;p&gt;
我看我的 windows 10 机器预装就是用的这个分区格式。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
UEFI 系统
&lt;/h2&gt;
&lt;p&gt;
UEFI(Unified Extensible Firmware Interface) 是基于 BIOS 的 MBR 启动方式不同的东西，是基于单独的 EFI System Partition(ESP) 里面的数据启动的。里面的程序都需要和 UEFI firmware 的 bitness 一致，x86_64 啥的。
&lt;/p&gt;
&lt;p&gt;
所以我的 windows 10 在 ESP 分区里面已经放了一个自己的起动器。Linux 启动之后，可以查看 &lt;code class=&#34;verbatim&#34;&gt;/sys/firmware/efi&lt;/code&gt; 看看是不是有，有的话表示 kernel 支持 efi，且和 firmware 的 bitness 一致。
&lt;/p&gt;
&lt;p&gt;
ESP 分区是 fat16/fat32 格式的，不像 mbr 在固定位置，到底是哪个分区是呢？是通过通过分区的 boot flag 这个标志来识别的。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
efibootmgr 
&lt;/h2&gt;
&lt;p&gt;
Linux 下面可以使用 efibootmgr 管理 efi 菜单，当然得 kernel 支持，主要看 &lt;code class=&#34;verbatim&#34;&gt;/sys/firmware/efi&lt;/code&gt; 目录吧。具体内核参数可以看&lt;a href=&#34;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface#Linux_kernel_config_options_for_UEFI&#34;&gt;这个&lt;/a&gt;。我看着应该是只有通过 efi 启动的系统，才能读取 efi firmware 的信息。否则就算有内核模块也不能读取。
&lt;/p&gt;
&lt;p&gt;
我还发现我这的机器上面通过 efibootmgr 删除了 windows 的行之后，启动的时候按 F12 出来的启动选项里面还有 windwos，会自动加回来，不知道是主板的保护还是哪里的问题，bios 里面没找到可以关闭这个功能的地方。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Grub
&lt;/h2&gt;
&lt;p&gt;
grub 支持安装到 MBR 也支持安装到 ESP 分区。不过只是把内容放到那个分区，最后给 efi 加启动的菜单，还需要 efibootmgr，就是需要相应的内核支持。
&lt;/p&gt;
&lt;p&gt;
类似这样，就是通过 uefi 启动了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# grub-install --target=x86_64-efi --efi-directory=/mnt/sda1 --bootloader-id=GRUB --boot-directory=/mnt/sda4/boot /dev/sda&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
也可以装到 MBR，就是通过传统的 bios 启动。可能需要加 &lt;code class=&#34;verbatim&#34;&gt;--force&lt;/code&gt; ，我遇到的情况会提示 gpt 分区的 boot flag 没有，我这直接不理他加 force 就可以。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# grub-install --boot-directory=/mnt/sda4/boot /dev/sda&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
grub 实际上是放到第一个分区前面的一部分空间里面的，传统的 MBR 方式分区软件一般会预留 31kb 从第 63 个扇区开始分区。对于 GPT 分区，因为会有一个 ESP 分区，grub 也可以直接利用这个，装到这个分区，ESP 分区会有一个 bootable flag，因为这等于是单独给 grub 用的分区，所以 grub 也不客气会直接覆盖里面的东西，用自己的文件系统格式，一般系统都不支持，这样也可以防止你自己或者被其他软件误操作。所以要注意，如果你打算用 efi 模式启动，那通过第一个方式用 &lt;code class=&#34;verbatim&#34;&gt;--efi-directory&lt;/code&gt; 把 grub 装到这个分区，或者就还是用 mbr 方式好了。参考&lt;a href=&#34;https://www.gnu.org/software/grub/manual/grub/html_node/BIOS-installation.html#BIOS-installation&#34;&gt;这个&lt;/a&gt;。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
加载 windows
&lt;/h2&gt;
&lt;p&gt;
我看可以通过 chainloader 加载 windows，也有 ntldr 加载，不太清楚具体区别。chainloader 是通过读取指定设备的块来的，比如 chainloader +1 读第一个块。或者 chainloader /EFI/Microsoft/Boot/bootmgfw.efi。
&lt;/p&gt;
&lt;p&gt;
UEFI 模式安装的 windows 可以参考&lt;a href=&#34;https://wiki.archlinux.org/index.php/GRUB#Windows_installed_in_UEFI.2FGPT_Mode_menu_entry&#34;&gt;这里&lt;/a&gt;，传统 MBR 方式的，参考&lt;a href=&#34;https://wiki.archlinux.org/index.php/GRUB#Windows_installed_in_BIOS.2FMBR_mode&#34;&gt;这里&lt;/a&gt;，这个用的是 ntldr 的方式，估计用 chainloader +1 应该也可以。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
怎么通过 uefi 启动 grub
&lt;/h2&gt;
&lt;p&gt;
想要使用 efibootmgr 编辑 efi 的菜单，就得通过 efi 模式启动到一个 linux。那一种方式是找一个支持 efi 启动的 live cd。另外一种是使用一个 &lt;a href=&#34;https://wiki.archlinux.org/index.php/Unified_Extensible_Firmware_Interface#UEFI_Shell&#34;&gt;uefi shell&lt;/a&gt;，可以参考&lt;a href=&#34;https://wdicc.com/uefi-bootable-usb/&#34;&gt;这里&lt;/a&gt;。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
设备名称是变的怎么办
&lt;/h2&gt;
&lt;p&gt;
我发现我这插了 u 盘之后，u 盘就成了 hd0 了，这样写在 grub.cfg 里面的 &lt;code&gt;set root=&amp;#34;(hd0,1)&amp;#34;&lt;/code&gt; 这样的代码就有问题了。grub2 提供了一个 &lt;a href=&#34;https://www.gnu.org/software/grub/manual/grub/grub.html#search&#34;&gt;search&lt;/a&gt; 命令来查找你想要的东西，然后把结果设置到一个变量。
&lt;/p&gt;
&lt;p&gt;
文档里面写了 &lt;code class=&#34;verbatim&#34;&gt;search.file&lt;/code&gt; 是 &lt;code class=&#34;verbatim&#34;&gt;search --file&lt;/code&gt; 的 alias，但实际上还有坑在这里。区别的地方看下面
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;search.file /efi/Microsoft/Boot/bootmgfw.efi root&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;search --file /efi/Microsoft/Boot/bootmgfw.efi --set root&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
看到区别了吧，那个 root 相当于是自己定义的变量（实际上 grub2 会隐含的用到 root 变量，所以也不能完全说是自己定义的）。我在这个坑上面花了一些时间。
&lt;/p&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
参考资料
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.rodsbooks.com/efi-bootloaders/index.html&#34;&gt;Managing EFI Boot Loaders for Linux&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.rodsbooks.com/efi-bootloaders/grub2.html&#34;&gt;Managing EFI Boot Loaders for Linux: Using GRUB 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.gnu.org/software/grub/manual/grub/html_node/Installing-GRUB-using-grub_002dinstall.html&#34;&gt;4.1 Installing GRUB using grub-install&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Redux Selector</title>
      <link>https://wdicc.com/redux-selector/</link>
      <pubDate>Sun, 13 May 2018 10:43:28 +0800</pubDate>
      
      <guid>https://wdicc.com/redux-selector/</guid>
      <description>&lt;p&gt;
redux 应用可以通过 selector 来做 state -&amp;gt; props 的映射工作。selector 本身有缓存效果，所以可以一定意义上加速。我用的是这个 &lt;a href=&#34;https://github.com/reduxjs/reselect&#34;&gt;https://github.com/reduxjs/reselect&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
selector 主要是一个纯函数，给同样的输入，得到同样的输出，只处理数据，没有其他附加影响。这样就可以缓存中间结果了。
&lt;/p&gt;
&lt;p&gt;
新建 selector 有两个方法，一个是直接定义函数，例如 
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; s1 &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (state) =&amp;gt; {
    &lt;span style=&#34;color:#888&#34;&gt;// 经过计算
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; state.user
}
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; s2 &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; state =&amp;gt; state.data
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
另外一个方法是通过 &lt;code class=&#34;verbatim&#34;&gt;createSelector&lt;/code&gt; 函数来创建，例如
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; s3 &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; createSelector(s1, s2, (s1, s2) =&amp;gt;{
    &lt;span style=&#34;color:#888&#34;&gt;// 经过计算
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; xx
})
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
实际上 selector 都是一些函数，具体用的是侯会执行这些函数，第一个方法创建的还好理解，第二个方法里面，会传什么参数呢？输入是什么呢？
&lt;/p&gt;
&lt;p&gt;
实际上，第二个方法定义的 selector 执行的时候类似这样。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; res &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; s3(s1(state), s2(state))
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
输入是里面 selector 的输入，然后不停嵌套到最初的数据。这样一个 selector 使用的方法就广泛了。比如
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; s1_res &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; s1(state) &lt;span style=&#34;color:#888&#34;&gt;// 从其他地方或者逻辑获取到这个值
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; res &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; s3(s1_res, s2(state)) &lt;span style=&#34;color:#888&#34;&gt;// 直接用来作为 s3 的输入
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Openwrt</title>
      <link>https://wdicc.com/openwrt/</link>
      <pubDate>Sun, 13 May 2018 10:01:39 +0800</pubDate>
      
      <guid>https://wdicc.com/openwrt/</guid>
      <description>&lt;p&gt;
前段时间还搞了一下 openwrt 定制，记录一下。
&lt;/p&gt;
&lt;p&gt;
openwrt 提供了很方便的方式让你可以在 x86 机器上面定制路由器固件，到 &lt;a href=&#34;https://archive.openwrt.org/&#34;&gt;&lt;a href=&#34;https://archive.openwrt.org/&#34;&gt;https://archive.openwrt.org/&lt;/a&gt;&lt;/a&gt; 下载对应的源码就可以。
&lt;/p&gt;
&lt;p&gt;
比如我用的是这个 &lt;a href=&#34;https://archive.openwrt.org/barrier_breaker/14.07/ar71xx/generic/OpenWrt-ImageBuilder-ar71xx_generic-for-linux-x86_64.tar.bz2&#34;&gt;https://archive.openwrt.org/barrier_breaker/14.07/ar71xx/generic/OpenWrt-ImageBuilder-ar71xx_generic-for-linux-x86_64.tar.bz2&lt;/a&gt; ， &lt;code class=&#34;verbatim&#34;&gt;barrier_breaker&lt;/code&gt; 是版本， &lt;code class=&#34;verbatim&#34;&gt;ar71xx&lt;/code&gt; 是 cpu 架构。解压之后目录类似如下 
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;drwxr-xr-x 12 wd wd 4.0K Mar 29 17:18 .
drwxr-xr-x  3 wd wd 4.0K Mar 26 20:32 ..
drwxr-xr-x  3 wd wd 4.0K Mar 27 10:40 bin
drwxr-xr-x  3 wd wd 4.0K Oct  1  2014 build_dir
-rw-r--r--  1 wd wd  94K Oct  1  2014 .config
drwxr-xr-x  2 wd wd 4.0K Oct  1  2014 dl
drwxr-xr-x  3 wd wd 4.0K Mar 26 20:37 include
-rw-r--r--  1 wd wd 5.0K Sep 21  2014 Makefile
-rw-r--r--  1 wd wd 570K Oct  1  2014 .packageinfo
drwxr-xr-x  4 wd wd 4.0K Oct  1  2014 packages
-rw-r--r--  1 wd wd  331 Oct  1  2014 repositories.conf
-rw-r--r--  1 wd wd  11K Sep 21  2014 rules.mk
drwxr-xr-x  4 wd wd 4.0K Sep 21  2014 scripts
drwxr-xr-x  3 wd wd 4.0K Oct  1  2014 staging_dir
drwxr-xr-x  3 wd wd 4.0K Oct  1  2014 target
-rw-r--r--  1 wd wd 128K Sep 21  2014 .targetinfo
drwxr-xr-x  2 wd wd 4.0K Mar 27 10:40 tmp&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
编译的命令如下
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;make image \
    PROFILE=TLWR703 \
    PACKAGES=&amp;#34;firewall -ip6tables -kmod-ip6tables -kmod-ipv6 -odhcp6c -ppp -ppp-mod-pppoe -liblua -libubus-lua -libuci-lua -luci-app-firewall -luci-i18n-english -luci-lib-ipkg -luci-lib-lmo -luci-lib-sys -luci-proto-core -luci-proto-ppp -luci-sgi-cgi -luci-theme-base -luci-theme-openwrt kmod-mii kmod-usb-net kmod-usb-net-cdc-ether usb-modeswitch curl&amp;#34; \
    FILES=files/&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
编译结果会放在 &lt;code class=&#34;verbatim&#34;&gt;bin/ar71xx/&lt;/code&gt; 下面
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;-rw-r--r-- 1 wd wd  827 May 13 10:08 md5sums
-rw-r--r-- 1 wd wd 2.2M May 13 10:08 openwrt-ar71xx-generic-root.squashfs
-rw-r--r-- 1 wd wd 1.9M May 13 10:08 openwrt-ar71xx-generic-root.squashfs-64k
-rw-r--r-- 1 wd wd 3.8M May 13 10:08 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin
-rw-r--r-- 1 wd wd 2.9M May 13 10:08 openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-sysupgrade.bin
-rw-r--r-- 1 wd wd 1.5M May 13 10:08 openwrt-ar71xx-generic-uImage-gzip.bin
-rw-r--r-- 1 wd wd 1.1M May 13 10:08 openwrt-ar71xx-generic-uImage-lzma.bin
-rwxr-xr-x 1 wd wd 3.2M May 13 10:08 openwrt-ar71xx-generic-vmlinux.bin
-rwxr-xr-x 1 wd wd 3.3M May 13 10:08 openwrt-ar71xx-generic-vmlinux.elf
-rw-r--r-- 1 wd wd 1.5M May 13 10:08 openwrt-ar71xx-generic-vmlinux.gz
-rw-r--r-- 1 wd wd 1.1M May 13 10:08 openwrt-ar71xx-generic-vmlinux.lzma
-rwxr-xr-x 1 wd wd 1.2M May 13 10:08 openwrt-ar71xx-generic-vmlinux-lzma.elf&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
那个 &lt;code class=&#34;verbatim&#34;&gt;openwrt-ar71xx-generic-tl-wr703n-v1-squashfs-factory.bin&lt;/code&gt; 就是我那个路由器的出厂固件。简直简单到没法说了。
&lt;/p&gt;
&lt;p&gt;
前面那个编译命令里面， &lt;code class=&#34;verbatim&#34;&gt;PROFILE&lt;/code&gt; 是指定要编译的路由器，这个必须得是固件支持的，可以在 &lt;code class=&#34;verbatim&#34;&gt;target/linux/ar71xx/generic/profiles/&lt;/code&gt; 目录看到。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;00-default.mk  8devices.mk  atheros.mk   buffalo.mk  dragino.mk   ew.mk          jjplus.mk   netgear.mk   pcs.mk      rosewill.mk  tp-link.mk   wd.mk
01-minimal.mk  alfa.mk      atlantis.mk  compex.mk   easylink.mk  gl-connect.mk  linksys.mk  oolite.mk    planex.mk   senao.mk     trendnet.mk  zcomax.mk
02-ath5k.mk    allnet.mk    bhu.mk       d-link.mk   engenius.mk  hiwifi.mk      nclink.mk   openmesh.mk  redwave.mk  sitecom.mk   ubnt.mk      zyxel.mk&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;PACKAGES&lt;/code&gt; 指定了要包含的包，可以在 &lt;code class=&#34;verbatim&#34;&gt;packages/&lt;/code&gt; 目录下面看到有的包。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;FILES&lt;/code&gt; 指定了自己定义要包含到固件里面的文件。可以把这个目录当作 &lt;code class=&#34;verbatim&#34;&gt;/&lt;/code&gt; 来放文件，比如你放到 &lt;code class=&#34;verbatim&#34;&gt;files/abc&lt;/code&gt; 下面的文件，将来会在路由器的 &lt;code class=&#34;verbatim&#34;&gt;/abc&lt;/code&gt; 下面。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.:
etc

./etc:
banner  config  crontabs  dropbear  run.sh

./etc/config:
dropbear  firewall  network  system  wireless

./etc/crontabs:
root

./etc/dropbear:
authorized_keys&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
后面还给 wr703n 接了一个华为 4g usb E8372h 型号，支持了 4g 上网。需要的包是这些， &lt;code class=&#34;verbatim&#34;&gt;kmod-mii kmod-usb-net kmod-usb-net-cdc-ether usb-modeswitch&lt;/code&gt; ，华为这个 usb 支持 ether 方式使用，并且 usb-modeswitch 直接就支持，不用自己配置。把 eth1 作为 wan 就可以了。
&lt;/p&gt;
&lt;p&gt;
中国联通的信道
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
3G: WCDMA Band 1/8
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
4G: LTE-FDD 1/3/8  LTE-TDD 40/41
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
参考的一些文章
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://soha.moe/post/make-4g-wifi-ap-with-openwrt.html&#34;&gt;https://soha.moe/post/make-4g-wifi-ap-with-openwrt.html&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://right.com.cn/forum/forum.php?mod=viewthread&amp;amp;action=printable&amp;amp;tid=209854&#34;&gt;&lt;a href=&#34;http://right.com.cn/forum/forum.php?mod=viewthread&amp;amp;action=printable&amp;amp;tid=209854&#34;&gt;http://right.com.cn/forum/forum.php?mod=viewthread&amp;amp;action=printable&amp;amp;tid=209854&lt;/a&gt;&lt;/a&gt; 这个论坛里面之前有一个帖子帮助很大没保存
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Develop Plugin for Asuswrt Merlin</title>
      <link>https://wdicc.com/develop-plugin-for-asuswrt-merlin/</link>
      <pubDate>Sun, 13 May 2018 08:03:28 +0800</pubDate>
      
      <guid>https://wdicc.com/develop-plugin-for-asuswrt-merlin/</guid>
      <description>
&lt;p&gt;
换华硕路由器之后，一直用的是梅林（merlin）的固件（rom）。基于这个固件，有一个 &lt;a href=&#34;http://koolshare.cn/forum-96-1.html&#34;&gt;koolshare&lt;/a&gt; 的团队做了很多插件，并且做了一个通用的软件中心，可以方便的管理插件，还挺不错的。
&lt;/p&gt;
&lt;p&gt;
打算用 v2ray 的时候，就想着如何才能无缝替换掉 ss。因为 v2ray 在路由器上面跑效率不高内存占用比较高，ss 作者开始说不打算支持 v2ray。后来研究了 ss 原理之后发现替换很简单，只需要具备 2 个功能就可以，一个是可以支持 socks 代理，一个是可以透明转发流量的端口。这两个协议在 v2ray 都支持，所以要做的其实就是在启动 ss 相应软件的时候启动 v2ray 的就可以了。
&lt;/p&gt;
&lt;p&gt;
基于这个逻辑写了一个&lt;a href=&#34;https://gist.github.com/wd/e0bc83b33ce63506a9bdbc3b81658c52&#34;&gt;文档&lt;/a&gt; ，能弄明白的话，自己用应该也够了。后来一时兴起，做了一个&lt;a href=&#34;https://gist.github.com/wd/1445e3fcf0c9bc535a6e70d2de1d1624&#34;&gt;改进版&lt;/a&gt;。这个版本基本上就傻瓜化了。做的时候对基于 merlin 开发有了一些经验记录一下，发现讲这个的东西不多。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
一些基础知识
&lt;/h1&gt;
&lt;p&gt;
路由器上面的内容是只读的，修改之后重启就会重置。但是 JFFS 分区里面的内容是会保留的。想要保存数据有两个方法。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
存一个文件放到 JFFS 分区上面。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
通过 &lt;code class=&#34;verbatim&#34;&gt;dbus&lt;/code&gt; 命令储存。(这个命令具体会把数据存哪里我还没仔细看。)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
文件方式没什么好说的，储存和读取解析需要你自己做。 &lt;code class=&#34;verbatim&#34;&gt;dbus&lt;/code&gt; 命令提供了 key-value 的形式储存数据，可以通过例如 &lt;code class=&#34;verbatim&#34;&gt;dbus list v2ray&lt;/code&gt; 列出来所有 &lt;code class=&#34;verbatim&#34;&gt;v2ray&lt;/code&gt; 开头的 key 的情况，执行 &lt;code class=&#34;verbatim&#34;&gt;dbus&lt;/code&gt; 命令不带参数会有使用方法提示。
&lt;/p&gt;
&lt;p&gt;
一般开发插件还有一个设置也需要开启，就是允许执行 JFFS 的自定义脚本。这个指的是路由器启动的时候，自动执行 &lt;code class=&#34;verbatim&#34;&gt;/jffs/scripts/&lt;/code&gt; 下面的一些文件，也并不是任意文件都会执行，merlin 自己的 &lt;a href=&#34;https://github.com/RMerl/asuswrt-merlin/wiki/User-scripts&#34;&gt;wiki&lt;/a&gt; 有比较详细的说明。
&lt;/p&gt;
&lt;p&gt;
所以实际上一个插件的工作方式实际上是这样
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
路由器启动
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
读取 dbus 配置的数据
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
执行 &lt;code class=&#34;verbatim&#34;&gt;/jffs/scripts/&lt;/code&gt; 目录下面相应的脚本
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
这些脚本里面会执行你的插件的脚本
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
你的脚本会读取 dbus 配置的数据，以及读取你存储的文件
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不管是你的界面还是脚本有新的数据需要保存，通过 dbus 或者文件存下来
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
每次路由器启动都是这样一个从头初始化的过程。
&lt;/p&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
基于 koolshare 软件中心的离线包
&lt;/h1&gt;
&lt;p&gt;
我开发是基于 koolshare 软件中心的，他提供了一个离线安装的功能，以及很多好用的小工具，可以方便开发。想支持离线安装，需要你提供一个 &lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/install.sh&#34;&gt;install.sh&lt;/a&gt;，你上传的包的名字必须是 &lt;code class=&#34;verbatim&#34;&gt;name.tar.gz&lt;/code&gt; ， &lt;code&gt;name&lt;/code&gt; 名字还得和解压之后的目录名字对应，有些人多次下载系统可能会给他改成 &lt;code class=&#34;verbatim&#34;&gt;name(1).tar.gz&lt;/code&gt; 这种会失败。
&lt;/p&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;install.sh&lt;/code&gt; 里面底部定义的那几个 &lt;code class=&#34;verbatim&#34;&gt;softcenter_module_v2ray_&lt;/code&gt; 开头的配置是给软件中心用的。 &lt;code class=&#34;verbatim&#34;&gt;home_url&lt;/code&gt; 是软件中心里面点击你插件的图标的时候打开的页面。
&lt;/p&gt;
&lt;p&gt;
安装离线包的时候不会自动处理 &lt;code class=&#34;verbatim&#34;&gt;uninstall.sh&lt;/code&gt; ，需要你自己把这个放到&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/install.sh#L61&#34;&gt;对应地方&lt;/a&gt;，并且需要有对的名字。
&lt;/p&gt;
&lt;p&gt;
整个安装完全是你自己控制自己要做的事情。卸载也一样，需要自己删除自己复制的脚本文件和产生的数据等。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
界面功能
&lt;/h1&gt;
&lt;p&gt;
merlin 的界面文件是 &lt;code class=&#34;verbatim&#34;&gt;.asp&lt;/code&gt; 结尾，里面唯一相关的标记是类似这样的 &lt;code class=&#34;verbatim&#34;&gt;&amp;lt;% nvram_get(&amp;#34;firmver&amp;#34;); %&amp;gt;&lt;/code&gt; ，不记得是不是 asp 语法里面的东西了。基本上都是一些 js 和 html 的东西。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
初始化
&lt;/h2&gt;
&lt;p&gt;
一般是在界面的 body 的 onload 方法里面执行&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L463&#34;&gt;自己的函数&lt;/a&gt;。&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L500&#34;&gt;这里&lt;/a&gt;是预留左侧系统原有的导航按钮的地方。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
保存配置
&lt;/h2&gt;
&lt;p&gt;
界面里面可以通过 post 给 &lt;code class=&#34;verbatim&#34;&gt;applydb.cgi&lt;/code&gt; 的方式保存给 dbus，类似&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L251&#34;&gt;这里&lt;/a&gt;。先把表单里面的值都读出来做适当的处理，然后存到 &lt;code class=&#34;verbatim&#34;&gt;dbus&lt;/code&gt; 这个变量里面， &lt;code class=&#34;verbatim&#34;&gt;SystemCmd&lt;/code&gt; 定义的是执行 post 的之后需要执行的脚本。 &lt;code class=&#34;verbatim&#34;&gt;action_mode&lt;/code&gt; 是执行脚本之后界面的动作。
&lt;/p&gt;
&lt;p&gt;
这个里面你的脚本会被调用，你需要处理的事情，比如保存配置到文件什么的就可以在这里做了。
&lt;/p&gt;
&lt;p&gt;
这里有一个问题是执行命令的时候，不能得到执行的结果反馈。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
执行命令的时候显示反馈
&lt;/h2&gt;
&lt;p&gt;
上面保存配置是通过 ajax 异步执行的，ajax 的执行结果立刻就会反馈，脚本调用也是异步的，调用脚本的执行结果需要你自己想办法获取。
&lt;/p&gt;
&lt;p&gt;
类似我&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L300&#34;&gt;这里&lt;/a&gt;，在 ajax 执行成功之后获取执行的结果。先显示一个图层，在里面再&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L305&#34;&gt;无限执行另外一个 ajax&lt;/a&gt;，把 ajax 的执行结果放到刚才那个图层里面，这样用户就可以看到了。然后通过检查结果里面是否&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L316&#34;&gt;包含特定字符&lt;/a&gt;来判断脚本是不是执行完毕。
&lt;/p&gt;
&lt;p&gt;
ajax 请求的是一个 &lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L307&#34;&gt;url&lt;/a&gt;，这个 url 对应的文件是&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/res/v2ray_status.htm&#34;&gt;这个&lt;/a&gt;。里面其实很简单，就是把 &lt;code class=&#34;verbatim&#34;&gt;/tmp/v2ray_status.log&lt;/code&gt; 的内容显示出来。
&lt;/p&gt;
&lt;p&gt;
所以通过这个方式，上面的脚本自需要把想要反馈的内容放到这个 log 文件就可以了，整个逻辑就这样。我这里为了简单所有的脚本执行都复用了这个 log 文件，所以为了避免被上次执行的命令影响，每次执行脚本写入这个文件前都先把这个文件里面的历史数据清楚掉。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
其他命令执行结果的方式
&lt;/h2&gt;
&lt;p&gt;
merlin 还提供了一个 &lt;code class=&#34;verbatim&#34;&gt;apply.cgi&lt;/code&gt; 可以执行脚本，例如&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L136&#34;&gt;这里&lt;/a&gt;。我忘记是不是同步执行的了，好像是命令执行完毕之后才会执行 ajax 的回调。
&lt;/p&gt;
&lt;p&gt;
依然还是通过请求刚才那个 &lt;code class=&#34;verbatim&#34;&gt;/res/v2ray_status.html&lt;/code&gt; 文件来&lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/webs/Module_v2ray.asp#L147&#34;&gt;取结果&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;
这里还不有一个坑，如果长时间没有从登录界面进入过路由器管理界面，那执行这个可能会遇到获取到的数据是一个 html 的到 Login 页面的 redirect。
&lt;/p&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
读取保存的数据
&lt;/h2&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
通过 js 读取
&lt;/h3&gt;
&lt;div class=&#34;src src-html&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#070&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#00c&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#00c&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;/dbconf?p=v2ray&amp;amp;v=&amp;lt;% uptime(); %&amp;gt;&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#070&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
那个 p 会只显示匹配那个前缀的数据。上面这个 url 直接打开看看就知道了，会产生一个 &lt;code class=&#34;verbatim&#34;&gt;db_v2ray&lt;/code&gt; 这个变量。在界面里面就可以使用例如 &lt;code class=&#34;verbatim&#34;&gt;db_v2ray[&amp;#34;v2ray_module_version&amp;#34;]&lt;/code&gt; 来获取 dbus 的数据了。
&lt;/p&gt;
&lt;h3 id=&#34;headline-10&#34;&gt;
通过页面标签获取
&lt;/h3&gt;
&lt;div class=&#34;src src-html&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#070&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#00c&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#00c&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;ss_basic_enable&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#00c&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;ss_basic_enable&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#00c&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&amp;lt;% dbus_get_def(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#00c&#34;&gt;ss_basic_enable&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#34;,&lt;/span&gt; &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#34;&amp;#34;);&lt;/span&gt; &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;%&lt;/span&gt;&amp;gt;&amp;#34;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
例如上面这个，通过 &lt;code class=&#34;verbatim&#34;&gt;&amp;lt;% dbus_get_def()/&amp;gt;&lt;/code&gt; 这样的标签就可以获取到相应的变量。
&lt;/p&gt;
&lt;h1 id=&#34;headline-11&#34;&gt;
Cron
&lt;/h1&gt;
&lt;p&gt;
如果想要定时执行一些任务，可以添加 cron。merlin 管理界面的用户不一定都是 admin，所以 cron 的用户也不一定是什么，可以用 &lt;code class=&#34;verbatim&#34;&gt;cru&lt;/code&gt; &lt;a href=&#34;https://github.com/wd/koolshare_plugin_v2ray/blob/master/scripts/v2ray_watchdog.sh#L91&#34;&gt;命令&lt;/a&gt;来管理 cron。
&lt;/p&gt;
&lt;h1 id=&#34;headline-12&#34;&gt;
自己的启动脚本
&lt;/h1&gt;
&lt;p&gt;
前面也说过，可以放到&lt;a href=&#34;https://github.com/RMerl/asuswrt-merlin/wiki/User-scripts&#34;&gt;这些对应的脚本&lt;/a&gt;里面。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self Hosted Blog</title>
      <link>https://wdicc.com/self-hosted-blog/</link>
      <pubDate>Fri, 06 Apr 2018 14:59:49 +0800</pubDate>
      
      <guid>https://wdicc.com/self-hosted-blog/</guid>
      <description>&lt;p&gt;
给 checked 的一个反馈。
&lt;/p&gt;
&lt;p&gt;
给播客写反馈是个很奇怪的事情，当我听完博客觉得心潮澎湃的写反馈的时候，其实主播们应该已经对那些说过的事情的兴趣估计已经没有了。所以感觉是像是一个很激动兴奋的人找别人聊天，结果人家波澜不惊的和你说：嗯嗯嗯。。一样。。
&lt;/p&gt;
&lt;p&gt;
有两点反馈，一点关于文章格式，一点关于自建博客。
&lt;/p&gt;
&lt;p&gt;
语言这个东西，发明出来就是为了交流用的，如果某种流行的东西有助于交流，那我觉得没有什么问题。比如空行代替头部空两个字，感觉好很多。比如使用 &amp;#39;。。。。&amp;#39; 代替 &amp;#39;……&amp;#39; 也没什么（其实是给我下面标点乱用打埋伏。。。:p ）。
&lt;/p&gt;
&lt;p&gt;
直角引号的讨论有很多，随便搜了&lt;a href=&#34;https://www.zhihu.com/question/19589668&#34;&gt;一个&lt;/a&gt; 。我记得最早流行这个好像就是知乎，后来搜狗输入法还提供了一个选项是在知乎输入引号的时候输入直角引号。我个人喜欢看直角的，因为很多时候那个蝌蚪样子的，有好几个编码，比如 ‘ ’、“ ”、&amp;#39; &amp;#39;、&amp;#34; &amp;#34;、 这几个都是半角的，左右不好区分开。但是直角的，再怎么也比较好区分左右，并且对竖排文字，比如广告图什么的里面也很有好。可以参考下&lt;a href=&#34;https://zh.wikipedia.org/wiki/%25E5%25BC%2595%25E5%258F%25B7&#34;&gt;这个&lt;/a&gt; 。
&lt;/p&gt;
&lt;p&gt;
下面聊自建博客。这个 20 年前我和 hum 的看法是一样的，有病才去自己弄，需要自己搞服务器，自己维护，成本很高。但是使用别人搞的，也并不是没有问题。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
网站倒闭。最初的 MSN Live Space，然后新浪博客，然后国外的 wordpress，然后国内牛博网等等很多，那会博客风起来的时候，非常多这种网站，目前这些都不能访问或者死掉了。死掉的时候，你的文章怎么办？良心一点的提供一个导出，要不然就是你自己想办法解决。写的时候可能文本，最后拿到的没准是一堆的 HTML，很难处理。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
流氓的版权协议。国内各大网站都会要你发的帖子的著作权，可以找找看有没有说版权归你，使用的时候会找你协商以及给你版权费的。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
格式样式不可控。各网站都有自己的风格，比如我们程序员经常会想贴一点代码，想要一个高亮，但是人家不给你提供的话，你就很难做到。还有比如想要在文章顶部显示一个大纲方便看的人一目了然的需求。不过目前因为 markdown 的兴起，还算是对程序员友好，也算有希望统一这个格式的问题。同时 markdown 还能一定意义上解决上面提到的导出迁移的问题（当然，前提是人家让你导出），不过呢，还有另一个问题是 markdown 原定的标准实际是个残废，很多常用的东西都不支持，比如表格，比如 footnote，然后各家必定会对他扩展，那就会导致你从这家导出来的别家不一定支持。这里顺便安利一下 org-mode。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
我自己使用自建博客很多年了，以后应该也不会使用其他商业的博客。我自己的博客的用途是留存我自己的经历，本身只分享文本内容，因为图片的流量问题，一般免费服务的空间都会限制，这些图片你自己维护起来也很费劲。就算是付费的，也很少有终身的，以后的事情谁能说的清。所以我都是用文字来表达，好处一方面是整站打包也就几M，另一方面，分享出去的东西别人也很方便的可以留存。
&lt;/p&gt;
&lt;p&gt;
如果用途不止我那个，那平台名气是可以借用的，用平台肯定是最好的选择。
&lt;/p&gt;
&lt;p&gt;
自建博客目前其实也很简单，空间在 github 开个账号就可以，只需要传 HTML 内容就可以，可以通过一些工具把文章转成 HTML 就可以。就算没有这种商业服务，自己搞一个 vps 跑一个 nginx 之类的，服务这些 HTML 也是一个很简单的事情。比如我用的是 hugo，支持 markdown，org-mode。类似的还有 hexo。
&lt;/p&gt;
&lt;p&gt;
最后说忍不住补充一下 org-mode。org-mode 一直被认为是 Emacs 用户才能用，其实并不是，目前也也有一些支持他的文本处理工具，比如 hugo 和 pandoc 就支持 org-mode 文件输入，输出 HTML。目测目前 markdown 的那个表格就是学习的 org-mode 的，org-mode 的表格还支持写公式计算。别的不多说了，org-mode 基本是 markdown 的一个超集，有兴趣可以了解一下。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Beijing Traffic</title>
      <link>https://wdicc.com/beijing-traffic/</link>
      <pubDate>Fri, 06 Apr 2018 14:51:19 +0800</pubDate>
      
      <guid>https://wdicc.com/beijing-traffic/</guid>
      <description>&lt;p&gt;
给比特新声的一个反馈，记录一下。
&lt;/p&gt;
&lt;p&gt;
北京最初的时候，应该只有二环里面四个区（崇文，宣武，东西城）可能才算城区，后面慢慢的，加上海淀，朝阳等几个区，那会通州区还是通县，类似的大兴，密云县。到目前的大北京的情况，东边繁华地带都和河北接壤了（就是燕郊）。
&lt;/p&gt;
&lt;p&gt;
北京实在太大了。
&lt;/p&gt;
&lt;p&gt;
我在中关村上班的时候，家在东五环外面，去公司上班，开车单程需要 35 公里。快的话 40 分钟，慢的话 1.5 小时。我也有同事住在燕郊，长阳，你们可以查查有多远。
&lt;/p&gt;
&lt;p&gt;
大概 10 年左右，我从中关村 7 点下班了开车回家是 40 分钟。基本不堵车，全程 4 环加 5 环路，基本没有红绿灯，开的还是挺快的。但是现在就不行了，即使在 1/5 车限行的情况下，堵车也很厉害。可能只有单双号还能和以前一比了。
&lt;/p&gt;
&lt;p&gt;
北京特别大，但是走哪里都有一个比较集中的生活区，会有一些大的商场，超市，方便你购买生活用品和吃饭。但是随着年轻人不在家里做饭或者很少做饭，这些商场现在也是人满为患，到了饭点吃饭基本都需要排队。
&lt;/p&gt;
&lt;p&gt;
北京喜欢建大路。二环到现在的六环。这种规划我认为比较脑残，可能能体现出来一些气派的感觉，毕竟第一次看到能让 10 辆车并行通过的路，还是会觉得：哇，比我们那的土路确实牛逼多了。这种路，刚修好的几年里面，确实会爽，只要开上去，一路没有红绿灯困扰，不堵车还是挺快的。尤其领导开上来的时候，把路一封，其他车上不来，领导的自豪感估计挺强的。
&lt;/p&gt;
&lt;p&gt;
说说脑残的地方。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
这种路非常怕扰动。为了快速，肯定要减少出入口，因为车辆出入的时候，速度肯定会比较慢，多了就容易影响其他不出入的车。这样，一旦遇到点情况，大家都出不去，只能在里面堵着。我说的情况包括不限于车祸，恶劣天气，路况的变化。
这种路一般都有应急车道。但是有时候遇到比如桥梁啥的，可能那一小段会没有应急车道。而就这个情况，会导致拥堵。怎么发生的呢？车辆一旦稍微多一点，就会有车开应急车道，这些车到了没有应急车道的地方，必然需要并到路里面来，因为车辆本身多，他一并入，必然导致后车需要减速让行，然后连锁反应，后面的车觉得这个车道好像比旁边的车道慢，就会并入旁边车道或者进入应急车道。恶性循环，而这个情况的出现，可能值需要一辆走应急的车来触发一下，这条路立刻就不行了。
讲一个搞笑的事情，我每天都路过环路的一个桥，这个桥就没有应急车道。而且这个桥上桥是个上坡，那一些货车到了这里就起不来速度，就会导致这个地方产生那个连锁反应开始拥堵。这个拥堵，一般到了下桥的地方就恢复了。感觉道路设计应该也是一个比较有意思的事情。
五环路之前是收费的，所以出入口就更加少了，每次开上去遇到堵车都没有办法绕开。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
过马路很头大。马路太宽，要么建天桥，要么地道，或者就是绕道到一个立交桥的地方过。拿着重物的话，天桥和地道上下会觉得不方便。绕道立交桥又会比较远。很难受。
这里还想起来另外一个事情，就是北京也喜欢建大的小区。然后小区物业为了管理方便，自然把能关的门都关掉，这样可以开那么几个门派少量的保安看着。如果一个小区在大路边上，大概率是没有临路的门的，所以过了马路还得绕道到另外一边进小区。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
这种大路，还会导致临路的屋子住的很难受。大路上面一般车多且速度快，噪音很大，灰尘也很大。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
这个因为一旦开上去后路就比较，往往都是一直大路开就可以，所以这个很多人会首选往这里开，尤其新手怕开错路，这也就导致这种路更容易拥堵。而且，因为修大路会导致很多小路给大路让行，在小路上面开很难受。
也因为这个思路，主路一旦堵了之后，很多排队上主路的车，会继续把辅路也堵住。然后往那些方向走的路就彻底都废掉了。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
上面是我觉得几个大路不好的地方。我 6 月份去上海，发现很喜欢上海的路。另外当时觉得上海好像比北京小多了。我是住在静安寺附近，去了田子坊，人民公园，外滩一路玩，发现骑摩拜就可以。
&lt;/p&gt;
&lt;p&gt;
上海的路大都有树荫，骑车很舒服。自行车道也都有，另外很多的单行线。和香港的路有点类似。不知道像北京这么大的城市，是不是也适合这样的设计。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bitcoin</title>
      <link>https://wdicc.com/bitcoin/</link>
      <pubDate>Sun, 25 Mar 2018 20:10:44 +0800</pubDate>
      
      <guid>https://wdicc.com/bitcoin/</guid>
      <description>
&lt;p&gt;
比特币上万刀一个之后，简直已经没人不知道这个东西了。有的东西只要号称要搞比特币，股票就得涨 30%。我简单讲讲我的理解。
&lt;/p&gt;
&lt;p&gt;
比特币相关概念，有两个重要的要点。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
区块链
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
去中心化
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
区块链
&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
大家都知道区块链是一个账本。普通的账本，比如银行存折，每笔交易都会记录本次交易的金额，也会记录操作之后的余额。这样多次交易之后，你也无法只修改其中一条记录，因为一旦修改，和这条记录之后的记录就对不上了。但是其实抛开存折这回事的话，在你的记录中间插入一些记录是没有人会发现的。不过我们因为有存折，存折上面一行记录一条记录，中间也没法插入其他的。但是目前存折其实用的人不多了。
&lt;/p&gt;
&lt;p&gt;
区块链的特点是把一些数据以链条一样的形式串起来。不过和链条有区别的地方是，链条每个节点是相同的，其实切断链条，取掉一个节点，然后接上，看着并没有什么不同。但是区块链任何一个节点都是不同的，去掉一个，后面的就无法连接起来了。因为每一个节点都是唯一的，且每一个节点都包含了他上一个节点的信息。某一个节点丢失或者被修改，那下一个节点保存的这个节点的信息和实际情况就对不上了。
&lt;/p&gt;
&lt;p&gt;
这样的一个链条下来，能达到防止中间某条记录被篡改，保证了数据的可靠性。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
去中心化
&lt;/h2&gt;
&lt;p&gt;
我们的账本，交易记录，大多是存放在银行的。银行开放了一些接口可以让你查账。但是实际上如果银行如果记录了一笔你认为错误的记录，你很难提供一个方法来证明银行出错了。这个就是中心化的方式存在的问题。当然，现实环境里面，银行也不会主动去做损坏自己名誉的事情，比如做假账错账。银行也会想办法防止自己内部的员工因为某些自己的目的来作恶，比如系统会记录各种审计记录，系统开发人员和使用人员权限分离，使用的时候需要授权鉴权等，这些都是防止银行自己出错的措施。
&lt;/p&gt;
&lt;p&gt;
去中心化，就是把银行这个节点拿掉，所有参与记账的人员（就是旷工）都共享一份账本。每个人都可以验证账本数据的正确性，大家互相不信任，通过博弈来实现这个账本的记录和传递。
&lt;/p&gt;
&lt;p&gt;
因为去中心化，大家数据同步是需要时间的，那么实际上一个账本的记录走向是会分叉的，一个博弈是大家都会挑选长的分支走。因为如果其他旷工不选短的，那么他自己选短的链条对他没有任何好处，他将得不到自己的挖矿奖励。所以旷工都会保证自己确认的交易都是没问题的。那么整个网络才是一个可信的，可持续的。
&lt;/p&gt;
&lt;p&gt;
如果是有大量的旷工（算力）联合起来了，那么其实他们就可以控制链条走向了。现在很多时候挖矿是加入了矿池，走向可能是会被矿池控制的。
&lt;/p&gt;
&lt;p&gt;
目前很多的公司都搞区块链，基本都不讲如何实现去中心化，如果没有去中心化，那还是一个大公司记录的话，实际上只是是用了一部分比特币的概念。没有去中心化思维的区块链就是耍流氓，千万别信。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BJ Chinaunicom Iptv</title>
      <link>https://wdicc.com/bj-chinaunicom-iptv/</link>
      <pubDate>Sun, 25 Mar 2018 09:21:39 +0800</pubDate>
      
      <guid>https://wdicc.com/bj-chinaunicom-iptv/</guid>
      <description>&lt;p&gt;
刚入住现在的房子的时候，只有朝阳有线，当时还没有高清台，机顶盒也很烂。后来大家争取来了歌华有线，好了很多。再之后，我买了华为盒子之后，发现有线电视简直就是情怀了，很少开了，都是在线看视频。尤其后来装了一个 HDP 直播之后，电视节目也可以看了，就更少开有线了。就去把有线盒子给退了。
&lt;/p&gt;
&lt;p&gt;
有段时间岳母在北京住着，离不开有线，HDP 直播很不稳定，节目有时候还打不开什么的，岳母老抱怨。后来想起来，装了北京联通宽带好像会送一个 iptv 的盒子，可以看电视节目。就联系了一下联通，给过来装了一个盒子。
&lt;/p&gt;
&lt;p&gt;
这个盒子只能直接接到光猫的 lan4 口，我的上网的路由器是接在 lan1 口的。盒子虽然支持无线，但是不能直接连我 lan1 口的路由器。这个盒子有自带的遥控器，不好用，并且系统里面会诱导你用点播什么的，不是很爽。前段时间看到一个水木的&lt;a href=&#34;http://www.newsmth.net/bbscon.php?bid=1050&amp;amp;id=757772&amp;amp;ftype=3&amp;amp;num=3435&#34;&gt;帖子讲折腾 iptv 的&lt;/a&gt; ，自己想尝试在任意设备看，就了解了一下。
&lt;/p&gt;
&lt;p&gt;
光猫有的带路由功能，可以直接光猫拨号，以及可以登录后台修改网络结构。有的不带，等于啥功能都没有。IPTV 和通常的上网通道在猫里面是隔离的，不同的 vlan 走不同的网络。所以这也是为什么盒子只能接 lan4，而且这个 lan4 口并不能正常的访问我们的互联网，限制了只能访问那个 iptv 运转需要的网络。而 lan1 可以访问互联网，但是不能访问 iptv 的网络。我家的电视和光猫分别在客厅的两个面对的墙，因为盒子只能直连光猫，那光猫到盒子，盒子到电视都必须是有线，经过客厅线就没法走了。类似下面这样的。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;光猫 lan4 --- 网线 ---&amp;gt; iptv 盒子 --- HDMI ---&amp;gt; 电视&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
后来找到了一个通过电力猫解决的办法。买一对就可以了。类似下面这样。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;光猫 lan4 -- 网线 --&amp;gt; 电力猫1  ........电网..... 电力猫2 ---- 网线 ---&amp;gt;  iptv 盒子 ---- HDMI ---&amp;gt; 电视&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样基本就可以了。但是那个盒子用起来不爽，所以打算折腾一下。按照那个帖子我试了，我这无法配置光猫，无法控制光猫的 ip 段。这样那个方案似乎就没法用了。后来又找了一些方案，比如&lt;a href=&#34;https://github.com/phorcys/merlin-BJ-Unicomm-IPTV-scripts&#34;&gt;这个方案&lt;/a&gt;可以单路由搞这个事情，但是我发现也有问题，里面需要知道光猫里面的 vlan 划分，我这没法知道，也没法弄了。
&lt;/p&gt;
&lt;p&gt;
后来发现了&lt;a href=&#34;http://www.newsmth.net/bbscon.php?bid=1050&amp;amp;id=760517&#34;&gt;另外一个思路&lt;/a&gt;，解决了我的问题。线路连接思路大概如下。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;光猫 lan1 -- 主路由 WAN
光猫 lan4 -- 辅路由 WAN
辅路由 LAN（任意一个口） --- 主路由 LAN（任意一个口）&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后主路由就以前的设置就可以，假设主路由的 LAN 的网段是 192.168.8.x。辅路由需要设置几个地方。
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
辅路由 LAN 关闭 DHCP。辅路由 LAN 部分 ip 比如设置为 192.168.8.4 (数值可以自己定，不要和其他设备 ip 冲突了)。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
辅路由 LAN 里面设置 IPTV 的 Udpxy 端口比如 8012。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
辅路由 WAN 设置为通过 DHCP 自动获取 ip。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
这个时候，连接到主路由的设备应该就可以通过访问 192.168.8.4 来访问到辅路由的配置界面了。到&lt;a href=&#34;https://opengg.github.io/bj-unicom-iptv/&#34;&gt;这里&lt;/a&gt; udpxy address 输入 192.168.8.4:8012 生成一个 m3u 列表，就可以在连接到主路由的设备里面，通过各种支持的软件里面看了。
&lt;/p&gt;
&lt;p&gt;
如果还想使用 iptv 看，可以在 iptv 的无线设置里面连接辅路由的无线就可以。
&lt;/p&gt;
&lt;p&gt;
这个方案巧妙的使用了路由器自带的交换机功能，把主路由和辅路由放到了一个 LAN 里面。虽然多了一个路由器，但是节省了电力猫，iptv 盒子，电视的一个 HDMI 口。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apple Carplay</title>
      <link>https://wdicc.com/apple-carplay/</link>
      <pubDate>Sat, 24 Mar 2018 09:08:47 +0800</pubDate>
      
      <guid>https://wdicc.com/apple-carplay/</guid>
      <description>&lt;p&gt;
Carplay 技术苹果老早就搞出来了，一直没有机会体验。最近车上搞了一个 carplay，总结下这段时间的体验。
&lt;/p&gt;
&lt;p&gt;
手机连上车之后，Carplay 会自动启动，然后其实是会把车的娱乐系统的那个屏幕变成第二个手机屏幕一样。上面会排列一堆支持 Carplay 的 app，只有 app 支持才能在上面用（越狱之后可以解开这个限制，我没试过）。
&lt;/p&gt;
&lt;p&gt;
Apple 自带的软件，比如 Phone, Messages, Music, Podcasts, Maps 这些都支持。第三方的地图比如 Google maps 高德都不支持，不清楚是不是 Apple 限制的。第三方的音乐软件，比如 Spotify, QQ音乐，网易音乐支持。界面会和手机上面的有点区别，应该是需要特别为 Carplay 做界面。
&lt;/p&gt;
&lt;p&gt;
Carplay 和 Airplay 很像，就是 app 实际是运行在你手机上面的，比如你启动了 Spotify 的话，这个时候看手机，会发现手机上面也显示的是 Spotify 的界面，手机上面如果按 Home 退出，那 Carplay 的界面上面也会会到 Home。
&lt;/p&gt;
&lt;p&gt;
苹果自带的 Maps 在国内用的是高德的数据，最近支持了摄像头限速提醒。我用英文系统，可以设置为显示当地的文字，地图上面看到的就是中文，不过语音提示都是英文的，念地名的时候很好笑。在汽车屏幕上面不能不支持手势缩放，只能点那个加减按钮。也不支持我车自带的一个旋钮缩放地图，那个旋钮在车自带的地图里面可以很方便的缩放。苹果地图会自动做一些判断，比如早上上车会提示你是不是要去公司，可以做到点一下就自动设置好导航路线。另外，因为实际上是在手机上面也会同时导航，打开手机界面的话，也能看到，当然手机就不会重复播报提醒的，但是如果你有 apple watch 的话，手表会提醒。快到转向什么的，会振动提醒。
&lt;/p&gt;
&lt;p&gt;
播客播放的时候，支持调整速度，但是只能是 0.5，1, 1.5 这样，不能调到 0.8，1.3 这样。但是在 APP 里面调整好了会显示。支持快速前进和后退几十秒，和 app 里面操作类似。
&lt;/p&gt;
&lt;p&gt;
Message 有消息的时候，图标上面会有提醒，点开会自动启动 siri 给你播报，但是播不出来中文，感觉很蠢，而且还不显示内容。。。会提示你是不是要回复，可以通过 siri 回复。
&lt;/p&gt;
&lt;p&gt;
然后就是，siri 实在太蠢了。我开始的时候，在个人信息里面设置了 Home 和 Work 的地址，然后试了语音说 Navigate to home 或者 Take me to home，结果就给我找到一个东北的地方，不知道是不是音译匹配上了，非常蠢，试了很多次都不行。最后只能点那个提示出来的 Home。（我刚才又试了几次，发现目前可以准确找到 Home 了。。）
&lt;/p&gt;
&lt;p&gt;
我车上 Carplay 导航和自带的导航不能同时启动，启动一个另外一个导航就会退出。Carplay 不支持车的 HUD 显示，本来想做一个补充的，用车自带的导航在 HUD 显示，Carplay 的导航提示摄像头和限速。不知道其他车是不是也这样。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>React Native compnent reuse</title>
      <link>https://wdicc.com/react-native-compnent-reuse/</link>
      <pubDate>Sat, 24 Mar 2018 08:44:39 +0800</pubDate>
      
      <guid>https://wdicc.com/react-native-compnent-reuse/</guid>
      <description>&lt;p&gt;
做功能的时候，一般我们会适当的封装一些组件出来共享，这样好管理和维护，这个大家估计都会这么做。有时候手机上面因为屏幕小，填一些表单的时候，会需要到另外一个页面去维护选择一些内容，那这个页面是页面还是组件呢？
&lt;/p&gt;
&lt;p&gt;
我总结下来，所有需要填写的页面，都应该按照组件的思维来封。因为他们实际上很可能会被多次复用，一个路径上面可能会出现多次。当然，普通页面也可能会出现多次，出现多次的展示页面如果是相同的内容，那 store 里面用一个按说也没问题，如果是不同的内容，那应该会有一个 id 来区分不同的内容，这个时候 store 里面存一个用这个 id 做 key 的 map 就可以了。
&lt;/p&gt;
&lt;p&gt;
继续说填写页面。比如我们的新建订单的页面，会有两个入口，一个是全新的，一个是从历史订单复制的。从历史订单复制的，就需要在 store 里面先把已有的数据放一份，再进入新建页面，如果用户点了返回按键，还需要把 store 里面的状态清掉，否则下次进入的时候还会有出来上次的数据。
&lt;/p&gt;
&lt;p&gt;
如果按照组件的思维封装，那数据入口只有 props，store 里面不会有，就不用考虑清数据的问题。至于返回的数据，根据页面情况，一般是有两个途径，一个是需要把数据返回给上一个页面的，一个是直接把数据通过网络请求发送的。对于第一个，可以通过 callback 方法给上一个页面，对于第二个，通过 action 来做就可以了。
&lt;/p&gt;
&lt;p&gt;
我们需要把页面里面的数据区分一下 private 数据和 public 数据。对于 private 数据每次使用基本不一样，通过 props 传递进来。而 public 数据基本是相同的，那通过 store 存下来，必要的时候更新就可以了。
&lt;/p&gt;
&lt;p&gt;
我们使用的是 reac-navigation，使用的时候，可以通过 &lt;code class=&#34;verbatim&#34;&gt;navigate(&amp;#39;newPage&amp;#39;, {prop1: &amp;#39;prop1 value&amp;#39;, callback: func1})&lt;/code&gt; 这种方法来把数据和 callback 方法传递过去。那个页面处理完毕之后，通过 callback 把数据返回来。这样就不用费力把数据通过 action -&amp;gt; reducer -&amp;gt; selector 传到上一个页面了，并且页面再次使用也不用操心上一次使用的时候的残留数据了，页面被复用也不会互相干扰。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go Across the Gfw</title>
      <link>https://wdicc.com/go-across-the-gfw/</link>
      <pubDate>Thu, 15 Feb 2018 08:56:03 +0800</pubDate>
      
      <guid>https://wdicc.com/go-across-the-gfw/</guid>
      <description>&lt;p&gt;
一直用的是梅林里面自带的方案来处理翻墙，后来想在公司的服务器上面也搞一下这个事情，至少把 Google 等常用站点能翻出去，就研究了一下原理。
&lt;/p&gt;
&lt;p&gt;
目前墙有两个基本措施需要我们去跨越。1 DNS 污染。 2 数据包解析劫持。3 ip 封禁。
&lt;/p&gt;
&lt;p&gt;
DNS 污染是通过修改或者限制 DNS 请求的数据，来让用户取到一个错误的 ip 而导致用户不能访问正确的网站的方法。一些比较大的网站都被做了 DNS 污染，比如 Google，youtube，facebook，twitter 等。
&lt;/p&gt;
&lt;p&gt;
数据包解析是指在出国的核心路由上面，分析用户要访问的网站和发送的数据，然后发现问题之后，从中间给用户和网站发送 rst 数据包，让双方断开连接的一种方法。这样就算是用户通过指定 host 等方法避开了 DNS 污染，也可以进一步阻止请求。这种方法对于 https 的请求应该是没有效果的。所以有时候可以通过指定 host 的方法访问到 google。
&lt;/p&gt;
&lt;p&gt;
对于上面的避开措施，第三种方法就起作用了，就是直接封禁 ip。这样就算指定了 host 也不能访问。
&lt;/p&gt;
&lt;p&gt;
如果想要翻墙，就需要避开上面这三种封禁的方法。我这里列了一些方式，&lt;a href=&#34;https://wdicc.com/across-the-great-wall-we-can-reach-every-corner-in-the-world/&#34;&gt;https://wdicc.com/across-the-great-wall-we-can-reach-every-corner-in-the-world/&lt;/a&gt; 各有利弊。这里想讲的是梅林大致的逻辑。
&lt;/p&gt;
&lt;p&gt;
最主要的一个思路是使用 iptables 把一些包发给一些支持透明代理的软件，例如 &lt;code class=&#34;verbatim&#34;&gt;ss-redir&lt;/code&gt; 或者 &lt;code class=&#34;verbatim&#34;&gt;v2ray&lt;/code&gt; 的 &lt;code class=&#34;verbatim&#34;&gt;dokodemo-door&lt;/code&gt; 协议的端口。这些软件会自动把数据请求通过代理请求到之后，返回给用户。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;-A PREROUTING -p tcp -j REDIRECT --to-ports 1080

-A PREROUTING -p tcp -m multiport --dports 443 dst -j REDIRECT --to-ports 1080
-A PREROUTING -p tcp -m multiport --dports 80 dst -j REDIRECT --to-ports 1080&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
第一句是把所有请求都转发到了 1080 端口，这样就是全部请求都走代理。第二三句是把所有 443 和 80 端口的请求都转发到了 1080 这个代理端口。如果只是想要某些网站走代理呢？那一个办法是在这个语句里面指定 &lt;code class=&#34;verbatim&#34;&gt;--dest=12.34.56.78&lt;/code&gt; 指定目标 ip，但是这样一来有的网站 ip 很多且会变化，这样就有点累了。
&lt;/p&gt;
&lt;p&gt;
iptables 支持和 ipset 配合来做数据包的过滤，而 dnsmasq 支持自动添加特定的 ipset 条目，这两个结合就完美了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;server=/.google.com/208.67.222.222#443
server=/.google.com.hk/208.67.222.222#443
server=/.gstatic.com/208.67.222.222#443
server=/.ggpht.com/208.67.222.222#443
server=/.googleusercontent.com/208.67.222.222#443
server=/.appspot.com/208.67.222.222#443
server=/.googlecode.com/208.67.222.222#443
server=/.googleapis.com/208.67.222.222#443
server=/.gmail.com/208.67.222.222#443
server=/.ytimg.com/208.67.222.222#443

ipset=/.google.com/setmefree
ipset=/.google.com.hk/setmefree
ipset=/.gstatic.com/setmefree
ipset=/.ggpht.com/setmefree
ipset=/.googleusercontent.com/setmefree
ipset=/.appspot.com/setmefree
ipset=/.googlecode.com/setmefree
ipset=/.googleapis.com/setmefree
ipset=/.gmail.com/setmefree
ipset=/.ytimg.com/setmefree&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
上面是 dnsmasq 的配置，前面的 server 部分，对于指定域名使用特定的 DNS 服务器，用来防污染。ipset 部分，把这些域名解析的结果，提交给 ipset 的 setmefree 这个 set，然后方便配合 iptables 来做过滤。
&lt;/p&gt;
&lt;p&gt;
dnsmasq 做了上面的配置之后，查询一下列表里面的 DNS，然后通过 &lt;code class=&#34;verbatim&#34;&gt;ipset list setmefree&lt;/code&gt; 可以看到里面会有一些 ip。
&lt;/p&gt;
&lt;p&gt;
然后是修改 iptables，增加 ipset 的规则过滤。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;-A PREROUTING -p tcp -m multiport --dports 443 -m set --match-set setmefree dst -j REDIRECT --to-ports 1080
-A PREROUTING -p tcp -m multiport --dports 80 -m set --match-set setmefree dst -j REDIRECT --to-ports 1080&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
这样，对于列到 dnsmasq 那个里面的 ipset 部分的域名，全部会走代理了。对于其他地址的请求，不会有任何影响。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GeoHash</title>
      <link>https://wdicc.com/geohash/</link>
      <pubDate>Thu, 25 Jan 2018 11:00:57 +0800</pubDate>
      
      <guid>https://wdicc.com/geohash/</guid>
      <description>&lt;p&gt;
我们的应用里面，会有需要用户提交一些坐标点，然后还需要判断这些坐标点和其他坐标点是不是重合或者距离在一定范围内（例如 200M）。
&lt;/p&gt;
&lt;p&gt;
这个需求最简单的做法就是用户提交的时候，循环和所有需要判断的点比较一下就可以了，但是如果数据量比较大的情况下，这个消耗还是很可观的，因为无法提前索引。所以我们就想，是不是有更好的思路呢？
&lt;/p&gt;
&lt;p&gt;
一个比较简单的思路是，每次坐标点存储的时候都 hash 一下，一定范围内的，都 hash 到同一个值，这样比较的时候只需要做等于判断就可以了，这个可以索引。那么最简单的做法就是参考 &lt;a href=&#34;https://en.wikipedia.org/wiki/Decimal_degrees&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Decimal_degrees&#34;&gt;https://en.wikipedia.org/wiki/Decimal_degrees&lt;/a&gt;&lt;/a&gt; 把坐标点的经纬度按照精度 round，例如 &lt;code class=&#34;verbatim&#34;&gt;123.4567890123&lt;/code&gt; 和 &lt;code class=&#34;verbatim&#34;&gt;123.4567894562&lt;/code&gt; 都 round 为 &lt;code class=&#34;verbatim&#34;&gt;123.456789&lt;/code&gt; ，但是这么做无法精确到想要的那个 200M。
&lt;/p&gt;
&lt;p&gt;
然后依据上面的思路，和四舍五入的思路，我琢磨是不是可以弄一个 x 舍 x+1 入这么个逻辑，把坐标轴分为 x 等份。然后我就可以通过自己定义 x 来做到想要的精度了（通过经纬度来定义实际距离应该本身就是有误差的，这个和把球面坐标系投影到平面坐标系的方法有关系）。
&lt;/p&gt;
&lt;p&gt;
按照上面 x 舍 x+1 入的逻辑，实际上是把平面分成了 n 个正方形，同一个正方形里面的，可以认为他们是符合条件的。但是，很明显在相邻的区域里面的，也有可能有符合条件的点，比如两个点分别在区域的这边和另一边。这些点怎么找到呢？
&lt;/p&gt;
&lt;p&gt;
有一个思路是先找到点所在的区域，然后把周围 8 个区域的点也找出来，这个查找是可以索引的，是 O(1) 的，然后再循环的和找出来的点单个做比较算距离，这个过程是 O(n)，但是 n 小了很多。
&lt;/p&gt;
&lt;p&gt;
上面是我山寨的一个思路，找了一下发现已经有了，就是 geohash，可以看参考链接，里面比较详细了。
&lt;/p&gt;
&lt;p&gt;
参考链接
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Geohash&#34;&gt;Geohash&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.cnblogs.com/LBSer/p/3310455.html&#34;&gt;&lt;a href=&#34;http://www.cnblogs.com/LBSer/p/3310455.html&#34;&gt;http://www.cnblogs.com/LBSer/p/3310455.html&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SafeAreaView in RN</title>
      <link>https://wdicc.com/safeareaview-in-rn/</link>
      <pubDate>Thu, 25 Jan 2018 10:36:51 +0800</pubDate>
      
      <guid>https://wdicc.com/safeareaview-in-rn/</guid>
      <description>&lt;p&gt;
iPhone X 整出来一个刘海和底部的下巴，app 需要做特殊处理，否则可能会顶部把内容显示到被刘海挡住的那部分里面，下面呢会显示到那个手势控制的里面，导致一些按钮不能点击。
&lt;/p&gt;
&lt;p&gt;
之前我们用的是 &lt;a href=&#34;https://www.npmjs.com/package/react-native-iphone-x-helper&#34;&gt;&lt;a href=&#34;https://www.npmjs.com/package/react-native-iphone-x-helper&#34;&gt;https://www.npmjs.com/package/react-native-iphone-x-helper&lt;/a&gt;&lt;/a&gt; 自己计算的。前几天升级 RN 翻 0.52 的 release Note 发现 RN 0.50 新增了一个叫做 &lt;code class=&#34;verbatim&#34;&gt;SafeAreaView&lt;/code&gt; 的 view 来解决这个问题。
&lt;/p&gt;
&lt;p&gt;
用法也很简单，把你的内容包含到这里面就可以了。有下面两个方法。
&lt;/p&gt;
&lt;p&gt;
不用 SafeAreaView 来处理底部，比如显示的是一个列表什么的，底部不固定的，用户如果有需要点按会往上滚动出底部的手势区域然后点击。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;lt;SafeAreaView /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
使用 SafeAreaView 处理底部，比如底部是一排固定按钮，例如微信那样的，这个时候需要把底部区域让出来。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;lt;SafeAreaView&amp;gt;
  ....
&amp;lt;/SafeAreaView&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
SafeAreaView 本身支持设置背景色，但是不支持顶部和底部设置不同的颜色，思路是可以给 SafeAreaView 下面放两个 view 分别设置他们的颜色。代码我贴到参考链接 2 里面了。
&lt;/p&gt;
&lt;p&gt;
参考链接：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/facebook/react-native/commit/ad4b124&#34;&gt;&lt;a href=&#34;https://github.com/facebook/react-native/commit/ad4b124&#34;&gt;https://github.com/facebook/react-native/commit/ad4b124&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/facebook/react-native/commit/983b05441d3d23809b924de2e4bf96a55c47428d&#34;&gt;&lt;a href=&#34;https://github.com/facebook/react-native/commit/983b05441d3d23809b924de2e4bf96a55c47428d&#34;&gt;https://github.com/facebook/react-native/commit/983b05441d3d23809b924de2e4bf96a55c47428d&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Best Practice for React-Native and Redux</title>
      <link>https://wdicc.com/best-practice-for-react-native-redux/</link>
      <pubDate>Sun, 26 Nov 2017 09:19:11 +0800</pubDate>
      
      <guid>https://wdicc.com/best-practice-for-react-native-redux/</guid>
      <description>
&lt;p&gt;
从 6 月到现在，在 RN 上面摸爬滚打了一段时间了，目前总算找到了一个适合我们自我感觉还可以的开发模式。
&lt;/p&gt;
&lt;p&gt;
一开始，我们使用的是传统的 React 的模式，然后一个 app 页面一个文件，通过 StackNavigator 组合到一起。这么做在我们的第一个 app 里面没觉得有什么问题，每个页面维护自己的数据，页面之间需要数据共享或者通讯的时候（比如从 list 到详情页面的时候，详情里面有一个改变状态的按钮，状态改变之后希望 list 的状态也跟着变化，这样用户返回之后能看到正确的数据）有 2 个方式。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
通过 DeviceEventEmitter。
需要数据的页面订阅，然后在其他页面 emit event 之后前面的页面就可以收到。这个时候可以只通知改变的数据的字段，前一个页面直接去修改，这样可以避免重新刷新页面。也可以发一个简单的通知让其他页面去自己获取数据。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
通过 navigator 提供的 params 属性。
StatckNavigator 提供了一个 params 属性。就是 &lt;code class=&#34;verbatim&#34;&gt;this.props.navigation.state.params&lt;/code&gt; ，可以通过 setParams 来改变，或者通过类似 &lt;code class=&#34;verbatim&#34;&gt;this.props.navigation.navigate(&amp;#39;Login&amp;#39;, {goBackToHome: true})&lt;/code&gt; 的方式给，那个 &lt;code class=&#34;verbatim&#34;&gt;goBackToHome&lt;/code&gt; 将来就会在 params 里面。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
直到我们开始做第二个 app。
&lt;/p&gt;
&lt;p&gt;
第二个 app 是一个单页面 app，登录之后就只有一个页面了，有一个大地图，有左侧 sidebar，sidebar 里面的按钮点击还会出其他页面。这个肯定不能按照我们前面的思路来做了，我们按照组件，拆分了不同的文件，然后组合起来。这个时候更加会需要页面之间的通讯，并且这个时候可选项只有第一个了 &lt;code class=&#34;verbatim&#34;&gt;DeviceEventEmitter&lt;/code&gt; ，因为都没有 navigate 什么事情。
&lt;/p&gt;
&lt;p&gt;
这个时候就发现一个问题，event 太多了，开始有点混乱了。emit event 之后，慢慢会发现不知道哪里有订阅，不好管理。这个 app 做完之后，就仔细研究了一下 redux。
&lt;/p&gt;
&lt;p&gt;
其实写第一个 app 的时候就知道 redux，但是很多概念看的云里雾里的，当时在 react 还没有吃透的情况下，根本没有能力把 redux 搞好。所以当时放弃了 redux。
&lt;/p&gt;
&lt;p&gt;
了解 redux 之后，感觉这个东西是我们的药。统一的 state 管理，这不就不用考虑状态传递了么？所以一门心思开始研究 redux。刚好我们第一个 app 需要全新改版，我们就借机把我们的第一个 app 也重构到了 redux 实现。整体过程还是蛮舒服的，自己也总结了几条我们自己的使用的思路。
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
目录结构安排
&lt;/h3&gt;
&lt;p&gt;
先大概看看我们 app 的目录结构。我们把所有的 js 文件都放到了 app 目录下面。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;app
ios
android
index.js&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后 app 目录下面，分了 &lt;code class=&#34;verbatim&#34;&gt;actions&lt;/code&gt; ， &lt;code class=&#34;verbatim&#34;&gt;reducers&lt;/code&gt; ， &lt;code class=&#34;verbatim&#34;&gt;sagas&lt;/code&gt; ， &lt;code class=&#34;verbatim&#34;&gt;selector&lt;/code&gt; 几个目录。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;actions
images
index.js
reducers
sagas
screens
selectors
utility&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
actions 里面放的是 mapDispatchToProps 这个逻辑对应的东西。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
reducers 里面放的是 reducers。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
sagas 里面放的是所有网络请求相关的 actions 的处理逻辑。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
seelctor 里面放的是 mapStateToProps 这个逻辑对应的东西。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
每个目录里面也都有一个自己的 index.js 把本目录里面的内容组合起来。通过最外面的 index.js 把这几个目录的逻辑组合起来。
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
给页面设计一个基类
&lt;/h3&gt;
&lt;p&gt;
这样会比较方便你去做一些所有页面都需要做的事情。
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
一个 app 一个统一的 store
&lt;/h3&gt;
&lt;p&gt;
我们 app 还不大，所以这么设计也还好，如果页面比较复杂，我看也有组件使用自己的 store 的例子，这个还没有经验。这么做唯一一个问题就是，那个 store 里面的数据一直都在，多少会占用一些内存。不过我是觉得没啥了，其实这点内存占用不算啥。
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
store 设计和页面无关
&lt;/h3&gt;
&lt;p&gt;
Store 参考了一个文章统一设计，和页面无关。比如我们设计了 user, orders, orderDetail 这些 state，数据所有页面共享。否则如果按照页面来划分的话，某些页面之间如果有用到共享数据就要么多复制一份，那有点浪费了，要么就是会有点乱。
&lt;/p&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
每个页面都使用自己的 props
&lt;/h3&gt;
&lt;p&gt;
不在页面间交叉使用 props ，这样不会乱。并且因为我们是一个统一的 store，所以其实每次 props 变化，所有页面都会 render。这个我使用下面的一个思路来解决了。
&lt;/p&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
shouldComponentUpdate
&lt;/h3&gt;
&lt;p&gt;
这个就是在页面的基类里面，通过比较判断本页面的 props 是否有变化来解决前面那个 render 问题。
&lt;/p&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
使用 reselect
&lt;/h3&gt;
&lt;p&gt;
因为只要 state 发生变化 redux 就会调用 mapStateToProps 来计算 props，这个计算有一些消耗，毕竟一般也就其中一个页面的 props 需要计算。我们用这个 reselect 解决这个问题，一个页面的 props 需要的 state 没变化的时候，reselect 就可以把 cache 的数据直接返回就好了。
&lt;/p&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
适当使用页面的 state
&lt;/h3&gt;
&lt;p&gt;
redux 的理念是所有页面的 state 都放到了 store 里面，你不需要做 setState 动作了。但是实际上有些时候适当使用 state 会让你的开发更加方便。比如表单验证，用户输入数据之后点击提交 ，如果通过发送 action 改变 state 然后再通过 selector 返回页面，那就有点太费劲了。而直接通过 setState 设定页面 state，然后在提交表单的时候读出来做验证就简单多了。
&lt;/p&gt;
&lt;p&gt;
有时候页面的一些 state 是和 props 有关系的，这个时候可以使用 &lt;code class=&#34;verbatim&#34;&gt;componentWillReceiveProps(nextProps)&lt;/code&gt; 来判定，然后和 state 同步。
&lt;/p&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
Android 的返回按钮处理
&lt;/h3&gt;
&lt;p&gt;
android 有一个实体的返回按钮，StackNavigator 给出的&lt;a href=&#34;https://reactnavigation.org/docs/guides/redux#Handling-the-Hardware-Back-Button-in-Android&#34;&gt;方案&lt;/a&gt;是监听一个 &lt;code class=&#34;verbatim&#34;&gt;hardwareBackPress&lt;/code&gt; 事件，然后 &lt;code class=&#34;verbatim&#34;&gt;dispatch(NavigationActions.back())&lt;/code&gt; ，但是有一个问题是，有时候我们返回的时候还需要做一些自己的动作。比如清理 store 的数据，或者判断一下往哪里返什么的，比如用户刚提交了订单之后，给了一个按钮可以看订单详情，这个时候从详情返回就希望直接到首页，不要又返回新建订单的页面。
&lt;/p&gt;
&lt;p&gt;
我们通过下面的思路做的
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;    onBackPress &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; () =&amp;gt; {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; { dispatch, nav } &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props;

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (nav.index &lt;span style=&#34;color:#333&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;) {
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;false&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; {routes} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; nav;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; {params} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; routes[routes.length&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;]

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt;(params &lt;span style=&#34;color:#333&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; params.goBack) {
            params.goBack();
        } &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;else&lt;/span&gt; {
            dispatch(NavigationActions.back());
        }
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;;
    };
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后在页面的基类里面
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;    constructor(props) {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;super&lt;/span&gt;(props);
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.goBack)
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props.navigation.setParams({ goBack&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; ()=&amp;gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.goBack() })
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
然后页面里面如果有自己的特殊逻辑，那就实现一个 &lt;code class=&#34;verbatim&#34;&gt;goBack&lt;/code&gt; 方法就好了。
&lt;/p&gt;
&lt;h3 id=&#34;headline-10&#34;&gt;
表单的弹出页面，不一定需要使用 store
&lt;/h3&gt;
&lt;p&gt;
比如一个下单页面，需要填联系人信息，这个时候我们一般会到一个联系人的页面来选择联系人。这个时候在这个页面选择的联系人，如何传递给上一个页面呢？有两个类型的方法。
&lt;/p&gt;
&lt;p&gt;
第一个方法自然就是 redux 的方法，在选择页面点确定的时候，触发 action 通过 reducer 设置这个页面的 store，然后通过 selector 修改上一个页面的 props，这样就达到了传递的目的。
&lt;/p&gt;
&lt;p&gt;
第二个方法是在新页面打开的时候，通过 navigater 传一个 callback 过去，那边选择好的时候，调用这个回调方法把数据传回来。
&lt;/p&gt;
&lt;p&gt;
第一个方法贴合 redux 的做法，但是存在一个问题，如果这个新的选择页面在多个地方出现，那么就需要有一个区分，当前这个选择是给哪个地方服务的(因为必须得在 redux 的 store 里面做好区分，否则两个页面总是相同的状态)。另外还有一个数据清理的问题，否则下次在别的页面打开这个页面，会有上次的数据残留。
&lt;/p&gt;
&lt;p&gt;
第二个方法土一点，但是没有上面的问题。不过要注意的是，如果新的页面有网络请求，那这个时候还需要和 saga thunk 这些关联，那么就总是会走到 redux 的 store，所以这个方法就不适用了。
&lt;/p&gt;
&lt;h3 id=&#34;headline-11&#34;&gt;
参考文章
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://wdicc.com/11-mistakes-during-use-react-native/&#34;&gt;11-mistakes-during-use-react-native&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Podcasts 推荐</title>
      <link>https://wdicc.com/podcasts/</link>
      <pubDate>Sat, 25 Nov 2017 11:38:37 +0800</pubDate>
      
      <guid>https://wdicc.com/podcasts/</guid>
      <description>

&lt;p&gt;也不知道从什么时候开始听播客的，现在几乎是 podcast 的重度用户。听播客比看东西省力，以前是上下班的时候想休息一下眼睛就听播客，现在每天开车上下班没法看东西，所以听的更多了。推荐一些我自己听的，下面排序是随机的，和推荐度无关。&lt;/p&gt;

&lt;h2 id=&#34;中文播客&#34;&gt;中文播客&lt;/h2&gt;

&lt;h3 id=&#34;迟早更新&#34;&gt;迟早更新&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.weareones.com/2&#34;&gt;http://www.weareones.com/2&lt;/a&gt; 这个是个夫妻档，主播任宁刚 30 岁，但是知识面还是挺广的，播客里面的内容很广，但是多与科技有些关系。主播枪枪和他是夫妻，挺有意思的。更新比较快，基本每周都有。&lt;/p&gt;

&lt;h3 id=&#34;teahour&#34;&gt;Teahour&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://teahour.fm/&#34;&gt;http://teahour.fm/&lt;/a&gt; 这个播客经常会请一些比较厉害的开发者和创始人来做访谈，谈的内容也基本是在科技圈。不过最近更新比较慢，前几天刚更新了一期，距上一期已经是 1 年左右了。但是听一听历史的 ep 有些也不过时。&lt;/p&gt;

&lt;h3 id=&#34;代码时间&#34;&gt;代码时间&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://codetimecn.com/&#34;&gt;http://codetimecn.com/&lt;/a&gt; 这个播客也是请人来做访谈，不过聊的感觉有时候有点尴尬，也不知道为啥有这个感觉。也是很久更新一期，历史的也可以听听。&lt;/p&gt;

&lt;h3 id=&#34;checked&#34;&gt;checked&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://checked.fm/&#34;&gt;http://checked.fm/&lt;/a&gt; 这个播客有三个主播，2 个少数派的雇员，还有个妹子。都是年轻人，都挺有意思的。会讨论各种科技话题，科技热点事件，APP 使用经验等，更新也比较及时。&lt;/p&gt;

&lt;h3 id=&#34;机核网&#34;&gt;机核网&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.g-cores.com/categories/9&#34;&gt;https://www.g-cores.com/categories/9&lt;/a&gt; 一个游戏播客。机核网本身是个游戏咨询站。播客内容就是各种游戏相关的东西。我之前听过《血缘》和《黑魂》相关的。不过因为我游戏玩的其实没那么多，所以他们谈的很多游戏没玩过，后来也就不听了。&lt;/p&gt;

&lt;h3 id=&#34;比特新声&#34;&gt;比特新声&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://banlan.show/bitvoice&#34;&gt;https://banlan.show/bitvoice&lt;/a&gt; 主播海龙是出国培训老师，主播有才是一个 soho 的程序员。一个文科一个理科，思想的一些碰撞还挺有意思的。谈论的话题基本是科技圈的居多，但是内容也比较广泛。&lt;/p&gt;

&lt;h3 id=&#34;ux-coffee-设计咖&#34;&gt;UX Coffee 设计咖&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://uxcoffee.co/&#34;&gt;http://uxcoffee.co/&lt;/a&gt; 主要和谈论一些设计和用户体验相关的内容。主播应该在国外，会请一些在国外的华语开发者来访谈。&lt;/p&gt;

&lt;h3 id=&#34;i-o-调频&#34;&gt;「I/O」调频&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://dailyio.net/&#34;&gt;http://dailyio.net/&lt;/a&gt; 更新不多，貌似是一个人的独白，感觉听的不多，所以我也不记得大致内容了。&lt;/p&gt;

&lt;h3 id=&#34;内核恐慌&#34;&gt;内核恐慌&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://kernelpanic.fm/&#34;&gt;https://kernelpanic.fm/&lt;/a&gt; 科技播客，内容还挺好的，可惜目前更新很少。最近几期《字谈字串》都是 4 个人串台。Rio 和吴涛其实还参加了近期的《迟早更新》，但是他们居然不更新自己的播客，发指。&lt;/p&gt;

&lt;h3 id=&#34;it-公论&#34;&gt;IT 公论&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://itgonglun.com/&#34;&gt;https://itgonglun.com/&lt;/a&gt; 李如一和 Rio 主持。李如一好像挺有名的，不过我不是很熟悉。也是科技相关的播客。&lt;/p&gt;

&lt;h3 id=&#34;两个-it-大叔&#34;&gt;两个 iT 大叔&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://podcast.lengqidong.com/podcast.xml&#34;&gt;http://podcast.lengqidong.com/podcast.xml&lt;/a&gt; 没有找到他们的网站，只有一个 rss 地址了。这个是两个男主播，聊的内容大都和科技相关。&lt;/p&gt;

&lt;h3 id=&#34;etw&#34;&gt;ETW&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.etw.fm/&#34;&gt;http://www.etw.fm/&lt;/a&gt; 这个是两个驻美记者做的播客，两个妹子。聊各种热点话题，还是挺有意思的。&lt;/p&gt;

&lt;h2 id=&#34;英文播客&#34;&gt;英文播客&lt;/h2&gt;

&lt;p&gt;英文播客我基本只能听英语学习类的，其他的语速和发音会导致有不少听不懂。&lt;/p&gt;

&lt;h3 id=&#34;all-ears-english&#34;&gt;All Ears English&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.allearsenglish.com/&#34;&gt;https://www.allearsenglish.com/&lt;/a&gt; 两个美国妹子，语速没有调慢，聊一些日常的用语什么的，感觉还是比较好懂的。&lt;/p&gt;

&lt;h3 id=&#34;潘吉jenny告诉你-学英语聊美国-开言英语&#34;&gt;潘吉Jenny告诉你|学英语聊美国|开言英语&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://openlanguage.com/library/learn-english/9/culture-show&#34;&gt;https://openlanguage.com/library/learn-english/9/culture-show&lt;/a&gt; 这个是一个中国人一个外国人搭配的播客。里面中文说的比较多，会讲解一些常用的词汇用语什么的。&lt;/p&gt;

&lt;h3 id=&#34;culips-english&#34;&gt;Culips English&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://esl.culips.com/&#34;&gt;https://esl.culips.com/&lt;/a&gt; 主播都是外国人，语速应该是调整过感觉比较慢。有词汇讲解，也有普通的聊天。&lt;/p&gt;

&lt;h3 id=&#34;the-english-we-speak&#34;&gt;The English We Speak&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bbc.co.uk/programmes/p02pc9zn&#34;&gt;http://www.bbc.co.uk/programmes/p02pc9zn&lt;/a&gt; 主播是英国口音，内容都比较短，每次基本就是一二个词。&lt;/p&gt;

&lt;h3 id=&#34;eslpod&#34;&gt;ESLPod&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.eslpod.com/&#34;&gt;https://www.eslpod.com/&lt;/a&gt; 这个是我很早以前听过的，目前这个没有免费的更新了，必须付费，年费还不低。不过这个是我听过觉得比较好的，会仔细用英文解释对话里面的单词。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>草泥马</title>
      <link>https://wdicc.com/freedom/</link>
      <pubDate>Mon, 06 Nov 2017 18:47:41 +0800</pubDate>
      
      <guid>https://wdicc.com/freedom/</guid>
      <description>&lt;p&gt;
我搜了一下我的帖子，GFW 这个 tag 最早在我的 「2006/12/01 咱也玩玩lilina」 这个帖子里面就出现了。里面提到 Google 有时候会撞墙，会导致 Google reader 也不能访问。我也忘记这个东西最早是什么时候进入我的生活的，从我的 blog 后面可以看到 09 年开始研究一些相关技术，到现在已经 8 年了。
&lt;/p&gt;
&lt;p&gt;
很多人说百度更懂中文。我从来没觉得，可能因为我中文搜的不多吧，不过就算是中文也更喜欢看 Google 里面的结果。百度里面巨量的重复内容，都是一个帖子被复制了很多次，浪费很多时间翻页之后你还是会发现没有你想要的结果。用 Google 的时候，如果前面 3 页（更多时候，1-2 页足够）还没有你想要的结果，那么要么是这个结果就是少，要么就是你的关键字不对，根据结果里面的一些信息，适当调整自己的关键字。
&lt;/p&gt;
&lt;p&gt;
因为本身是搞技术的，技术方面，国外的文章水分更少，并且自己也基本能看懂技术相关的英文内容，所以从来都不用百度。国内的各种论坛（也有一些例外的，比如 v2ex，rubychina 等），大量的顶，回复可见内容的帖子，基本没什么意义。不如直接看英文世界里面的情况来的直接。
&lt;/p&gt;
&lt;p&gt;
那会有一段时间还流行各种草泥马相关的东西，比如草泥马之歌。大家用这种方式自嘲，讽刺。当时总觉得这种东西不符合普世价值并不能长久，笑笑也就好了。这么一翻，就是 8 年。现在还每况愈下，一些稍微活跃一点的还有喝茶的待遇。
&lt;/p&gt;
&lt;p&gt;
这个帖子前几天就想写了，一忙忘记了，今天补上。我和图拉鼎同学并没有见过面。唯一的近距离接触，是当时他在北京 Canonical 公司的时候，有次要聚会，我和他在 qtalk 上面聊过，不过可惜我最后没参加（这段记忆也比较模糊了，可能会有记错），没有见面。后面更多的就是在微博看他在回到杭州后享受生活了。
&lt;/p&gt;
&lt;p&gt;
看看他的生活，就是一个普通宅男，聪明热爱生活，经常游荡在杭州的街巷，发现一些别人没注意到或者忽略的事物。写写代码，咖啡馆坐坐，找一个志同道合的朋友聊聊天，再普通不过了。偏偏就是这样的一个人都容不下，神经一点一点变的异常铭感，没有点神经病估计现在也不好当领导了。
&lt;/p&gt;
&lt;p&gt;
前两年，还有另外一个朋友开发了一款搭建高性能网站使用的服务器软件（和翻墙无关），本来一直在国外工作，回家探亲被限制出境，具体原因不聊了，后来解决了出去了。目前在国外成立的自己的公司，专门发扬自己的软件，也拿到了绿卡。估计以后也没兴趣回来了。
&lt;/p&gt;
&lt;p&gt;
目前这个形势下，无法预见我们自己哪天不会遇到问题，即使你自己学会了阉割自己，但你怎么知道他们的铭感点在哪里呢？也可能是「就是喜欢看你虽然不喜欢，但是又不得不一起建设社会主义的样子」呢？
&lt;/p&gt;
&lt;p&gt;
想起来一个大话西游里面大对白了
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
爱一个人需要理由么？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
需要吗？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不需要吗？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
需要吗？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不需要吗？
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
等你真爱上一个人你就知道了
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
把里面的「爱」替换为「整」（等你真被整的时候就知道了）我感觉还是挺适合的。
&lt;/p&gt;
&lt;p&gt;
附送 &lt;a href=&#34;https://www.youtube.com/watch?v=01RPek5uAJ4&#34;&gt;草泥马之歌&lt;/a&gt; 给有兴趣的。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I Am Not at React Native Developer(节译)</title>
      <link>https://wdicc.com/why-i-am-not-at-react-native-developer/</link>
      <pubDate>Thu, 02 Nov 2017 14:00:39 +0800</pubDate>
      
      <guid>https://wdicc.com/why-i-am-not-at-react-native-developer/</guid>
      <description>
&lt;p&gt;
翻译自这里 &lt;a href=&#34;https://arielelkin.github.io/articles/why-im-not-a-react-native-developer.html#javascript&#34;&gt;Why I&amp;#39;m not a React Native Developer&lt;/a&gt; 。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Introduction
&lt;/h2&gt;
&lt;p&gt;
很多人把 RN 作为下一个移动 app 的开发平台。切换开发平台有可能会有巨大的消耗也可能会改变你日常的工作流程。同时平台也可能会改变你开发使用的软件，需要你掌握一些特殊的工具和工作流，把你绑定到一个新的开发生态里面。
&lt;/p&gt;
&lt;p&gt;
Facebook 自己想要完全切换到 RN 来代替原来的 Native 开发。RN 开发团队也在努力做这个事情，他们搞了一个软件开发平台来代替传统的 Xcode/Swift/ObjC 开发模式。RN 团队到底对这个是一个怎么的态度，貌似还不太明确。
&lt;/p&gt;
&lt;p&gt;
我自己搞了几个月开发之后，我感觉这个平台不是我想要的一个，也不推荐其他人往里跳。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Declarative style
&lt;/h2&gt;
&lt;p&gt;
在 RN 里面，UI 是一堆包含状态(state)的函数(function)和属性(props)。
&lt;/p&gt;
&lt;p&gt;
下面是个例子，假设我们需要在左上角有一个小正方形，如果用户连接了就显示红色，没连接显示绿色。
&lt;/p&gt;
&lt;p&gt;
在这种编程类型下，你指定所有更新 UI 需要的步骤。我们需要监听 isConnectd 来更新 view。我们告诉 iOS 如何计算状态。
&lt;/p&gt;
&lt;p&gt;
比较一下 RN 的模式。
&lt;/p&gt;
&lt;p&gt;
RN 让你在 render() 方法里面描述你的 UI。React 框架来保证 state 的变化会触发 re-rendering。对于数据的修改，会自动触发 UI 的改变。
&lt;/p&gt;
&lt;p&gt;
我想这是一种思考 UI 的很好的方式。这也是 MVC 模式的一种进化，View 只需要负责展示，不需要负责管理数据。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Faster iterations
&lt;/h2&gt;
&lt;p&gt;
RN 里面开发的时候，框架会在本地启动一个 server。你只需要编译一次，然后在 iOS 模拟器或者真机上面运行，RN 会保证你在 js 里面做的任何修改都会反馈到 app 里面。
&lt;/p&gt;
&lt;p&gt;
你有两个选择:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Live Reloading。使用 CMD + R 快捷键。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Hot Reload。只更新你编辑的部分。比如你在编辑一个 table view 的一个 cell，你的修改会立刻可以看到，不用每次都从开始界面一步一步找过去。当前页面的状态也会一直保留，这就是所见即所得的编程体验。Xcode 没有这个。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
这个比之前在 native 里面快太多了，在 native 里面有时候还需要在 ViewController 里面加一些 debug 方法，以便快速的找到需要的界面。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Cross-platform
&lt;/h2&gt;
&lt;p&gt;
跨平台。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Uncertain roadmap
&lt;/h2&gt;
&lt;p&gt;
担心 RN 团队没有对这个项目的长期的保证。
&lt;/p&gt;
&lt;p&gt;
不像我们使用一些第三方库，如果那个库出点问题我们的项目也不至于出啥大问题。而 RN 是一整个软件开发平台，如果 facebook 停止维护 RN，我们的软件可能就停滞了，目前也没有一个 RN 替代。如果要自己搞，那还需要区了解 RN 的代码，React.js 的代码，RN CLI 工具，和 JavaScriptCore。社区会继续搞么？也许吧，可能不是我们熟悉的速度。
&lt;/p&gt;
&lt;p&gt;
Github 上面 RN 大概 2 周就会发布一个新版本。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Patently daunting
&lt;/h2&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Patently silent
&lt;/h2&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
October 2017 update: Facebook Relicensing
&lt;/h2&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Javascript
&lt;/h2&gt;
&lt;p&gt;
我们应该从 RN 切换到 Swifh 一个比较重要的原因是「技术倒退」，你应该抛弃 JavsScript，这是一门
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
有缺陷的
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不安全的
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
进化缓慢的语言
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
下面的例子都是基于 ES2016。
&lt;/p&gt;
&lt;h3 id=&#34;headline-10&#34;&gt;
Javascript’s inadequacy
&lt;/h3&gt;
&lt;p&gt;
司机都喜欢开集成了很多安全措施的车。不是因为它们能让你开起来更简单，而是因为它们会降低你遇到事故的几率。
&lt;/p&gt;
&lt;p&gt;
类似的，一门编程语言也应该提供一些能避免编程错误的安全措施。
&lt;/p&gt;
&lt;p&gt;
ARC 刚加入 Object-C 的时候，我们可以选择关闭他，但是为啥不推荐呢，因为编译器可以比你更加准确的知道一个对象的生命周期。「编译器比你聪明」。
&lt;/p&gt;
&lt;h3 id=&#34;headline-11&#34;&gt;
Type errors
&lt;/h3&gt;
&lt;p&gt;
JavaScript 里面一个变量可以在任何时间编程任意类型。
&lt;/p&gt;
&lt;h3 id=&#34;headline-12&#34;&gt;
Lack of optionals
&lt;/h3&gt;
&lt;p&gt;
Objective-C 里面(以及其他语言里面)大量的错误是调用一个 nil 的对象上面的方法。
&lt;/p&gt;
&lt;p&gt;
Swift 里面，会强制你做 nil 检查，如果你知道一个对象可能会是 nil。
&lt;/p&gt;
&lt;h3 id=&#34;headline-13&#34;&gt;
Lack of function signature
&lt;/h3&gt;
&lt;p&gt;
JavaScript 里面函数没有返回类型。
&lt;/p&gt;
&lt;h3 id=&#34;headline-14&#34;&gt;
Immutability
&lt;/h3&gt;
&lt;p&gt;
JavaScript 里面对不可变数据的支持很弱。
&lt;/p&gt;
&lt;h3 id=&#34;headline-15&#34;&gt;
You can’t trust arrays
&lt;/h3&gt;
&lt;h3 id=&#34;headline-16&#34;&gt;
Poor error handling
&lt;/h3&gt;
&lt;h3 id=&#34;headline-17&#34;&gt;
No support for decimals
&lt;/h3&gt;
&lt;h3 id=&#34;headline-18&#34;&gt;
Dodgy maths
&lt;/h3&gt;
&lt;h3 id=&#34;headline-19&#34;&gt;
Unsafe initialisation
&lt;/h3&gt;
&lt;h3 id=&#34;headline-20&#34;&gt;
Optional curly braces after an if
&lt;/h3&gt;
&lt;h3 id=&#34;headline-21&#34;&gt;
Ambiguous curly braces
&lt;/h3&gt;
&lt;h3 id=&#34;headline-22&#34;&gt;
Switch fallthrough
&lt;/h3&gt;
&lt;h3 id=&#34;headline-23&#34;&gt;
What’s nothing?
&lt;/h3&gt;
&lt;h3 id=&#34;headline-24&#34;&gt;
Poor expressivity
&lt;/h3&gt;
&lt;h3 id=&#34;headline-25&#34;&gt;
Exceedingly slow evolution
&lt;/h3&gt;
&lt;p&gt;
ES2016 提供了一些新的功能
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The includes method for arrays.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The ** operator
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-26&#34;&gt;
Flow to the rescue!
&lt;/h3&gt;
&lt;p&gt;
Flow 是 Facebook 提出来解决上面那些问题的。这是一个 JavaScript 的静态类型检查工具。
&lt;/p&gt;
&lt;p&gt;
回忆一下那些例子。
&lt;/p&gt;
&lt;h3 id=&#34;headline-27&#34;&gt;
Flow’s like flossing
&lt;/h3&gt;
&lt;p&gt;
Flow 修复了 JavaScript 那些问题了么？没有。
&lt;/p&gt;
&lt;p&gt;
Flow 开发工程师虽然做了很多努力，但是他依然只是 JavaScript 的一个超集，基于一个很弱的根基。
&lt;/p&gt;
&lt;p&gt;
github 上面大量的项目都没有使用 Flow。也没有一个 RN 的例子讲到了 flow。
&lt;/p&gt;
&lt;h2 id=&#34;headline-28&#34;&gt;
The Javascript Ecosystem: balls and chains
&lt;/h2&gt;
&lt;p&gt;
JavaScript 的缺点让所有人都印象深刻，除了 JavaScript 开发。对于他们来说，上面提到的问题并没有那么糟糕。这是因为 JavaScript 开发并不觉得 js 语言有什么欠缺。
&lt;/p&gt;
&lt;p&gt;
你说没有 immutability，那我们写一个库支持他，你说没有类型检查，那我们写一个库。
&lt;/p&gt;
&lt;p&gt;
&amp;#34;自由挖掘&amp;#34;是指选择一门健全的语言。这么挖并没有很好的利用好精力。JS 总是让你开发一些其他语言默认就支持的东西。
&lt;/p&gt;
&lt;h3 id=&#34;headline-29&#34;&gt;
Chains
&lt;/h3&gt;
&lt;p&gt;
有条大鱼需要 JavaScript 来处理。这门语言考虑 billions 选择升级或者不升级他们流量起和网站的网络用户。这使得这门语言的开发不健全。
&lt;/p&gt;
&lt;p&gt;
还记得 typeof(null) == &amp;#39;object&amp;#39; 么，已经有提案把 null 对象改成 null 了，但是「考虑到这会导致现有的大量网站出问题。」这个提案被否决了。ES6 里面 null 依然是个 object。
&lt;/p&gt;
&lt;p&gt;
JavaScript 的进化，需要考虑：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
大量的旧版本流量起用户
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
一群不同的浏览器厂商
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
大量的网站和它们的开发
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-30&#34;&gt;
Wider angles
&lt;/h3&gt;
&lt;h2 id=&#34;headline-31&#34;&gt;
Dependencies
&lt;/h2&gt;
&lt;p&gt;
RN 项目有 648 项依赖(我刚看了一下是 603)。你的项目基于其他 600 多人的努力。这也就是说，你的项目也依赖于这 600 多自愿者能持续维护他们的项目。
&lt;/p&gt;
&lt;h2 id=&#34;headline-32&#34;&gt;
Better alternatives
&lt;/h2&gt;
&lt;p&gt;
广告时间。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>11 Mistakes During Use React Native(翻译)</title>
      <link>https://wdicc.com/11-mistakes-during-use-react-native/</link>
      <pubDate>Wed, 01 Nov 2017 19:12:24 +0800</pubDate>
      
      <guid>https://wdicc.com/11-mistakes-during-use-react-native/</guid>
      <description>
&lt;p&gt;
粗略的翻译自 &lt;a href=&#34;https://medium.com/dailyjs/11-mistakes-ive-made-during-react-native-redux-app-development-8544e2be9a9&#34;&gt;11 mistakes I’ve made during React Native / Redux app development&lt;/a&gt;。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
一些可能会错误的评估
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
虽然有很多可以重复使用的组件，你还是需要分开考虑 iOS 和 Android 的布局。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
当你评估表单实现的时候，应该要同时考虑表单的验证。开发 RN 比开发例如 Cordova 这样的 hybrid 的程序需要写的代码更多。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
如果是基于一个已经有后端的 webapp 写代码，应该需要先去仔细看看后端提供的功能接口，因为你需要自己写逻辑，弄明白了 DB 结构数据关联，可以然你更好的规划你的 redux store。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
尽量使用已有的组件
&lt;/h2&gt;
&lt;p&gt;
Google 一下就会发现，已经有大量的现成的组件，例如 buttons, footers 等。如果你没啥特殊要求，这些你都可以直接用。你要是有自己的特殊需要，也可以包装一下这些组件成你自己的，然后在里面自定义样式。不过你自己使用 View, Text, TouchableOpacity 等这些 RN 组件来自己包装对于你理解 RN 的工作原理。你自己打包的组件的版本也不会变，不像依赖外部模块。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
不要分开搞 iOS 和 Android 的布局
&lt;/h2&gt;
&lt;p&gt;
如果你有不同的布局需求，那就分开。否则，你可以使用 RN Platform 提供的 API 来做一些小的区分。
&lt;/p&gt;
&lt;p&gt;
如果布局很大不同，那就把布局内容放到不同的文件里面。
&lt;/p&gt;
&lt;p&gt;
你可以使用 index.ios.js 给 iOS 布局用，index.android.js 给 Android 用。
&lt;/p&gt;
&lt;p&gt;
共同的重复代码可以放到 helpers 里面。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
错误的 redux store 规划
&lt;/h2&gt;
&lt;p&gt;
在规划你的 app 的时候可能会花很多时间在布局上，少量时间在数据规划上。这是个错误。redux 可以帮我们很好的处理数据。如果能规划好他，这会是一个很有用的工具，否则可能会带来不好的结果。
&lt;/p&gt;
&lt;p&gt;
在我刚开始规划的时候，想着 reducers 是每个 container 的数据层。所以，如果有登录，忘记密码，Todo 列表页面，那应该来说会有各自的 reducers: SignIn, Forgot, ToDoList。
&lt;/p&gt;
&lt;p&gt;
后来才发现，数据没那么好管理。我有 Todo 详情页，用这个方式规划的话，就需要有一个 ToDoDetails reducer。这是个巨大的失误。当用户在 Todo 列表页面选择了一项的时候，我们需要把数据传递给 ToDoDetails reducer。这表示需要额外的 actions 来发送数据给 reducer，这不太合理。
&lt;/p&gt;
&lt;p&gt;
做了一些调查之后，打算该改结构
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Auth
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Todos
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Friends
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Auth 用来存放 token。Todos 和 Friends reducers 用来存放实体数据，从名字就能理解。当从列表打开 ToDo 详情的时候，只需要根据 id 从 Todos 里面查询就可以了。
&lt;/p&gt;
&lt;p&gt;
不管多复杂的结构，都推荐你这么搞，这样你总是知道你应该去哪里找你的数据。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
错误的项目结构
&lt;/h2&gt;
&lt;p&gt;
对于新手来说，规划项目结构是个比较难的事情。
&lt;/p&gt;
&lt;p&gt;
得看看你的项目是大项目？巨大的？还是小的。有多少 screen，20？30？还是 5 个，或者是只有个 Hello world？
&lt;/p&gt;
&lt;p&gt;
一开始我的项目结构如下：
&lt;/p&gt;
&lt;p&gt;
图不贴了，可以看原文。简单讲就是把 reducers actions 等分开放到不同的目录里面。
&lt;/p&gt;
&lt;p&gt;
如果你的项目不大，例如 10 来个 screen 这么搞是挺好的。如果比较大，可以考虑下下面这个方式：
&lt;/p&gt;
&lt;p&gt;
就是按照 screen 划分目录，把这个 screen 对应的 actions reducers 等放到一个目录下面。这样可以清楚的知道一个 container 和 action 等的关系。
&lt;/p&gt;
&lt;p&gt;
如果你有通用的 style 文件，可以建一个 styles/index.js 文件。
&lt;/p&gt;
&lt;p&gt;
还有很多其他的结构类型，你需要找到适合你自己的。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
container 里面错误的结构
&lt;/h2&gt;
&lt;p&gt;
其实简单概括就是，应该尽量封装你的组件，比如 form 表单里面的东西，应该适当的做一些封装，比如搞一个 FormItem 这样的组件出来，就不用重复的写 Text 和 TextInput 的组合了。
&lt;/p&gt;
&lt;p&gt;
但是也要注意，不要为了封装而封装，原文里面有个例子，把组件搞了一个 setTitle 方法，然后根据 id 来设置 title。作者的意思是，Dumb 组件不应该加入业务逻辑进来，比如加一个 id 就需要修改一下这个组件。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
内联样式
&lt;/h2&gt;
&lt;p&gt;
就是这样的 &lt;code class=&#34;verbatim&#34;&gt;&amp;lt;View style={{flex:1, flexDirection:&amp;#39;row&amp;#39;, backgroundColor:&amp;#39;transparent&amp;#39;}}&amp;gt;&lt;/code&gt; ，慢慢会变得很难管理，也没法重用。应该一开始就把这个写入到单独的文件里面。
&lt;/p&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
使用 redux 验证表单
&lt;/h2&gt;
&lt;p&gt;
这个是我犯的一个错误，但也有可能适合你们。
&lt;/p&gt;
&lt;p&gt;
如果需要通过 redux 验证表单，我们需要创建 action， action type 和 reducer 里面单独的字段。这么做有点太麻烦了。
&lt;/p&gt;
&lt;p&gt;
所以我们决定使用 state。不用 reducers, types 等。只用一些在 container 范围的简单的函数。这么做让我们删除了 action，reducer 文件里面不必要的函数。也不用处理维护 store，这么做很适合我们的项目。
&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
大量依赖 zIndex
&lt;/h2&gt;
&lt;p&gt;
从 web 过来的人会比较喜欢 css 里面的 z-index，可以控制显示哪一层。但是在 RN 里面，一开始没有这个，但是后来也加上了。一开始用的时候挺好的，但是直到我开始在 Android 上面跑。。。现在我都是在构建的时候就考虑好他们将来展示的顺序。
&lt;/p&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
不阅读依赖的模块的代码
&lt;/h2&gt;
&lt;p&gt;
简单说就是用第三方模块的时候，看文档是必须的了，但是有时候也需要看看代码的。比如不工作了，或者和文档描述不一致啥的。看代码也能学习到如何构建自己的模块。
&lt;/p&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
使用 PanResonder 和 动画 API 的时候要小心
&lt;/h2&gt;
&lt;p&gt;
RN 提供了你构建完全 native 体验的 app 的能力。例如布局，手势，动画。   
&lt;/p&gt;
&lt;p&gt;
默认提供了布局功能，当你使用 View, Text, TextInput 这些 RN 模块的时候，手势和动画需要使用 PanResonder 和动画 API 来提供手势和动画。
&lt;/p&gt;
&lt;p&gt;
一开始可能会觉得好难，什么时候开始，什么时候结束，长按，短按等。RN 也确实没有把这些讲的足够清晰。作者提供了一个例子
&lt;/p&gt;
&lt;p&gt;
开始我们初始化一个 PanResonder 对象，针对我们感兴趣的 onPanResponderGrand(当用户点击 button 的时候调用) 和 onPanResponderRelease(当用户手指离开屏幕的时候调用) 设置了一些 handler。
&lt;/p&gt;
&lt;p&gt;
同时我们也设置了 Animated 对象来帮我们处理动画。设置他的取值为 0，然后定义 _setOpacity 方法来改变 this.opacityAnimated 的值。在渲染之前，给 this.opacityAnimated 赋值为通常情况下的值。我们不使用 View，使用 Animated.View 来动态修改透明度。
&lt;/p&gt;
&lt;p&gt;
可以看到，这没啥难理解的。当然你需要阅读这些 API 的文档让你的 app 更完美。希望这个例子可以让你有一个好的开始。
&lt;/p&gt;
&lt;p&gt;
React Naive 很不错，你几乎可以用它做任何事情。如果有不行的，你还可以通过 Swift/Object C 或者 Java 来配合 RN 完成。此外还有一个大的社区。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Howto Make react-redux Work With react-navigation</title>
      <link>https://wdicc.com/howto-make-react-redux-work-with-react-navigation/</link>
      <pubDate>Sat, 21 Oct 2017 08:19:28 +0800</pubDate>
      
      <guid>https://wdicc.com/howto-make-react-redux-work-with-react-navigation/</guid>
      <description>&lt;p&gt;
这周花了一些时间研究 &lt;code class=&#34;verbatim&#34;&gt;react-redux&lt;/code&gt; 和怎么让它和 &lt;code class=&#34;verbatim&#34;&gt;react-navigation&lt;/code&gt; 配合一起工作，总结一下，把代码和注释直接贴这里了，也可以看这个 &lt;a href=&#34;https://gist.github.com/wd/7935c3fb20f2517280b8e050796310b3&#34;&gt;gist&lt;/a&gt;。
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 59
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 60
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 61
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 62
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 63
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 64
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 65
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 66
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 67
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 68
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 69
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 70
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 71
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 72
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 73
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 74
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 75
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 76
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 77
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 78
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 79
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 80
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 81
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 82
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 83
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 84
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 85
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 86
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 87
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 88
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 89
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 90
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 91
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 92
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 93
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 94
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 95
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 96
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 97
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 98
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 99
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;100
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;101
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;102
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;103
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;104
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;105
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;106
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;107
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;108
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;109
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;110
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;111
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;112
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;113
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;114
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;115
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;116
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;117
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;118
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;119
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;120
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;121
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;122
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;123
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;124
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;125
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;126
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;127
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;128
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;129
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;130
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;131
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;132
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;133
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;134
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;135
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;136
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;137
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;138
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;139
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;140
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;141
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;142
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;143
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;144
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;145
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;146
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;147
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;148
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;149
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;150
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;151
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;152
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;153
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;154
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;155
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;156
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;157
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;158
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;159
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;160
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;161
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;162
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;163
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;164
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;165
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;166
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;167
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;168
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;169
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;170
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;171
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;172
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;173
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;174
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;175
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;176
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;177
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;178
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;179
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;180
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;181
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;182
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;183
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;184
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;185
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;186
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;187
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;188
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;189
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;190
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;191
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;192
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;193
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;194
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;195
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;196
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;197
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;198
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;199
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;200
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;201
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;202
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;203
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;204
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;205
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;206
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;207
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;208
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;209
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;210
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;211
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;212
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;213
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;214
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;215
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;216
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;217
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;218
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;219
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;220
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;221
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;222
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;223
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;224
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;225
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;226
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;227
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;228
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;229
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;230
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;231
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;232
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;233
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;234
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;235
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;236
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;237
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;238
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;239
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;240
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;241
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;242
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;243
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;244
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;245
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;246
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;247
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;248
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;249
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;250
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;251
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;252
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;253
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; * 一个简单的 RN 应用，有 2 个页面，使用了 react-navigation 的 StackNavigator 来做界面管理
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; * 为了说明如何使用 redux，以及如何让 redux 和 StackNavigator 配合
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; * 为了容易理解，把所有内容都放到了一个页面里面，实际开发的时候不要这么做
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; * 参考：
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; *  https://github.com/jackielii/simplest-redux-example
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; *  http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_three_react-redux.html
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt; */&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; React, { Component } from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; {
    StyleSheet,
    Text,
    View,
    Button
} from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; { Provider, connect } from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;react-redux&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; { createStore, combineReducers } from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;redux&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; { StackNavigator, addNavigationHelpers } from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;react-navigation&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#888&#34;&gt;// Home 页面，UI 组件
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; MyHome &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;extends&lt;/span&gt; Component {
    constructor(props) {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;super&lt;/span&gt;(props);
        console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;init home, props&amp;#39;&lt;/span&gt;, props);
    }

    _nextPage() {
        &lt;span style=&#34;color:#888&#34;&gt;// navigation 依然在 this.props 里面获取，和不用 redux 的时候用法一样
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; {navigation} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props;
        navigation.navigate(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;App&amp;#34;&lt;/span&gt;);
    }

    render() {
        &lt;span style=&#34;color:#888&#34;&gt;// 所有的传递过来的状态，都需要从 this.props.screenProps 里面读取 (4)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#888&#34;&gt;// 我这里给不同页面的 action 取了各自的命名空间，避免冲突，也可以直接所有 action 都在一个命名空间，这块我还在摸索如何处理比较好 (5)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; {onIncButtonClicked} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props.screenProps.MyAppActions;

        &lt;span style=&#34;color:#888&#34;&gt;// 界面有两个按钮，一个用来增加另外一个页面的计数器，一个用来访问下一个页面
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; (
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;View style&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{styles.container}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;Button title&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;Inc counter&amp;#34;&lt;/span&gt; onPress&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{onIncButtonClicked}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/Button&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;Button title&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;Next page&amp;#34;&lt;/span&gt; onPress&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{()=&amp;gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;._nextPage()}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/Button&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/View&amp;gt;&lt;/span&gt;
        )
    }
}

&lt;span style=&#34;color:#888&#34;&gt;// 这个组件只是用来测试就算一个 props 传递给子组件，在 props 被修改的时候也会被自动刷新
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; ShowText &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;extends&lt;/span&gt; Component {
    render() {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; {counter} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props;

        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; (
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;Text&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt;{counter}&lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/Text&amp;gt;&lt;/span&gt;
        )
    }
}

&lt;span style=&#34;color:#888&#34;&gt;// App 页面，UI 组件
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; MyApp &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;extends&lt;/span&gt; Component {
    constructor(props) {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;super&lt;/span&gt;(props);
        console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;init App, props&amp;#39;&lt;/span&gt;, props);
    }

    componentWillReceiveProps(newProps) {
        console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;myapp recive props&amp;#39;&lt;/span&gt;, newProps);
    }

    render() {
        &lt;span style=&#34;color:#888&#34;&gt;// 组件的 state/props 获取，有自己的命名空间 (1)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; {counter} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props.screenProps.MyApp;
        &lt;span style=&#34;color:#888&#34;&gt;// 组件的 action props (5)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; {onIncButtonClicked, onDecButtonClicked} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props.screenProps.MyAppActions;

        &lt;span style=&#34;color:#888&#34;&gt;// 界面有一个计数器的结果，两个按钮
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; (
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;View style&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{styles.container}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;ShowText counter&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{counter} &lt;span style=&#34;color:#333&#34;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;Button title&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;Inc counter&amp;#34;&lt;/span&gt; onPress&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{onIncButtonClicked}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/Button&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;Button title&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;Dec counter&amp;#34;&lt;/span&gt; onPress&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{onDecButtonClicked}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/Button&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/View&amp;gt;&lt;/span&gt;
        )
    }
}

&lt;span style=&#34;color:#888&#34;&gt;// 初始化 StackNavigator，定义页面路由
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; AppNavigator &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; StackNavigator({
    Home&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        screen&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; MyHome
    },
    App&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        screen&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; MyApp
    }
});

&lt;span style=&#34;color:#888&#34;&gt;// 包装一下 StackNavigator，因为有些参数需要定制一下
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; MyStackNavigator &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;extends&lt;/span&gt; Component {
    constructor(props) {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;super&lt;/span&gt;(props);
        console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;inside MyStackNavigator&amp;#34;&lt;/span&gt;, props);
    }

    render() {
        &lt;span style=&#34;color:#888&#34;&gt;// screenProps: 使用这个往所有的页面传递 props，这个是和直接使用 redux 不同的地方 (4)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#888&#34;&gt;// navigation: 因为使用 redux 之后，就不会直接操作 this.state 了，所以得告诉 StackNavigator dispatch 方法和 state 从哪里读取
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; (
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;AppNavigator
                screenProps&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props}
                navigation&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{addNavigationHelpers({
                    dispatch&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props.dispatch, &lt;span style=&#34;color:#888&#34;&gt;// 通过 action props 定义 (2)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;                    state&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;this&lt;/span&gt;.props.nav, &lt;span style=&#34;color:#888&#34;&gt;// 通过 state props 定义 (3)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;                })} &lt;span style=&#34;color:#333&#34;&gt;/&amp;gt;&lt;/span&gt;
        )
    }
}

&lt;span style=&#34;color:#888&#34;&gt;// 定义 state 和 props 的关系，所有 redux 应用都需要 (6)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; mapStateToProps &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (state, ownProps) =&amp;gt; {
    console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;inside mapstate to props&amp;#34;&lt;/span&gt;, state, ownProps);
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; {
        &lt;span style=&#34;color:#888&#34;&gt;// 这两个是不同的命名空间，和上面你使用的时候的路径对应 (1)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;MyApp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; state.MyApp,
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;MyHome&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; state.MyHome,
        &lt;span style=&#34;color:#888&#34;&gt;// 定义 StackNavigator 的 state (3)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;nav&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; state.nav
    }
};

&lt;span style=&#34;color:#888&#34;&gt;// 定义 action 和 props 的关系，所有 redux 应用都需要
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; mapDispatchToProps &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (dispatch, ownProps) =&amp;gt; {
    console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;inside map dispath to props&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; {
        &lt;span style=&#34;color:#888&#34;&gt;// 这两个也是不同的命名空间，和上面使用的时候路径对应 (5)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;MyAppActions&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
            onIncButtonClicked&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; () =&amp;gt; {
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; action &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {
                    type&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;INC_COUNTER&amp;#34;&lt;/span&gt;,
                    payload&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;
                };

                dispatch(action);
            },
            onDecButtonClicked&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; () =&amp;gt; {
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; action &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {
                    type&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;DEC_COUNTER&amp;#34;&lt;/span&gt;,
                    payload&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;
                };

                dispatch(action);
            }
        },
        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;MyHomeActions&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
            onNextButtonClicked&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; () =&amp;gt; {
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; action &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; {
                    type&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;NEXT_PAGE&amp;#34;&lt;/span&gt;
                };

                dispatch(action);
            }
        },
        &lt;span style=&#34;color:#888&#34;&gt;// 定义 StackNavigator 的 action props (2)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;dispatch&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; dispatch
    }
}

&lt;span style=&#34;color:#888&#34;&gt;// 定义 home 页面的 reducer，不过因为那个页面唯一的一个 action 是触发别的页面的动作的，所以这个 reducer 其实也可以没有
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;// 所以从这里也能看出来，reducer 并不一定按照页面去分
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; homeReducer &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (state, action) =&amp;gt; {
    console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;inside home reducer&amp;#34;&lt;/span&gt;, state, action);
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; state &lt;span style=&#34;color:#333&#34;&gt;||&lt;/span&gt; {};
};

&lt;span style=&#34;color:#888&#34;&gt;// 定义一个初始化的 state
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; myAppInitState &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;counter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;10&lt;/span&gt;};
&lt;span style=&#34;color:#888&#34;&gt;// 定义 app 页面的 reducer
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; myAppReducer &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (state &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; myAppInitState, action) =&amp;gt; {
    &lt;span style=&#34;color:#888&#34;&gt;// 收到的 state 实际上只是自己命名空间下的 (6)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;inside myAppReducer&amp;#34;&lt;/span&gt;, state, action);
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; myState &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; state;
    &lt;span style=&#34;color:#888&#34;&gt;// 需要处理的 action 的逻辑
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// 要注意，一个 action 被触发的时候，所有的 reducer 都会被调用，所以其实更像是订阅自己想要处理的 action
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;switch&lt;/span&gt; (action.type) {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;DEC_COUNTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;INC_COUNTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#888&#34;&gt;// 如果修改了 state，必须要返回一个新的对象，不能直接在原对象上修改，否则 state 变化不会触发组件的刷新
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;Object&lt;/span&gt;.assign({}, myState, {
                &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;counter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; myState.counter &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; action.payload
            });
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; state;
    }
};

&lt;span style=&#34;color:#888&#34;&gt;// 定义一个 StackNavigator 用到的初始化状态，这个很重要
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; initialState &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; AppNavigator.router.getStateForAction(AppNavigator.router.getActionForPathAndParams(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;Home&amp;#39;&lt;/span&gt;));
&lt;span style=&#34;color:#888&#34;&gt;// 定义 StackNavigator 的 reducer，代码直接复制来的
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; navReducer &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (state &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; initialState, action) =&amp;gt; {
    console.log(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;inside nav reducer&amp;#34;&lt;/span&gt;, state, action);
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; nextState &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; AppNavigator.router.getStateForAction(action, state);

    &lt;span style=&#34;color:#888&#34;&gt;// Simply return the original `state` if `nextState` is null or undefined.
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; nextState &lt;span style=&#34;color:#333&#34;&gt;||&lt;/span&gt; state;
};

&lt;span style=&#34;color:#888&#34;&gt;// 创建 store
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; store &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; createStore(combineReducers({
    &lt;span style=&#34;color:#888&#34;&gt;// 这里的 MyApp 等和前面定义 mapStateToProps 的地方对应 (6)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#888&#34;&gt;// 这里也是导致 reducer 收到的 state 只有自己命名空间下数据的一个原因 (6)
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;    MyApp&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; myAppReducer,
    MyHome&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; homeReducer,
    nav&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; navReducer
}));

&lt;span style=&#34;color:#888&#34;&gt;// 让 redux 加持一下，保佑
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;let&lt;/span&gt; App &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; connect(mapStateToProps, mapDispatchToProps)(MyStackNavigator);

&lt;span style=&#34;color:#888&#34;&gt;// 其他的就是比较常见的 redux 的逻辑了，另外需要说明的是实际使用的时候，肯定会做页面拆分，如何拆分可能都会有不同的看法，我也还在摸索
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; Root &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;extends&lt;/span&gt; Component&lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;{}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt; {
    constructor(props) {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;super&lt;/span&gt;(props);
    }

    render() {
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; (
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;Provider store&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;{store}&lt;span style=&#34;color:#333&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;App prop1&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;prop1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#333&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;/Provider&amp;gt;&lt;/span&gt;
        );
    }
}


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; styles &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; StyleSheet.create({
    container&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        flex&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;,
        justifyContent&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;,
        alignItems&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;,
        backgroundColor&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;#F5FCFF&amp;#39;&lt;/span&gt;,
    },
    welcome&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        fontSize&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;20&lt;/span&gt;,
        textAlign&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;,
        margin&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;10&lt;/span&gt;,
    },
    instructions&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; {
        textAlign&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;,
        color&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;#333333&amp;#39;&lt;/span&gt;,
        marginBottom&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;5&lt;/span&gt;,
    },
});
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>生生死死《白鹿原》</title>
      <link>https://wdicc.com/life/</link>
      <pubDate>Sat, 07 Oct 2017 18:10:00 +0800</pubDate>
      
      <guid>https://wdicc.com/life/</guid>
      <description>&lt;p&gt;
之前 6 月份去上海那边的时候，偶尔看到电视里面演&lt;a href=&#34;https://movie.douban.com/subject/26322644/&#34;&gt;《白鹿原》&lt;/a&gt;，看了几集。吸引我的，主要可能是里面的乡土气息，以及里面的几个演员演的挺好的。那会看的好像是 40 多集，并且是断续看的，剧情也不太能接的上。后来回来后，找了一个时间，就从头开始看了。直到今天才算看完。看的时候实在是感慨良多，看完了也是心情不太能平复，稍微记录一下。因为没看过书，记录以电视剧剧情为主。
&lt;/p&gt;
&lt;p&gt;
这剧从大清末年演到了 49 年建国后，基本是从白嘉轩娶媳妇开始讲到当了族长，到生儿育女，到孩子上学，闹革命，生孩子。到最后剧里面的人物死的死，老的老，实在是看的人很心酸。从一个上帝视角看了这么多人的生生死死，以后还是得少看这种剧了。
&lt;/p&gt;
&lt;p&gt;
白嘉轩一辈子，挺直了腰杆做人，做事的是非对错不评价，但是确实是可以算是不愧对自己，家教很严，但是也就导致了服从家教的孩子们活的很是平淡，这个其实也就是白嘉轩的理念，踏实种个地抱个娃，平平安安一辈子，也就是了，这也是很多老普通百姓的理念。&amp;#34;房是招牌地是累，按下银钱是催命鬼&amp;#34;，这就是古人对普通人生活的建议。但是这么做就可以踏实一辈子么？可以看到白嘉轩的各种经历，清兵围城，闹土匪，镇嵩军征粮征税，天灾大旱，国民党共产党互相闹，这些事情，你不去惹，事情也会找上你。这是命不好？
&lt;/p&gt;
&lt;p&gt;
生活这一辈子就是个社交，免不了的要和其他人产生交集，矛盾就会出现，就会遇到问题。躲不掉。所谓你抗争是一辈子，认命也是一辈子，一辈子过去了也就是过去了，没有反悔的机会，不能重新来过。
&lt;/p&gt;
&lt;p&gt;
鹿子霖从开头争抢族长，到后面坐牢看透人生，到后面老糊涂了，演的实在是很好。普通老百姓，有点小恶，顶多也就是占点小便宜，大恶也不敢，游说小蛾勾引白孝文成功之后，白嘉轩对孝文执行族法，是真的出来劝了，没想到这么严重。小老百姓占点便宜就回家高高兴兴的喝酒了。这人活的也很真实，那点小便宜也就是他的一点追求，能压倒族长一头，就觉得自己很有面子。反而白嘉轩那么大义，倒是有那么些不真实。
&lt;/p&gt;
&lt;p&gt;
这剧里面两个最悲情的人物，一个是田小蛾，一个就是冷秋月。小蛾没啥别的追求，也就是想有个人能一起踏实过日子。所以黑娃和他住在破窑里面的时候是最开心的，管他其他那些呢，只要能一起好好过日子就可以了。但是可惜，有些事情看不透，参加农协搞事情，以为是好运来了，却没想到那是送命的前兆。以为黑娃死了之后，一个弱女人开始找自己的依靠，一半是为了报仇，一半是真心觉得白孝文对自己真好，开始了自己的第二次的幸福生活。却没想到，命丧在这里。死的很悲情，这也是炮灰，要不是鹿兆鹏拉拢，可能黑娃踏实的攒钱，种地养老婆，一辈子或许平平淡淡的，但是安安全全的就过去了。有欲望，就会被人利用，当然也可以说那是自己想做的，不是利用，但是在做之前有人告诉过后果么，知道了后果，还回去做么？当然，可能也没人能预料到那个后果，还是自己的选择。
&lt;/p&gt;
&lt;p&gt;
传言鹿兆鹏死了的时候，秋月端着盆子给鹿子霖洗脚，说是代鹿兆鹏做这个事情，那个瞬间就泪崩了。秋月你可以说是死在封建社会下，但是鹿兆鹏也有不可原谅的责任。秋月开始可能真是按照父母之命嫁过去的，但是后面，某次对白里面也说了，那是真心喜欢兆鹏。就像兆海为了白灵终生未娶一样，秋月为了兆鹏也是守了一辈子的寡。鹿兆鹏说是为了他爷爷为了他爸，把人家娶回了家，又让人家守活寡，这个算是一个正确的价值观么？秋月出场之后一辈子，都踏踏实实的照顾兆鹏父母爷爷，为的就是哪天兆鹏可以多看她一眼，就连想要生一个孩子，也是为了说将来给兆鹏父母养老。等了一辈子，最后兆鹏回家说带她走的时候，本以为已经等到头了，结果发现兆鹏的方案还是继续让她守活寡，也就是这一刻，秋月可能才明白，兆鹏这辈子都不可能和她有什么交集了，自己守的这么一辈子，毫无意义，自杀也是她唯一的一个选择了。封建礼数是一半责任，鹿兆鹏本人也有一半责任。
&lt;/p&gt;
&lt;p&gt;
鹿兆鹏和白嘉轩一样的不真实。
&lt;/p&gt;
&lt;p&gt;
白灵这个演员确实有点嫩，但是也就是这样，估计才能演好年轻的时候。白灵有句话&amp;#34;我的眼睛睁开了，就不会再闭回去&amp;#34;，一个积极向上的乐观的年轻人，和命运做抗争，看过了各种生死之后，总算要过上安定日子了，死了。可能连自己的孩子都没见上几次。每次看到她，那种跳脱的状态很吸引人，不过也有人不喜欢她。
&lt;/p&gt;
&lt;p&gt;
看剧的时候，说实话一直担心最后是一个大家都悲惨的结局，虽然知道这是演戏，但是还是希望能有点好的结局。剧里最后也算是一个还可以的结局了，如果把后面的大跃进灾年再写了，真就有点难看了。鹿家活了一个儿子还有孙女，白家活了一个儿子和孙子孙女。
&lt;/p&gt;
&lt;p&gt;
其他人就不评论了，其实看的时候很多场景都有感触，但是也没记住那么多。看完之后还蛮有冲动再看一次的，但是剧集实在太长了，以后有时间看一下书吧，这个年代拍的电视剧，本身就有太多的忌讳，相信还是原著会更加精彩，而且初步估计，会感觉和电视剧是两个内容，呵呵。当年我高中的时候，拿到一本《平凡的世界》，那会简直就是一刻不停，连续看了几天把书看完了。现在不记得多少内容了，但是那会应该也是被书里描述的农村到城市的历程吸引了吧。现在看白鹿原，里面孩子们最后在县城省城工作，其实和现在的世道没个啥区别。而且其他的，比如这高房价物价，贪官私人关系，可能也可以类比。小老百姓真的可以踏实过日子么？
&lt;/p&gt;
&lt;p&gt;
踏实过日子，慢慢可能会让人把你玩死。另一个选择就是不甘于现状，当然也不一定求逆天改命，只求能在遇到事情的时候，能给自己多一些路。
&lt;/p&gt;
&lt;p&gt;
现在年纪大了，确实很多事情慢慢在看透，40 不惑不是都看明白了，是看明白的也就明白了，没看明白的就不看了，所谓看透。这个年纪看这种讲人一生的戏，看到后面那么多的生死，和自己的现实一应证，实在是有点抗不住。人生一辈子，到底是为什么活呢？越来越迷茫了。所以这帖子的英文取名为 Life。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Encrypt and Security</title>
      <link>https://wdicc.com/encrypt-and-security/</link>
      <pubDate>Mon, 02 Oct 2017 13:26:39 +0800</pubDate>
      
      <guid>https://wdicc.com/encrypt-and-security/</guid>
      <description>
&lt;p&gt;
上周有同学分享了一下加密解密，感觉自己学到了一些东西，记录一下。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
加密 &amp;amp; 解密
&lt;/h2&gt;
&lt;p&gt;
有时候面试的时候会遇到有人讲自己搞过的一些加密方法，会提到「对于 xx 我们使用 md5 加密」，md5 是一种加密方法么？我觉得不是。所谓加密，是对应解密的，不能还原原文的方法，就不应该算加密了吧。
&lt;/p&gt;
&lt;p&gt;
常常可以听到的，有对称加密和非对称加密。对称加密是指加密解密使用的是同一个密钥的方法，非对称的是指使用不同的密钥的方法。
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://zh.wikipedia.org/wiki/%25E5%25B0%258D%25E7%25A8%25B1%25E5%25AF%2586%25E9%2591%25B0%25E5%258A%25A0%25E5%25AF%2586&#34;&gt;对称密钥加密&lt;/a&gt;的方法有 DES、3DES、AES、Blowfish、IDEA、RC5、RC6。我之前用过其中的 3DES 和 Blowfish。特点是速度快。
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://zh.wikipedia.org/wiki/%25E5%2585%25AC%25E5%25BC%2580%25E5%25AF%2586%25E9%2592%25A5%25E5%258A%25A0%25E5%25AF%2586&#34;&gt;非对称加密&lt;/a&gt;也叫公开密钥加密，方法有 RSA、ElGamal、背包算法、Rabin（RSA的特例）、迪菲－赫尔曼密钥交换协议中的公钥加密算法、椭圆曲线加密算法（英语：Elliptic Curve Cryptography, ECC）。基本都没怎么用过。。他的特点是其中一个公钥可以公开，公钥加密的信息只能通过私钥解密，只要保证私钥安全就可以。但是这个方法加解密速度较慢。
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
分组模式
&lt;/h2&gt;
&lt;p&gt;
加密算法并不能说一次给多少数据都可以一次加密完毕，实际处理的时候是按块处理的，先按照一定逻辑分组。
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://zh.wikipedia.org/wiki/%25E5%2588%2586%25E7%25BB%2584%25E5%25AF%2586%25E7%25A0%2581%25E5%25B7%25A5%25E4%25BD%259C%25E6%25A8%25A1%25E5%25BC%258F&#34;&gt;分组模式&lt;/a&gt;有 ECB, CBC, CFB, OFB, CTR等。ECB 就是最简单的，分组之后每块分别加密，然后组合起来。这个方法导致可以任意替换各组的位置而不影响解密。比如原来加密是「A 欠 B 1 万」，每个字刚好一个分组，那即使在不能解密的情况下，也可能导致收到的消息是 「B 欠 A 1 万」。所以就有了其它的那几个加密分组模式，其它的几个模式都会和前后的数据有一定的关系，这样就不能这样调换了。对于第一组数据，加密的时候会需要一个初始化的数据，就是 IV。
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
散列算法
&lt;/h2&gt;
&lt;p&gt;
也就是 hash 算法。常见的 md5, sha1, sha256, sha512 等。这种是对内容产生一个摘要，是一个有损的过程，根据摘要值，不能得到原文。但是可以通过比对摘要来确认摘要是不是来自相同的内容(有一定的碰撞几率)。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
https
&lt;/h2&gt;
&lt;p&gt;
https 是指基于 tls/ssl 协议基础上面跑的 http 协议。建立 ssl 握手之后，就是基于 http 协议的逻辑来在这个 ssl 通道上面传输了。
&lt;/p&gt;
&lt;p&gt;
握手验证过程中，有两个证书需要用到，一个是 CA Root certificate，还有一个是经过 CA 签名的 Web server certificate。CA 根证书是权威的 CA 机构给到各个浏览器和操作系统内置的一个公钥。Web 服务器证书是权威 CA 机构验证了网站的身份之后，使用 CA 的私钥对证书签名，签名就是根据证书内容先进行 Hash，然后使用私钥加密，把结果作为签名一起放到证书里面。
&lt;/p&gt;
&lt;p&gt;
Client 访问服务器，会收到服务器返回的 Web 服务器证书，浏览器会根据 CA 根证书对这个证书的签名进行验证，因为那个跟证书其实就是一个公钥，所以可以使用他解开前面加密的签名，然后也使用相同的 Hash 算法把证书内容 hash，比对结果看是否一致，这个会在后面说数字签名的时候再讲。另外，浏览器也会检查比如有效期，域名等，没问题就认为证书有效。然后浏览器会使用证书里面的公钥，继续和 Web 服务器做握手，浏览器会产生一个随机数，用公钥加密然后返回给 Web 服务器。后续双方会使用这个随机数作为密钥，使用一种对称加密方法做后续的加密。
&lt;/p&gt;
&lt;p&gt;
整个过程中，前面使用非对称加密，协商好一个密钥，后面使用这个密钥来使用对称加密来加密后续的大量的内容。
&lt;/p&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Client hello
&lt;/h3&gt;
&lt;p&gt;
CLient hello 消息包括
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
TLS 版本
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
随机数，时间戳
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Session Id，用来减少握手次数
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
支持的加密方式 Cipher Suites
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Server name
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Server hello
&lt;/h3&gt;
&lt;p&gt;
Server hello 消息包括
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
TLS 版本，表示同意
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
时间戳
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Session Id
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Cipher Suites
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Web 服务器证书
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
验证 Web 服务器证书
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Not Before Time
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Not After Time
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Common Name
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
验证权威 CA 机构的签名
&lt;/h3&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
Pre-Master Secret
&lt;/h3&gt;
&lt;h2 id=&#34;headline-10&#34;&gt;
数字签名
&lt;/h2&gt;
&lt;p&gt;
比如 A 向 B 借了 100 块钱，这个时候 B 就需要 A 给打一个欠条。一方面，如何保证借条可以安全传输，另一方面，如何保证 A 将来不赖掉这个借条呢？可以使用前面提到的私钥公钥的方法来解决。
&lt;/p&gt;
&lt;p&gt;
首先 A 把自己的公钥公开，然后把借条内容做一个 Hash，把 hash 结果使用自己的私钥来加密得到一个签名，同时把借条内容和签名给 B。B 拿到借条内容和签名之后，可以用那个公钥解密签名，然后对借条内容 Hash 得到一个 hash 值，比对这两个结果看是否一致。这个过程就完成了。
&lt;/p&gt;
&lt;p&gt;
如果借条或者是签名在传输过程中被串改，那么 B 就能发现内容的 hash 值和签名解密之后的值不一致。这样就保证了安全。(当然，这里还有个问题是如何保证 B 拿到的公钥是对的，这个感觉肯能是通过其他途径保证的。)
&lt;/p&gt;
&lt;p&gt;
因为公钥是公开的，任何一个第三方都可以做这个验证，可以验证一致就表示是 A 自己用私钥加密的。这个就保证了 A 无法赖掉这个借条。（我们讨论过，如果公钥不公开，并且没有第三方对这个公钥做了公证，那么是无法保证 A 赖账的。）
&lt;/p&gt;
&lt;p&gt;
在这个过程里面，我们把借条内容先做一个 Hash，拿到一个 hash 值，然后再加密，这个结果就是一个数字签名了。任何人拿到了公钥，都可以将签名解密，然后可以对借条做相同的 Hash，比对解密出来的值是否等同于那个 hash 值。
&lt;/p&gt;
&lt;p&gt;
前面 https 里面提到的 CA 权威机构对证书签名，其实就是类似的事。
&lt;/p&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
参考连接
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.moserware.com/2009/06/first-few-milliseconds-of-https.html&#34;&gt;http://www.moserware.com/2009/06/first-few-milliseconds-of-https.html&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/188266/how-are-ssl-certificates-verified&#34;&gt;https://stackoverflow.com/questions/188266/how-are-ssl-certificates-verified&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://crypto.stackexchange.com/questions/5332/how-does-a-client-verify-a-server-certificate&#34;&gt;https://crypto.stackexchange.com/questions/5332/how-does-a-client-verify-a-server-certificate&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Change Blog Theme to Hugo Classic</title>
      <link>https://wdicc.com/change-blog-theme-to-hugo-classic/</link>
      <pubDate>Sat, 30 Sep 2017 21:47:20 +0800</pubDate>
      
      <guid>https://wdicc.com/change-blog-theme-to-hugo-classic/</guid>
      <description>&lt;p&gt;
一个主题看久了会腻，原来用的 &lt;a href=&#34;https://github.com/wd/hugo-fabric&#34;&gt;hugo-fabric&lt;/a&gt; 也是我在最早的 jeklly 的 fabric 主题上修改的。那个主题偏暗，我把一些颜色调亮了一点，但是还是不是很舒服，对颜色搭配还是没有感觉。
&lt;/p&gt;
&lt;p&gt;
今天折腾了一下，把 theme 换到了 &lt;a href=&#34;https://github.com/wd/hugo-classic&#34;&gt;hugo-classic&lt;/a&gt;，这个也是 fork 自一个别人的主题，增加了一些缺失的内容
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
首页分页
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
disqus 支持
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
code 块颜色不是很明显的问题
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
css 全文输出
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;del&gt;后面可能还想把 tags 页面做成横向的列表，目前那个有点太占位置了。不过目前还没找到比较好看一点的设计，遇到再说了。另外刚发现那个 code 块的空白太多了，可能回头也调整一下。&lt;/del&gt;
&lt;/p&gt;
&lt;p&gt;
已经弄了一个 tag 的样式，先这么看着吧。另外也修正了一下 code 的空白。
&lt;/p&gt;
&lt;p&gt;
&lt;del&gt;发现 org 的 &lt;code class=&#34;verbatim&#34;&gt;BEGIN_SRC&lt;/code&gt; 输出的时候，会加一个换行在第一行，这个导致多了一个空白行，稍微有点丑了，回头有时间再看看是哪里的问题吧。&lt;/del&gt;
&lt;/p&gt;
&lt;p&gt;
上面这个问题在 hugo 的 HEAD 版本里面已经修复了。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dpi dp and px</title>
      <link>https://wdicc.com/dpi-dp-and-px/</link>
      <pubDate>Sat, 16 Sep 2017 10:18:50 +0800</pubDate>
      
      <guid>https://wdicc.com/dpi-dp-and-px/</guid>
      <description>&lt;p&gt;这几天折腾了一下 android 上面的布局，了解了一些基础概念。&lt;/p&gt;

&lt;p&gt;首先有两个概念，一个是分辨率，一个是屏幕的实际尺寸。我们一般讲的 &lt;code&gt;800x600&lt;/code&gt; 像素(px)，&lt;code&gt;1024x768&lt;/code&gt; 像素(px)这些，都是分辨率。然后 &lt;code&gt;5.5&lt;/code&gt; 寸(iPhone 6/7/8 plus)，&lt;code&gt;4.7&lt;/code&gt; 寸(iPhone 6/7/8)，&lt;code&gt;10.1&lt;/code&gt; 寸(iPad) 这些是实际尺寸，并且指的是屏幕对角线尺寸。&lt;/p&gt;

&lt;p&gt;一般来讲，除非是 5.5 和  10.1 这么大的差异，我们大多会在比如 5.5 和 4.7 上面使用同一个设计。比如在最上面 1cm (为什么说物理距离呢，因为手机屏幕就那么大，你不能把内容显示的太小，否则会看不清楚) 显示一个黄色的提示条。那么接下来的问题就是，1cm 对应的像素，就算在同一个设备的不同的分辨率下面，都是不一样的。那图怎么做？&lt;/p&gt;

&lt;p&gt;如果 20px 的图放到 800x600 的分辨率下面刚好，那么这个图放到了 1600x1200 的分辨率下面（这里说的是屏幕物理尺寸不变的情况下，因为如果物理尺寸如果也变大了，那就是另外一个情况了），不做缩放的话，就是会得到比 800x600 小一倍的效果。如果缩放的话，那就大小一样了，但是可能因为缩放导致失真。实际做法就是针对不同分辨率做不同的尺寸的图。比如针对 800x600 分辨率，做一个 20px 的图，那对于 1600x1200 分辨率的，做一个 40px 的图。以此类推。&lt;/p&gt;

&lt;p&gt;这样，三个概念就出来了&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;density&lt;/code&gt; 也就是 dpi，屏幕密度。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dp&lt;/code&gt; 是一个长度单位。&lt;/li&gt;
&lt;li&gt;常见的 &lt;code&gt;1x&lt;/code&gt;, &lt;code&gt;2x&lt;/code&gt;, &lt;code&gt;@2x&lt;/code&gt; 这些。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;density(dpi，屏幕密度) = 屏幕对角线的像素/对角线的物理尺寸 = (屏幕长的像素的平方 + 屏幕宽的像素的平方)开根号/对角线的物理尺寸&lt;/code&gt;，比如 iphone 3G/3GS 是 160, iphone 4 是 320。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dp = px x 160 / dpi&lt;/code&gt;。比如 160dp 在 160 dpi 下面是 160px，在 320 dpi 下面是 320px。其实就是说，160dp 我们在 iphone 3g 上和在 iphone 4 上看到的物理长度是一样的。&lt;/p&gt;

&lt;p&gt;而 &lt;code&gt;1x&lt;/code&gt;, &lt;code&gt;2x&lt;/code&gt; 是 &lt;code&gt;px/dp = dpi/160&lt;/code&gt;。从上面那个例子也能看到，这个其实就是指 px 和 dp 的换算关系。一般我们要在某个手机上面开发，主要弄清楚的就是这个倍率就可以了。在 1x 的设备上面，想要展示 10px 的图，那么给 2x 的设备就得切一个 20px 的图，才能达到和 1x 上面一样的视觉效果。&lt;/p&gt;

&lt;p&gt;那我们一个 app 是需要同时准备展示在很多类型的设备上面的，1x, 1.5x, 2x 3x 等，总不能靠程序去计算然后决定用什么图吧。各系统其实已经做好了简单的适配方法了。比如 ios 里面，是通过给图取不同的名字来解决的，例如 example@2x.png，example@3x.png，ios 系统会自动去用对应的图。而 android 系统里面，是通过把图放入不同的目录来解决的，例如 drawable，drawable-hdpi, drawable-xhdbi，这几个分别对应 1x, 1.5x, 2x。&lt;/p&gt;

&lt;p&gt;其中要注意的是不要放错目录。如果把一个 1.5x 的图，放到了 1x 的目录下面，然后展示在一个 1.5x 的设备下面，会发现图会被缩放到 1.5 倍大小。&lt;/p&gt;

&lt;p&gt;参考链接:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/913943d25829&#34;&gt;http://www.jianshu.com/p/913943d25829&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/20697111&#34;&gt;https://www.zhihu.com/question/20697111&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Add float debug button for react native</title>
      <link>https://wdicc.com/add-float-debug-button-for-react-native/</link>
      <pubDate>Sat, 02 Sep 2017 18:22:47 +0800</pubDate>
      
      <guid>https://wdicc.com/add-float-debug-button-for-react-native/</guid>
      <description>

&lt;p&gt;React-native 里面在模拟器里面可以通过快捷键打开开发菜单，在设备里面可以通过摇晃设备打开开发菜单。但是摇晃有时候并不是一个好的操作，比如是个 pad，或者比如你自己的设备本身会触发晃动动作。那么如何在开发模式下面增加一个按钮打开这个菜单呢？可惜官方对这个功能没有兴趣多做开发 &lt;a href=&#34;https://github.com/facebook/react-native/issues/10191&#34;&gt;https://github.com/facebook/react-native/issues/10191&lt;/a&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;ios&#34;&gt;iOS&lt;/h2&gt;

&lt;p&gt;ios 里面直接就把这个接口暴露出来了，可以直接在 js 里面调用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; {NativeModules} from &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#888&#34;&gt;// 在某个按钮的动作里面
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;const&lt;/span&gt; {DevMenu} &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; NativeModules;
DevMenu.show();
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;android&#34;&gt;Android&lt;/h2&gt;

&lt;p&gt;iOS 是 react-native 的亲儿子，Android 里面并没有那么方便的方法，得自己通过 native 代码加。&lt;/p&gt;

&lt;p&gt;下面两种方式加的都是 &lt;code&gt;android.support.design.widget.FloatingActionButton&lt;/code&gt; 按钮，其它的类似。需要增加好编译依赖 &lt;code&gt;compile &#39;com.android.support:design:23.0.0&#39;&lt;/code&gt;，版本号按照自己的修改下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;66
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;67
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;68
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;69
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;70
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;71
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;72
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;73
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;void&lt;/span&gt; addDevButton() {

            MainApplication &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;application&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (MainApplication) getApplication();
            ReactNativeHost &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;reactNativeHost&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; application.&lt;span style=&#34;color:#00c&#34;&gt;getReactNativeHost&lt;/span&gt;();
            ReactInstanceManager &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;reactInstanceManager&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; reactNativeHost.&lt;span style=&#34;color:#00c&#34;&gt;getReactInstanceManager&lt;/span&gt;();
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;DevSupportManager&lt;/span&gt; devSupportManager &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; reactInstanceManager.&lt;span style=&#34;color:#00c&#34;&gt;getDevSupportManager&lt;/span&gt;();

            &lt;span style=&#34;color:#888&#34;&gt;// 这里是增加一个自定义菜单
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;//            devSupportManager.addCustomDevOption(&amp;#34;Custom dev option&amp;#34;, new DevOptionHandler() {
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;//                @Override
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;//                public void onOptionSelected() {
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;//                    Toast.makeText(MainActivity.this, &amp;#34;Hello from custom dev option&amp;#34;, Toast.LENGTH_SHORT).show();
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;//                }
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;//            });
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;

            &lt;span style=&#34;color:#888&#34;&gt;// Fake empty container dev_button_layout
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#888&#34;&gt;// 创建一个 layout
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;            RelativeLayout &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;lContainerLayout&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; RelativeLayout(mActivity.&lt;span style=&#34;color:#00c&#34;&gt;getApplicationContext&lt;/span&gt;());
            lContainerLayout.&lt;span style=&#34;color:#00c&#34;&gt;setLayoutParams&lt;/span&gt;(&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; RelativeLayout.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;(
                    ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;MATCH_PARENT&lt;/span&gt; , ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;MATCH_PARENT&lt;/span&gt; ));

            &lt;span style=&#34;color:#888&#34;&gt;// custom view
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#888&#34;&gt;// 创建一个 button
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;            FloatingActionButton &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; FloatingActionButton(mActivity);
            button.&lt;span style=&#34;color:#00c&#34;&gt;setImageResource&lt;/span&gt;(R.&lt;span style=&#34;color:#00c&#34;&gt;drawable&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;ga_airplane&lt;/span&gt;);

            RelativeLayout.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;lButtonParams&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; RelativeLayout.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;(
                    ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;WRAP_CONTENT&lt;/span&gt;, ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;WRAP_CONTENT&lt;/span&gt;
            );
            lButtonParams.&lt;span style=&#34;color:#00c&#34;&gt;addRule&lt;/span&gt;(RelativeLayout.&lt;span style=&#34;color:#00c&#34;&gt;ALIGN_PARENT_RIGHT&lt;/span&gt;);
            lButtonParams.&lt;span style=&#34;color:#00c&#34;&gt;addRule&lt;/span&gt;(RelativeLayout.&lt;span style=&#34;color:#00c&#34;&gt;ALIGN_PARENT_BOTTOM&lt;/span&gt;);
            button.&lt;span style=&#34;color:#00c&#34;&gt;setLayoutParams&lt;/span&gt;(lButtonParams);

            ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;MarginLayoutParams&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;mp&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;MarginLayoutParams&lt;/span&gt;) button.&lt;span style=&#34;color:#00c&#34;&gt;getLayoutParams&lt;/span&gt;();
            mp.&lt;span style=&#34;color:#00c&#34;&gt;setMargins&lt;/span&gt;(0, 0, 0, dpToPx(mActivity, 125));

            button.&lt;span style=&#34;color:#00c&#34;&gt;setLayoutParams&lt;/span&gt;(mp);

            &lt;span style=&#34;color:#888&#34;&gt;//设定拖动动作
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;            button.&lt;span style=&#34;color:#00c&#34;&gt;setOnTouchListener&lt;/span&gt;(&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; View.&lt;span style=&#34;color:#00c&#34;&gt;OnTouchListener&lt;/span&gt;() {
                &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;boolean&lt;/span&gt; onTouch(View &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;v&lt;/span&gt;, MotionEvent &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;event&lt;/span&gt;) {
                    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;switch&lt;/span&gt; (event.&lt;span style=&#34;color:#00c&#34;&gt;getActionMasked&lt;/span&gt;()) {
                        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_DOWN&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
                            dX &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; v.&lt;span style=&#34;color:#00c&#34;&gt;getX&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; event.&lt;span style=&#34;color:#00c&#34;&gt;getRawX&lt;/span&gt;();
                            dY &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; v.&lt;span style=&#34;color:#00c&#34;&gt;getY&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; event.&lt;span style=&#34;color:#00c&#34;&gt;getRawY&lt;/span&gt;();
                            lastAction &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_DOWN&lt;/span&gt;;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;break&lt;/span&gt;;

                        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_MOVE&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
                            v.&lt;span style=&#34;color:#00c&#34;&gt;setY&lt;/span&gt;(event.&lt;span style=&#34;color:#00c&#34;&gt;getRawY&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; dY);
                            v.&lt;span style=&#34;color:#00c&#34;&gt;setX&lt;/span&gt;(event.&lt;span style=&#34;color:#00c&#34;&gt;getRawX&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; dX);
                            lastAction &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_MOVE&lt;/span&gt;;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;break&lt;/span&gt;;

                        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_UP&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (lastAction &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_DOWN&lt;/span&gt;)
                                &lt;span style=&#34;color:#888&#34;&gt;// 点击的时候打开菜单
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;                                devSupportManager.&lt;span style=&#34;color:#00c&#34;&gt;showDevOptionsDialog&lt;/span&gt;();
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;break&lt;/span&gt;;
&lt;span style=&#34;color:#970;font-weight:bold&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#970;font-weight:bold&#34;&gt;                        default:&lt;/span&gt;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;false&lt;/span&gt;;
                    }
                    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;;
                }
            });

            lContainerLayout.&lt;span style=&#34;color:#00c&#34;&gt;addView&lt;/span&gt;(button);
            addContentView(lContainerLayout, &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;(
                    ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;MATCH_PARENT&lt;/span&gt; , ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;MATCH_PARENT&lt;/span&gt; ));
        }&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面是纯代码方式，还可以通过 xml 文件方式搞定。&lt;/p&gt;

&lt;p&gt;新建一个 layout 文件，取名比如叫做 &lt;code&gt;dev_button_layout.xml&lt;/code&gt;， rootTag 是 &lt;code&gt;RelativeLayout&lt;/code&gt;。然后在里面添加一个 &lt;code&gt;FloatingActionButton&lt;/code&gt;，id 设置为 &lt;code&gt;dev_button&lt;/code&gt;，然后设置好属性和位置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;void&lt;/span&gt; addDevButton() {
            MainApplication &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;application&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (MainApplication) getApplication();
            ReactNativeHost &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;reactNativeHost&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; application.&lt;span style=&#34;color:#00c&#34;&gt;getReactNativeHost&lt;/span&gt;();
            ReactInstanceManager &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;reactInstanceManager&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; reactNativeHost.&lt;span style=&#34;color:#00c&#34;&gt;getReactInstanceManager&lt;/span&gt;();
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;DevSupportManager&lt;/span&gt; devSupportManager &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; reactInstanceManager.&lt;span style=&#34;color:#00c&#34;&gt;getDevSupportManager&lt;/span&gt;();

            View &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; View.&lt;span style=&#34;color:#00c&#34;&gt;inflate&lt;/span&gt;(mActivity, R.&lt;span style=&#34;color:#00c&#34;&gt;layout&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;dev_button_layout&lt;/span&gt;, &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;null&lt;/span&gt;);
            FloatingActionButton &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; (FloatingActionButton) view.&lt;span style=&#34;color:#00c&#34;&gt;findViewById&lt;/span&gt;(R.&lt;span style=&#34;color:#00c&#34;&gt;id&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;dev_button&lt;/span&gt;);
            &lt;span style=&#34;color:#888&#34;&gt;//button.setImageResource(R.drawable.ga_airplane);
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;
            button.&lt;span style=&#34;color:#00c&#34;&gt;setOnTouchListener&lt;/span&gt;(&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; View.&lt;span style=&#34;color:#00c&#34;&gt;OnTouchListener&lt;/span&gt;() {
                &lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
                &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;boolean&lt;/span&gt; onTouch(View &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;v&lt;/span&gt;, MotionEvent &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;event&lt;/span&gt;) {
                    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;switch&lt;/span&gt; (event.&lt;span style=&#34;color:#00c&#34;&gt;getActionMasked&lt;/span&gt;()) {
                        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_DOWN&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
                            dX &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; v.&lt;span style=&#34;color:#00c&#34;&gt;getX&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; event.&lt;span style=&#34;color:#00c&#34;&gt;getRawX&lt;/span&gt;();
                            dY &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; v.&lt;span style=&#34;color:#00c&#34;&gt;getY&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; event.&lt;span style=&#34;color:#00c&#34;&gt;getRawY&lt;/span&gt;();
                            lastAction &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_DOWN&lt;/span&gt;;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;break&lt;/span&gt;;

                        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_MOVE&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
                            v.&lt;span style=&#34;color:#00c&#34;&gt;setY&lt;/span&gt;(event.&lt;span style=&#34;color:#00c&#34;&gt;getRawY&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; dY);
                            v.&lt;span style=&#34;color:#00c&#34;&gt;setX&lt;/span&gt;(event.&lt;span style=&#34;color:#00c&#34;&gt;getRawX&lt;/span&gt;() &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; dX);
                            lastAction &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_MOVE&lt;/span&gt;;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;break&lt;/span&gt;;

                        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_UP&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;:&lt;/span&gt;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; (lastAction &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; MotionEvent.&lt;span style=&#34;color:#00c&#34;&gt;ACTION_DOWN&lt;/span&gt;)
                                devSupportManager.&lt;span style=&#34;color:#00c&#34;&gt;showDevOptionsDialog&lt;/span&gt;();
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;break&lt;/span&gt;;
&lt;span style=&#34;color:#970;font-weight:bold&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#970;font-weight:bold&#34;&gt;                        default:&lt;/span&gt;
                            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;false&lt;/span&gt;;
                    }
                    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;true&lt;/span&gt;;
                }
            });

            addContentView(view, &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;new&lt;/span&gt; ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;(
                    ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;MATCH_PARENT&lt;/span&gt; , ViewGroup.&lt;span style=&#34;color:#00c&#34;&gt;LayoutParams&lt;/span&gt;.&lt;span style=&#34;color:#00c&#34;&gt;MATCH_PARENT&lt;/span&gt; ));
        }&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后在你的 &lt;code&gt;MainActivity&lt;/code&gt; 的 &lt;code&gt;onCreate&lt;/code&gt; 里面，在 &lt;code&gt;super.onCreate(savedInstanceState);&lt;/code&gt; 后面增加&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;            // debug 环境下才显示
            if(BuildConfig.DEBUG)
                addDevButton();&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Emacs as react native ide</title>
      <link>https://wdicc.com/emacs-as-react-native-ide/</link>
      <pubDate>Mon, 24 Jul 2017 20:02:00 +0800</pubDate>
      
      <guid>https://wdicc.com/emacs-as-react-native-ide/</guid>
      <description>

&lt;p&gt;最近又在写 &lt;code&gt;react-native&lt;/code&gt; 了，对自己的环境又作了一番配置。记录一下。&lt;/p&gt;

&lt;h2 id=&#34;web-mode&#34;&gt;web-mode&lt;/h2&gt;

&lt;p&gt;我主要用的 mode 是 web-mode。这个 mode 简直万能，能处理 html，jsx，js 等。具体配置如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode
  :ensure t
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;list &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;auto&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;alist &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;\\.html\\&amp;#39;&amp;#34;&lt;/span&gt; . web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode))
  (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;list &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;auto&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;alist &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;\\.js\\&amp;#39;&amp;#34;&lt;/span&gt; . web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode))
  (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;list &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;auto&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;alist &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;\\.ejs\\&amp;#39;&amp;#34;&lt;/span&gt; . web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode))
  (setq web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;markup&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;indent&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;offset &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;4&lt;/span&gt;)
  (setq web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;css&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;indent&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;offset &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;4&lt;/span&gt;)
  (setq web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;code&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;indent&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;offset &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;4&lt;/span&gt;)

  (setq web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;content&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;types&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;alist
        &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;jsx&amp;#34;&lt;/span&gt; . &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;.*\\.js\\&amp;#39;&amp;#34;&lt;/span&gt;))
        )
)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;主要是那个 &lt;code&gt;web-mode-content-types-alist&lt;/code&gt; 的配置，让 web-mode 处理 js 文件的时候，把 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 代码段识别成 jsx。这样能把缩进处理好。&lt;/p&gt;

&lt;p&gt;我还试过 rjsx-mode，这个用起来也可以，基于 js2-mdoe，js2-mode 有的一些用法都支持，并且 flycheck 都不用做多余的配置。但是主要问题是，jsx 的代码缩进有问题。&lt;/p&gt;

&lt;h2 id=&#34;flycheck&#34;&gt;flycheck&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; flycheck
  :ensure t
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (global&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;flycheck&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode t)
  (flycheck&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;javascript&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;eslint &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode)
)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;把 web-mode 的 checker 设置为 &lt;code&gt;javascript-eslint&lt;/code&gt;，如果你用别的就设置成对应的。配合用的 .eslintrc 文件如下，可以根据自己需求调整。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;parser&amp;#34;: &amp;#34;babel-eslint&amp;#34;,
    &amp;#34;env&amp;#34;: {
        &amp;#34;es6&amp;#34;: true
    },
    &amp;#34;parserOptions&amp;#34;: {
        &amp;#34;ecmaVersion&amp;#34;: 6,
        &amp;#34;sourceType&amp;#34;: &amp;#34;module&amp;#34;,
        &amp;#34;ecmaFeatures&amp;#34;: {
            &amp;#34;jsx&amp;#34;: true
        }
    },
    &amp;#34;plugins&amp;#34;: [
        &amp;#34;react&amp;#34;
    ],
    &amp;#34;globals&amp;#34;: {
        &amp;#34;require&amp;#34;: false,
        &amp;#34;module&amp;#34;: false,
        &amp;#34;setInterval&amp;#34;: false,
        &amp;#34;clearInterval&amp;#34;: false,
        &amp;#34;setTimeout&amp;#34;: false,
        &amp;#34;clearTimeout&amp;#34;: false,
        &amp;#34;console&amp;#34;: false
    },
    &amp;#34;extends&amp;#34;: [
        &amp;#34;eslint:recommended&amp;#34;,
        &amp;#34;plugin:react/recommended&amp;#34;
    ],
    &amp;#34;rules&amp;#34;: {
        // overrides
        &amp;#34;react/prop-types&amp;#34;: 0,
        &amp;#34;indent&amp;#34;: [&amp;#34;error&amp;#34;, 4],
        &amp;#34;react/jsx-indent&amp;#34;: [&amp;#34;error&amp;#34;, 4],
        &amp;#34;no-trailing-spaces&amp;#34;: 2,
        &amp;#34;no-console&amp;#34;: 0,
        &amp;#34;comma-dangle&amp;#34;: [&amp;#34;error&amp;#34;, &amp;#34;never&amp;#34;]
    }
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;补全&#34;&gt;补全&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; tern
  :ensure t
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;hook &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;hook&lt;/span&gt; (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;lambda&lt;/span&gt; () (tern&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode t)))
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;bind&lt;/span&gt; (:&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;map&lt;/span&gt; tern&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;keymap&lt;/span&gt;
              (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;M-*&amp;#34;&lt;/span&gt; . tern&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;pop&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;find&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;definition))
  )

(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tern
  :ensure t
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;list &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;backends &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tern)
  )&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;我用的是 company 后端用的是 tern。.tern-project 的内容如下，可以根据自己的情况调整下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
  &amp;#34;ecmaVersion&amp;#34;: 6,
  &amp;#34;libs&amp;#34;: [
    &amp;#34;browser&amp;#34;
  ],
  &amp;#34;loadEagerly&amp;#34;: [
    &amp;#34;Controller/*.js&amp;#34;,
    &amp;#34;Utility/*.js&amp;#34;,
    &amp;#34;App.js&amp;#34;
  ],
  &amp;#34;dontLoad&amp;#34;: [
    &amp;#34;node_modules/**&amp;#34;
  ],
  &amp;#34;plugins&amp;#34;: {
    &amp;#34;node&amp;#34;: {},
    &amp;#34;es_modules&amp;#34;: {},
    &amp;#34;jsx&amp;#34;: {}
  }
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;补全-update&#34;&gt;补全 update&lt;/h2&gt;

&lt;p&gt;tern 这个东西用了一段时间，发现不是很好用。经常找不到 symbol，以及在 jsx 代码里面无法跳转。后来发现了 &lt;a href=&#34;https://github.com/ananthakumaran/tide&#34;&gt;tide&lt;/a&gt;，简直好用到不行。&lt;/p&gt;

&lt;p&gt;tide 是基于 vscode 用的 tsserver 来搞的。这个开始是给 TypeScript 用的，目前也支持普通 js。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;(defun setup&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;mode&lt;/span&gt; ()
  (interactive)
  ;; (setq tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tsserver&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;process&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;environment &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;TSS_LOG=-level verbose -file /tmp/tss.log&amp;#34;&lt;/span&gt;))
  (tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;setup)
  ;;(setq flycheck&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;check&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;syntax&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;automatically &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(save mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;enabled))
  (eldoc&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)
  (tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;hl&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;identifier&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)
  ;; company is an optional dependency. You have to
  ;; install it separately via &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;install
  ;; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;`M-x package-install [ret] company`&lt;/span&gt;
  )


(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; tide
  :ensure t
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;bind&lt;/span&gt; ((&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;M-.&amp;#34;&lt;/span&gt; . tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;jump&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;definition)
         (&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;M-,&amp;#34;&lt;/span&gt; . tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;jump&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;back)
         )

  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (setup&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode)
  ;; aligns annotation to the right hand &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;side&lt;/span&gt;
  (setq company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tooltip&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;align&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;annotations t)

  ;; formats the buffer before saving
  ;;(add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;hook &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;before&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;save&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;hook &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;format&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;before&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;save)

  ;; configure javascript&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide checker to run after your &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;default&lt;/span&gt; javascript &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;checker&lt;/span&gt;
  (flycheck&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;next&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;checker &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;javascript&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;eslint &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;javascript&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;append)

  (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;hook &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;hook&lt;/span&gt;
            (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;lambda&lt;/span&gt; ()
              (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;when&lt;/span&gt; (&lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;equal &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;js&amp;#34;&lt;/span&gt; (file&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;name&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;extension buffer&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;file&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;name))
                (setup&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode))))
  ;; configure jsx&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide checker to run after your &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;default&lt;/span&gt; jsx &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;checker&lt;/span&gt;
  (flycheck&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;javascript&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;eslint &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode)
  (flycheck&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;next&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;checker &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;javascript&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;eslint &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;jsx&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;append)
  )


;; 针对 web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode 做一个配置
    (add&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;hook &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;web&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;hook&lt;/span&gt;
            (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;lambda&lt;/span&gt; ()
              (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;set&lt;/span&gt; (make&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;local&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;variable &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;backends)
                   &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(
                      company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;tide
                      ;company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;react
                      company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;dabbrev&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;code
                      company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;keywords
                      company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;files
                      company&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;yasnippet))))&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;其实我也没做啥配置，就是官方的那几个就可以。然后还有一个 jsconfig.json 的配置文件如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;compilerOptions&amp;#34;: {
        &amp;#34;allowJs&amp;#34;: true,
        &amp;#34;allowSyntheticDefaultImports&amp;#34;: true
    },
    &amp;#34;exclude&amp;#34;: [
        &amp;#34;node_modules&amp;#34;,
        &amp;#34;ios&amp;#34;,
        &amp;#34;android&amp;#34;,
        &amp;#34;.git&amp;#34;
    ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这就支持了好多功能，比如光标停留在一个 keyword 上面就会高亮相关的，比如 company 的补全啥的，都很不错。还支持 refactor。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Django middleware</title>
      <link>https://wdicc.com/django-middleware/</link>
      <pubDate>Wed, 05 Jul 2017 18:07:50 +0800</pubDate>
      
      <guid>https://wdicc.com/django-middleware/</guid>
      <description>
&lt;p&gt;
Django 提供了 &lt;a href=&#34;https://docs.djangoproject.com/en/1.11/topics/http/middleware/&#34;&gt;middleware&lt;/a&gt; 来让你 hack Request 和 Response。用的时候有几个问题需要注意一下。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
&lt;code class=&#34;verbatim&#34;&gt;__call__&lt;/code&gt; 方法
&lt;/h1&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;__call__&lt;/code&gt; 方法实际上就是最早收到 request 的地方，如果不关心 view，那么就可以在这里做你想要做的事情。比如认证用户啥的。这个实际上应该就是早期的 &lt;code class=&#34;verbatim&#34;&gt;process_request&lt;/code&gt; 。
&lt;/p&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
process_view 方法
&lt;/h1&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;process_view&lt;/code&gt; 方法会接收到 view_func 和其参数，如果想要针对这些东西处理，可以在这里动作。比如我们所有 api 请求的 POST 的 body 里面都是固定格式的 json 数据，我就在这里检查了 json 的格式，并把解析结果给到了 view_func。
&lt;/p&gt;
&lt;p&gt;
如果不打算对 view_func 做什么事情，那就最好做完想做的事情，直接返回 &lt;code class=&#34;verbatim&#34;&gt;None&lt;/code&gt; 就可以。否则处理完毕之后，返回一个 response 对象。
&lt;/p&gt;
&lt;p&gt;
要注意的是，这里最好不要产生 exception，产生了会把逻辑跑到 Middleware 的 exception 逻辑里面。所以最好对自己的代码段加上 try-except 逻辑。
&lt;/p&gt;
&lt;p&gt;
另外，这里可以对 view_func 做调用，直接返回 view_func 的结果或者处理之后的结果，只要保证是个 response 对象就可以了。也可以不做调用，返回 &lt;code class=&#34;verbatim&#34;&gt;None&lt;/code&gt; ，后续 django 也会调用。要注意的是，如果你对 view_func 做了调用，那么在捕捉到错误的时候，except 里面应该也需要返回一个 response 对象，不能返回 &lt;code class=&#34;verbatim&#34;&gt;None&lt;/code&gt; 了，否则 djangon 还会再次调用这个 view_func 。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
process_exception 方法
&lt;/h1&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;process_exception&lt;/code&gt; 方法是在 view 报错的情况下会调用。我在这里统一返回了 server error 的 json，http 状态是 200 的。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emacs as python IDE</title>
      <link>https://wdicc.com/emacs-as-python-ide/</link>
      <pubDate>Fri, 30 Jun 2017 20:47:56 +0800</pubDate>
      
      <guid>https://wdicc.com/emacs-as-python-ide/</guid>
      <description>
&lt;p&gt;
最近 python 写的比较多，比较了几个编辑器，最后还是留下了 emacs。
&lt;/p&gt;
&lt;p&gt;
主要比较了 emacs 和 pycharm。pycharm 绝对是一个很强的 IDE，几乎可以补全任何东西，写代码各种提示。比如 Django 里面定义一个 model User 之后，就可以 &lt;code class=&#34;verbatim&#34;&gt;User.&lt;/code&gt; 之后提示 &lt;code class=&#34;verbatim&#34;&gt;objects&lt;/code&gt; ，这个是依据 metaclass 来补全的。另外还有比如写 &lt;code class=&#34;verbatim&#34;&gt;User.objects.get(|)&lt;/code&gt; 的时候，光标在竖线那个位置，会提示 &lt;code class=&#34;verbatim&#34;&gt;User&lt;/code&gt; 的字段，这个相当好用。这两个只是皮毛，实在是太好用了。
&lt;/p&gt;
&lt;p&gt;
但是为什么还要用 emacs 呢？emacs 的编辑器功能太好用了。比如 &lt;code class=&#34;verbatim&#34;&gt;&amp;lt;&lt;/code&gt; 到页首， &lt;code class=&#34;verbatim&#34;&gt;&amp;gt;&lt;/code&gt; 到页尾， &lt;code class=&#34;verbatim&#34;&gt;C-x b&lt;/code&gt; 切换 buffer，还有切换 frame，等等快捷键非常舒服，完全不用鼠标。不过也可能是我习惯了 emacs 的快捷键了。在 pycharm 里面时不时就不行，比如选择一段文字，纯键盘需要按 &lt;code class=&#34;verbatim&#34;&gt;-&amp;gt;&lt;/code&gt; 配合才可以，那还不如用鼠标算了。
&lt;/p&gt;
&lt;p&gt;
其实如果一上手就用 pycharm，那绝对会觉得很爽。
&lt;/p&gt;
&lt;p&gt;
emacs 写 python 在原生的 &lt;code class=&#34;verbatim&#34;&gt;python-mode&lt;/code&gt; 基础上有两个好用的选择，一个是 &lt;a href=&#34;https://github.com/proofit404/anaconda-mode&#34;&gt;anaconda-mode&lt;/a&gt;，一个是 &lt;a href=&#34;https://github.com/jorgenschaefer/elpy&#34;&gt;elpy&lt;/a&gt;。 &lt;code class=&#34;verbatim&#34;&gt;anaconda-mode&lt;/code&gt; 相对来说比较简陋一点，但是补全什么的没问题，缺少重构功能。两个的工作模式都是会启动一个补全用的进程，然后通过 lisp 和这个进程交互获取补全信息。
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
anaconda-mode 遇到的问题和解决
&lt;/h2&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;anaconda-mode&lt;/code&gt; 我遇到一个问题，为了下载 emacs 的 package 方便，我设置了代理，这个代理导致 &lt;code class=&#34;verbatim&#34;&gt;anaconda-mode&lt;/code&gt; 和补全进程交互的时候，连接不能断开，就会不停的新建连接，一会就打开文件数满了，可以参观这个 &lt;a href=&#34;https://github.com/proofit404/anaconda-mode/issues/255&#34;&gt;issue&lt;/a&gt;。主要是设置了 &lt;code class=&#34;verbatim&#34;&gt;no_proxy&lt;/code&gt; 解决。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt; (setq url-proxy-services
       &amp;#39;((&amp;#34;no_proxy&amp;#34; . &amp;#34;^\\(127.0.0.1\\|localhost\\|10.*\\)&amp;#34;)
         (&amp;#34;http&amp;#34; . &amp;#34;127.0.0.1:6152&amp;#34;)
         (&amp;#34;https&amp;#34; . &amp;#34;127.0.0.1:6152&amp;#34;)))&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
auto-virtualenv
&lt;/h2&gt;
&lt;p&gt;
我的 python 项目使用了 &lt;code class=&#34;verbatim&#34;&gt;virtualenv&lt;/code&gt; ，会在项目目录下面建一个 &lt;code class=&#34;verbatim&#34;&gt;.venv&lt;/code&gt; 的目录，把虚拟环境放进去。 &lt;code class=&#34;verbatim&#34;&gt;anaconda-mode&lt;/code&gt; 提供了 &lt;code class=&#34;verbatim&#34;&gt;pythonic-activate&lt;/code&gt; 命令， &lt;code class=&#34;verbatim&#34;&gt;elpy&lt;/code&gt; 提供了 &lt;code class=&#34;verbatim&#34;&gt;pyvenv-activate&lt;/code&gt; 来切换环境。但是每次打开项目都需要搞一下就挺恶心了。
&lt;/p&gt;
&lt;p&gt;
然后找到了 &lt;a href=&#34;https://github.com/marcwebbie/auto-virtualenv&#34;&gt;auto-virtualenv&lt;/a&gt; 这个工具。安装之后，他会自动查找你的项目里面的可能的虚拟环境。项目根目录识别是通过 &lt;code class=&#34;verbatim&#34;&gt;.git&lt;/code&gt; ， &lt;code class=&#34;verbatim&#34;&gt;.hg&lt;/code&gt; 等一些逻辑来判定的，具体可以看代码。然后虚拟环境识别是通过根目录下面的 &lt;code class=&#34;verbatim&#34;&gt;.python-version&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;.venv&lt;/code&gt; 等来识别的。
&lt;/p&gt;
&lt;p&gt;
我的项目是建了一个 &lt;code class=&#34;verbatim&#34;&gt;.venv&lt;/code&gt; 目录，所以每次打开一个 python 文件，会自动配置好 virtualenv 的环境，这样 &lt;code class=&#34;verbatim&#34;&gt;elpy&lt;/code&gt; 在 django 自带的 model 上面也可以查找 defination。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;(use-package auto-virtualenv
  :ensure t
  :config
  (add-hook &amp;#39;python-mode-hook &amp;#39;auto-virtualenv-set-virtualenv)
)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
elpy
&lt;/h2&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;elpy&lt;/code&gt; 其实没有什么好配置的，主要注意的是，因为我们用了 virtualenv 环境，所以需要他依赖的包都装在 &lt;code class=&#34;verbatim&#34;&gt;.venv&lt;/code&gt; 环境或者装在 python 自己的目录下面应该都可以。启动 emacs 之后可以使用 &lt;code class=&#34;verbatim&#34;&gt;M-x elpy-config&lt;/code&gt; 看看还有什么没配置好。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;(use-package elpy
  :ensure t
  :init
  (setq elpy-rpc-backend &amp;#34;jedi&amp;#34;)
  (elpy-enable)
  :config
  (add-hook &amp;#39;python-mode-hook &amp;#39;elpy-mode)
  (with-eval-after-load &amp;#39;elpy
  (add-hook &amp;#39;elpy-mode-hook &amp;#39;elpy-use-ipython))
  :bind ((&amp;#34;M-*&amp;#34; . pop-tag-mark))
  )&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;elpy-rpc-backend&lt;/code&gt; 有两个选择，一个 &lt;code class=&#34;verbatim&#34;&gt;jedi&lt;/code&gt; ，一个 &lt;code class=&#34;verbatim&#34;&gt;rope&lt;/code&gt; ，我试了感觉区别不大，另外 rope 感觉要死了。所以我用了 &lt;code class=&#34;verbatim&#34;&gt;jedi&lt;/code&gt; 。
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
flycheck
&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/flycheck/flycheck&#34;&gt;flycheck&lt;/a&gt; 可以配合 &lt;code class=&#34;verbatim&#34;&gt;flake8&lt;/code&gt; 实时显示出来你的代码有不符合 flake8 要求的地方，很方便。这个工具我也遇到一个坑 &lt;a href=&#34;https://github.com/flycheck/flycheck/issues/1228#issuecomment-311706873&#34;&gt;issue&lt;/a&gt;，有兴趣可以看看。主要原因是 flycheck 是使用 &lt;code class=&#34;verbatim&#34;&gt;flake8 &amp;lt; xxx.py&lt;/code&gt; 这种方式检查的，而这种方式下 flake8 不会考虑文件头部的 &lt;code class=&#34;verbatim&#34;&gt;coding&lt;/code&gt; 设置，来识别文件编码，而是根据 &lt;code class=&#34;verbatim&#34;&gt;LC_CTYPE&lt;/code&gt; 环境变量来的，所以只要正确设置这个变量就可以了。 issue 里面提到的设置 emacs 的编码屁用么有的。
&lt;/p&gt;
&lt;p&gt;
flycheck 可以配合 flake8 和 pylint 来做 python 代码的检查，如果装了前者，就不会考虑后者了。我试过 pylint，这货默认要求有点高，比如 class 和 method 没有 doc string 也会提示，代码一堆问题，我就赶紧换掉了。。。
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
python outline
&lt;/h2&gt;
&lt;p&gt;
好处是打开 python 文件的时候，会把代码都折叠起来，按照需要你自己打开就好。elpa 里面没有，网上搜到的。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;(use-package python-magic
  :ensure outline-magic
  :config
  (add-hook &amp;#39;python-mode-hook &amp;#39;my-python-outline-hook)
  (add-hook &amp;#39;python-mode-hook
            (lambda ()
              (setq outline-regexp &amp;#34;def\\|class &amp;#34;)))

  )&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
indent-tools
&lt;/h2&gt;
&lt;p&gt;
这个工具是用来锁进 python 代码和浏览代码用的。搜一下有动图，看看就知道了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;(use-package indent-tools
  :ensure t
  :init
  (add-hook &amp;#39;python-mode-hook
            (lambda () (define-key python-mode-map (kbd &amp;#34;C-c i&amp;#34;) &amp;#39;indent-tools-hydra/body))
            )
  )&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
yasnippet 和 company
&lt;/h2&gt;
&lt;p&gt;
elpy 是使用这两个补全的。有几个有用的配置， &lt;code class=&#34;verbatim&#34;&gt;C-s&lt;/code&gt; 那个，可以在补全候选菜单出来的时候，用关键词过滤结果。
&lt;/p&gt;
&lt;p&gt;
我没搞定在 company 里面直接显示出来 yasnippet 可用的 snippet，只好设置了一个快捷键 &lt;code class=&#34;verbatim&#34;&gt;C-c y&lt;/code&gt; 来提示。可以提示出来一大堆。比如我经常写错的 &lt;code class=&#34;verbatim&#34;&gt;-*- coding:utf8 -*-&lt;/code&gt; 有一个 snippet 叫做 &lt;code class=&#34;verbatim&#34;&gt;utf8&lt;/code&gt; ，直接输入之后 tab 就可以了。
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;(use-package company
  :ensure t
  :init
  (setq company-minimum-prefix-length 2)
  (setq company-dabbrev-ignore-case t)
  :config
  (add-hook &amp;#39;after-init-hook &amp;#39;global-company-mode)
  (define-key company-active-map (kbd &amp;#34;C-n&amp;#34;) #&amp;#39;company-select-next)
  (define-key company-active-map (kbd &amp;#34;C-p&amp;#34;) #&amp;#39;company-select-previous)
  (define-key company-active-map (kbd &amp;#34;C-s&amp;#34;) #&amp;#39;company-filter-candidates)

  (global-set-key (kbd &amp;#34;C-c y&amp;#34;) &amp;#39;company-yasnippet)
  )&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Run ssserver on VPS</title>
      <link>https://wdicc.com/run-ssserver-on-vps/</link>
      <pubDate>Fri, 09 Jun 2017 10:55:44 +0800</pubDate>
      
      <guid>https://wdicc.com/run-ssserver-on-vps/</guid>
      <description>&lt;p&gt;
VPS 上面好早以前用过 docker 跑了一个 container 运行了一个 ssserver, 是从 debian 基本系统创建, 然后手动安装各种软件弄好的. 最近朋友升级了 docker, 那个工作有点问题了,就重新搞了一下, 发现现在好方便.
&lt;/p&gt;
&lt;p&gt;
我用的是这里提供的 dockerfile &lt;a href=&#34;https://github.com/EasyPi/docker-shadowsocks-libev,&#34;&gt;https://github.com/EasyPi/docker-shadowsocks-libev,&lt;/a&gt; 他的例子里面使用了 &lt;code class=&#34;verbatim&#34;&gt;docker-compose&lt;/code&gt; 来创建, 发现很简单, 不过遇到了一个问题, 说一下解决办法.
&lt;/p&gt;
&lt;p&gt;
这个 docker 本地监听的端口是固定的 8388 不能修改, 例如 docker-compose.yml 里面
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;server:
  image: easypi/shadowsocks-libev
  container_name: wd-ss
  ports:
    - &amp;#34;HOST_PORT:8388/tcp&amp;#34;
    - &amp;#34;HOST_PORT:8388/udp&amp;#34;
  environment:
    - METHOD=aes-256-cfb
    - PASSWORD=5ouMnqPyzseL
  restart: always&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
需要配置的是 &lt;code class=&#34;verbatim&#34;&gt;HOST_PORT&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;METHOD&lt;/code&gt; &lt;code class=&#34;verbatim&#34;&gt;PASSWORD&lt;/code&gt; 这三个变量, 然后我还指定了 &lt;code class=&#34;verbatim&#34;&gt;container_name&lt;/code&gt; 方便以后的操作, 不指定会自动产生一个.
&lt;/p&gt;
&lt;p&gt;
启动服务之后,可以使用 &lt;code class=&#34;verbatim&#34;&gt;docker logs wd-ss&lt;/code&gt; 来看 log, 类似于下面, 这个 docker 启用了 udp relay 和 tcp fast open, 差不多也就够了.
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt; 2017-06-09 03:13:17 INFO: using tcp fast open
 2017-06-09 03:13:17 INFO: UDP relay enabled
 2017-06-09 03:13:17 INFO: initializing ciphers... aes-256-cfb
 2017-06-09 03:13:17 INFO: using nameserver: 8.8.8.8
 2017-06-09 03:13:17 INFO: tcp server listening at 0.0.0.0:8388
 2017-06-09 03:13:17 INFO: udp server listening at 0.0.0.0:8388
 2017-06-09 03:13:17 INFO: running from root user&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
如果想要开启更多选项, 可以在 compose 文件里面使用 command 自定义启动命令
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;  command:
    ss-server -s 0.0.0.0
              -p 8338
              -k 5C4D5403-31C9
              -m aes-256-cfb
              -t 30
              --fast-open
              -u
              -a nobody&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
自己实验过程中, 如果可以随时删除自己的 container 重建, 将来 ss 升级的话, 只需要把 image 更新一下,然后删除再新建一下 container 就好了.用起来还是相当简单方便的.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Meetings and meetings</title>
      <link>https://wdicc.com/meetings-and-meetings/</link>
      <pubDate>Sat, 08 Apr 2017 15:16:49 +0800</pubDate>
      
      <guid>https://wdicc.com/meetings-and-meetings/</guid>
      <description>&lt;p&gt;
前几天&lt;a href=&#34;https://haohailong.net/&#34;&gt;海龙&lt;/a&gt; 在 twitter 的提了一个问题“这个世界上有喜欢开会的人吗？能和我说说理由吗？”。作为开了很多会的人，由不住想说两句。
&lt;/p&gt;
&lt;p&gt;
首先，高质量的会应该具备什么呢？我也没看过《罗伯特议事规则》这样的书（放在 kindle 里面好久了一直没看过，汗颜。。），就是自己按照自己参与的情况总结下：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
会议前必要的沟通，好确认是不是需要你参加。当然也有一定可能性组织会议的人确认需要你参加而不做沟通（当然也不排除判断错误的时候 QAQ）。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
组织会议的人做好前期调研，会议讨论的一些相关方案的基本情况应该需要比较了解。避免好容易召集齐人之后，发现要讨论的内容本身自己互相矛盾，或者需要参会的人没有通知等情况。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
邮件通知与会人会议要沟通的内容，和希望达成的目标，让大家提前了解事情的原委。也给大家一个机会提前确认下是不是真的和自己有关系。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
有了希望达成的目标，就应该会比较明确具体需要谁参与，比如想要一个明确的决定的时候，却约一个不能拍板的人来，这会议注定不能成功。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
会议中有可以控制会议节奏的人主持。能适时的阻止一些无关话题，扯皮，控制会议节奏，避免开大长会和会上吵架。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
会议中有人记录会议记录，结束后有人会把会议记录和结论(这个很重要，没有结论的会就是没必要开的会)发给所有人。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
下面列几个我作为技术人员常见的一些烂会。
&lt;/p&gt;
&lt;p&gt;
产品总监派一个刚入职几天业务都没摸清的人召集一帮干了好几年的工程师开会。这种情况下，产品经理大概率会被工程师各种怼，因为他不可能真的熟悉产品，工程师提到的很多可能的问题都不太可能圆满回答，最后会发现要讨论的问题各种依赖性，A 功能不确定的情况下，B 功能可能直接就不存在而没必要讨论了。最后会导致会议非常低效。这个时候所有人都会不爽，技术工程师会认为浪费他的时间，产品经理会认为这些人好难配合。其实锅应该是在产品总监头上。
&lt;/p&gt;
&lt;p&gt;
跨部门的会议。很多时候莫名其妙就招呼你去开会，到了之后也不知道是讨论什么的，最后听半天发现貌似和自己一毛钱关系都没有，浪费几个小时。当然浪费的是你的时间，组织会议的人其实是有收获的，他明白这事情和你无关。
&lt;/p&gt;
&lt;p&gt;
头脑风暴会议当作需求讨论会来开。有时候对方可能根本没有明确的想法，你当成最终需求讨论半天指出来其中各种问题，最后发现其实他们根本就确定怎么做呢。这种情况其实就是那个网传的“产品经理找你聊一天，他的需求有了，你的程序还没写”的情况。毕竟需求会的优先级会比头脑风暴要稍微高一点。
&lt;/p&gt;
&lt;p&gt;
如果作为组织者，就是尽量做到前面提到的好的会议应该具备的条件，避免浪费别人时间。作为参与者，如果有能力，遇到有问题的会议，应该想办法协助会议组织者把会议变高效，提高效率的同时，自己也会节省不必要的时间，我经常这么干，毕竟年轻人不容易。。。。当然，我有时候不一定那么有耐心，遇到垃圾会有时候直接就走了，留他们继续浪费时间。
&lt;/p&gt;
&lt;p&gt;
再回到海龙的问题，我的回答是有些人为了合理的浪费时间，是会喜欢开会的，因为这样会让别人觉得他的时间安排很充实，因为整天不在座位，在忙。不知道各位开会的时候有没有遇到一些人全部时间都是在刷手机，只是偶尔说一两句话？这些人就是我说的这种人。我如果遇到我没兴趣的会或者和我无关的会议，我会直接和组织的人申请离开，如果确实后面和我有关系，那麻烦到了时间点叫我（当然你也得保证下到时可以随叫随到，避免浪费其他参会人的时间等你），当然，呃…… 如果我碰巧也想合理的浪费一下时间。。。。
&lt;/p&gt;
&lt;p&gt;
这些人一般都需要是 leader，至少有人在给他创造 GDP 的，否则一个手头很多工作要干的人，你让他开这种无意义的会他自己也不答应，否则其他工作完不成无法交代的。不过某种意义上讲，这些人也是有贡献的，至少能组织一些人贡献 GDP 就是贡献。
&lt;/p&gt;
&lt;p&gt;
感觉跨职业跨部门的会比较容易产生垃圾会，因为看问题角度不一样，有时候会比较难互相理解。我们技术人员很多时候开会，都是找一块白板，画几个图，大家就都明白了，很快就能出决议，不能定的一般可能是需要 leader 拍板的。
&lt;/p&gt;
&lt;p&gt;
同一个部门的会大家会接触比较多比较容易妥协，能接受自己多花点时间或者吃点小亏来完成一个事情。这其实也是所谓的拓展，团队活动，年会想要达到的目的，如果大家都很熟悉的情况下，就比较容易站在对方的角度想问题，遇到事情容易妥协。
&lt;/p&gt;
&lt;p&gt;
上面提到的这些问题其实越大的公司问题越多，反而小公司比较少，因为头绪少，并且大家都比较熟悉的缘故。当然实在遇到一个比较弱的会议组织者，烂会也不可避免。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Something about cruise tour</title>
      <link>https://wdicc.com/something-about-cruise-tour/</link>
      <pubDate>Mon, 20 Mar 2017 20:41:10 +0800</pubDate>
      
      <guid>https://wdicc.com/something-about-cruise-tour/</guid>
      <description>
&lt;p&gt;
之前知道邮轮游一直没有体验过，据说是在上面各种滚来滚去看书，因为手机没有信号，没有网络。前几天体验了一把，总结一下。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
一句话总结
&lt;/h1&gt;
&lt;p&gt;
这上面有你讨厌的所有因素，大妈，广场舞，广场卡拉 ok，小孩子，无序，占座，插队，甚至最后一天还目睹了两起吵架。
&lt;/p&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
邮轮游玩什么
&lt;/h1&gt;
&lt;p&gt;
我参加的是歌诗达幸运号（Costa Fortun），邮轮上面估计 80% 都是各种大爷大妈，带着女儿外孙。你可以想象一下，平时最不喜欢的组合在这里最全了。
&lt;/p&gt;
&lt;p&gt;
邮轮上面有免费的自助餐和一些特别的餐食，比如批萨，面条，猪排什么的。也有收费的餐食，当然你可以不去。酒和软饮都是收费的，开饭的时候有免费的白水给你喝，屋子里面是没有的。
&lt;/p&gt;
&lt;p&gt;
邮轮上面一般有大量的娱乐设施，比如赌场，游戏机，泳池，桑拿，剧场等。还定期有各种娱乐活动，比如猜个字啊，跳个舞什么的。所以第一次去还是可以看个新鲜的，尤其可能还有一些漂亮的陪玩 mm，看着也还可以。游戏机赌场是收费的，恩。
&lt;/p&gt;
&lt;p&gt;
此外剧场每天基本都会有一场大型的演出，30-40 分钟，可以让你打发时间。但是剧场虽然每天演出内容不一样，但是演员总是那一波，看多了其实也会腻味。
&lt;/p&gt;
&lt;p&gt;
房间里面也有电视，不过我观察电视都是反复重播录下来的一些电视，然后有一个电影台还是只有那么几部反复重复播放，《x man 天启》我看了不下 10 遍。
&lt;/p&gt;
&lt;p&gt;
小孩也有人给带着玩游戏，有专门的儿童俱乐部。还有健身房，健身房是我唯一对这次邮轮活动满意的地方，当然肯定不是对环境满意，毕竟里面充满了大爷大妈，满意的地方主要是在设备，设备真心不错。浴室和换衣间地板异常干净，比起我家楼下的奥力，简直天上地下。
&lt;/p&gt;
&lt;p&gt;
邮轮一般有那么1，2天是下船，我们这次的安排很屎，景点很无聊，低接导游也只是对购物有兴趣，购物店虽然不贵，但是东西比较少，挺没意思的。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
让人反感的几个瞬间
&lt;/h1&gt;
&lt;p&gt;
排队上邮轮的时候，过安检的时候就一条队排的特别粗，到了最后那变细互相挤着往前走。我们后面有个阿姨就各种急着往你前面走，我老婆发现之后就故意挤着不让，我看的笑死，呵呵。
&lt;/p&gt;
&lt;p&gt;
第一天必须做逃生演习。有个大爷一家推着小车带着孩子，孩子可能没一会睡着了。而演习是需要所有人参加的，所以就不得不等比较慢的人。大爷就生气了，开始呵斥工作人员，「孩子都睡着了，啥时候开始」之类的，声音巨大。工作人员大都是外籍，估计也吓了一跳。最后结束的时候，大爷还过去指着那个工作人员不知道说了什么。
&lt;/p&gt;
&lt;p&gt;
剧院演出，基本前三四排上面都是东西占座的。除非你提前半个小时到。另外就是各种小孩大声说话也没人管。有时候酒吧做游戏，工作人员都明确说了游戏可能比较激烈，让大家把小孩弄走，但是看着一个女的抱着小孩几次被劝离之后还是要上去玩，貌似还是上去让小孩参与。
&lt;/p&gt;
&lt;p&gt;
昨天有个游戏，几个被淘汰的大妈，悄悄的跑回去继续参与，也有跑回去被发现之后赶走，再次跑回去的，当着一百来号人目睹就那么做，真的无语。
&lt;/p&gt;
&lt;p&gt;
今天下船之前大家集中在一个地方等着，有个姥爷带着孙女玩气球。有个哥们玩心重，带了个面具就冲那小孩过去了，小孩吓的赶紧跑到了姥爷后面，那个哥们就走了。过了半分钟小孩反映过来开始哭，那姥爷就开始不爽了。后来他们全家，追着那小伙骂，最后把面具也抢过来了，还要护照说要以后有啥毛病要找他。纠缠了能有10分钟。
&lt;/p&gt;
&lt;p&gt;
这只是记得起来的几个，反正年轻人真的不建议去邮轮了。如果是自己父母，倒是可以推荐去，他们应该喜欢。
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My way to keep fit</title>
      <link>https://wdicc.com/my-way-to-keep-fit/</link>
      <pubDate>Mon, 13 Mar 2017 15:19:30 +0800</pubDate>
      
      <guid>https://wdicc.com/my-way-to-keep-fit/</guid>
      <description>
&lt;p&gt;
目前第一阶段减肥基本告一段落，后面目标是保持目前体重 6 个月。
&lt;/p&gt;
&lt;h1 id=&#34;headline-1&#34;&gt;
先聊聊结果
&lt;/h1&gt;
&lt;p&gt;
2014 年 9 月份前，我的体重最高到 98kg，甚至有时候超过了 100kg。第一阶段减肥可能截止到 2016 年中，减到体重大概是 92kg。第二阶段开始于 2016 年 2 月底，截止到今天体重 80kg。整体算下来减掉 40 斤。
&lt;/p&gt;
&lt;h1 id=&#34;headline-2&#34;&gt;
第一阶段
&lt;/h1&gt;
&lt;p&gt;
2014 年开始我发现一种比较简单的减肥方法，就是不吃或者少吃晚饭。
&lt;/p&gt;
&lt;p&gt;
这个方法应该不一定对所有人适用。我估计应该只对 BMI(Body Mass Index, 身体质量指数，注意和体脂率不是一个东西)比较高的人有用吧。
&lt;/p&gt;
&lt;p&gt;
我当时 BMI 是 &lt;code&gt;98/1.77^2=31.28&lt;/code&gt; 是属于比较高的，坚持了上面的方法半年之后，大概最瘦的时候是 28，我查了是刚好脱离了肥胖那一档，进入了过重。
&lt;/p&gt;
&lt;p&gt;
我当时所在的公司的上班时间是 10:00 - 19:00，但是经常出现 20:00 以后才从公司走的情况，这样我到家经常是 21:30 或者 22:00 以后。这个时候吃晚饭就太晚了，基本吃饭完了就睡觉了。并且，中午吃饭到这个时候，一般其实已经饿过劲了，那个时间反而没有那么饿了，我就慢慢开始晚上到家之后只吃几个水果。后来慢慢转为不吃东西，或者只吃很少的水果。有时候也会遇到快下班的时候非常饿，这个时候吃点小零食，也就可以了。这种方式减肥，早上和中午基本不控制自己，还是吃的比较好的。
&lt;/p&gt;
&lt;p&gt;
上面说了，这个阶段减掉了大概 10 多斤。中午饮食基本不控制，晚上不吃，或者很少吃（一个月有那么一两次推不开的）。
&lt;/p&gt;
&lt;h1 id=&#34;headline-3&#34;&gt;
第二阶段
&lt;/h1&gt;
&lt;p&gt;
大概是从今年 2 月底从日本回来，开始实施，方法是锻炼加节食。
&lt;/p&gt;
&lt;p&gt;
锻炼的内容是 60 分钟椭圆机（我用的机器难度是 5，不同机器可能不一样），30 分钟运动后拉伸，30 分钟游泳。大概是每周 1，2，4，5 去，一周会休息三天。锻炼毕竟比较枯燥，所以需要中间休息一下调剂一下心情，如果你的体力耐力跟的上，可以不休息。
&lt;/p&gt;
&lt;p&gt;
上面的强度下来，进度大概是一周 3kg。我的情况 3 月 25 是 88.6kg，5 月 2 是 81.7kg，5.5 是 80kg。为什么比较慢呢？在这两个月内，我参加了一趟邮轮游大概一周，去了一趟沈阳，大概一周，还去了一趟日本大概一周。所以如果坚持应该可以更快，但是快速减重我感觉应该可能会有副作用，所以我也基本也是控制减一点，保持几天这样子，不让这个减重太快。另外，这段时间我是全职减肥，所以没有工作上面的压力，可能速度相对快一点。
&lt;/p&gt;
&lt;h1 id=&#34;headline-4&#34;&gt;
方法细节
&lt;/h1&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
MHR
&lt;/h2&gt;
&lt;p&gt;
按照一些理论，在有氧运动一定时间 T 之后，保持一定的心率 HR 继续运动，就会开始消耗脂肪。所谓的 &lt;a href=&#34;https://www.douban.com/note/228079030/&#34;&gt;fat burning zone&lt;/a&gt; (搜索到的，仅供参考)。
&lt;/p&gt;
&lt;p&gt;
对于 T，我看有的说是 20 分钟，有的是 40 分钟。我一般的做法是持续运动 40-50 分钟，不超过一小时。
&lt;/p&gt;
&lt;p&gt;
对于心率，先看下面的公式
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;MHR(最大心率) = 220 - age
MHR = 206 - (0.88 x age)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
上面是最大心率，有多种算法最后应该结果大致有个范围，然后你的减脂的 HR 范围就是 &lt;code class=&#34;verbatim&#34;&gt;MHR x (0.7 到 0.8)&lt;/code&gt; 之间。我算出来我的是大概 130-145.
&lt;/p&gt;
&lt;p&gt;
所以注意并不是越累越好，比如天天跑 5km 还追求速度，那个思路不对，那个不是减肥。只要心率到了加持续时间够长。，不管做什么都减肥。
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
节食
&lt;/h2&gt;
&lt;p&gt;
如果想要减脂，必须要节食，并且节食之后，我发现不运动体重也会降，直到降到一个平衡点。
&lt;/p&gt;
&lt;p&gt;
节食并不是一下子就从原来中午晚上吃两碗米饭变成只吃一个苹果，这个也是应该有个循序渐进的过程，要不不说身体是否能接受，你自己就坚持不下来。
&lt;/p&gt;
&lt;p&gt;
我的建议是，逐步减少饭量，花 1-2 个月来完成这个过程，一定要给自己定一个什么时间点达到什么目标的方案，否则面对一个自己都觉得无法达到的目标，也会容易被各种诱惑吸引，然后放弃。
&lt;/p&gt;
&lt;p&gt;
节食期间，并非就一直得是清淡饮食，偶尔吃一次大餐也不是不行，但是最好安排在中午，并且吃了之后第二天早餐午餐一定要减少量。另外注意是「偶尔」，千万别当成常态。
&lt;/p&gt;
&lt;p&gt;
此外，也得注意要按时吃饭，节食本身就很痛苦了，如果不能按时吃饭，比如过了平时饭点再吃，容易吃多，影响节食效果。
&lt;/p&gt;
&lt;p&gt;
我自己的方案，如果今天上午不出门，那就最多喝一杯牛奶做早餐。如果要出门，可以接受大概半个馒头那么多的饮食量。中午也类似，如果不出门就少吃，如果要出门，可以适当比平时多一点点，避免晚上的时候很难熬，或者路上出现低血糖。
&lt;/p&gt;
&lt;p&gt;
我自己控制的结果，是在中午大概3点一顿自助餐的基础上，晚上6点又有不能推掉的酒局的情况下，中午一杯啤酒，晚上一杯红酒，然后第二天重量维持不变。自己感觉还是挺有成就感的，当然也很痛苦。
&lt;/p&gt;
&lt;p&gt;
我目前体重还没有到平台期，还不清楚节食结束之后反弹的情况，但是我自己的打算是平台期或者达到我的目标体重之后，我再继续维持低饮食量一段时间巩固下，把自己的饮食习惯培养好，不再能暴饮暴食的情况下，应该是可以适当放开饮食的。
&lt;/p&gt;
&lt;p&gt;
总结下：
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
节食要循序渐进，不要一次就到位，食量可以比如每周减 1/4 的节奏安排。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
设定自己的目标，一阶段一阶段完成，不要一次设定一个看着无法做到的目标
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
饮食要准时定量，实在受不了的时候，可以允许自己来一次暴食（不要暴饮，尤其是甜的饮料，酒等），但要注意控制次数
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
毅力坚持很重要。我节食期间参加各种自助餐，火锅，聚餐等都能很好的控制自己的食欲。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
关于低血糖，特别讲一下，节食非常容易产生低血糖，建议按照自己的体力，健身之前最好吃一口东西（不要多），或者随身携带一些吃的，一旦感觉低血糖头晕，就补充一点。别产生什么危险。
&lt;/p&gt;
&lt;p&gt;
低血糖的时候，也会影响你做事情的效率，会发现什么事情都不想做，所以这个时候最好就吃点吧，不过要注意是这也是有控制的吃。
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
跑步机 vs 椭圆机 vs 动感单车
&lt;/h2&gt;
&lt;p&gt;
我自己家里买了一台动感单车，实际实践过之后，用这个有几个缺陷
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
自己练没有动感。在操课房里面教练会带着不停的变换速度，动作，一方面让你觉得没那么无聊，另一方面也是能增加运动量。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
自己练容易损坏脚踝和膝盖。我自己在家练的时候，基本就是站上面运动 30+ 分钟，脚一直在单车上面脚尖踩着，练完之后脚会疼痛。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
我其实挺喜欢在外面跑步，尤其早上，但是因为体重大，好几次都是跑一周之后双腿膝盖会开始疼痛，只好作罢。健身房里面的跑步机冲击比路面跑步小，可以试试看。
&lt;/p&gt;
&lt;p&gt;
最近尝试了跑步机上面跑，坚持 2 周之后，还是出现了一只腿的膝盖疼痛，只好暂停。开始尝试椭圆机。
&lt;/p&gt;
&lt;p&gt;
跑步机上面跑强度比椭圆机肯定强很多，跑步机上面在一个不快的速度下面，我持续跑 15 分钟之后，心率就会达到 150，其实已经有点高了。
&lt;/p&gt;
&lt;p&gt;
跑步机的几个问题
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
容易心率过快
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不方便听音乐看片子分散注意力
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
不容易不间断坚持跑 30 - 40 分钟
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
膝盖损伤
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
最后发现椭圆机实在是很不错
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
运动速度慢，不妨碍你看片子听音乐(这个非常重要，否则坚持50分钟很难)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
速度恒定，也就是心率恒定，你只需要选择一个适合你的减脂的心率的难度就可以了
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
对膝盖冲击比较小
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
我用实际使用的就是椭圆机 Elliptical Trainer。一次 60 分钟，控制心率在 140 左右。高了就换近一点的把手，低了就换远一点的。
&lt;/p&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
运动后拉伸
&lt;/h2&gt;
&lt;p&gt;
这个一定要做，可以参考 keep 这个 app 里面的一些教程做，另外就是自己看着健身房的设备练练。注意设定好节奏，比如一组 10 次，做 3 组。
&lt;/p&gt;
&lt;p&gt;
这个是拉伸，不是力量训练，所以不需要挑战自己的极限。控制好设备的重量。
&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
饮食注意
&lt;/h2&gt;
&lt;p&gt;
我本身血压高，所以需要低盐。然后减脂的话，一般的讲法是不要吃或者少吃和糖类有关系的食物，比如糖，西瓜这些，以及很容易转换为糖类的食物，比如谷物，大米这些。可以吃肉类（瘦肉或者白肉，比如鸡肉鱼肉）。
&lt;/p&gt;
&lt;p&gt;
我以前基本没炒过青菜，这次发现光是做到不难吃的话，其实很简单。
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
不用水煮直接凉拌：黄瓜，西红柿等，莴笋
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
白水煮了就能接受的：西兰花，菜花
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
水煮之后过油炒一下加点盐或者酱油的：油菜，蘑菇，小白菜，菠菜
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
直接过油炒一下加盐或者酱油：芹菜
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
之前看了一本书，里面讲到几个低盐的方法，就是比如放入火腿肠等本身自带咸味的食材，或者往酸的方向走。对于凉拌菜，可以适当考虑加一点醋，发现还挺不错的。
&lt;/p&gt;
&lt;p&gt;
有上面这几招，应该可以让你短时间不会吃腻了。我中午基本就是吃一盘青菜，不吃主食。
&lt;/p&gt;
&lt;h1 id=&#34;headline-10&#34;&gt;
Update
&lt;/h1&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
2017.6.9
&lt;/h2&gt;
&lt;p&gt;
更新一下, 从停止运动到现在已经大概一个多月了, 之前最低到了 78kg. 这一个月发现如果还按照之前的食量, 体重还会降. 但是我不打算继续让它降的, 所以也开始提升食量.
&lt;/p&gt;
&lt;p&gt;
最近两周我还出去国内玩了一趟, 吃饭吃的也挺多的, 时间也不固定, 到了当地还会尝试喝当地的一些米酒啤酒之类的, 到今天早上称重是 79kg. 感觉还可以.
&lt;/p&gt;
&lt;h2 id=&#34;headline-12&#34;&gt;
2017.6.30
&lt;/h2&gt;
&lt;p&gt;
再次更新一下，目前体重 77kg。目前吃喝的内容基本已经不需要太注意了，只是有意不要多吃，也避免吃谷物类。不过我也吃过几次米饭，面条，大饼什么的，目前体重还是保持住了。
&lt;/p&gt;
&lt;h2 id=&#34;headline-13&#34;&gt;
2017.11.26
&lt;/h2&gt;
&lt;p&gt;
目前又开始尝试减体重。因为发现工作的时候确实不是很好减，毕竟饿了的话工作都不能专心。上周我尝试吃了一周的 711 沙拉和水果，貌似这几天早上称重到了 74.8，低于了 75 了都，感觉也是有效果的，还在尝试。
&lt;/p&gt;
&lt;h2 id=&#34;headline-14&#34;&gt;
2018.9.26
&lt;/h2&gt;
&lt;p&gt;
我目前发现很关键的点是需要节食，那节食的方法要注意下面几个
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
尽量不要在外面吃，因为不好定量。除非你只去常去的，只吃自己清楚可以定量的。另外外面吃还有一个问题是高油盐问题。所以还是不建议。
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
分散自己的注意力。一旦饿了，有时候抓耳挠腮就是想吃点东西怎么办？找自己感兴趣的游戏，打游戏，或者做其它自己感兴趣的事情，分散注意力。我的经验，饿几天身体就会开始习惯，再到那个时间就不会那么饿了。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Use org mode to publish blog</title>
      <link>https://wdicc.com/use-org-mode-to-publish-blog/</link>
      <pubDate>Sun, 12 Mar 2017 08:59:19 +0800</pubDate>
      
      <guid>https://wdicc.com/use-org-mode-to-publish-blog/</guid>
      <description>
&lt;p&gt;
a test
&lt;/p&gt;
&lt;p&gt;
啊哈哈哈哈，超棒唉。markdown 里面写代码都没有高亮，org 里面是可以把代码部分高亮的。
效果可以看 &lt;a href=&#34;https://goo.gl/photos/E8p1WX34rfAQn31v9&#34;&gt;这里&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Title1
&lt;/h2&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
title2
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
list1
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
list2
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
list3
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;sys&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;Hugo&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;object&lt;/span&gt;):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;pass&lt;/span&gt;

hugo &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; Hugo()
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(hugo)
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;just a test&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Migrate blog to hugo</title>
      <link>https://wdicc.com/migrate-blog-to-hugo/</link>
      <pubDate>Sat, 11 Mar 2017 16:29:40 +0800</pubDate>
      
      <guid>https://wdicc.com/migrate-blog-to-hugo/</guid>
      <description>&lt;p&gt;折腾了好几天，把 blog 从 hexo 迁移到了 &lt;a href=&#34;http://gohugo.io/&#34;&gt;hugo&lt;/a&gt; 上面。hexo 是使用 nodejs 写出来的，hugo 是使用的 go。主要基于下面几个原因吧。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;个人不太喜欢 nodejs 那一坨依赖。&lt;/li&gt;
&lt;li&gt;hugo 也比 nodejs 速度快很多。&lt;/li&gt;
&lt;li&gt;hugo 用起来比较简洁。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;首先写了一个迁移工具 &lt;a href=&#34;https://github.com/wd/hexo2hugo&#34;&gt;hexo2hugo&lt;/a&gt;。网上还有一个 nodejs 版本的&lt;a href=&#34;http://nodejh.com/post/Migrate-to-Hugo-from-Hexo/&#34;&gt;迁移工具&lt;/a&gt;可以参考。其实就是简单的把头部信息处理一下就可以。我还有一些特殊需求，比如把老早以前的一些 html 格式的文档顺道处理一下格式，还有一些小的修正和兼容工作，所以自己写了一个。另外也主要是好久没有写代码了，熟悉下。。&lt;/p&gt;

&lt;p&gt;把文档迁移过去之后，找了几个主题看了一下，发现没有很喜欢的，就本着蛋疼的原则，把原来用的主题也&lt;a href=&#34;https://github.com/wd/hugo-fabric&#34;&gt;迁移过来了&lt;/a&gt;，这个花的时间比较长一点。主要还得熟悉 hugo 的模板语法，还得想办法适配 hugo 的体系。比如 hugo 里面没有 archive 一说，不过通过万能的 google 搜索到了一个解决办法，也勉强还好。&lt;/p&gt;

&lt;p&gt;目前这个 blog 已经是由 hugo 产生了，和以前外观，访问地址完全一模一样，rss 地址都一样。我测试了 google 里面的搜索结果，是都可以跳转的。今天算是基本都迁移完毕了。&lt;/p&gt;

&lt;p&gt;这几天没事也总想记录一点想法，但是无奈新本子上面的 hexo 挂了，又不想搞 nodejs 那一坨依赖，就折腾了这个事情。不过折腾完毕之后发现想记录的事情都忘记了，nnd。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade kernel to 4.9 for linode</title>
      <link>https://wdicc.com/upgrade-kernel-to-4-9-for-linode/</link>
      <pubDate>Mon, 16 Jan 2017 18:37:56 +0800</pubDate>
      
      <guid>https://wdicc.com/upgrade-kernel-to-4-9-for-linode/</guid>
      <description>&lt;p&gt;bbr 那么牛逼，赶紧赶一个潮流。其实我之前用了 kcp，也是类似的东西，不过那个要求服务器端和客户端都需要跑 kcp 服务才可以。bbr 就不用了，只需要服务器配置好就可以了。&lt;/p&gt;

&lt;p&gt;Linode 实际上已经提供了 4.9 的内核。打开 &lt;code&gt;Dashboard&lt;/code&gt;，然后点击你使用的 profile 右侧的 edit，在出来的界面里面，Kernel 右侧的列表里面，有个 4.9 的选项，不过我测试这个内核并不能打开 bbr，不知道是怎么回事，有兴趣的可以试试看，要注意选对架构（就是 64 还是 32）。&lt;/p&gt;

&lt;p&gt;所以还是需要自己装内核。debian 官方已经打包好了 kernel 4.9，访问 &lt;a href=&#34;http://mirrors.kernel.org/debian/pool/main/l/linux/&#34;&gt;http://mirrors.kernel.org/debian/pool/main/l/linux/&lt;/a&gt; ，然后找到适合自己的 linux-image-4.9，我的是 &lt;a href=&#34;http://mirrors.kernel.org/debian/pool/main/l/linux/linux-image-4.9.0-1-amd64-unsigned_4.9.2-2_amd64.deb&#34;&gt;http://mirrors.kernel.org/debian/pool/main/l/linux/linux-image-4.9.0-1-amd64-unsigned_4.9.2-2_amd64.deb&lt;/a&gt; ，下载到 vps 上面。&lt;/p&gt;

&lt;p&gt;然后执行 &lt;code&gt;sudo dkpg -i ./linux-image-4.9.0-1-amd64-unsigned_4.9.2-2_amd64.deb&lt;/code&gt;，最后应该会提示一个错误，缺少依赖的包。这个时候执行 &lt;code&gt;sudo apt-get -f install&lt;/code&gt;，会提示安装缺失的包。&lt;/p&gt;

&lt;p&gt;然后，还需要安装 &lt;code&gt;grub&lt;/code&gt;。看你的情况。就刚才 profile 编辑的页面里面，kernel 右侧的选项里面，你看看你的是 &lt;code&gt;grub2&lt;/code&gt; 还是 &lt;code&gt;pv-grub&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;grub2&lt;/code&gt;: 参考&lt;a href=&#34;https://www.linode.com/docs/tools-reference/custom-kernels-distros/run-a-distribution-supplied-kernel-with-kvm&#34;&gt;这个&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ sudo apt-get install grub2
$ sudo update-grub&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;pv-grub&lt;/code&gt;: 参考&lt;a href=&#34;https://www.linode.com/docs/tools-reference/custom-kernels-distros/run-a-distributionsupplied-kernel-with-pvgrub&#34;&gt;这个&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ sudo apt-get install grub
$ sudo mkdir /boot/grub
$ sudo update-grub&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后在 profile 编辑页面里面，kernel 右侧选择对应的 grub 选项，重启 vps 就可以了。如果启动失败了，就在这个选项里面，选择之前的选项重启就可以恢复。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python __new__</title>
      <link>https://wdicc.com/python-new/</link>
      <pubDate>Mon, 16 Jan 2017 15:47:59 +0800</pubDate>
      
      <guid>https://wdicc.com/python-new/</guid>
      <description>&lt;p&gt;翻译一点 &lt;a href=&#34;https://www.python.org/download/releases/2.2/descrintro/#__new__&#34;&gt;https://www.python.org/download/releases/2.2/descrintro/#__new__&lt;/a&gt; 有些感觉还是挺生硬的，方便自己理解吧。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;__new__&lt;/code&gt; 的一些规则:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__new__&lt;/code&gt; 是一个静态方法。定义它的时候并不需要执行 &lt;code&gt;__new__ = staticmethod(__new__)&lt;/code&gt;，因为它的名字就包含了这个含义（这个对于类构造方法来说是个特殊的函数）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__new__&lt;/code&gt; 的第一个参数，必须是一个类，其余的参数是留给构造方法的。&lt;/li&gt;
&lt;li&gt;覆盖了基类的 &lt;code&gt;__new__&lt;/code&gt; 方法的类有可能会调用基类的 &lt;code&gt;__new__&lt;/code&gt; 方法。传递给基类的 &lt;code&gt;__new__&lt;/code&gt; 方法的第一个参数，应该是覆盖基类的 &lt;code&gt;__new__&lt;/code&gt; 方法的类，而不是基类，如果传递了基类，你得到的将是基类的示例。&lt;/li&gt;
&lt;li&gt;除非你想要按照后面两条描述的方法来使用，否则 &lt;code&gt;__new__&lt;/code&gt; 方法必须要调用基类的 &lt;code&gt;__new__&lt;/code&gt; 方法，这个是创建你的对象的实例的唯一方法。子类的 &lt;code&gt;__new__&lt;/code&gt; 方法可以从两个方面影响产生的实例：传递不同的参数给基类的 &lt;code&gt;__new__&lt;/code&gt;，以及修改基类产生的对象（例如初始化一些实例变量）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__new__&lt;/code&gt; 方法必须返回一个对象。并不一定必须返回一个新的对象，虽然通常都那么做。如果你返回一个已经存在的对象，依然会有对于 &lt;code&gt;__init__&lt;/code&gt; 构造函数的调用。如果你返回一个其他函数的对象，那个对象的 &lt;code&gt;__init__&lt;/code&gt; 也会被调用。如果忘记返回，python 会给你返回 None，你程序的调用方也许会觉得很奇怪。&lt;/li&gt;
&lt;li&gt;对于不可变对象，&lt;code&gt;__new__&lt;/code&gt; 可以返回一个之前缓存的对象。对于一些比较小的 int, str, tuple 类型就是这么做的。这也是为什么他们的 &lt;code&gt;__init__&lt;/code&gt; 什么都没做：否则之前缓存的对象会被 init 很多次。（另外一个原因是本身页没有东西可以给 &lt;code&gt;__init__&lt;/code&gt; 初始化的了，&lt;code&gt;__new__&lt;/code&gt; 返回的就是一个已经初始化的对象）。&lt;/li&gt;
&lt;li&gt;如果你想要给一个内置的不可变类型增加一些可变的状态（例如给 string 类型增加一个默认的转换方法），最好是在 &lt;code&gt;__init__&lt;/code&gt; 方法里面初始化可变状态，而不要在 &lt;code&gt;__new__&lt;/code&gt; 里面。&lt;/li&gt;
&lt;li&gt;如果你想要修改构造方法的签名，一般需要覆盖 &lt;code&gt;__new__&lt;/code&gt; 和 &lt;code&gt;__init__&lt;/code&gt; 方法来接受心的签名。然而，大部分内置类型都会忽视自己不用的参数，尤其是不可变类型（int，long，float，complex，str，unicode，tuple）都有一个假的 &lt;code&gt;__init__&lt;/code&gt;，而可变类型（dict，list，file，super，classmethod，staticmethd，property）有一个假的 &lt;code&gt;__new__&lt;/code&gt;。内置类型 &lt;code&gt;object&lt;/code&gt; 有假的 &lt;code&gt;__init__&lt;/code&gt; 和 &lt;code&gt;__new__&lt;/code&gt; （给其他对象继承）。内置类型 &lt;code&gt;type&lt;/code&gt; 在很多方面都很特别，请参考 metaclasses。&lt;/li&gt;
&lt;li&gt;（这条和 &lt;code&gt;__new__&lt;/code&gt; 没关系，但是页应该了解一下）如果新建一个 &lt;code&gt;type&lt;/code&gt; 的子类，实例会自动给 &lt;code&gt;__dict__&lt;/code&gt; 和 &lt;code&gt;__weakrefs__&lt;/code&gt; 预留空间（ &lt;code&gt;__dict__&lt;/code&gt; 在你使用前不会初始化，所以你不需要担心创建的所有实例被一个空的字典所占用的空间）。如果不需要这个多余的空间，可以给你的类设置 &lt;code&gt;__slots__ = []&lt;/code&gt;（更多信息可以参考 &lt;code&gt;__slots__&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;Factoid: &lt;code&gt;__new__&lt;/code&gt; 是一个静态方法，不是类方法。我开始的时候觉得他应该是一个类方法，and that&amp;rsquo;s why I added the classmethod primitive。不幸的是，对于一个类方法，在这种情况下面 upcalls 不工作，所以我只好把他设计成一个第一个参数是一个 class 的静态方法。讽刺的是，there are now no known uses for class methods in the Python distribution (other than in the test suite). I might even get rid of classmethod in a future release if no good use for it can be found!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python inherit and super</title>
      <link>https://wdicc.com/python-inherit-and-super/</link>
      <pubDate>Mon, 16 Jan 2017 11:53:04 +0800</pubDate>
      
      <guid>https://wdicc.com/python-inherit-and-super/</guid>
      <description>&lt;p&gt;又学习了一个 python 的继承。有很多帖子都有介绍，比如&lt;a href=&#34;https://laike9m.com/blog/li-jie-python-super,70/&#34;&gt;理解 Python super&lt;/a&gt;，&lt;a href=&#34;http://www.cnblogs.com/lovemo1314/archive/2011/05/03/2035005.html&#34;&gt;python super()&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;先看一个例子，这个是第一个文章里面的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;class Root(object):
    def __init__(self):
        print(&amp;#34;this is Root&amp;#34;)


class B(Root):
    def __init__(self):
        print(&amp;#34;enter B&amp;#34;)
        super(B, self).__init__()
        print(&amp;#34;leave B&amp;#34;)


class C(Root):
    def __init__(self):
        print(&amp;#34;enter C&amp;#34;)
        super(C, self).__init__()
        print(&amp;#34;leave C&amp;#34;)


class D(C):
    def __init__(self):
        print(&amp;#34;enter D&amp;#34;)
        super(D, self).__init__()
        print(&amp;#34;leave D&amp;#34;)


class E(D, B):
    def __init__(self):
        print(&amp;#34;enter E&amp;#34;)
        super(E, self).__init__()
        print(&amp;#34;leave E&amp;#34;)

e = E()
print(e.__class__.mro())

# results:
# enter E
# enter D
# enter C
# enter B
# this is Root
# leave B
# leave C
# leave D
# leave E
# [&amp;lt;class &amp;#39;__main__.E&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.D&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.C&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.B&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.Root&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;object&amp;#39;&amp;gt;]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;没有什么问题，所有的类都做了初始化，很完美。接着再看一个例子，这个例子其实是上面第二篇文章里面的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;class A(object):
    def __init__(self):
        print(&amp;#34;enter A&amp;#34;)
        print(&amp;#34;leave A&amp;#34;)


class B(object):
    def __init__(self):
        print(&amp;#34;enter B&amp;#34;)
        print(&amp;#34;leave B&amp;#34;)


class C(A):
    def __init__(self):
        print(&amp;#34;enter C&amp;#34;)
        super(C, self).__init__()
        print(&amp;#34;leave C&amp;#34;)


class D(A):
    def __init__(self):
        print(&amp;#34;enter D&amp;#34;)
        super(D, self).__init__()
        print(&amp;#34;leave D&amp;#34;)


class E(B, C):
    def __init__(self):
        print(&amp;#34;enter E&amp;#34;)
        super(E, self).__init__()
        print(&amp;#34;leave E&amp;#34;)


class F(E, D):
    def __init__(self):
        print(&amp;#34;enter F&amp;#34;)
        super(F, self).__init__()
        print(&amp;#34;leave F&amp;#34;)


f = F()
print(f.__class__.mro())

# results:
# enter F
# enter E
# enter B
# leave B
# leave E
# leave F
# [&amp;lt;class &amp;#39;__main__.F&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.E&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.B&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.C&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.D&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.A&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;object&amp;#39;&amp;gt;]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;我发现和文章里面贴的结果不一样，里面缺少对 C，D，A 的初始化。琢磨半天才弄明白，主要原因就是，&lt;code&gt;A&lt;/code&gt;，&lt;code&gt;B&lt;/code&gt; 其实也是继承自 &lt;code&gt;object&lt;/code&gt;，然而我们并没有调用 &lt;code&gt;super&lt;/code&gt; 来初始化，所以只需要加上就可以了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;class A(object):
    def __init__(self):
        print(&amp;#34;enter A&amp;#34;)
        super(A, self).__init__()
        print(&amp;#34;leave A&amp;#34;)


class B(object):
    def __init__(self):
        print(&amp;#34;enter B&amp;#34;)
        super(B, self).__init__()
        print(&amp;#34;leave B&amp;#34;)


class C(A):
    def __init__(self):
        print(&amp;#34;enter C&amp;#34;)
        super(C, self).__init__()
        print(&amp;#34;leave C&amp;#34;)


class D(A):
    def __init__(self):
        print(&amp;#34;enter D&amp;#34;)
        super(D, self).__init__()
        print(&amp;#34;leave D&amp;#34;)


class E(B, C):
    def __init__(self):
        print(&amp;#34;enter E&amp;#34;)
        super(E, self).__init__()
        print(&amp;#34;leave E&amp;#34;)


class F(E, D):
    def __init__(self):
        print(&amp;#34;enter F&amp;#34;)
        super(F, self).__init__()
        print(&amp;#34;leave F&amp;#34;)


f = F()
print(f.__class__.mro())

# results:
# enter F
# enter E
# enter B
# enter C
# enter D
# enter A
# leave A
# leave D
# leave C
# leave B
# leave E
# leave F
# [&amp;lt;class &amp;#39;__main__.F&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.E&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.B&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.C&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.D&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;__main__.A&amp;#39;&amp;gt;, &amp;lt;class &amp;#39;object&amp;#39;&amp;gt;]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这样就完美了。目测这个会是一个隐藏的坑。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python metaclass</title>
      <link>https://wdicc.com/python-metaclass/</link>
      <pubDate>Thu, 12 Jan 2017 18:26:22 +0800</pubDate>
      
      <guid>https://wdicc.com/python-metaclass/</guid>
      <description>&lt;p&gt;又理解了一下 python 的 metaclass 可以做什么，尝试记录一下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;class Meta(type):
    register = []

    def __new__(cls, class_name, parrent_class, params):
        print(&amp;#34;In meta new: {}, {}, {}, {}&amp;#34;.format(cls, class_name, parrent_class, params))
        cls.register.append(class_name)
        params[&amp;#39;test_prop&amp;#39;] = True
        # return super(Meta, cls).__new__(cls, class_name, parrent_class, params)
        # return type.__new__(cls, class_name, parrent_class, params)
        # return super(Meta, cls).__new__(type, class_name, parrent_class, params)
        # return type.__new__(type, class_name, parrent_class, params)
        return type(class_name, parrent_class, params)

    def __init__(self, class_name, parrent_class, params):
        print(&amp;#34;In meta init: {}, {}, {}&amp;#34;.format(class_name, parrent_class, params))
        super(Meta, self).__init__(class_name, parrent_class, params)


class A(object, metaclass=Meta):
    pass

print(&amp;#34;register: {}&amp;#34;.format(Meta.register))
print(&amp;#34;prop: {}&amp;#34;.format(A.test_prop))
print(&amp;#34;register: {}&amp;#34;.format(A.register))  # Error

# outputs:
# In meta new: &amp;lt;class &amp;#39;__main__.Meta&amp;#39;&amp;gt;, A, (&amp;lt;class &amp;#39;object&amp;#39;&amp;gt;,), {&amp;#39;__module__&amp;#39;: &amp;#39;__main__&amp;#39;, &amp;#39;__qualname__&amp;#39;: &amp;#39;A&amp;#39;}
# In meta init: A, (&amp;lt;class &amp;#39;object&amp;#39;&amp;gt;,), {&amp;#39;__module__&amp;#39;: &amp;#39;__main__&amp;#39;, &amp;#39;__qualname__&amp;#39;: &amp;#39;A&amp;#39;}
# register: [&amp;#39;A&amp;#39;]
# prop: True
# AttributeError: type object &amp;#39;A&amp;#39; has no attribute &amp;#39;register&amp;#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以看到，在构造 &lt;code&gt;A&lt;/code&gt; 的时候，&lt;code&gt;Meta&lt;/code&gt; 这个类里面，&lt;code&gt;__new__&lt;/code&gt; 和 &lt;code&gt;__init__&lt;/code&gt; 都会被调用到。上面代码往 &lt;code&gt;A&lt;/code&gt; 里面塞了一个属性。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;__new__&lt;/code&gt; 里面，有几个注释，可以去掉注释看看不同的效果。目前还有点疑惑，传给 &lt;code&gt;__new__&lt;/code&gt; 第一个参数到底是什么。另外，开始对 &lt;code&gt;super&lt;/code&gt; 也有点疑惑了，还在学习。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reinvent the wheel</title>
      <link>https://wdicc.com/reinvent-the-wheel/</link>
      <pubDate>Thu, 12 Jan 2017 16:16:20 +0800</pubDate>
      
      <guid>https://wdicc.com/reinvent-the-wheel/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Reinventing_the_wheel&#34;&gt;Reinvent the wheel&lt;/a&gt; 估计技术人员都知道这个典故。&lt;/p&gt;

&lt;p&gt;刚才突然想谈这个，是看到图拉鼎参加 &lt;a href=&#34;https://weex-project.io/&#34;&gt;weex&lt;/a&gt; 的聚会有感而发。我要是没理解错，这个应该是类似于 React native 的一套实现，我没有仔细看过他的实现，不过说他重复造轮子应该也不为过，毕竟，大家普遍赞成的是在已有的轮子上面添砖加瓦，而不是另起一套。&lt;/p&gt;

&lt;p&gt;重复造轮子到底应该不应该支持？&lt;/p&gt;

&lt;p&gt;之前我司来了一个发明了 avalon 框架的牛人，之后我看好像就在很多的推介这个，新人来了先学习这个。后来还有很多这种框架，新人来了都是先学习这些框架。&lt;/p&gt;

&lt;p&gt;这个事情上面，我看有几个好处
* 发明的人可以在公司内部得到很高的地位，以及相应的奖励。不管好用不好用，推行一版，一波人升天。后人再升级一版，又一波人升天。
* 学会了使用这些框架的人，如果自己本身不太灵活，到了其他公司会发现无法干活，因为使用多了会有一个很深的烙印。这样离职起来就没那么方便。
* 比较好规范和控制公司内部的技术方向。&lt;/p&gt;

&lt;p&gt;坏处
* 和最新的技术方向可能有割裂，因为并不一定能及时更新适应。
* 问题解决只能依赖内部的这些人来解决，这种东西想要推广出去毕竟还是难。
* 浪费人力做基础建设。&lt;/p&gt;

&lt;p&gt;其实看起来，对于基层员工来看好处还是大于坏处的。毕竟如果老板不关心这个成本或者不清楚可以节约这个成本的话，那些好处还是实实在在的，牛逼有的吹。&lt;/p&gt;

&lt;p&gt;在老板关心的方面，可能还有一个点，就是创新有时候是比较难的，但是所谓的微创新其实是简单一些，造轮子的时候，一般多少都会有一些微创新。如果搞的人确实有能力，避免一些原来设计里面的鸡肋冗余的部分，让新的设计更加轻快，其实也算是有好处。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Beansdb merge tools</title>
      <link>https://wdicc.com/beansdb-merge-tools/</link>
      <pubDate>Mon, 26 Dec 2016 18:36:11 +0800</pubDate>
      
      <guid>https://wdicc.com/beansdb-merge-tools/</guid>
      <description>

&lt;p&gt;Beansdb 是豆瓣开源出来的一个高效的支持 memcached 协议的文件存储 db。按 key 查找的时候，会有索引定位到磁盘位置。不过貌似前段时间看到说他们搞了一个新的替代这个，我找了一下没找到链接。&lt;/p&gt;

&lt;p&gt;使用 beansdb 的时候，有 2 个问题需要解决
* 冗余问题
* 数据过期删除问题&lt;/p&gt;

&lt;h2 id=&#34;数据冗余问题&#34;&gt;数据冗余问题&lt;/h2&gt;

&lt;p&gt;先说第一个问题。beansdb 本身不提供分布式 hash 逻辑，它就是个单机的程序。冗余需要你自己搞定，如果你使用标准的 memcache 协议，可以有多 server 的配置，读的时候其中一个失败会自动找下一个 server，写的时候就不会了，需要你自己写到多个 server。如果你所有的 server 都是一模一样的，那多写就可以了。如果不一样，你还需要考虑自己的 hash 策略。&lt;/p&gt;

&lt;p&gt;豆瓣提供了一个 python 的&lt;a href=&#34;https://github.com/douban/beansdb/blob/master/python/dbclient.py&#34;&gt;客户端&lt;/a&gt;，这个客户端里面其实包含了 hash 策略。通过把 key 和 server 分桶来做 hash。摘一点代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;BEANSDBCFG = {
    &amp;#34;localhost:7901&amp;#34;: range(16),
    &amp;#34;localhost:7902&amp;#34;: range(16),
    &amp;#34;localhost:7903&amp;#34;: range(16),
}

db = Beansdb(BEANSDBCFG, 16)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面定义了三个 server，每个包含 16 个桶（你可以根据你的需求比如定义第一个 server 只包含某些桶）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;def __init__(self, servers, buckets_count=16, N=3, W=1, R=1):&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里是定义写入数据的时候的逻辑，那个 &lt;code&gt;buckets_count&lt;/code&gt; 是桶的数量，&lt;code&gt;N&lt;/code&gt; 和 &lt;code&gt;R&lt;/code&gt; 貌似没用。。。，&lt;code&gt;W&lt;/code&gt; 是改动的时候要求成功的最小 server 数量，包括删除和写入的时候。&lt;/p&gt;

&lt;p&gt;读取的时候，会循环从包含这个 key 的桶的 server 列表里面循环读取，这里还有一个「自愈」的逻辑，循环读取直到遇到一个成功的 server，会同时把前面失败的 server 都写入一份数据。&lt;/p&gt;

&lt;p&gt;这样下来基本就解决了读写分布式和故障恢复的逻辑了，非常巧妙。&lt;/p&gt;

&lt;p&gt;其实针对这个问题，豆瓣还开源了个 &lt;a href=&#34;https://github.com/douban/beanseye&#34;&gt;beanseye&lt;/a&gt;，具体功能没有仔细研究，不过应该是上面需要客户端处理的事情都不需要考虑了。&lt;/p&gt;

&lt;p&gt;我们开始用的时候，不知道有 beanseye，我的场景是在 perl 环境下面使用，把 python 的客户端翻译了一个 perl 的版本出来。[1] 有兴趣可以看看。&lt;/p&gt;

&lt;h2 id=&#34;数据过期删除问题&#34;&gt;数据过期删除问题&lt;/h2&gt;

&lt;p&gt;beansdb 设计之初写入用的是 append 模式，就是说，遇到删除也是写入一条新的记录，并不会返回去修改原来的数据，所以能达到合理的 IO 速度。如果场景是大量不会删除的小文件，那么 beansdb 使用起来非常合适。&lt;/p&gt;

&lt;p&gt;如果有数据过期或者删除的需求，就需要想办法处理这些数据了，否则的话，beandb 的数据文件里面会慢慢的有大量的无用数据，浪费磁盘空间。&lt;/p&gt;

&lt;p&gt;这个删除过期数据的过程，我看豆瓣叫做 merge。思路其实就是把所有数据遍历一次，把有效的数据写入一个新的 data 文件，然后旧的删掉，就可以了。beansdb 的数据文件有 2 种，一种是 &lt;code&gt;xxx.data&lt;/code&gt;，这种文件是数据文件，另外一种是 &lt;code&gt;xxx.hint.qlz&lt;/code&gt; 这种是索引文件。&lt;/p&gt;

&lt;p&gt;针对这个需求，我写了两版程序，第一版就是单纯的解读一下数据文件，把其中的数据的信息读出来，主要是版本号和创建时间，然后根据版本号只写入高版本的，根据创建时间把过期的数据丢弃。生成新的 data 文件之后，要删除 hint 文件，启动的时候会自动产生 hint 文件。然后在 beansdb 的机器上面定期跑这个脚本就好了，注意跑之前应该先关闭 beansdb。&lt;/p&gt;

&lt;p&gt;第一个版本的程序只是解读了每个块的数据头，程序用起来也勉强还行，但是主要问题是，每次启动都需要重新产生 hint 文件，导致启动到提供服务很慢，所以就有了第二版程序。第二版包含了第一版的全部功能，还提供了按照文件大小来定义删除时限的功能。&lt;/p&gt;

&lt;p&gt;第二个版本程序基本把 data 和 hint 文件产生的逻辑都用 perl 实现了（不过还没有经过太多测试）。下面简单讲讲逻辑。&lt;/p&gt;

&lt;h3 id=&#34;data-文件&#34;&gt;data 文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;‌&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;struct&lt;/span&gt; data_record
{
    &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;*&lt;/span&gt;value;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;union&lt;/span&gt;
    {
        &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;bool&lt;/span&gt; free_value;    &lt;span style=&#34;color:#888&#34;&gt;// free value or not
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;        uint32_t crc;
    };
    int32_t tstamp;
    int32_t flag;
    int32_t version;
    uint32_t ksz;
    uint32_t vsz;
    &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;char&lt;/span&gt; key[&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;0&lt;/span&gt;];
&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;‌&lt;/span&gt;} DataRecord;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;数据文件里面，每个 key 对应的数据的长度是 &lt;code&gt;4*6 + key_size + value_size + padding&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;read($fh, my $header, 4*6);
my ( $crc, $tstamp, $flag, $ver, $ksz, $vsz ) = unpack(&amp;#39;I i i i I I&amp;#39;, $header);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;头部是 24 个字节，依次包括校验数据，写入时间戳，标记位，版本号，key 的长度，value 的长度。上面 &lt;code&gt;unpack&lt;/code&gt; 方法第一个参数里面的含义，可以参考&lt;a href=&#34;http://perldoc.perl.org/functions/pack.html&#34;&gt;perl 的文档&lt;/a&gt;。每个 4 字节，32bit 整数。&lt;/p&gt;

&lt;p&gt;然后是读取 &lt;code&gt;$ksz&lt;/code&gt; 的长度的 key，读取 &lt;code&gt;$vsz&lt;/code&gt; 长度 value。如果 &lt;code&gt;$flag&lt;/code&gt; 标记表明 value 有压缩，压缩用的是 QLZ 算法，真实的值需要用 qlz 解压缩之后才能得到。&lt;/p&gt;

&lt;p&gt;最后是 padding 部分，整个数据长度需要是 256 的整数倍。不足的部分，会写入 &lt;code&gt;\0&lt;/code&gt; 做 padding。&lt;/p&gt;

&lt;p&gt;merge 的过程不关心 value 的真实值，所以不需要解压缩，把读取到的原样写回去就可以了。另外就是 merge 的时候遇到同一个 key 多个 version 出现的时候，只保留大的那个就可以了。这样操作之后 data 文件会变小。&lt;/p&gt;

&lt;h3 id=&#34;hint-文件&#34;&gt;hint 文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;‌&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;struct&lt;/span&gt; hint_record
{
    uint32_t &lt;span style=&#34;color:#970;font-weight:bold&#34;&gt;ksize&lt;/span&gt;:&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;8&lt;/span&gt;;
    uint32_t &lt;span style=&#34;color:#970;font-weight:bold&#34;&gt;pos&lt;/span&gt;:&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;24&lt;/span&gt;;
    int32_t version;
    uint16_t hash;
    &lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;char&lt;/span&gt; key[NAME_IN_RECORD]; &lt;span style=&#34;color:#888&#34;&gt;// allign
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;‌&lt;/span&gt;} HintRecord;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;hint 文件比 data 文件稍微复杂一点，每一条记录是 &lt;code&gt;key_size + data_pos + ver + hash + key + padding&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;my ( $ksz, $datapos, $ver, $hash ) = unpack(&amp;#34;B8 B24 i B16&amp;#34;, $header);

$ksz = unpack(&amp;#34;I&amp;#34;, pack(&amp;#34;B32&amp;#34;, $ksz));
$datapos = unpack(&amp;#34;I&amp;#34;, pack(&amp;#34;B32&amp;#34;, $datapos));
$datapos = $datapos &amp;lt;&amp;lt; 8;
$hash = unpack(&amp;#34;I&amp;#34;, pack(&amp;#34;B32&amp;#34;, $hash));&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;头部的 10 个字节如上面代码，第一个 8 bit 是 key 的长度，接下来 24 个 bit 是这个 key 对应数据在 data 文件里面的位置。然后是 4 字节版本，16 bit 的 hash。&lt;/p&gt;

&lt;p&gt;padding 和上面 data 里面的逻辑一样，按照 256 的倍数补全。&lt;/p&gt;

&lt;p&gt;hint 文件结尾有个 &lt;code&gt;.qlz&lt;/code&gt;，表示整个 hint 里面的数据是压缩的，所以在处理前需要先解压缩一下。（不过我看到我代码里面在读取 hint 的时候，是全部数据解压，写入的时候，是按照 record 压缩的，很奇怪）。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Release some staff at github</title>
      <link>https://wdicc.com/release-some-staff-at-github/</link>
      <pubDate>Tue, 13 Dec 2016 17:00:31 +0800</pubDate>
      
      <guid>https://wdicc.com/release-some-staff-at-github/</guid>
      <description>&lt;p&gt;把 blog 用到的模板整理了一下，放到了 &lt;a href=&#34;https://github.com/wd/hexo-fabric&#34;&gt;https://github.com/wd/hexo-fabric&lt;/a&gt; ，这个最开始是 fork 别人的代码改的，后来发现原来那个人已经不用了，就整理一下，增加了一个 tag 支持，修改了一下字体和背景色，还有代码颜色等，都是一些小修改。同时也提交到了官方的 theme 库，不过 pull request 还没有通过。。&lt;/p&gt;

&lt;p&gt;另外，还把之前写的一个给 ngx-lua 用的一个使用 mcrypt 加密解密的库 &lt;a href=&#34;https://github.com/wd/lua-resty-mcrypt&#34;&gt;https://github.com/wd/lua-resty-mcrypt&lt;/a&gt; ，整理出来单独弄了一个模块。代码其实非常简单，这个也能看出来 ngx_lua 里面使用 ffi 调用 C 模块开发多舒服，不过因为 C 知识有限，可能还是会有一些问题，不过至少自己测试是 ok 的，也在线上跑了好久，只能遇到有问题的再说了。这个同时也提交到了春哥的 opm 仓库，那个倒没有审核，提交就被索引了，使用的话应该可以用 opm 命令直接安装。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bloat and Query Speed in PostgreSQL</title>
      <link>https://wdicc.com/bloat-and-query-speed-in-postgresql/</link>
      <pubDate>Fri, 09 Dec 2016 12:12:21 +0800</pubDate>
      
      <guid>https://wdicc.com/bloat-and-query-speed-in-postgresql/</guid>
      <description>&lt;p&gt;内容反义自 &lt;a href=&#34;https://www.citusdata.com/blog/2016/11/04/autovacuum-not-the-enemy/&#34;&gt;https://www.citusdata.com/blog/2016/11/04/autovacuum-not-the-enemy/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;pg 的 mvcc 会导致表索引的 bloat 就不多说了。说一下不合理处理这种 bloat 害处是啥。&lt;/p&gt;

&lt;p&gt;首先肯定是会浪费空间。然后也会影响查询速度。表和索引存储的时候都是 8kB 一个 page，如果一个查询一些行，数据库会加载这些 pages 到内存。一个 page 里面的 dead rows 越多，在加载的时候就越浪费 I/O。例如全表扫描会加载所有的 dead rows。&lt;/p&gt;

&lt;p&gt;Bloat 还会导致热门的查询会一下塞满内存。会导致相同的 live rows 需要更多 pages。This causes swapping and makes certain query plans and algorithms ineligible for execution.&lt;/p&gt;

&lt;p&gt;还有一个影响是，pg 的系统表也会有可能 bloat，因为他们也是表。导致这个的一种情况是频繁的创建和删除临时表。这个进一步会导致一些管理命令执行变慢，甚至比如 &lt;code&gt;\d&lt;/code&gt; 这种命令。&lt;/p&gt;

&lt;p&gt;索引也有可能会 bloat。索引是 tuple 标识和数据之间的一个映射。这些标识指向的是某个 page 里面的 offset。每个 tuple 都是一个独立的对象，需要自己的索引条目。更新一行的时候总是会创建这行的新的索引条目。&lt;/p&gt;

&lt;p&gt;索引的 bloat 的影响比 table 小一点。索引里面指向 dead tuple 的可以直接标记为 dead. 这会使得索引膨胀，但是不会导致不必要的堆查找。同时更新堆中的 tuples 不影响已经索引的列，使用一种叫做 HOT 的技术来把指向 dead tuples 的指针指向新的。这允许查询可以通过这些指针复用旧的索引条目。(Also updates to tuples in the heap that do not affect the indexed column(s) use a technique called HOT to provide pointers from the dead tuple to its replacement. This allows queries to reuses old index entries by following pointers across the heap.) (没太看明白.)&lt;/p&gt;

&lt;p&gt;索引 bloat 的问题还是应该需要重视。例如 btree 索引是由二叉树组成()。叶子节点包含值和 tuple 标识（应该是指在 data file 的 offset）。随机更新因为会重用 page，所以可以保持 btree 维持一个良好的形状。但是，如果是单侧更新，会导致大量的空页。&lt;/p&gt;

&lt;p&gt;The size considerations of index bloat are still significant. For instance a btree index consists of binary tree of pages (the same sized pages as you find holding tuples in the heap). The leaf node pages contain values and tuple identifiers. Uniform random table updates tend to keep a btree index in pretty good shape because it can reuse pages. However lopsided inserts/updates affecting one side of the tree while preserving a few straggling entries can lead to lots of mostly empty pages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Full page write in PostgreSQL</title>
      <link>https://wdicc.com/full-page-write-in-postgresql/</link>
      <pubDate>Thu, 08 Dec 2016 18:02:14 +0800</pubDate>
      
      <guid>https://wdicc.com/full-page-write-in-postgresql/</guid>
      <description>

&lt;p&gt;读了一篇&lt;a href=&#34;http://blog.2ndquadrant.com/on-the-impact-of-full-page-writes/&#34;&gt;文章&lt;/a&gt;，简单翻译总结下。&lt;/p&gt;

&lt;h2 id=&#34;partial-writes-torn-pages&#34;&gt;Partial Writes / Torn Pages&lt;/h2&gt;

&lt;p&gt;pg 默认是 8kB 一个 page。linux 文件系统一般是 4kB（x86 里面最大是 4kB)，老设备驱动一般是 512B 一个扇区，新的设备有些支持 4kB 或者 8kB。&lt;/p&gt;

&lt;p&gt;当 pg 写入一个 page 8kB 的时候，系统的底层会拆分小一点块，这里涉及到写入的原子性。8kB 的 pg page，会被文件系统拆分成 4kB 的块，然后拆分成 512B 扇区大小。这个时候如果系统崩溃（比如停电，内核 bug）会发生什么？&lt;/p&gt;

&lt;p&gt;即使系统的存储有针对这种情况的设计（比如 SSD 自带电容器，RAID 控制器自带电池），内核那块也是会拆分成 4kB 的 page，所以还是有一定可能性，pg 写了 8kB，但是只有部分写入成功。&lt;/p&gt;

&lt;p&gt;这个时候你可能意识到这就是为啥我们要有事务日志（WAL）。所以当系统崩溃重启之后，数据库会读取 WAL（从最后一次 checkpoint），然后重新写入一遍，以保证数据文件是完整的。&lt;/p&gt;

&lt;p&gt;恢复的时候，在修改一个 page 之前，还是会读取一下。&lt;/p&gt;

&lt;p&gt;在 checkpoint 之后第一次修改一个 page 的时候，会把整个 page 写入 WAL。这是为了保证在恢复的时候，能保证这些被修改的 page 能完全恢复到他原有的样子。&lt;/p&gt;

&lt;h2 id=&#34;写放大&#34;&gt;写放大&lt;/h2&gt;

&lt;p&gt;如果打开 Full page write，很显然会导致 WAL 文件增加，因为就算修改一个字节，也会导致 8kB page 的写入。因为 Full page write 只发生在 checkpoint 之后的第一次写入，所以减少 checkpoint 的发生频率是可以减少写入的。&lt;/p&gt;

&lt;h2 id=&#34;uuid-vs-bigserial-主键&#34;&gt;UUID vs BIGSERIAL 主键&lt;/h2&gt;

&lt;p&gt;比较了一下使用 UUID 或者 bigserial 做主键对写入的影响。可以看原链接的图，会发现在 INSERT 语句的情况下 UUID 产生的 WAL 文件量比较多。主要原因是 Btree 索引的情况下，bigserial 是顺序的维护这个索引，UUID 是无顺序的，会导致维护索引产生的数据量不同。&lt;/p&gt;

&lt;p&gt;如果是使用 UPDATE 随机修改，那么会发现产生的 WAL 数量就差不多了。&lt;/p&gt;

&lt;h2 id=&#34;8kb-and-4kb-pages&#34;&gt;8kB and 4kB pages&lt;/h2&gt;

&lt;p&gt;如果减小 pg 的 page 的大小，可以减小 WAL 数量。从 8kB 减小到 4kB，上面 UUID 那个例子，可以减少大概 35% 的量。&lt;/p&gt;

&lt;h2 id=&#34;需要-full-page-write-吗&#34;&gt;需要 full-page write 吗？&lt;/h2&gt;

&lt;p&gt;首先，这个参数是 2005 年 pg 8.1 引入的，那么现代的文件系统是不是已经不用操心部分写入的情况了？作者尝试了一些测试没有测试出来部分写入的情况，当然这不表示不会存在。但是就算是存在，数据的一致性校验也会是有效的保护（虽然并不能修复这个问题，但是至少能让你知道有坏的 page）&lt;/p&gt;

&lt;p&gt;其次，现在很多系统都依赖于流式同步，并不会等着有问题的服务器在有硬件问题的时候重启，并且花费很多时间恢复，一般都直接切换到热备服务器上面了。这个时候部分写就不是什么问题了。但是如果我们都推荐这么做，那么「我也不知道为啥数据损坏了，我只是设置了 full_page_writes=off」这种会是 DBA 死前最常见的言论了。(类似于「这种蛇我之前在 reddit 看见过，无毒的」)&lt;/p&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;对于 full-page write 你没法直接优化。大部分情况下，full-page write 都是发生在 checkpoint 之后，直到下一次 checkpoint。所以调整 checkpoint 的发生频率不要太频繁很重要。&lt;/p&gt;

&lt;p&gt;有些应用层的操作，可能会导致对表或者索引的随机写入的增加，例如上面的 UUID 的值就是随机的，会让简单的 INSERT 也会导致索引的随机 update。使用 Bigserial 做主键(让 UUID 做替代键)可以减少写放大。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用 pgrepup 跨版本升级 pg</title>
      <link>https://wdicc.com/use-pgrepup-to-upgrade-your-postgres/</link>
      <pubDate>Thu, 08 Dec 2016 11:55:33 +0800</pubDate>
      
      <guid>https://wdicc.com/use-pgrepup-to-upgrade-your-postgres/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://gasparin.net/2016/11/pgrepup-upgrade-postgresql-using-logical-replication/&#34;&gt;pgrepup&lt;/a&gt; 其实是一个支持 pg 跨版本复制的工具。而 pg 大版本升级需要停机是个比较郁闷的事情，如果能通过这个解决就实在太好了。下面测试了一下。&lt;/p&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;p&gt;需要安装 &lt;code&gt;pgrepup&lt;/code&gt; 和 &lt;code&gt;pglogical&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;安装-pgrepup&#34;&gt;安装 pgrepup&lt;/h3&gt;

&lt;p&gt;pgrepup 官方说是支持 python &amp;gt;= 2.7 的版本，我自己测试的结果，python 3.5 里面执行有点问题，需要修改几个地方。但是在 python 2.7 里面，不需要做任何修改，所以建议使用 python 2.7。安装很简单，执行 &lt;code&gt;pip install pgprepup&lt;/code&gt; 就可以了。&lt;/p&gt;

&lt;h3 id=&#34;安装-pglogical&#34;&gt;安装 pglogical&lt;/h3&gt;

&lt;p&gt;需要给你的 pg 安装这个扩展。高版本的和低版本的都需要安装。&lt;/p&gt;

&lt;p&gt;安装也很简单，下载源码，执行 &lt;code&gt;PATH=/opt/pg96/bin:$PATH make USE_PGXS=1 install&lt;/code&gt; 就好了。如果是给 pg95 装，那就把路径改成 pg95。&lt;/p&gt;

&lt;p&gt;可以参考&lt;a href=&#34;https://2ndquadrant.com/it/resources/pglogical/pglogical-installation-instructions/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;

&lt;h3 id=&#34;配置-db&#34;&gt;配置 db&lt;/h3&gt;

&lt;p&gt;先给几个 db 定义一下角色。db1 假设为 9.5 版本，db2 假设为 9.6 版本。&lt;/p&gt;

&lt;p&gt;pgrepup 允许 db1, db2 和执行 pgrepup 所在的机器分别在不同的机器，也可以在相同的机器，看机器情况。&lt;/p&gt;

&lt;p&gt;对于 db，最小配置的 postgres.conf 修改如下，我测试的时候两个 db 在一台机器上面，只需要修改 port 不一样就可以了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;listen_addresses = &amp;#39;*&amp;#39;          # what IP address(es) to listen on;
port = 5495
wal_level = logical # minimal, archive, hot_standby, or logical
max_wal_senders = 3             # max number of walsender processes
max_replication_slots = 3       # max number of replication slots
shared_preload_libraries = &amp;#39;pglogical&amp;#39;          # (change requires restart)

## 下面几个参数不是必须设置的
logging_collector = on          # Enable capturing of stderr and csvlog
log_filename = &amp;#39;postgresql-%Y-%m-%d.log&amp;#39;        # log file name pattern,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;pg_hba.conf 如下，修改其中的 client_ip 和 db_ip 为对应的真实 ip。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;host all all client_ip/32 md5
host replication pgrepup_replication db_ip/32 md5
host all pgrepup_replication db_ip/32 md5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;配置好之后，启动 db1 和 db2 看看是不是可以正常连接。&lt;/p&gt;

&lt;p&gt;还需要建立用户。如果已经存在一个 super 的用户，那也可以直接用那个用户，没有的话，就建一个。db1 和 db2 都需要建立，可以是不同的用户。&lt;/p&gt;

&lt;h4 id=&#34;hint&#34;&gt;hint&lt;/h4&gt;

&lt;p&gt;当然，如果我们在生产环境里面做这个事情，那肯定会是 db1 已经是一个存在的 db，只需要增加原来没有的配置就好了。db2 会是一个全新的 db，使用 initdb 初始化，之后配置上面的配置项（当然，如果是将来要给生产用，那应该是复制 db1 的配置文件过来，修改端口就可以了，其他都一样）。&lt;/p&gt;

&lt;h3 id=&#34;配置-pgrepup&#34;&gt;配置 pgrepup&lt;/h3&gt;

&lt;p&gt;执行一下 &lt;code&gt;pgrepup config&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup config
Pgrepup 0.3.7
Create a new pgrepup config
Configuration filename [~/.pgrepup] ./pgrepup.config
Security
Do you want to encrypt database credentials using a password? [Y/n] n
Folder where pgrepup store temporary dumps and pgpass file [/tmp] ./tmp
Source Database configuration
Ip address or Dns name: db_ip
Port: 5495
Connect Database: [template1]
Username: wd
Password:
Destination Database configuration
Ip address or Dns name: db_ip
Port: 5496
Connect Database: [template1]
Username: wd
Password:
Configuration saved to ./pgrepup.config.
You can now use the check command to verify setup of source and destination databases&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;之后会产生一个配置文件 pgrepup.config，有修改的话，可以打开再次编辑。&lt;/p&gt;

&lt;p&gt;之后，可以执行一下 &lt;code&gt;pgrepup check&lt;/code&gt; 来检查一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup -c pgrepup.config check
Pgrepup 0.3.7
Global checkings...
 &amp;gt;  Folder ./tmp exists and is writable ..........................................OK
Checking Source...
 &amp;gt;  Connection PostgreSQL connection to db_ip:5495 with user wd OK
 &amp;gt;  pglogical installation .......................................................KO

    Hint: Install docs at https://2ndquadrant.com/it/resources/pglogical/pglogical-installation-instructions/

 &amp;gt;  Needed wal_level setting .....................................................OK
 &amp;gt;  Needed max_worker_processes setting ..........................................OK
 &amp;gt;  Needed max_replication_slots setting .........................................OK
 &amp;gt;  Needed max_wal_senders setting ...............................................OK
 &amp;gt;  pg_hba.conf settings .........................................................KO
    Hint: Add the following lines to /home/wd/data95/pg_hba.conf:
        host replication pgrepup_replication db_ip/32 md5
        host all pgrepup_replication db_ip/32 md5
    After adding the lines, remember to reload postgreSQL
 &amp;gt;  Local pg_dumpall version .....................................................OK
 &amp;gt;  Source cluster tables without primary keys
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      testdb
 &amp;gt;          public.t1 ............................................................OK
 &amp;gt;      postgres .................................................................OK
Checking Destination...
 &amp;gt;  Connection PostgreSQL connection to db_ip:5496 with user wd OK
 &amp;gt;  pglogical installation .......................................................KO

    Hint: Install docs at https://2ndquadrant.com/it/resources/pglogical/pglogical-installation-instructions/

 &amp;gt;  Needed wal_level setting .....................................................KO
    Hint: Set wal_level to logical
 &amp;gt;  Needed max_worker_processes setting ..........................................OK
 &amp;gt;  Needed max_replication_slots setting .........................................KO
    Hint: Increase max_replication_slots to 3
 &amp;gt;  Needed max_wal_senders setting ...............................................OK
 &amp;gt;  pg_hba.conf settings .........................................................KO
    Hint: Add the following lines to /home/wd/data96/pg_hba.conf:
        host replication pgrepup_replication db_ip/32 md5
        host all pgrepup_replication db_ip/32 md5
    After adding the lines, remember to reload postgreSQL
 &amp;gt;  Local pg_dumpall version .....................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面是我第一次执行 check 的结果，可以看到很多红色的 &lt;code&gt;KO&lt;/code&gt;，有些下面还有 hint 提示告诉你怎么修复，针对红色的信息进行修复就好了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup -c pgrepup.config check
Pgrepup 0.3.7
Global checkings...
 &amp;gt;  Folder ./tmp exists and is writable ..........................................OK
Checking Source...
 &amp;gt;  Connection PostgreSQL connection to db_ip:5495 with user wd ...OK
 &amp;gt;  pglogical installation .......................................................OK
 &amp;gt;  Needed wal_level setting .....................................................OK
 &amp;gt;  Needed max_worker_processes setting ..........................................OK
 &amp;gt;  Needed max_replication_slots setting .........................................OK
 &amp;gt;  Needed max_wal_senders setting ...............................................OK
 &amp;gt;  pg_hba.conf settings .........................................................OK
 &amp;gt;  Local pg_dumpall version .....................................................OK
 &amp;gt;  Source cluster tables without primary keys
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      testdb
 &amp;gt;          public.t1 ............................................................OK
 &amp;gt;      postgres .................................................................OK
Checking Destination...
 &amp;gt;  Connection PostgreSQL connection to db_ip:5496 with user wd ...OK
 &amp;gt;  pglogical installation .......................................................OK
 &amp;gt;  Needed wal_level setting .....................................................OK
 &amp;gt;  Needed max_worker_processes setting ..........................................OK
 &amp;gt;  Needed max_replication_slots setting .........................................OK
 &amp;gt;  Needed max_wal_senders setting ...............................................OK
 &amp;gt;  pg_hba.conf settings .........................................................OK
 &amp;gt;  Local pg_dumpall version .....................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面是我修复之后执行的结果。其中会提示会被同步的 db（上面是 template1, testdb, postgres）。之后执行 setup&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup -c pgrepup.config setup
Pgrepup 0.3.7
Check if there are active subscriptions in Destination nodes .....................OK
Global tasks
 &amp;gt;  Remove nodes from Destination cluster
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      testdb ...................................................................OK
 &amp;gt;  Create temp pgpass file ......................................................OK
 &amp;gt;  Drop pg_logical extension in all databases of Source cluster
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      testdb ...................................................................OK
 &amp;gt;  Drop pg_logical extension in all databases of Destination cluster
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      testdb ...................................................................OK
Setup Source
 &amp;gt;  Create user for replication ..................................................OK
 &amp;gt;  Dump globals and schema of all databases .....................................OK
 &amp;gt;  Setup pglogical replication sets on Source node name
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      testdb ...................................................................OK
Setup Destination
 &amp;gt;  Create and import source globals and schema ..................................OK
 &amp;gt;  Setup pglogical Destination node name
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      testdb ...................................................................OK
 &amp;gt;      template1 ................................................................OK
Cleaning up
 &amp;gt;  Remove temporary pgpass file .................................................OK
 &amp;gt;  Remove other temporary files .................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后执行 start&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup -c pgrepup.config start
Pgrepup 0.3.7
Start replication and upgrade
 &amp;gt;  postgres .................................................................OK
 &amp;gt;  template1 ................................................................OK
 &amp;gt;  testdb ...................................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以通过 status 看同步状态&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup -c pgrepup.config status
Pgrepup 0.3.7
Configuration
 &amp;gt;  Source database cluster ......................................................OK
 &amp;gt;  Destination database cluster .................................................OK
Pglogical setup
 &amp;gt;  Source database cluster
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      testdb ...................................................................OK
 &amp;gt;  Destination database cluster
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      testdb ...................................................................OK
 &amp;gt;      template1 ................................................................OK
Replication status
 &amp;gt;  Database postgres
 &amp;gt;      Replication status ..............................................replicating
 &amp;gt;  Database testdb
 &amp;gt;      Replication status ..............................................replicating
 &amp;gt;  Database template1
 &amp;gt;      Replication status ..............................................replicating
 &amp;gt;  Xlog difference (bytes) ...................................................57816&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以看到三个 db 都在同步。这个时候在 db1 上面插入数据，能在 db2 上面看到会同步过去。&lt;/p&gt;

&lt;p&gt;状态有三种情况
* initializing: pglogical 正在 copy 数据
* replication: 同步状态
* down: 同步断开了，需要检查日志修复&lt;/p&gt;

&lt;h2 id=&#34;需要注意的问题&#34;&gt;需要注意的问题&lt;/h2&gt;

&lt;h3 id=&#34;db-里面的表都需要有主键&#34;&gt;db 里面的表都需要有主键&lt;/h3&gt;

&lt;p&gt;如果存在没有主键的表，执行 check 的时候会看到下面的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt; &amp;gt;  Source cluster tables without primary keys
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      testdb
 &amp;gt;          public.t2 ............................................................KO
    Hint: Add a primary key or unique index or use the pgrepup fix command
 &amp;gt;          public.t1 ............................................................OK
 &amp;gt;      postgres .................................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果不解决就执行 setup，会提示下面的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;Setup Source ........................................Skipped, configuration problems
Setup Destination
 &amp;gt;  Create and import source globals and schema .............................Skipped
 &amp;gt;  Setup pglogical Destination node name
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      template1 ................................................................OK
 &amp;gt;      testdb ...................................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以自己创建一个主键重新 check，也可以执行 fix 来修复，然后再次执行 setup。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt; ❯❯❯ pgrepup -c pgrepup.config fix
Pgrepup 0.3.7
Find Source cluster&amp;#39;s databases with tables without primary key/unique index...
 &amp;gt;  template1 ....................................................................OK
 &amp;gt;  postgres .....................................................................OK
 &amp;gt;  testdb
 &amp;gt;      Found public.t2 without primary key ................Added __pgrepup_id field&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;通过 fix 加的主键，在 uninstall 的时候会被删除。&lt;/p&gt;

&lt;h3 id=&#34;replication-status-down&#34;&gt;Replication status .. down&lt;/h3&gt;

&lt;p&gt;有时候会遇到有的 db 的状态是好的，有的 db 是 down 的情况&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;Replication status
 &amp;gt;  Database postgres
 &amp;gt;      Replication status ..............................................replicating
 &amp;gt;  Database testdb
 &amp;gt;      Replication status .....................................................down
 &amp;gt;  Database template1
 &amp;gt;      Replication status ..............................................replicating
 &amp;gt;  Xlog difference (bytes) ..................................................614096&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在同步状态下面，如果给某个 db 加一个没有主键的表，就会导致同步断掉。修复方法是先 stop，然后执行 check，按照提示修复，然后执行 setup，然后 start 就可以了。&lt;/p&gt;

&lt;h3 id=&#34;官方列出来的几个问题&#34;&gt;官方列出来的几个问题&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DDL 命令。不会同步 DDL 命令，可以在 db1 试试看 &lt;code&gt;pglogical.replicate_ddl_command&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;seq 序列。执行 stop 命令的时候，会在目标 db 的 seq 上面加 1000。&lt;/li&gt;
&lt;li&gt;有大量的 db。执行 start 命令之后，pglogical 会每个 db 启动一个 worker 来同步数据，要是 db 比较多会导致比较高的负载。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为这个是基于 pglogical 的，所以还需要关注 pglogical 列出来的一些&lt;a href=&#34;https://2ndquadrant.com/it/resources/pglogical/pglogical-docs/&#34;&gt;限制&lt;/a&gt; 第 4 部分 Limitations and Restrictions。
* 4.1 Superuser is required
* 4.2 UNLOGGED and TEMPORARY not replicated
* 4.3 One database at a time
* 4.4 PRIMARY KEY or REPLICA IDENTITY required
* 4.5 Only one unique index/constraint/PK
* 4.6 DDL
* 4.7 No replication queue flush
* 4.8 FOREIGN KEYS
* 4.9 TRUNCATE
* 4.10 Sequences
* 4.11 Triggers
* 4.12 PostgreSQL Version differences
* 4.13 Doesn&amp;rsquo;t replicate DDL&lt;/p&gt;

&lt;h3 id=&#34;pgrepup-uninstall&#34;&gt;pgrepup uninstall&lt;/h3&gt;

&lt;p&gt;uninstall 会清理 pgrepup 创建的一些信息，比如安装的 pglogical 扩展，创建用来同步的用户，和通过 fix 命令添加的 seq。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;❯❯❯ pgrepup -c pgrepup.config uninstall
Pgrepup 0.3.7
Check active subscriptions in Destination nodes
 &amp;gt;  template1 ...............................................................Stopped
 &amp;gt;  testdb ..................................................................Stopped
 &amp;gt;  postgres ................................................................Stopped
Uninstall operations
 &amp;gt;  Remove nodes from Destination cluster
 &amp;gt;      postgres .................................................................OK
 &amp;gt;      testdb ...................................................................OK
 &amp;gt;      template1 ................................................................OK
 &amp;gt;  Drop pg_logical extension in all databases
 &amp;gt;      Source
 &amp;gt;          template1 ............................................................OK
 &amp;gt;          postgres .............................................................OK
 &amp;gt;          testdb ...............................................................OK
 &amp;gt;      Destination
 &amp;gt;          postgres .............................................................OK
 &amp;gt;          testdb ...............................................................OK
 &amp;gt;          template1 ............................................................OK
 &amp;gt;  Drop user for replication ....................................................OK
 &amp;gt;  Drop unique fields added by fix command
 &amp;gt;          template1
 &amp;gt;          postgres
 &amp;gt;          testdb
 &amp;gt;              public.t1 ........................................................OK
 &amp;gt;              public.t2 ........................................................OK&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;升级&#34;&gt;升级&lt;/h2&gt;

&lt;p&gt;如果前面配置好了同步状态，那剩下的事情就简单了。
* 停止应用链接 db1
* 确保 db1 已经没有任何链接
* 使用 &lt;code&gt;pgrepup stop&lt;/code&gt; 停止 replication
* 修改应用链接到 db2
* 启动应用
* 剩下的就是处理掉停止的 db1&lt;/p&gt;

&lt;h2 id=&#34;参考文档&#34;&gt;参考文档&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/yteraoka/items/e82e4d28f6a23915d190&#34;&gt;http://qiita.com/yteraoka/items/e82e4d28f6a23915d190&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Built in sharding in PostgreSQL</title>
      <link>https://wdicc.com/built-in-sharding-in-postgresql/</link>
      <pubDate>Wed, 07 Dec 2016 16:54:59 +0800</pubDate>
      
      <guid>https://wdicc.com/built-in-sharding-in-postgresql/</guid>
      <description>

&lt;p&gt;PostgreSQL 内建 sharding 支持，粗略翻译自 &lt;a href=&#34;https://wiki.postgresql.org/wiki/Built-in_Sharding&#34;&gt;https://wiki.postgresql.org/wiki/Built-in_Sharding&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;内建支持 sharding 最大的挑战是，如何用最小的代码修改实现。大部分社区的 sharding 修改支持都修改了很多 PostgreSQL 的代码，这也导致这些不能被 Postgres 社区那些不需要 sharding 的人接受。有了 FDW 之后，就有了在有限代码修改情况下实现内建 sharding 支持的可能。&lt;/p&gt;

&lt;p&gt;基于 FDW 的这种 sharding 设计，是基于 NTT 开发的 Postgres-XC，大概已经有 10 年了。Postgres-XL 是基于这个设计的一种更加灵活的实现。&lt;/p&gt;

&lt;h2 id=&#34;enhance-existing-features&#34;&gt;Enhance Existing Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;已完成？提升 FDW 的基础设计和 postgres_fdw。特别的，好的性能要求合理的把一些操作推送到子节点(foreign shards)。在 Postgres 9.6 中，join, sort, update, delete 都可以推送到字节点了。聚合的 pushdown 将在 Postgres 10 中支持。FDW 表已经可以作为继承表出现。&lt;/li&gt;
&lt;li&gt;提升分区支持有效提升 existence of shards。幸运的是，单节点的分区支持也需要重构才能提升性能和更多优化。例如，executor-based partition pruning.&lt;/li&gt;
&lt;li&gt;给 FDW 请求增加并行支持。这样能允许节点并行执行，这个可能会通过多个异步的链接来实现。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;new-subsystems&#34;&gt;New Subsystems&lt;/h2&gt;

&lt;p&gt;还需要开发一些子系统：
* 允许表可以复制到所有节点，以允许更多的 join pushdown。这个可以通过 trigger 或者逻辑复制来完成。
* 实现一个子模块，以使用新的分区系统表来提交符合提交的查询的 FDW 查询。
* 实现一个子模块收集 FDW 查询的结果返回给用户。
* 实现全局事务管理器以便更加高效的允许子节点原子的提交事务。这个可能会通过 prepared 的事务来实现，还有某种在 crash 之后清理那些 preapared 的事务的事务管理器。例如 XA。
* 实现全局快照管理器，以允许子节点可以看到一致性的快照。（是不是 serialisable 事务模式会避免跨节点快照冲突？pg_export_snapshot() 或者 hot_standby_feedback 是不是会有帮助？) 多节点的备份的一致性也需要这个支持。
* 实现支持 create, manage, report on shards 这些用户 API。&lt;/p&gt;

&lt;h2 id=&#34;use-cases&#34;&gt;Use Cases&lt;/h2&gt;

&lt;p&gt;有四种可能的用户案例和不同的需求:
* 跨节点在只读节点上面执行只读聚合查询，例如数据仓库
  这种是最简单的场景，不需要全局事务管理，全局快照管理，并且因为聚合，所以子节点返回的数据量也是最小的。
* 跨节点在只读节点上面执行只读非聚合查询
  这种会给调度节点压力，需要收集和处理很多子节点返回的数据。这种也能看到 FDW 传输机制等级。
* 跨节点在可读写节点执行只读查询
  这个需要全局快照管理来保证子节点返回数据的一致性
* 跨节点执行读写查询
  这个需要全局快照管理器和全局事务管理器&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>申请 google voice</title>
      <link>https://wdicc.com/registration-about-google-voice/</link>
      <pubDate>Mon, 14 Nov 2016 16:02:30 +0800</pubDate>
      
      <guid>https://wdicc.com/registration-about-google-voice/</guid>
      <description>&lt;p&gt;昨天晚上突然想申请一个 google voice 帐号。有了之后就可以作为国外的号码使用了，可以打电话收短信，想想好像还有点用。比如我就可以用他注册一个微博帐号用来关联一些无聊的服务了。。。&lt;/p&gt;

&lt;p&gt;申请的过程网上很多，不细说了。主要注意下面几点。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;需要美国 ip 打开 &lt;a href=&#34;https://www.google.com/voice&#34;&gt;https://www.google.com/voice&lt;/a&gt; ，否则会跳转到一个帮助页面。这个从网上搜一些免费的代理就可以了。我是搜索到了一些 ss 帐号，然后配合 surge 来做的。&lt;/li&gt;
&lt;li&gt;需要一个能接电话的美国号码来接受 google voice 的验证电话。这个我是通过 &lt;a href=&#34;http://textnow.com&#34;&gt;http://textnow.com&lt;/a&gt; 来做的。登录 textnow.com 注册一个免费的帐号，其中有一步是需要输入一个美国区号，这个要注意，我第一次注册的时候，输入的是 213 (洛杉矶地区的)，然后就不行，后来又申请了一个 517 的就可以。所以最好搜索一下别人申请成功的区号有哪些，另外还好就是只要有不同的邮箱，就可以多次注册来换号码，如果遇到不行的，可以换个邮箱重新注册一下。&lt;/li&gt;
&lt;li&gt;在 google voice 里面填入电话之后。google voice 会打电话给那个号码。我用 textnow 的 ios 客户端接的电话（建议不要用他们的 web，他们的 web 必须要你的浏览器支持 flash 才行，很恶心），我遇到的情况下，前几次接到的电话没有对方的声音，自己尝试直接输入号码也不行。后来多试几次就好了。&lt;/li&gt;
&lt;li&gt;后面就是选号了。选好号码之后，点提交一般都会遇到一个错误，「There was an error with your request. Please try again」, 遇到这个是正常的。需要你多次点击那个按钮提交，有人用按键精灵点了几个小时搞定了。我这是打开 chrome 的 dev tools，然后看 network 里面发的请求，每次点击都会有一个 post 请求，在上面按右键，选择 「copy as curl」，然后在命令行写一个简单的程序，&lt;code&gt;while true; do 这里把复制的内容贴过来 ;sleep 1.5s; done&lt;/code&gt;，复制到命令行，不停的重试就可以了，直到收到邮件说你的号码开通了。要注意的是命令行也得设置代理，一般是通过 export。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>新与旧</title>
      <link>https://wdicc.com/new-and-old/</link>
      <pubDate>Sun, 13 Nov 2016 13:39:18 +0800</pubDate>
      
      <guid>https://wdicc.com/new-and-old/</guid>
      <description>&lt;p&gt;北京有个古北水镇，运营上据说是杭州乌镇的那拨人。乌镇没去过，去过古北水镇。在一片山里面，长城下面，一群建筑。里面还开了一些模仿古代的商店，比如酒家，染坊这些可以参观。&lt;/p&gt;

&lt;p&gt;这个地方离北京大概是 2 个多小时的车程（全程高速不怎么堵车的情况下）。周末过去之后会发现停车场停满了车，还有好多旅游车，水镇上面也人山人海。&lt;/p&gt;

&lt;p&gt;这里面的建筑都是后期开发商人工开辟的。景区里面的酒店基本都是1k起，并且还得提前预约。据说夜景很漂亮，不过我没看过。&lt;/p&gt;

&lt;p&gt;北京是个古老的城市，如果城区里面的历史建筑都留着，现在可够你转几个月的，光就绕着北京城墙走一圈，估计一天都不一定可以。曾经在西安的城墙上面走过一圈，感觉还不错，我记得还收了门票的。&lt;/p&gt;

&lt;p&gt;北京有个南锣鼓巷，过去转你会发现并没有什么能让你理解回味京味的东西，卖的也是羊肉串奶茶这些，排好长的队买一串拿着边吃边走完了，其实可能也挺没意思的。&lt;/p&gt;

&lt;p&gt;都说台湾是中华传统保持比较好的地方。去了台北第一印象就是，破房子挺多的。那边房子是私产，所以拆迁很难。然后个人又不一定有能力翻盖，所以就有破烂的房子。给我们开车的台湾人还说去过北京，说羡慕那边的高楼大厦，到处都很新，很时髦的样子。&lt;/p&gt;

&lt;p&gt;台湾有很多夜市，去过几个，有的比较商业化的，你会发现周边也都是高楼了。有的就是普通的，真的是一条路白天行车，晚上就堵起来开始摆摊。我记得某个夜市里面有个摊位，说是开了好多年了，现在物价高，不得已只好比早年涨了几毛钱。看着都震惊了，涨几毛钱还废什么话，况且本身人家卖的也不贵，都是良心价。&lt;/p&gt;

&lt;p&gt;地价涨没那么快，可能各种基础花费都会比较稳定，否则地价涨了房租涨了，那物价必定会涨。所以10年前我在北京长椿街那上班的时候，一份盖饭，大概是 7，8 块钱。到了现在，估计是翻一倍。另外这种店还越来越少，因为卫生条件，房租这些要求导致价格底了不好赚钱。&lt;/p&gt;

&lt;p&gt;台湾夜市里面也经常能碰见那种几十年的老店，那真的是几十年一直在做那个生意。几十年价格也没有变化太多。想起来前门的那个面馆前段时间关门了，没有办法，涨价没法涨，收入基本不变的情况下，地价变化太大，只好关门了。&lt;/p&gt;

&lt;p&gt;就目前这个房地产的情况，北京还能有多少真正的老字号，有多少真正的老街，估计基本不会有了。后面估计会有更加多人工的景区了，费用估计还不能便宜了。&lt;/p&gt;

&lt;p&gt;想起来凤凰古城了，大家不愿意拆，那就某天一把火烧了，这下都同意了吧，这可是天意。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>python 的 decorator 学习</title>
      <link>https://wdicc.com/decorator-in-python/</link>
      <pubDate>Fri, 21 Oct 2016 18:50:59 +0800</pubDate>
      
      <guid>https://wdicc.com/decorator-in-python/</guid>
      <description>&lt;p&gt;最近学习了一下 python 的 decorator（装饰器），看的是这篇，&lt;a href=&#34;http://coolshell.cn/articles/11265.html&#34;&gt;Python修饰器的函数式编程&lt;/a&gt;， 觉得挺有意思的，写点东西记录一下。&lt;/p&gt;

&lt;p&gt;装饰器简单讲就是返回一个函数的函数/类。看个简单的例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;dec1&lt;/span&gt;(fn):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside dec1&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;wrapper&lt;/span&gt;():
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside wrapper&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; fn()
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; wrapper


&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@dec1&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;f1&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside f1&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;begin exec&amp;#39;&lt;/span&gt;)
    f1()
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;end exec&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#888&#34;&gt;# 执行结果:&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside dec1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# begin exec&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside wrapper&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside f1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# end exec&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;看上面例子能看到，装饰器生效有 2 个步骤，第一个是装饰，第二个是执行。上面装饰器的效果，和下面的代码的效果是一样。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;dec1&lt;/span&gt;(fn):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside dec1&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;wrapper&lt;/span&gt;():
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside wrapper&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; fn()
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; wrapper


&lt;span style=&#34;color:#888&#34;&gt;# @dec1&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;f1&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside f1&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;begin exec&amp;#39;&lt;/span&gt;)
    dec1(f1)()
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;end exec&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#888&#34;&gt;# 执行结果:&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# begin exec&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside dec1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside wrapper&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside f1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# end exec&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以看到除了 「begin/end exec」，其他部分执行结果是一样的。所以理解装饰器，就把 &lt;code&gt;@dec1&lt;/code&gt; 换成 &lt;code&gt;dec1(fn)()&lt;/code&gt; 这么理解就可以了。&lt;/p&gt;

&lt;p&gt;有时候会看到类也可以作为装饰器使用。其实理解起来也类似。举个例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#b06;font-weight:bold&#34;&gt;dec1&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;object&lt;/span&gt;):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, fn):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside dec1&amp;#39;&lt;/span&gt;)
        self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;fn &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; fn

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; __call__(self):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside wrapper&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;fn()


&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@dec1&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;f1&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside f1&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;begin exec&amp;#39;&lt;/span&gt;)
    f1()
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;end exec&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#888&#34;&gt;# 执行结果:&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside dec1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# begin exec&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside wrapper&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside f1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# end exec&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里和上面类似，把 &lt;code&gt;@dec1&lt;/code&gt; 理解成 &lt;code&gt;dec1(fn)()&lt;/code&gt;，不过是这里的 &lt;code&gt;dec1&lt;/code&gt; 是个类，那么 &lt;code&gt;dec1(fn)&lt;/code&gt; 其实是调用的 &lt;code&gt;dec1.__init__(fn)&lt;/code&gt;，那么后续的 &lt;code&gt;dec1(fn)()&lt;/code&gt; 就是调用产生的对象的 &lt;code&gt;dec1.__call__()&lt;/code&gt; 了。&lt;/p&gt;

&lt;p&gt;有时候还能看到加了参数的装饰器。加了参数的是怎么回事呢。再看下面的例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#888&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;


&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;dec1&lt;/span&gt;(name):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside dec1&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;real_dec1&lt;/span&gt;(fn):
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;wrapper&lt;/span&gt;():
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside wrapper&amp;#39;&lt;/span&gt;)
            &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; fn()
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; wrapper
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; real_dec1


&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@dec1&lt;/span&gt;(name&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;f1&lt;/span&gt;():
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;inside f1&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#333&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;begin exec&amp;#39;&lt;/span&gt;)
    f1()
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;end exec&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#888&#34;&gt;# 执行结果:&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside dec1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# begin exec&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside wrapper&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# inside f1&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;# end exec&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;看懂了没有，就是多了个嵌套而已。遇到加了参数的，那就是把之前的没有参数的部分返回回来就可以了。等价的例子就不贴了，这个等价于 &lt;code&gt;dec1(name=&#39;1&#39;)(fn)()&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果是类装饰器，并且有参数，那等价于 &lt;code&gt;dec1(name=&#39;1&#39;)(fn)()&lt;/code&gt;，其中 &lt;code&gt;__init__(self, name)&lt;/code&gt; 先处理第一层参数，然后 &lt;code&gt;__call__(fn)&lt;/code&gt; 处理第二层，然后需要在 &lt;code&gt;__call__&lt;/code&gt; 里面再定义一个 wrapper 返回。&lt;/p&gt;

&lt;p&gt;说明白没有？呵呵。&lt;/p&gt;

&lt;p&gt;补充一点新的知识，来自于&lt;a href=&#34;https://www.youtube.com/watch?v=MjHpMCIvwsY&amp;amp;list=PLPbTDk1hBo3y_yzy0ZIx_0PKlUiQ0WXG7&amp;amp;index=9&#34;&gt;这个视频&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#555;font-weight:bold&#34;&gt;@mydeco&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;add&lt;/span&gt;(a, b):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; b&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面这个等价于下面这个&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;add&lt;/span&gt;(a, b):
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; b
    
add &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; mydeco(add)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里面三个 callable
1. 被装饰的函数 add
2. mydeco 装饰方法
3. 装饰方法返回的方法&lt;/p&gt;

&lt;p&gt;装饰器可以做的事情：
1. timing，统计函数执行的时间。
2. 控制函数 60 秒执行一次。通过在 dec 方法内记录一个最后执行时间实现。
3. 类似上面的，可以任意指定限制的时间。只需要在上面的函数上面再套一层就可以。
4. 实现结果记忆。同样的输入，总是同样的输出，那可以按照输入参数记录执行结果，下次相同参数就不用再次执行了。
5. 给对象增加属性。可以装饰某给对象，然后增加一些属性，比如定制一下 &lt;code&gt;__repr__&lt;/code&gt; 输出更好的内容。
6. 类似的，可以装饰某个对象，然后给他增加一些属性，比如增加一个 &lt;code&gt;__create_at&lt;/code&gt; 这样的属性记录一下实例创建时间。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cookie 的一点研究</title>
      <link>https://wdicc.com/about-http-cookie/</link>
      <pubDate>Fri, 16 Sep 2016 08:59:09 +0800</pubDate>
      
      <guid>https://wdicc.com/about-http-cookie/</guid>
      <description>&lt;p&gt;这几天搞了一下 python 里面 cookie 相关的东西。我的目的是想要尝试用 python 登录某个网站，并且保持登录状态直到过期。因为 http 协议是无状态的，所以一般来讲，网站想要用户保持登录，那么网站在用户登录之后，必须要和用户端协商好怎么来证明这个用户已经登录过了。&lt;/p&gt;

&lt;p&gt;用户端如果使用浏览器，那么网站就可以利用浏览器对 cookie 的支持来让用户在不知情的情况下，让网站在用户登录后发的一个 token 在用户后续的请求里面都包含上。&lt;/p&gt;

&lt;p&gt;用户端如果不是浏览器，比如是个 python 程序，那么网站可以和用户协商每次请求里面都包含某个下发的 token（当然，甚至要求客户端每次请求都带着用户名密码也是可行的）。&lt;/p&gt;

&lt;p&gt;但是如果网站本身只是给浏览器用户准备的，那么通过用程序来「模拟」浏览器行为，把必要的 token 保存并在后续的请求里面都带上，也是可行的。&lt;/p&gt;

&lt;p&gt;python 里面，发送 http 请求可以简单的使用 &lt;code&gt;urllib.request.urlopen(url)&lt;/code&gt;，但是如果想要定制一下请求，比如修改一些 header 信息，那么就得使用 &lt;code&gt;urllib.request.Request&lt;/code&gt; 这个 class 先构造一个 Request 对象，然后传递给 urlopen 了。&lt;/p&gt;

&lt;p&gt;如果要处理 cookie，那就需要使用 &lt;code&gt;http.cookiejar.CookieJar&lt;/code&gt; 了，有了 Cookiejar 对象，就可以把网站下发的 cookie 保存到这个变量里面，然后在必要的时候，可以返回给服务器端了。如果想要保存到文件，那么可以使用 &lt;code&gt;http.cookiejar.LWPCookieJar&lt;/code&gt; 或者 &lt;code&gt;http.cookiejar.MozillaCookieJar&lt;/code&gt;，也可以基于 &lt;code&gt;http.cookiejar.FileCookieJar&lt;/code&gt; 自己实现一个子类，来用自己的办法保存和加载 cookie，比如保存到数据库什么的，这样就可以多台机器之间共享 cookie 了。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;urlopen&lt;/code&gt; 本身不支持自定义 cookiejar 逻辑，得使用 &lt;code&gt;opener = build_opener(HTTPCookieProcessor(cookiejar=Cookiejar对象))&lt;/code&gt; 来先构造一个自定义的 openner, 然后使用 &lt;code&gt;opener(Request对象)&lt;/code&gt; 来发送请求。&lt;/p&gt;

&lt;p&gt;如果不定义自己的 cookie policy，那么会使用默认的 &lt;code&gt;http.cookiejar.DefaultCookiePolicy&lt;/code&gt;，也可以自己基于 &lt;code&gt;http.cookiejar.CookiePolicy&lt;/code&gt; 实现自己的逻辑。只需要 override &lt;code&gt;set_ok&lt;/code&gt; 和 &lt;code&gt;return_ok&lt;/code&gt; 这两个方法就可以。&lt;/p&gt;

&lt;p&gt;http cookie 其实有很多属性，比如 domain, expire, path 等常见属性，也有 httponly, secure 等几个不常见的。这些属性都是浏览器处理的。就是说，浏览器把 cookie 返回给服务器端的时候，如果 domain 不匹配，或者已经过了 expire 时间等等一些不符合浏览器制定的 cookie 逻辑的时候，浏览器就不会把 cookie 发送给服务器端。就比如，服务器产生 cookie 的时候，声明了 domain=a.com，那么如果是来自于 b.com 的请求，浏览器是根本不会给他发送这个 cookie。再比如，服务器端产生 cookie 的时候，声明了 1 天后过期，那么 1 天之后，浏览器也不会再给服务器端发这个 cookie 了。&lt;/p&gt;

&lt;p&gt;但是如果是我们自己实现客户端模拟浏览器的时候，其实我们是可以耍流氓的，可以制定自己的 cookie 逻辑，也就是上面提到的 cookie policy。比如我可以简单的在 &lt;code&gt;return_ok&lt;/code&gt; 这个方法里面 &lt;code&gt;return True&lt;/code&gt;，在任何情况下都把所有的 cookie 返回给服务器，这样服务器端如果不提前想明白，它是一点都不知道的。&lt;/p&gt;

&lt;p&gt;所谓提前想明白就是想明白是不是需要针对这种情况做处理。如果本身我们系统也没有那么严格要求，那么不处理也可以。但是如果是某个比如金融系统，那么是必须要考虑的。否则如果完全依赖 cookie 的话，如果我通过某些手段弄到了用户的 cookie，那么我就可以骗过服务器端，让他认为我就是那个用户。&lt;/p&gt;

&lt;p&gt;我想了一下，貌似被盗窃 cookie 这种事情服务器端不太好防范，但是可以做的是防止浏览器耍流氓。比如我们把 cookie 加密，并里面增加一个发送 cookie 的时间。收到客户端发过来的 cookie 之后，我们解密看看时间有没有过期，这样就可以在服务器端让 cookie 失效了。&lt;/p&gt;

&lt;p&gt;另外，也可以考虑使用 session。session 是把一些用户的状态保存在服务器端。但是 session 实际上也是依赖 cookie 的，因为前面说了 http 协议无状态，就算可以把用户状态保存在服务器端，但是总还是得识别用户才可以。那个识别的 cookie 就是所谓的 session cookie，其实就是某个用户的唯一标识。&lt;/p&gt;

&lt;p&gt;对于 session cookie 被窃，好像也没有太好的办法，无非也是想办法比对之前用户的一些状态信息，比如 ip 和现在的信息是不是一致，不一致可以认为有被窃的怀疑，这个时候让用户再次验证用户信息，这都不能 100% 保证，但是至少会增加窃贼的成本。&lt;/p&gt;

&lt;p&gt;上面说到这些，都可以自己测试一下，测试也并不一定需要搭一个服务器端配合，以及使用复杂的抓包专鉴，其实使用 &lt;code&gt;nc&lt;/code&gt; 就可以。&lt;/p&gt;

&lt;p&gt;使用 &lt;code&gt;nc -l 9999&lt;/code&gt; 就可以启动一个监听在 9999 端口的 socket 服务器。之后使用 python 或者 curl 之类的程序请求，就能立刻看到请求发送过来的 http 信息，这个对于学习 http 协议其实也很方便。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ nc -l 9999
GET / HTTP/1.1
Accept-Encoding: identity
Connection: close
Cookie: QN2=test; QN1=ClbaCVfZF5lfszBALzTIAg==
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6)  AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36
Host: localhost:9999&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;收到的上面这个请求，可以看到发送过来了 2 个 cookie。&lt;/p&gt;

&lt;p&gt;如果还想测试数据返回的情况，那么可以写一个 &lt;code&gt;test.resp&lt;/code&gt; 文件，内容如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;$ cat test.resp
HTTP/1.1 200 OK
Date: Sun, 18 Oct 2009 08:56:53 GMT
Server: Apache/2.2.14 (Win32)
Last-Modified: Sat, 20 Nov 2004 07:16:26 GMT
ETag: &amp;#34;10000000565a5-2c-3e94b66c2e680&amp;#34;
Set-Cookie: QN1=ClbaCVfZF5lfszBALzTIAg==; expires=Thu, 31-Dec-37 23:55:55 GMT; path=/
Set-Cookie: QN2=test; expires=Thu, 31-Dec-37 23:55:55 GMT; path=/; secure; httponly
Accept-Ranges: bytes
Content-Length: 44
Connection: close
Content-Type: text/html
X-Pad: avoid browser bug

&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;It works!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后使用 &lt;code&gt;nc -l 9999 &amp;lt; test.resp&lt;/code&gt; 命令启动服务，客户端来请求的时候，就会返回上面 &lt;code&gt;test.resp&lt;/code&gt; 里面的内容。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>从双拼讲输入法</title>
      <link>https://wdicc.com/double-pinyin/</link>
      <pubDate>Sat, 20 Aug 2016 10:00:51 +0800</pubDate>
      
      <guid>https://wdicc.com/double-pinyin/</guid>
      <description>&lt;p&gt;上高中的时候，就流行五笔打字，不过那会家里都没有电脑，都是去网吧（或者叫打字社）去学习的，不过那会学习这个貌似唯一的用途就是录入用。&lt;/p&gt;

&lt;p&gt;当时也背过五笔的码表，王旁青头兼五一，估计很多人都很熟悉。上了大学在有更多机会接触电脑的时候，上网什么的，自然就开始使用拼音输入法，因为基本不需要练习，会盲打知道键盘按键键位就可以使用。当时用的比较多的是智能 ABC，后来 2000 年左右写书的时候，用的是紫光拼音，紫光的词库比智能 ABC 好一点，所以用起来也好用很多。此后一直使用拼音输入法。&lt;/p&gt;

&lt;p&gt;直到应该是大概 2008 年左右，ssslang 在使用二笔，就开始想尝试一下码表输入法。因为本身使用了这么多年的电脑输入和拼音输入法之后，对字形其实已经失去了概念，如果学五笔的话，肯定会是很痛苦的。&lt;/p&gt;

&lt;p&gt;而二笔输入法一个字 4 个码，第一个码还是拼音的第一个字母，但是大部分常用字都是 2 个码就可以出，所以这样等于每个字都至少知道了一半的编码，这个还是很赞的。&lt;/p&gt;

&lt;p&gt;二笔输入法也有很多编码方案，当时选的是哲豆二笔，这个方案只用了 26 个字母键，所以也可以在手机上面使用（其他方案用了一些符号键，比如 [ ]，当时手机还都是流行硬键盘，一般都没有单独的符号键，而且貌似现在的软键盘也没有单独的符号键）。我当时用的 palm treo 650，输入还是蛮爽的。后来自己把一些词库导入了进去，用起来就更加舒服了。&lt;/p&gt;

&lt;p&gt;但是后来的问题是慢慢的一些流行的智能机没有那么好的输入法自定义支持，就没法用了，慢慢切回来了拼音输入法。&lt;/p&gt;

&lt;p&gt;二笔是码表输入法，就是每个字有自己的编码，联系的过程就是熟悉码表的过程，如果某个字不熟悉，那么其实你是需要轻微的思考的，想一下那个字怎么写，是哪个码。所以输入的速度取决于对这些字的熟悉程度，遇到不熟悉的会有卡顿。&lt;/p&gt;

&lt;p&gt;最近看到了不少双拼的讨论，就想尝试一下双拼。因为如果反正都是用拼音输入法，那么对于 ing, eng 这些，如果可以按一个按键就输入进去，那么岂不是可以节省很多时间？并且这个还是基于拼音的，和那些需要记住字形的输入法不是一个套路，看着还不错。&lt;/p&gt;

&lt;p&gt;我是这周一开始尝试的。mac 上面用的是鼠须管，ios 用的 touchpal。双拼也有很多方案，我选的方案是小鹤双拼，也没啥特别的原因，就是看用的人挺多的。&lt;/p&gt;

&lt;p&gt;尝试的结果就是，输入了 4 天之后，周五我又换回了拼音输入法。。。。&lt;/p&gt;

&lt;p&gt;因为我越用越发现，双拼也是个码表输入法。开始想得是节省拼音的输入时间，但是打字的时候，比如输入 hao 的时候，想到的不是输入 h 然后输入 ao 对应的字母 c，而是熟悉之后自然而然的按照 hc 来输入，下次需要输入 lao 的时候，还是需要想一下 ao 在字母 c，需要输入 lc。&lt;/p&gt;

&lt;p&gt;这么看的话，和前面说的码表输入法有啥区别呢？所以我感觉双拼也是个码表输入法。既然是码表输入法，双拼的区分度那么差，何必折腾他呢，不如去用二笔呢。而且我用的时候最郁闷的是，二笔训练出来的键位记忆居然总会出来捣乱，这其实也更加说明这个就是码表输入法。。。&lt;/p&gt;

&lt;p&gt;而且还有就是，普通拼音输入法里面，尤其是手机上面，容易按错键，比如 hao 输入成了 hso 的时候，手机上面会纠错，把「好」这个选项放在第一个。但是如果是双拼就没那么好搞了，如果也增加纠错，那会增加很多重码，体验不好。&lt;/p&gt;

&lt;p&gt;另外还有个问题就是对于 sh, s, en, eng 这些不太清楚的人来讲，更加是个挑战，当然拼音可以用模糊音，按说双拼也可以想办法自定义模糊音。但是可能就失去了双拼的一些优势。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>进化论</title>
      <link>https://wdicc.com/evolution/</link>
      <pubDate>Sat, 20 Aug 2016 09:55:17 +0800</pubDate>
      
      <guid>https://wdicc.com/evolution/</guid>
      <description>

&lt;h2 id=&#34;回忆一些没用的&#34;&gt;回忆一些没用的&lt;/h2&gt;

&lt;p&gt;我是 1998 年上的大学。小的时候就对各种电子产品比较感兴趣，当然其实没有什么机会的，当时主要就是游戏机，但是我家里是没有的。高中的时候曾经借同学的回家玩过，和我弟弟一起玩的挺嗨，但是对于增长知识应该是没啥用的。&lt;/p&gt;

&lt;p&gt;高考完毕之后，其实最想要报的还是计算机系，记得暑假的时候在电视里面看电脑相关的讲座，讲的最多的好像就是五笔，那会 windows 用户也不多，都是用的 dos。ucdos 是最常用的。那会电脑最大的用途感觉就是打字输入，然后打印。&lt;/p&gt;

&lt;p&gt;当时没有报计算机，因为闭塞的农村人认为计算机会和财经一样（当时财经类专业曾经火过一些时间，但是介于毕业的人都没啥靠谱工作，所以就认为一般了），过段时间就不行了，所以没有报这块，报的是应用物理专业（当然了，这个专业更屎）。&lt;/p&gt;

&lt;p&gt;那个假期去我舅舅的办公室去玩玩电脑。我舅舅是微机专业毕业的，毕业后回我们那边做类似一个打字的工作（其实我也不知道具体做什么&amp;hellip;.）。我当时去那边就是熟悉各种 dos 命令，学习一下 foxbase。&lt;/p&gt;

&lt;p&gt;当时我记得有一本 foxbase 的书，看里面东西看不懂，没有现在的论坛和方便的网络，没有人可以交流。我记得印象最深的是有一道题需要算 1+2+3+&amp;hellip;+100 等于多少，不懂编程完全不知道怎么做这个事情，但是看了答案看不懂，因为不懂 i=i+1 是什么意思，那会不明白为什么 i 还可以在右边。现在看来，生在那个年代那个地方真的很悲哀。&lt;/p&gt;

&lt;p&gt;进入大学之后，选修了一门 word 之类的课，开始接触 windows。然后宿舍同学熟悉之后，就计划一起买了一台电脑，每个人 1200，我们总共 6 个人，7200 一台电脑，包括音箱电脑桌。当时要上网只能是拨号，56k 猫，开始是用不起的，大概到了大2，3 才开始拨号。然后 6 个人轮流用。那是我们班的地一台电脑，当时辅导员要求大家写保证书，保证不玩游戏才允许买。当然，你们懂得，保证书有个卵用，所以后来某天被发现玩游戏之后，给我们把电脑格式化了。但是之后大家还是会玩。&lt;/p&gt;

&lt;p&gt;上了大学之后，就有网络中心，第一次去网络中心的时候，有点懵逼，和 xh 两个人对着电脑不知道该干啥。旁边的人都在玩 mud，当时不懂，就是看着一个绿窗口觉得很神奇。当然后来我们玩 mud 到昏天黑地就不多说了。玩 mud 玩的多了，慢慢了解到了 mud 的机制，有时候自己搭一个开始研究里面的编程，不过还比较粗浅。当时学的也就是 fortrun，c 语言这些。&lt;/p&gt;

&lt;p&gt;那会的搜索引擎是目录式的，就和黄页一样，除了去看一些门户，就是翻这些东西，希望发现一些有意思的东西。那会学习也基本是靠买书和看自带的文档（不如 msdn），和通过网络靠一些小论坛里面的一些交流。那会写的比较多的是 vc vb 这些，php 之类学的人不多，java 我记得好像也不多。我的毕业论文是一个 vb 的程序，现在看写的比较烂，也就是能用。&lt;/p&gt;

&lt;h2 id=&#34;开始讲网站开发&#34;&gt;开始讲网站开发&lt;/h2&gt;

&lt;p&gt;前面废话太多，又不太舍得删掉，就分一下块吧，下面讲讲网站开发技术的进化。&lt;/p&gt;

&lt;h3 id=&#34;dreamwaver-frontpage-时代&#34;&gt;dreamwaver &amp;amp; frontpage 时代&lt;/h3&gt;

&lt;p&gt;那会做网页比较多的应该是 asp，用 frontpage 写，用 iis 发布，都是图形界面的，linux 没有什么人会用。linux 下面那会各种问题，驱动输入法这些都得花费很大的精力去解决。我装的第一个 linux 应该是 xterm linux，11 张光盘，因为他把一些软件也刻录到光盘了。第一次装 linux 就把宿舍的电脑搞挂了，没选对直接重新分区了。不过也就当年折腾这些弄明白了分区表 mbr 这些东西。&lt;/p&gt;

&lt;p&gt;那会还攒了一些书，有一本就是讲怎么用 dreamwaver 的，当时觉得这个东西真牛逼，抛弃了 frontpage。我还记得我用 frontpage 做的第一个自我感觉良好的网页给别人看的时候，人家的那个表情，基本就是想吐的那种。我现在想，典型的那些花背景底色，大字体，图片按钮，来回滚动的一些内容等等，都是很烂的。&lt;/p&gt;

&lt;p&gt;基于对 dreamwaver 的熟悉，当时还去联想实习了一段时间，给他们解决了一些问题。&lt;/p&gt;

&lt;p&gt;那会做网页一般也就是收个表单，存到数据库什么的，不会有太复杂的东西。做个论坛是最常见的了。那个年代 javascript 是忌讳的东西，一般也就是用来滚动个页面标题什么的，没人拿他做特牛逼的东西。&lt;/p&gt;

&lt;p&gt;毕业之后，就进了出版社。那个时代桌面程序很流行，因为大部分电脑都不能上网的，我到了出版社凭着自己的兴趣，用 vb 做了一个库存管理的软件，其实就是入库多少，出库多少登记一下，简单的很。&lt;/p&gt;

&lt;p&gt;后来也是自己的兴趣，找了一台没人用的电脑，windows 上面跑起了 java web 服务，那会还流行搞一些 java applet 跑。出版社最早的网站就是这么跑起来的。&lt;/p&gt;

&lt;p&gt;在后来装了一个 linux，开始在上面跑 qmail，跑 apache，开始熟悉 linux。同时也有了 php 的网站，不是我开发的，跑在我那个 linux 机器上面。&lt;/p&gt;

&lt;h3 id=&#34;ajax-mvc&#34;&gt;ajax &amp;amp; mvc&lt;/h3&gt;

&lt;p&gt;后来大概有几年没有接触这些了，大概 08 年左右接触到了 ajax，javascript 算是就那几年走上神坛。当时老何演示了一个跑在本地浏览器里面的留言本程序，服务器端不用提供任何 html 相关的服务，只需要保存数据返回数据就好，逻辑都跑在本地浏览器里面。&lt;/p&gt;

&lt;p&gt;不过那个时候我写的比较多的还是那种古老的表单方式，自己没去仔细了解这种新技术。后来大概 09 年左右有机会开始写 javascript 的时候了解了一些机制，感觉这种方式很有意思，渲染逻辑跑在浏览器，这样节省了一些服务器端的压力，并不是什么操作都需要提交到服务器让服务器去判断下一步怎么办。那会用到了 jquery，感觉真的好方便，并且他还提供一些 css 的效果，让不太熟悉的人也可以很方便的搞起来。而服务器端那会用 php 比较多。&lt;/p&gt;

&lt;p&gt;php 当时也接触了一些框架，名字是不记得的。我这种野路子程序员，根本不明白人家的一些设计思路，代码和模板分离，mvc 这些都不懂，不过代码看多了也能明白一些。&lt;/p&gt;

&lt;p&gt;我记得 09 年写这些的时候，一个遗留的 php 网站，需要增加一点功能，发现需要我一个人在 n 个文件里面修改，楞要把一个功能分散个 n 个文件让我很不理解，不是蛋疼么。当然后来明白这么做是为了分工合作为了灵活扩展，那么如果就一个人写的时候，我们是不是也需要这么做呢？&lt;/p&gt;

&lt;h3 id=&#34;emberjs-angular-react-django-spring&#34;&gt;emberjs &amp;amp; angular &amp;amp; react &amp;amp; django &amp;amp; spring&lt;/h3&gt;

&lt;p&gt;后来大概 10 年左右的时候，我写代码还是用 jquery 的方式来做，因为当时觉得很好用。再后来接触了一些 emberjs angular 的一些知识。学习到了 emberjs 里面的命名惯例，比如一个路由叫 posts 那么就有对应的 PostsController，不用你显式的去让他们产生关系。学习 angular 学到了双向绑定的概念，你在定义了一个模型之后，在模板里面用到变量的地方会自动跟着这个模型的数据变化而变化，这就比用 jquery 的时候需要你自己去替换 dom 里面的内容方便多了。然后到了现在的 react 又提出了 virtual dom 的概念，让你不需要关心 dom 结构，你只需要操作你的虚拟 view 就好了。&lt;/p&gt;

&lt;p&gt;当然前端其实还有好多的进步，比如 coffee script 来解决 javascript 这个语言本身的一些问题，哪里不严谨，一些最佳实践什么的就不用你操心了，只需要写 coffee script 就好了，编译成 javascript 之后，会自动处理好。&lt;/p&gt;

&lt;p&gt;还有比如 css 不能 include，import，很多方案来解决这个问题。&lt;/p&gt;

&lt;p&gt;后端这块，最近接触了 django，spring 这些。程序员要分 2 类的话，那就是 java 的和非 java 的，要分三类的话，就是 java ，javascript 和其他，呵呵。看过之后感觉 spring 真是不错的东西。难怪 java 程序员不去了解其他的，入了 java 坑就不用搞其他的了，库类很方便。并且类似 spring 这种东西，好多年前就有了，可以极大的方便 web 开发（不止 web 开发可以用）。如果能很好的驾驭 java，驾驭 tomcat jvm 这些东西，那么使用 java 其实是很不错的方案。通过 java 的 oo 特性，比如继承，重载 interface abstract 这些，可以很方便的定义好一些规范，也可以很好的把大家的工作划分开，架构，定义模型定义接口的人大家协同工作。&lt;/p&gt;

&lt;p&gt;以前文件路径就是网页路径，现在有了 route 的概念（这个概念在 angular, emberjs 里面也有)，做了 route mapping 之后，可以很方便的把不同的 route 映射到相同的方法上面，可以很方便复用代码逻辑。&lt;/p&gt;

&lt;h2 id=&#34;总结下&#34;&gt;总结下&lt;/h2&gt;

&lt;p&gt;上面讲了很多，整个就是个进化史。以前弄个网站出来需要花不少时间，还很难看。现在基于 bootstrap 还有这些开发框架，做一个出来很快外观还好看。这就是进步。&lt;/p&gt;

&lt;p&gt;计算机技术的颠覆是很快的，如果打算一直从事这块工作，建议还是得保持一颗持续学习的心态，也得扩展自己学习的广度，这样可以吸收到各种技术的长处。&lt;/p&gt;

&lt;p&gt;现在学习的手段也多了很多，我看视频直播网站都有开始讲课的了（不一定靠谱），还有各种学习视频，更别说各种可参考的学习文档了。实在是太方便了，只要愿意花时间，进步速度绝对很快。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LLD in zabbix</title>
      <link>https://wdicc.com/lld-in-zabbix/</link>
      <pubDate>Sat, 30 Jul 2016 14:09:58 +0800</pubDate>
      
      <guid>https://wdicc.com/lld-in-zabbix/</guid>
      <description>

&lt;p&gt;如果需要监控的内容比较多的时候，手动管理报警信息就已经不使用了，加一批机器就需要忙活一阵子。也不能体现我们充满智慧的大脑的作用。&lt;/p&gt;

&lt;p&gt;zabbix 支持 LLD(low level discovery) 方式来自动产生监控项目，包括 item, trigger 这些都可以自动添加。大概讲解一下可以利用这个东西做什么事情。&lt;/p&gt;

&lt;h2 id=&#34;zabbix-收集数据的方式&#34;&gt;zabbix 收集数据的方式&lt;/h2&gt;

&lt;p&gt;zabbix 有很多收集数据的方法，这里重点讲 2 个，一个是 &lt;code&gt;zabbix agent&lt;/code&gt;，一个是 &lt;code&gt;zabbix traper&lt;/code&gt;。这两个方式可以和 nagios 里面的 active 和 passive 方式做类比。traaper 方式对应的就是 passive，就是 client 主动发送数据给 server。&lt;/p&gt;

&lt;p&gt;对于 zabbix agent 方式，我们可以自己定义一些 &lt;code&gt;userParameter&lt;/code&gt; 来添加自定义监控，这些网上很多例子。如果使用 trapper 方式，那么原则上面可以不用做任何自定义，就可以通过 zabbix-sender 或者自己模拟 sender 的协议，通过比如 python，java 等发送自己的监控信息。通过 python 发送的例子网上也有。&lt;/p&gt;

&lt;h2 id=&#34;lld&#34;&gt;LLD&lt;/h2&gt;

&lt;p&gt;参考&lt;a href=&#34;https://www.zabbix.com/documentation/3.2/manual/discovery/low_level_discovery&#34;&gt;这里&lt;/a&gt;，LLD 主要的思路就是给服务器端发送一个 json 数据格式。例如下面这个。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
  &amp;#34;data&amp;#34;:[
  
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/&amp;#34;,                           &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;rootfs&amp;#34;   },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/sys&amp;#34;,                        &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;sysfs&amp;#34;    },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/proc&amp;#34;,                       &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;proc&amp;#34;     },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/dev&amp;#34;,                        &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;devtmpfs&amp;#34; },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/dev/pts&amp;#34;,                    &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;devpts&amp;#34;   },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/lib/init/rw&amp;#34;,                &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;tmpfs&amp;#34;    },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/dev/shm&amp;#34;,                    &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;tmpfs&amp;#34;    },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/home&amp;#34;,                       &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;ext3&amp;#34;     },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/tmp&amp;#34;,                        &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;ext3&amp;#34;     },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/usr&amp;#34;,                        &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;ext3&amp;#34;     },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/var&amp;#34;,                        &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;ext3&amp;#34;     },
  { &amp;#34;{#FSNAME}&amp;#34;:&amp;#34;/sys/fs/fuse/connections&amp;#34;,    &amp;#34;{#FSTYPE}&amp;#34;:&amp;#34;fusectl&amp;#34;  }
  
  ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个数据里面，data 是必须的，里面包含里面发现的可监控数据，这可以是任何数据。例子里面是发现了可以用来监控的磁盘分区。data 是个数组，每个可监控项是一个数组元素。还有类似下面这样的数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        {
            &amp;#34;{#HOST}&amp;#34;: &amp;#34;Japan 1&amp;#34;,
            &amp;#34;{#COUNT}&amp;#34;: &amp;#34;5&amp;#34;
        },
        {
            &amp;#34;{#HOST}&amp;#34;: &amp;#34;Japan 2&amp;#34;,
            &amp;#34;{#COUNT}&amp;#34;: &amp;#34;12&amp;#34;
        },
        {
            &amp;#34;{#HOST}&amp;#34;: &amp;#34;Latvia&amp;#34;,
            &amp;#34;{#COUNT}&amp;#34;: &amp;#34;3&amp;#34;
        }
    ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个是发现了一些可监控的 host。&lt;/p&gt;

&lt;p&gt;理解没有？发现是发现可监控的服务，并不是发现监控项。比如我们可以通过发现这机器上面有没有启动 ssh，发现有启动之后，我们就可以通过服务器端配置 discovery 自动添加一些监控规则。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        { &amp;#34;{#SSH_PORT}&amp;#34;: &amp;#34;22&amp;#34; },
        { &amp;#34;{#SSH_PORT}&amp;#34;: &amp;#34;8022&amp;#34; }
    ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;比如上面这个，我们发现了 2 个 ssh 进程，一个是 22 端口，一个是 8022 端口。&lt;/p&gt;

&lt;p&gt;所以重点是发现有什么可监控的服务，并不是发现监控项。&lt;/p&gt;

&lt;p&gt;BUT，其实并不是不能发现监控项，也是可以的。不过是，这种被发现的监控项，除非对应的 trigger 也都是一样的，否则你会发现无法分别添加不同的 trigger 规则。&lt;/p&gt;

&lt;h2 id=&#34;发现监控项&#34;&gt;发现监控项&lt;/h2&gt;

&lt;p&gt;有了发现服务之后，就肯定需要对相应的服务的一些监控项做监控了。这个给 discovery 规则配置 item prototype 就可以了，不过这个里面有点坑需要填，后面会说，这里先不讲。&lt;/p&gt;

&lt;p&gt;那么比如对于 ssh 服务，可以监控
* 当前链接人数，conn.cnt
* 配置文件的 md5，conf.md5（配合 zabbix trigger 可以用来监控文件是不是被修改了）&lt;/p&gt;

&lt;p&gt;那监控数据就如下面&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;22.conn.cnt&amp;#34;: 4,
    &amp;#34;22.conf.md5&amp;#34;: &amp;#34;18492113fb263c9d0a33c9fea403eea1&amp;#34;,
    &amp;#34;8022.conn.cnt&amp;#34;: 9,
    &amp;#34;8022.conf.md5&amp;#34;: &amp;#34;6cab272daa07202ccb57c4064c0dcfb8&amp;#34;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面就是一个 discovery 项目，filter 是 {% raw %}{#SSH_PORT}{% endraw %}，和 2 个 item prototype，分别是 {% raw %}{#SSH_PORT}.cnn.cnt{% endraw %} 和 {% raw %}{#SSH_PORT}.conf.md5{% endraw %}。&lt;/p&gt;

&lt;h2 id=&#34;复杂一点的-lld&#34;&gt;复杂一点的 LLD&lt;/h2&gt;

&lt;p&gt;一个 LLD 还可以发现多个服务。比如下面这种。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        { &amp;#34;{#SSH_PORT}&amp;#34;: &amp;#34;22&amp;#34; },
        { &amp;#34;{#SSH_PORT}&amp;#34;: &amp;#34;8022&amp;#34; },
        { &amp;#34;{#PG_PORT}&amp;#34;: 5432 },
        { &amp;#34;{#PG_PORT}&amp;#34;: 6432 }
    ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个除了我们前面讲的 ssh 服务，还发现了两个 pg 的服务。在服务器端，只需要添加两个 discovery 规则就可以了，分别使用 {% raw %}{#SSH_PORT}{% endraw %} 和 {% raw %}{#PG_PORT}{% endraw %} 这两个宏来过滤数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        { &amp;#34;{#SSH_PORT}&amp;#34;: &amp;#34;22&amp;#34; },
        { &amp;#34;{#SSH_PORT}&amp;#34;: &amp;#34;8022&amp;#34; },
        { &amp;#34;{#PG_PORT}&amp;#34;: 5432 },
        { &amp;#34;{#PG_PORT}&amp;#34;: 6432 }
        { &amp;#34;{#MASTER_DB_PORT}&amp;#34;: 5432, &amp;#34;{#SLAVE_DB}&amp;#34;: &amp;#34;host1&amp;#34; },
        { &amp;#34;{#MASTER_DB_PORT}&amp;#34;: 5432, &amp;#34;{#SLAVE_DB}&amp;#34;: &amp;#34;host2&amp;#34; },
    ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面这个，除了有 2 个 db 之外，还有一个 db 是个 master，能看到他对应的 slave 有哪些。要注意，我们在新增加的这个发现项里面，不能再使用 {% raw %}{#PG_PORT}{% endraw %} 这个宏了，因为如果使用了这个宏，就会和第3，4个项目无法区分了。所以我们改了一下名字。&lt;/p&gt;

&lt;p&gt;到此为止，只是我们的构思，想要告诉 zabbix 我们想要监控什么。真正使用还需要走一些路。&lt;/p&gt;

&lt;h2 id=&#34;如何发送数据&#34;&gt;如何发送数据&lt;/h2&gt;

&lt;p&gt;不管是 discovery 数据，还是 item 的监控数据，都可以通过 agent 和 trapper 方式发送。&lt;/p&gt;

&lt;p&gt;对于 discovery 数据，使用 agent 发送就是上面讲的格式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        { &amp;#34;{#PG.OTHER}&amp;#34;: &amp;#34;0&amp;#34; },
     ]
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果使用 trapper 方式发送，格式如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        {
            &amp;#34;host&amp;#34;: &amp;#34;HOST1&amp;#34;,
            &amp;#34;value&amp;#34;: &amp;#34;{\&amp;#34;data\&amp;#34;: [{\&amp;#34;{#PG.OTHER}\&amp;#34;: \&amp;#34;0\&amp;#34;}]}&amp;#34;,
            &amp;#34;key&amp;#34;: &amp;#34;pg.discover&amp;#34;
        }
    ],
    &amp;#34;request&amp;#34;: &amp;#34;sender data&amp;#34;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面这个数据里面，data 和 request 是 zabbix sender 的固定格式。data 里面，包含了 host, value, key 三个字段。host 是被监控的 host，和将来服务器端的 host 对应。value 是发送的监控内容，可以看到也就是我们使用 agent 发送的内容。key 就是对应的监控项，这个监控项也就是 agent 方式发送对应的那个 userParameter。&lt;/p&gt;

&lt;p&gt;使用 trapper 方式发送里面，是可以伪造被监控的 host 的，所以 trapper 方式并不要求一定要在被监控机器上面执行。&lt;/p&gt;

&lt;p&gt;对于 item 监控数据，使用 agent 发送是下面这种格式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;key1&amp;#34;: 2,
    &amp;#34;key2&amp;#34;: &amp;#34;ok&amp;#34;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用 trapper 方式发送，是下面的这种格式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;data&amp;#34;: [
        {
            &amp;#34;host&amp;#34;: &amp;#34;HOST1&amp;#34;,
            &amp;#34;value&amp;#34;: 1,
            &amp;#34;key&amp;#34;: &amp;#34;key1&amp;#34;
        },
        {
            &amp;#34;host&amp;#34;: &amp;#34;HOST1&amp;#34;,
            &amp;#34;value&amp;#34;: &amp;#34;ok&amp;#34;,
            &amp;#34;key&amp;#34;: &amp;#34;key2&amp;#34;
        }
    ],
    &amp;#34;request&amp;#34;: &amp;#34;sender data&amp;#34;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;zabbix-里面的限制&#34;&gt;zabbix 里面的限制&lt;/h2&gt;

&lt;p&gt;上面的例子很完美，但实际上 zabbix 是有一些限制的。比如 item 定义。&lt;/p&gt;

&lt;p&gt;假如对于发现的 pg 服务，有一个监控项是连接数，比如 {% raw %}{#PG_PORT}.conn.cnt{% endraw %}，此时你会发现在 zabbix 新建 item 的 &lt;code&gt;Key&lt;/code&gt; 那个设置里面，这么写无法提交。需要使用假装类似 userParameter 的方式来写，比如 {% raw %}pg.[{#PG.PORT}.conn.cnt]{% endraw %}，假装那个 &lt;code&gt;pg.&lt;/code&gt; 是个 userParameter 命令，{% raw %}[{#PG.PORT}.conn.cnt]{% endraw %} 里面的内容是他的参数。当然，这个 pg. 可以基本可以是任何字符串，比如 abc，你自己觉得有意义就好了。&lt;/p&gt;

&lt;p&gt;那么这个时候对于发现那块，我们基本不用动，需要动的是被发送的服务的监控项的命名上面。&lt;/p&gt;

&lt;p&gt;比如以那个 ssh 的监控为例，原来发送的数据如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;22.conn.cnt&amp;#34;: 4,
    &amp;#34;22.conf.md5&amp;#34;: &amp;#34;18492113fb263c9d0a33c9fea403eea1&amp;#34;,
    &amp;#34;8022.conn.cnt&amp;#34;: 9,
    &amp;#34;8022.conf.md5&amp;#34;: &amp;#34;6cab272daa07202ccb57c4064c0dcfb8&amp;#34;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;我们只需要修改成这样&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;{
    &amp;#34;ssh[22.conn.cnt]&amp;#34;: 4,
    &amp;#34;ssh[22.conf.md5]&amp;#34;: &amp;#34;18492113fb263c9d0a33c9fea403eea1&amp;#34;,
    &amp;#34;ssh[8022.conn.cnt]&amp;#34;: 9,
    &amp;#34;ssh[8022.conf.md5]&amp;#34;: &amp;#34;6cab272daa07202ccb57c4064c0dcfb8&amp;#34;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对应的 2 个 item prototype，key 分别修改为 {% raw %}ssh[{#SSH_PORT}.cnn.cnt]{% endraw %} 和 {% raw %}ssh[{#SSH_PORT}.conf.md5]{% endraw %}。那个 ssh 可以随意起。并且其实并不一定就得是这种模式，比如叫做 {% raw %}ssh.conf.md5[{#SSH_PORT}]{% endraw %} 应该也可以，当然需要你发送的数据也做对应修改。&lt;/p&gt;

&lt;h2 id=&#34;如何发送监控数据&#34;&gt;如何发送监控数据&lt;/h2&gt;

&lt;p&gt;咦？好像说过一次了？这次和上面不一样，呵呵。&lt;/p&gt;

&lt;p&gt;设计好并写好监控之后，选择什么方式发送监控数据呢。我选择的是 discovery 数据通过 agent 方式获取，也就是在各服务器上面定义相同的一个 key，然后执行这个 key 的时候发送发现的服务信息。&lt;/p&gt;

&lt;p&gt;而对于监控项数据则通过 trapper 方式发送。通过 trapper 方式发送，需要定时执行，可以通过 crontab 发送。我选择的是建立了一个 agent 类型的 item，执行这个 item 的时候发送监控数据。这样一方面可以针对这个发送动作建立一个监控，另外一方面调整很方便，zabbix 界面修改就可以。并且我把这个 item 建立到了模板上面，只要修改应用模板就可以了。&lt;/p&gt;

&lt;p&gt;监控数据也可以用 agent 方式发送，如果用 agent 方式发送，对于上面的 ssh 服务，就需要真的建立那个 ssh 的 userParameter 了，然后接受比如 &lt;code&gt;22.conf.md5&lt;/code&gt; 这样的参数，去返回对应的监控数据。我没有用这种方式，是因为这样做等于有多少个 item 就需要在监控周期内执行多少次那个命令，给服务器增加负担（虽然没多少）。而使用 trapper 方式的话，就可以一次把所有的监控数据都发过去了，命令只需要执行一次。&lt;/p&gt;

&lt;h2 id=&#34;如何应对不同的部分&#34;&gt;如何应对不同的部分&lt;/h2&gt;

&lt;p&gt;到此为止，应该可以很完美的发现服务，并且监控了。但是会发现其实并不是所有服务器的服务都是一样的，比如对于 pgsql，slow query 的界定对于不同的业务可能不一样。而因为 trigger 也是自动发现添加的，这样也有可能需要不同的机器上面的服务有不同的阈值，怎么解决呢？&lt;/p&gt;

&lt;p&gt;先说监控项的阈值。因为我的监控数据其实是通过建立一个 agent 类型的 item 定期发送 trapper 数据来实现的，所以只需要在调用那个 item 的时候传送不同的阈值就可以了。实际上面我的 itme key 定义是这样的 &lt;code&gt;pg.sendtrap[{$PG.DISCOVER.SETTINGS}]&lt;/code&gt; 。那个 pg.sendtrap 是对应到一个 userParameter 的 &lt;code&gt;UserParameter=pg.sendtrap[*],/etc/zabbix/bin/zabbix_pg.py --check --sendtrap --settings $1&lt;/code&gt;，在 zabbix_pg.py 里面，会处理 settings 参数。如果有阈值，那就定义好 &lt;code&gt;{$PG.DISCOVER.SETTINGS}&lt;/code&gt; 这个宏就可以了。template 上面可以定义默认的阈值，当然默认阈值在程序里面定义也可以。然后不同 host 可以定义 host 的阈值，会覆盖模板的配置。&lt;/p&gt;

&lt;p&gt;其实 trigger 的阈值和这个思路类似，也是 template 里面定义一个宏，trigger 里面使用这个宏就可以了。如果 host 有不同的阈值，那就定义一个 host 的宏覆盖他就可以了。&lt;/p&gt;

&lt;h2 id=&#34;目前的情况&#34;&gt;目前的情况&lt;/h2&gt;

&lt;p&gt;配合 zabbix 的 auto registration 这个 action，可以做到新机器只需要执行一个 saltstack state，安装好我们的 zabbix agent，就可以自动注册 host，自动添加监控报警。&lt;/p&gt;

&lt;p&gt;相当完美。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>能不能成功取决于什么</title>
      <link>https://wdicc.com/all-about-lazy/</link>
      <pubDate>Sat, 09 Jul 2016 14:21:10 +0800</pubDate>
      
      <guid>https://wdicc.com/all-about-lazy/</guid>
      <description>

&lt;p&gt;随着年龄的增长，自己对一些事情的认识在改变，一直想总结一个给年轻同学的帖子，但是总是不能总结太好怎么讲，大概从想讲到现在，已经几个月了，我感觉不讲的话可能就讲不出来了，所以乱谈一下。&lt;/p&gt;

&lt;h2 id=&#34;从全栈讲起&#34;&gt;从全栈讲起&lt;/h2&gt;

&lt;p&gt;什么是全栈？我感觉肯定不是普通人，我觉得全栈至少得是绝顶聪明的人才可以做到，对于他们来讲，有很扎实的 CS 功底，并且知识面非常广泛，还有很多产出，并且这些产出是各个方面的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/3c8fbae345f5a480ee55174852f392a1_b.png&#34; alt=&#34;某种观点&#34; /&gt;&lt;/p&gt;

&lt;p&gt;上面是李笑来老师对于全栈的看法，&lt;a href=&#34;https://www.zhihu.com/question/47359997&#34;&gt;这里&lt;/a&gt; 有知乎用户对这个的讨论。&lt;/p&gt;

&lt;p&gt;我只是关注到了他那句话里面的「不太笨」，如果他的意思是很聪明的意思，那观点就和我一致了，呵呵。&lt;/p&gt;

&lt;p&gt;不得不承认，智商和你能掌握的内容是有关系的，智商不够再怎么努力也很难达到某种顶峰。当然这并不是说，智商不够的就没戏了，换句话说，如果智商不够还不努力，你还是就想想老婆孩子热炕头就算了。&lt;/p&gt;

&lt;h2 id=&#34;学习别人&#34;&gt;学习别人&lt;/h2&gt;

&lt;p&gt;学习别人的成功经验，似乎是一种很好的办法，至少人家那条路是走通了。&lt;/p&gt;

&lt;p&gt;这几年流行健身，是吧。看着别人一个一个健身房也好，路边跑步也好，还有奥森跑步的，是不是看着眼红但是又觉得自己周边不具备环境？健身房贵，路边有觉得没有好环境，奥森还有点远，所以我得找一个满足条件的才能去进行这个事情。&lt;/p&gt;

&lt;p&gt;还有比如看到有人拿 kindle 看书，是不是觉得我要是有个 kindle 带着方便，肯定可以看好多书，比如一直想学习的 iOS 开发，还有 Java 编程思想，哎呀呀，编程能力大幅增长啊。所以一定要买个 kindle。&lt;/p&gt;

&lt;p&gt;等等类似的事情吧，别的不多讲了。就是我想要干什么事情，但是呢最好满足个什么条件，会让我干的更好更有动力。&lt;/p&gt;

&lt;p&gt;最后通常的结果呢？步顶多跑几次就会觉得没意思了，kindle 在家里吃灰，然后开始有其他的想法，比如看着人家的 iphone 不错唉，我要是有个，看个 pdf 什么的，比 kindle 方便啊，手机可是一直带着的，所以。。。。&lt;/p&gt;

&lt;h2 id=&#34;听别人讲&#34;&gt;听别人讲&lt;/h2&gt;

&lt;p&gt;欧洲人在放难民进来的时候，想的可是我们可怜你们让你们进来，你们应该很满足，不要闹事老实呆着。所以实际上呢？&lt;/p&gt;

&lt;p&gt;父母亲戚常见的「我都是为了你好」这种说法，大家估计都听腻了吧。有用么？&lt;/p&gt;

&lt;p&gt;微信朋友圈网上各种鸡汤文，比尔盖兹为什么成功，雷军马云的奋斗，这些文章看的时候让人激动人心，看完了貌似就忘记了，是不是？。。&lt;/p&gt;

&lt;h2 id=&#34;关键在哪里&#34;&gt;关键在哪里？&lt;/h2&gt;

&lt;p&gt;我感觉关键就是一个字「懒」。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/mw690/69a2b902jw1f1nn2v6ld1j20go0aswgl.jpg&#34; alt=&#34;懒&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2004 年左右在 irc 玩的时候，就有一个网站 &lt;a href=&#34;http://lmgtfy.com/?q=%E6%87%92&#34;&gt;let me google that for you&lt;/a&gt;。这个网站就是鄙视那些连 google 都懒得用的，稍微有点问题就问别人。知识都是别人的，把别人当 google 用。&lt;/p&gt;

&lt;p&gt;很多人都有类似习惯。我们学习的时候，别人都是引进大门，如果自己不能养成自己知识持续更新的习惯，等到自己连年轻人都跟不上的时候，就很悲哀了。&lt;/p&gt;

&lt;p&gt;这个都无关智商，所谓活到老学到老，别人都给你总结好了，懒字一上来，就混吃等死吧。&lt;/p&gt;

&lt;p&gt;想要客服懒字，得自己给自己洗脑，让自己能坚持的下去。&lt;a href=&#34;http://v.youku.com/v_show/id_XMTY5NTc2MzMy.html&#34;&gt;老罗的奋斗&lt;/a&gt; 里面，老罗讲自己决定要去新东方当老师之前，学习英语的时候，隔段时间就会学不下去，学不下去的时候，看看成功学的书，给自己打打鸡血，就又活蹦乱跳了。&lt;/p&gt;

&lt;p&gt;我大概总结几项提升的方向，遇事情想想，应该有好处
* 主动思考解决问题的最佳思路
* 主动发现问题，改进承担
* 主动推进事情进展
* 不要限定自己的范围，不停挑战难点
* 积极参与到别人的有激情的项目里面
* 对技术保持强烈的好奇心&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何不花钱建立一个支持 https 的 blog</title>
      <link>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</link>
      <pubDate>Sun, 10 Apr 2016 10:18:28 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</guid>
      <description>&lt;p&gt;早年的时候要搞 blog 还得弄一个空间，现在，免费的东西越来越多了，感觉共产主义的实现还要靠资本家啊，不过羊毛出在羊身上。。。&lt;/p&gt;

&lt;p&gt;要想弄一个免费的 blog，首先你的 blog 内容最好是纯静态网页，如果是类似 php 什么的，那就难找了。使用 jeklly, hexo 这些都可以把 markdown 文件渲染成 html。&lt;/p&gt;

&lt;p&gt;然后注册一个 github 或者 gitcafe 等等支持 pages 服务的空间，搞定之后就能得到一个类似于 &lt;a href=&#34;http://wd.github.io&#34;&gt;http://wd.github.io&lt;/a&gt; 这样的地址。&lt;/p&gt;

&lt;p&gt;然后你注册一个域名（发现标题没起好，这个还是要收费的。。），然后注册 cloudflare，把你的域名的 dns 使用 cloudflare 的，然后在 cloudflare 配置一个 cname 到 wd.github.io。然后建立一个 page rule，强制你的域名使用 ssl。&lt;/p&gt;

&lt;p&gt;ok 拉，整个过程就是域名花钱了。可以访问下 &lt;a href=&#34;http://wdicc.com&#34;&gt;http://wdicc.com&lt;/a&gt; 看看效果，会自动跳转到 &lt;a href=&#34;https://wdicc.com&#34;&gt;https://wdicc.com&lt;/a&gt; :D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Custom Netgear r6300v2 wireless router</title>
      <link>https://wdicc.com/custom-netgear-r6300v2-wireless-router/</link>
      <pubDate>Sun, 27 Mar 2016 11:50:38 +0800</pubDate>
      
      <guid>https://wdicc.com/custom-netgear-r6300v2-wireless-router/</guid>
      <description>&lt;p&gt;接 &lt;a href=&#34;https://wdicc.com/Across-the-Great-Wall-we-can-reach-every-corner-in-the-world&#34;&gt;科学上网&lt;/a&gt;。买了群晖之后，一直通过群晖上面跑一个 haproxy 来做转发。不过心里总觉得有点不爽，毕竟一方面多转发了一次，另外群晖在不使用的时候，还会休眠，又或多或少担心影响休眠（经过测试应该是不影响的，但是..）。所以买了 r6300v2 之后，就琢磨通过路由器做这个事情。&lt;/p&gt;

&lt;p&gt;路由器上面搞就有两个选择，一是从 iptables 入手，直接转发出去，另外一个是从软件层面做。&lt;/p&gt;

&lt;p&gt;开始搞了几天的 iptables，发现原有系统 iptables 条目还是挺多的，加上路由器翻墙的功能也需要加一些条目，导致尝试了好几天之后总算能够转发过去链接了，但是数据包过不去，为了调试就开始打算在路由器安装 tcpdump。然后找到了 &lt;a href=&#34;https://github.com/Entware/entware&#34;&gt;https://github.com/Entware/entware&lt;/a&gt; ，配置好之后可以使用 opkg 来安装包。包列表可以参考这里 &lt;a href=&#34;http://pkg.entware.net/binaries/armv7/Packages.html&#34;&gt;http://pkg.entware.net/binaries/armv7/Packages.html&lt;/a&gt; ，这个路由器是 armv7 版本的 cpu。&lt;/p&gt;

&lt;p&gt;安装 opkg 之前先得了解下，梅林固件分两部分存储，一部分是系统区，一部分是自定义区。系统区应该是你刷的固件所在的地方，是不能修改的，自定义区是可以存放一些自己定义的脚本的。每次系统启动的时候，你的一些自定义的东西都是存在自定义区加载的。自定义区就是 /jffs 分区。想要使用，得在 系统管理 -&amp;gt; 系统设置 里面，打开 JFFS 的配置，允许执行上面的脚本。&lt;/p&gt;

&lt;p&gt;因为系统自带的 /jffs 分区只有 60M 左右，而我们装包的时候很容易就超过这个限制了，我现在已经用了 8xM 空间。所以最好还是用一个 u 盘来做这个事情。每次想要自动加载 u 盘，启动 u 盘里面的程序的话，还需要一些自定义的脚本来做这个事情。&lt;/p&gt;

&lt;p&gt;先把 opkg 配置好，需要先准备好 /opt 目录。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;mkdir -p /tmp/opt
mount -t ext4 -o rw,noatime /dev/sda1 /opt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面的 /dev/sda1 是 u 盘，ext4 是文件系统类型，按照自己的修改一下。一般 u 盘插上去就会自动挂载，df 看一下就知道是哪个名字了。系统配置里面有个 dlna 的配置记得关掉，否则他会读 u 盘导致你不能 umount 之类，或者 kill 掉一个叫做 minidlna 的进程也可以。&lt;/p&gt;

&lt;p&gt;然后参考 &lt;a href=&#34;https://github.com/Entware/entware&#34;&gt;https://github.com/Entware/entware&lt;/a&gt; 操作就可以了，可以看到他会在 /opt 给你安装一陀东西。因为这个是 u 盘，所以东西重启也不会丢失。&lt;/p&gt;

&lt;p&gt;然后参考&lt;a href=&#34;https://github.com/RMerl/asuswrt-merlin/wiki/User-scripts&#34;&gt;梅林的 wiki&lt;/a&gt;，它允许用户在 &lt;code&gt;/jffs/scripts&lt;/code&gt; 自定义一些启动脚本，来支持我们自动挂载和启动 u 盘上面的程序。&lt;/p&gt;

&lt;p&gt;post-mount 内容如下，前面几个注释的是调试用的。最后一个 if 里面内容是执行一些 opkg 安装的程序的启动脚本，这个后面说。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;color:#579&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#579&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;#echo $(date) &amp;gt; /tmp/000service-start&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;#echo &amp;#34;$1&amp;#34; &amp;gt;&amp;gt; /tmp/000service-start&lt;/span&gt;
&lt;span style=&#34;color:#888&#34;&gt;#ls /dev/sda* &amp;gt;&amp;gt; /tmp/000service-start&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; -b /dev/sda1 &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;then&lt;/span&gt;
        mkdir -p /tmp/opt
        mount -t ext4 -o rw,noatime /dev/sda1 /opt
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; -x /opt/bin/opkg &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;then&lt;/span&gt;
        /opt/etc/init.d/rc.unslung start
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;要记得 &lt;code&gt;sudo chmod +x post-mount&lt;/code&gt;，然后可以重启路由器看看是不是启动之后就能看到 /opt 有了你上次安装的程序了。&lt;/p&gt;

&lt;p&gt;上面一阶段搞定之后，就可以装一些软件了，比如我装了 vim, tcpdump，bind-dig, haproxy。opkg 的命令使用可以参考这里 &lt;a href=&#34;https://wiki.openwrt.org/doc/techref/opkg&#34;&gt;https://wiki.openwrt.org/doc/techref/opkg&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;接着上面的话题，本来打算装好 tcpdump 来调试的，然后发现可以比较方便的启动 haproxy 之后，就打算用 haproxy 弄了，路由表太多，分析比较麻烦，还是走简单的吧。。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/opt/etc/haproxy.cfg&lt;/code&gt; 如下，把 IP 和 PORT 改成你自己的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;global
        ulimit-n  331071

defaults
        log global
        mode    tcp
        option  dontlognull
        timeout connect 1000
        timeout client 150000
        timeout server 150000

frontend ss-in
        bind *:本机PORT
        default_backend ss-out

backend ss-out
        server server1 IP:远端PORT maxconn 20480&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;/opt/etc/init.d/S001haproxy.sh&lt;/code&gt; 如下，&lt;code&gt;sudo chmod +x /etc/init.d/S001haproxy.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;color:#579&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#579&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#963&#34;&gt;haproxy_bin&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;/opt/sbin/haproxy
&lt;span style=&#34;color:#963&#34;&gt;haproxy_cfg&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;/opt/etc/haproxy.cfg
&lt;span style=&#34;color:#963&#34;&gt;pid&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;/opt/var/run/haproxy.pid

&lt;span style=&#34;color:#963&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$1&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$action&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#007020&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;Usage: &lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$0&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt; {start|stop|restart}\n&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;2&lt;/span&gt;
        &lt;span style=&#34;color:#007020&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$action&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; in
        start&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#963&#34;&gt;$haproxy_bin&lt;/span&gt; -f &lt;span style=&#34;color:#963&#34;&gt;$haproxy_cfg&lt;/span&gt; -p &lt;span style=&#34;color:#963&#34;&gt;$pid&lt;/span&gt; -D
                ;;
        stop&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#007020&#34;&gt;kill&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;cat &lt;span style=&#34;color:#963&#34;&gt;$pid&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;
                ;;
        restart&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#007020&#34;&gt;kill&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;cat &lt;span style=&#34;color:#963&#34;&gt;$pid&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;
                &lt;span style=&#34;color:#963&#34;&gt;$haproxy_bin&lt;/span&gt; -f &lt;span style=&#34;color:#963&#34;&gt;$haproxy_cfg&lt;/span&gt; -p &lt;span style=&#34;color:#963&#34;&gt;$pid&lt;/span&gt; -D
                ;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;esac&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;因为前面在 post-mount 最后一个 if 里面的语句，这样启动路由器就会自动启动 haproxy 了。&lt;/p&gt;

&lt;p&gt;想使用这个端口转发，还需要在路由器配置界面里面增加一个到路由器 ip 的映射，然后还需要一个 &lt;code&gt;/jffs/scripts/firewall-start&lt;/code&gt; 如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;color:#579&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#579&#34;&gt;&lt;/span&gt;
iptables -I INPUT -i ppp0 -p tcp --destination-port PORT -j ACCEPT&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;我使用的过程中还发现一个问题，pkg.entware.net 貌似被墙了。。虽然配置了翻墙但是不太明白为什么路由器上面时好时坏，而我局域网内的 mac 访问总是 ok 的，很奇怪。路由器上面不能访问有个办法是通过 mac 代理一下。&lt;/p&gt;

&lt;p&gt;mac 上面启动一个 ngx，配置如下，使用 nginx -p ./ -c nginx.conf 启动。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;events {
  worker_connections 1024;
}


http {
  server {
      listen 0.0.0.0:8000;
      location / {
           proxy_pass http://pkg.entware.net;
      }
  }
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后修改路由器上面 /opt/etc/opkg.conf &lt;code&gt;src/gz packages http://MAC_IP:8000/binaries/armv7&lt;/code&gt;，然后就可以了。&lt;/p&gt;

&lt;p&gt;写完自己看发现这不是一份操作指南，只能算是一些提示，如果有人照着做能不能成功可能还是得看自己。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>lua metatable</title>
      <link>https://wdicc.com/lua-metatable/</link>
      <pubDate>Sun, 27 Mar 2016 10:48:26 +0800</pubDate>
      
      <guid>https://wdicc.com/lua-metatable/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;t = setmetatable({ bar = 4, foo = 7 }, { __index = { foo = 3 } })

print(t.foo)  -- 7
print(t.bar)  -- 4

t = setmetatable({  }, { __index = { foo = 3} })

print(t.foo)  -- 3
print(t.bar)  -- nil

fuc = function (t,k)
    if k == &amp;#39;foo&amp;#39; then
        return rawget(t, &amp;#39;bar&amp;#39;)
    else
        return 0
    end
end

t = setmetatable({   }, { __index = fuc })

print(t.foo)  -- 3
print(t.bar)  -- nil
print(t.ff)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Across the Great Wall, we can reach every corner in the world</title>
      <link>https://wdicc.com/across-the-great-wall-we-can-reach-every-corner-in-the-world/</link>
      <pubDate>Sun, 20 Mar 2016 20:39:53 +0800</pubDate>
      
      <guid>https://wdicc.com/across-the-great-wall-we-can-reach-every-corner-in-the-world/</guid>
      <description>

&lt;p&gt;科学上网估计是每个搞 IT 的人必须要掌握的知识了。简单讲讲我目前使用的一些方法。&lt;/p&gt;

&lt;h2 id=&#34;国外服务&#34;&gt;国外服务&lt;/h2&gt;

&lt;p&gt;首先肯定需要先有个国外的资源，比如买专业的 vpn ss 服务等。数据经过第三方都不一定那么可靠，我的主力邮箱在 gmail，可不想被攻破，所以我选择了自己购买和搭建服务。&lt;/p&gt;

&lt;p&gt;我买的是 linode 的服务，最便宜的是 10$ 一个月。也可以买一些美国的 kvm 或者 zen 的虚拟机，有比较便宜的一个月可能才不到 1$，当然这种便宜的一般很快就会卖没，得看运气。我的 linode 是和 3 个基友一起合租的，这样大家每个人一年也就 300 来块钱，也就一顿海底捞（我这两年非常喜欢用饭钱来衡量消费，吃饭可是天天都有的，但是有些消费，比如买软件，买服务这些一般都是一年或者几年才一次，比起吃饭真的便宜多了），一般都能承担的吧。&lt;/p&gt;

&lt;p&gt;早期我买过一些 ssh 服务，速度不稳定，因为很难限制超售。后来还买过云梯，他们提供的节点比较多速度还不错。&lt;/p&gt;

&lt;p&gt;有了 vps 搭一个 ssserver 就是很简单的了，就不多说了。服务器上面我还配置了 ocserv 这个支持 cisco 客户端的 vpn 服务。当然并不是所有 vps 都支持，有的 vps 没有 tun 设备，跑不起来，买的时候要注意。&lt;/p&gt;

&lt;h2 id=&#34;ssh-方式&#34;&gt;ssh 方式&lt;/h2&gt;

&lt;p&gt;使用 ssh 方式的时候，最早是直接 ssh 链接弄一个 socks 端口给本地，然后本地使用 pac 配合。&lt;/p&gt;

&lt;p&gt;后来有段时间被断的不行，就试了 stunnel，可以把 ssh 转为 https 服务，这样就可以跑在 443 端口了，和其他 https 服务比较难区分。可以起点作用。&lt;/p&gt;

&lt;p&gt;这个方式没法支持手机。&lt;/p&gt;

&lt;h2 id=&#34;使用-ngx&#34;&gt;使用 ngx&lt;/h2&gt;

&lt;p&gt;有段时间还使用 hosts 文件加 ngx 反向代理还翻墙。ngx 上面配置 google.com 和 twitter.com 的反向代理，然后手机或者电脑上面配置 hosts 指向 ngx。就可以实现翻墙了。不过因为都是 https 的网站，所以服务器上面得配置 https 的服务，证书得弄到电脑或者手机上面信任才行。&lt;/p&gt;

&lt;p&gt;这个手机想要支持的话，ios 比较麻烦，必须得越狱。&lt;/p&gt;

&lt;h2 id=&#34;vpn-方式&#34;&gt;vpn 方式&lt;/h2&gt;

&lt;p&gt;早期用 vpn 方式的时候，pptp 可以搭配 &lt;a href=&#34;https://github.com/fivesheep/chnroutes&#34;&gt;chnrouts&lt;/a&gt; 来实现国外和国内走不同的路由。用起来也不错，不过问题是全局的有时候切换也不方便，并且有时候还需要连公司的 vpn 路由一乱就麻烦了。&lt;/p&gt;

&lt;p&gt;pc 上面选择比较多。手机上面，试过 anyconnect，缺点就是全局翻墙（我试过让 server 只 push fb twitter 的路由，但是维护麻烦，效果也不好）。anyconnect 比较赞的地方是他的链接 cookie 可以设置比较长的有效期，这样网络切换什么的临时断开之后自动重连也不需要输入密码。哦，当然，我的 anyconnect 和后面提到的 openvpn 都是通过自己签的证书来认证的，也不需要输入密码。&lt;/p&gt;

&lt;p&gt;后来用过 openvpn，openvpn 是基友维护的。他的思路很赞。&lt;/p&gt;

&lt;p&gt;他买了一台 server 放家里，家里是联通 adsl 24h 联机，然后 server 上面跑一个 openvpn 的服务器端给手机连接用，服务器上面再通过 vpn 和 vps 的 vpn 链接，同时这机器配置只有国外路由才走 vps，国内都是直接链接。大概链路就是  手机 -&amp;gt; 家里的 server -&amp;gt; vps。如果是国内的网站，就直接通过家里的 server 访问了，比国外的 vps 访问速度快。&lt;/p&gt;

&lt;p&gt;这个方法还有好处是有时候一些公开的场合链接一些 wifi 的时候，很不安全，而通过 vpn 之后，数据都是加密的，就安全多了。我在 surge 之前，在 hosts 不能用之后，基本都是用这个和 anyconnect。&lt;/p&gt;

&lt;h2 id=&#34;使用-ss&#34;&gt;使用 ss&lt;/h2&gt;

&lt;p&gt;开始使用 ss 的时候，是使用 goagentx （貌似已经比较难找到下载了）的，这个工具异常好用，支持切换全局还是使用 pac 非常方便。pac 推荐使用 &lt;a href=&#34;https://github.com/JinnLynn/genpac&#34;&gt;genpac&lt;/a&gt; 来维护 pac，放到 dropbox 里面就可以四处用了。&lt;/p&gt;

&lt;p&gt;我有相当长一段时间都是这么翻墙的。直到后面 ios 9 放开网络权限之后，出来了 surge。surge 现在卖的太贵了，不建议购买，最近好像看到有一些新的软件也在出现，可以考虑。&lt;/p&gt;

&lt;p&gt;surge 出来之后，ios 基本就是用这个了。&lt;/p&gt;

&lt;p&gt;surge 也有 mac 版本。如果没有，使用 ss mac 版本也可以，搭配 pac 可以做到透明。&lt;/p&gt;

&lt;h2 id=&#34;应对不稳定的网络情况&#34;&gt;应对不稳定的网络情况&lt;/h2&gt;

&lt;p&gt;家里是联通 adsl，链接我的 linode 一直都比较稳定，速度不错也没有丢包。公司访问 linode 有时候丢包比较严重，不过也将就用了。去年去长沙出差，那边完全访问不能把我搞的很痛苦。回来就开始琢磨怎么搞。&lt;/p&gt;

&lt;p&gt;上面基友的思路提醒了我，就是自己家里一台 server 建长链接，然后在外面翻墙先连家里。但是家里的路由器完全不能定制，后来发现我的群晖的 nas 可以装 haproxy，就搞定这个事情了。在路由器上面映射一个端口给群晖，群晖上面跑 haproxy 转发到 linode。给路由器弄了个 ddns，在外面翻墙都连接这个 dns。&lt;/p&gt;

&lt;p&gt;群晖上面跑 haproxy 还不影响硬盘休眠，还挺不错。这样就彻底解决了我翻墙的问题了。&lt;/p&gt;

&lt;p&gt;但是遇到家里停电断网就虾米了。。&lt;/p&gt;

&lt;h2 id=&#34;家里的全局翻墙方案&#34;&gt;家里的全局翻墙方案&lt;/h2&gt;

&lt;p&gt;前段时间换了 Netgear R6300v2，才发现我之前错过了好多好玩的东西。刷了个国内论坛定制的梅林 rom，自带了 ss 客户端，并且配置的非常完美，支持多种翻墙策略，具体就不细说了。就说现在的效果吧。&lt;/p&gt;

&lt;p&gt;直接映射了端口到 linode 的 ss，并且也支持 ddns（我用的 3322 的），这样 nas 上面的 haproxy 就彻底可以不用了。&lt;/p&gt;

&lt;p&gt;路由器跑了 ss 客户端，加 redsocks2 和 dns2proxy，实现了国内网站直连，国外根据域名匹配到列表里面的服务器通过 ss 链接。这样家里所有的终端，不需要跑任何服务，就可以无缝翻墙了。我的 ps4，apple tv，ipad 上面的 yotube 都可以访问了。然后还支持黑名单，我把 nas 加进去了，防止使用 bt 下载的时候跑到国外流量。&lt;/p&gt;

&lt;p&gt;这样我目前手机和 mac 都是直接通过 surge，国外流量通过 3322 的 dns 先链接到路由器，然后转发到 linode 实现翻墙。&lt;/p&gt;

&lt;h2 id=&#34;目前唯一的问题&#34;&gt;目前唯一的问题&lt;/h2&gt;

&lt;p&gt;mac 版本的 surge，还不能自己配置网络，这样临时想关掉代理的时候，就比较麻烦，得去网络配置里面关。也不能很简单的配置让全部流量走 proxy，有时候需要测试下什么的，就比较麻烦。所以我现在有时候还会使用 goagentx 辅助一下。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>setup proxy for emacs</title>
      <link>https://wdicc.com/setup-proxy-for-emacs/</link>
      <pubDate>Sat, 27 Feb 2016 21:55:20 +0800</pubDate>
      
      <guid>https://wdicc.com/setup-proxy-for-emacs/</guid>
      <description>&lt;p&gt;我在 mac 上面使用 emacs 都是使用 daemon + emacsclient 模式。使用 &lt;code&gt;paradox&lt;/code&gt; 包管理(其实就是比 &lt;code&gt;list-package&lt;/code&gt; 稍微多了一点功能&amp;rsquo;)，但是因为那些包什么的信息都在国外的网站，还有 github 什么的，导致速度巨慢甚至连不上，关键 emacs 单线程还得卡着别的操作，所以挺讨厌的(其实 paradox 提供了异步更新的方式，不会阻塞现在进程，但是有时候会不知道进度&amp;hellip;)。&lt;/p&gt;

&lt;p&gt;思路就是使用 &lt;code&gt;proxychains&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;新建一个 &lt;code&gt;/Library/LaunchAgents/gnu.emacs.daemon.plist&lt;/code&gt; 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &amp;#34;-//Apple//DTD PLIST 1.0//EN&amp;#34;
    &amp;#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;#34;&amp;gt;
 &amp;lt;plist version=&amp;#34;1.0&amp;#34;&amp;gt;
  &amp;lt;dict&amp;gt;
    &amp;lt;key&amp;gt;Label&amp;lt;/key&amp;gt;
    &amp;lt;string&amp;gt;gnu.emacs.daemon&amp;lt;/string&amp;gt;
    &amp;lt;key&amp;gt;ProgramArguments&amp;lt;/key&amp;gt;
    &amp;lt;array&amp;gt;
      &amp;lt;string&amp;gt;/usr/local/bin/proxychains4&amp;lt;/string&amp;gt;
      &amp;lt;string&amp;gt;-f&amp;lt;/string&amp;gt;
      &amp;lt;string&amp;gt;/Users/wd/.proxychains/proxychains.conf&amp;lt;/string&amp;gt;
      &amp;lt;string&amp;gt;/usr/local/opt/emacs-mac/bin/emacs&amp;lt;/string&amp;gt;
      &amp;lt;string&amp;gt;--daemon&amp;lt;/string&amp;gt;
    &amp;lt;/array&amp;gt;
   &amp;lt;key&amp;gt;RunAtLoad&amp;lt;/key&amp;gt;
   &amp;lt;true/&amp;gt;
   &amp;lt;key&amp;gt;ServiceDescription&amp;lt;/key&amp;gt;
   &amp;lt;string&amp;gt;Gnu Emacs Daemon&amp;lt;/string&amp;gt;
   &amp;lt;key&amp;gt;UserName&amp;lt;/key&amp;gt;
   &amp;lt;string&amp;gt;wd&amp;lt;/string&amp;gt;
  &amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;其中 &lt;code&gt;/Users/wd/.proxychains/proxychains.conf&lt;/code&gt; 文件的内容如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;strict_chain
proxy_dns
remote_dns_subnet 224
tcp_read_time_out 15000
tcp_connect_time_out 8000
localnet 127.0.0.0/255.0.0.0
localnet 10.0.0.0/255.0.0.0
localnet 172.16.0.0/255.240.0.0
localnet 192.168.0.0/255.255.0.0
quiet_mode

[ProxyList]
#socks5 127.0.0.1 1080
http 127.0.0.1 6152&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>use gearman to distribute you nagios check</title>
      <link>https://wdicc.com/use-gearman-to-distribute-you-nagios-check/</link>
      <pubDate>Mon, 18 Jan 2016 15:14:36 +0800</pubDate>
      
      <guid>https://wdicc.com/use-gearman-to-distribute-you-nagios-check/</guid>
      <description>

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;h2 id=&#34;gearman&#34;&gt;gearman&lt;/h2&gt;

&lt;p&gt;需要 boost &amp;gt; 1.39, libevent-devel, libuuid-devel, gperf
需要 gcc &amp;gt;= 4.2&lt;/p&gt;

&lt;p&gt;export CC=gcc44
export CC=g++44&lt;/p&gt;

&lt;h2 id=&#34;mod-gearman&#34;&gt;mod-gearman&lt;/h2&gt;

&lt;p&gt;libtool-ltdl-devel ncurses-devel
&amp;ndash;with-gearman&lt;/p&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;gearman 分为几个模块
* mod_gearman: 负责把 nagios 中的检查任务发给 gearmand job server
* gearmand: 负责接收任务，分配给 worker 执行。这个是个通用的队列管理服务。
* gearman_workder: 负责消费 gearmand 中的 job。&lt;/p&gt;

&lt;p&gt;其中 &lt;code&gt;mod_gearman&lt;/code&gt; 的代码里面包括了上面提到的 mod_gearman 和 gearman_workder。&lt;/p&gt;

&lt;p&gt;所以规划好 gearmand 启动的机器，以及你的 worker 机器。其中要注意 worker 机器上面是会执行所有[1] nagios 监控&lt;/p&gt;

&lt;p&gt;需要配置的文件有几个
* nagios.cfg 增加 broker
* mod-gearman/etc/mod_gearman/mod_gearman_neb.conf broker 的配置文件
* mod-gearman/etc/mod_gearman/mod_gearman_worker.conf workder 的配置文件&lt;/p&gt;

&lt;h1 id=&#34;启动&#34;&gt;启动&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;先启动 gearmand 使用 mod-gearman/etc/init.d/gearmand 这个脚本。&lt;/li&gt;
&lt;li&gt;启动 worker 使用 mod-gearman/etc/init.d/mod_gearman_worker 这个脚本。启动之后可以用 gearman_top 看到多了一些队列。&lt;/li&gt;
&lt;li&gt;重启 nagios&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;确认 nagios.log 里面正常加载了 gearman，然后看 gearman_top 里面开始有一些 run 的 job 了。&lt;/p&gt;

&lt;h1 id=&#34;注意事项&#34;&gt;注意事项&lt;/h1&gt;

&lt;p&gt;基本上使用 gearman 还算是对用户透明，需要配置的东西不多，默认配置就可以跑。&lt;/p&gt;

&lt;p&gt;一般使用 gearman 的时候都是现有 nagios 遇到瓶颈了，这个时候扩展的时候需要注意下，第一步可以在 nagios 机器上面（或者弄一台新的机器）做 gearman 的 job server，然后在 nagios 的机器上面跑一个 worker，这样基本就是 0 配置都可以跑起来，不会有任何问题。&lt;/p&gt;

&lt;p&gt;第一步完成之后就会需要增加 worker，这个时候就要注意了，新的 worker 机器上面，需要在相同的路径下面包括所有你用到的 nagios plugin（包括自己写的，也包括这些 plugin 依赖的其他内容，比如临时文件路径，配置文件等），否则分发过来的 job 会执行不成功。&lt;/p&gt;

&lt;p&gt;这个时候有个办法，就是把原来机器的 nagios 相关目录通过 nfs 共享给其他机器（但是得注意二进制程序是兼容的）。&lt;/p&gt;

&lt;p&gt;另外如果需要测试一下新的 worker，也可以通过配置只让 worker 执行某些 servicegroup 或者 hostgroup 的任务。要注意这个时候需要配置 service, eventhandler, host 都为 no，然后配置 servicegroups 或者 hostgroups。&lt;/p&gt;

&lt;h1 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h1&gt;

&lt;p&gt;[1] 其实 worker 是可以被配置为只处理某些监控的，这个后面会讲。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use ivy to replace isearch</title>
      <link>https://wdicc.com/use-ivy-to-replace-isearch/</link>
      <pubDate>Sun, 10 Jan 2016 19:22:20 +0800</pubDate>
      
      <guid>https://wdicc.com/use-ivy-to-replace-isearch/</guid>
      <description>&lt;p&gt;之前习惯使用 &lt;code&gt;isearch&lt;/code&gt; 来搜索了，最近看别人使用 &lt;code&gt;ivy&lt;/code&gt; 看着心痒痒的，就想试试看。其实 ivy 的效果和 &lt;code&gt;swoop&lt;/code&gt; 很像，不过区别是 ivy 是在 minibuffer 来显示可选信息的，swoop 是在一个 buffer 显示的。有洁癖的可能稍微计较一下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;;; ivy &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;swiper&lt;/span&gt;
(defun wd&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;swiper&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;at&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;point&lt;/span&gt; ()
  &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;Pull next word from buffer into search string.&amp;#34;&lt;/span&gt;
  (interactive)
  (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;let&lt;/span&gt; (query)
    (with&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;ivy&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;window&lt;/span&gt;
      (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;let&lt;/span&gt; ((&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;tmp&lt;/span&gt; (symbol&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;at&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;point)))
        (setq query tmp)))
    (when &lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;query&lt;/span&gt;
      (&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;insert&lt;/span&gt; (format &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;%s&amp;#34;&lt;/span&gt; query))
      )))

(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; ivy
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (ivy&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;)
  (setq ivy&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;virtual&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;buffers t)
  (set&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;variable &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;ivy&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;on&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;del&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#339;font-weight:bold&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;function &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;lambda&lt;/span&gt;()))
  )

(use&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;package&lt;/span&gt; swiper
  :&lt;span style=&#34;color:#06b;font-weight:bold&#34;&gt;config&lt;/span&gt;
  (global&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;set&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;key &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;\C-s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;swiper)
  (define&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;key swiper&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;map&lt;/span&gt; (kbd &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;C-w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;wd&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;swiper&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;at&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;point)
  (define&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;key swiper&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;map&lt;/span&gt; (kbd &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;C-f&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f00;background-color:#faa&#34;&gt;&amp;#39;&lt;/span&gt;swiper&lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt;avy)
  )&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;我大致做了上面几个设定，&lt;code&gt;\C-s&lt;/code&gt; 绑定了 swiper，启动 swiper 之后用 &lt;code&gt;\C-w&lt;/code&gt; 可以快速把光标位置的 symbol 放到 minibuffer 来搜索。然后 swiper 和 isearch 有个区别是，默认情况下，swiper 如果 minibuffer 没有内容，按 backspace 会退出，这个和 isearch 的习惯不一样，把 &lt;code&gt;ivy-on-del-error-function&lt;/code&gt; 重新绑定一下就可以了。&lt;/p&gt;

&lt;p&gt;ivy 默认会绑定一个快捷键是在你 minibuffer 输入一些内容之后，会出来很多匹配结果，这个时候可以按 &lt;code&gt;C-&#39;&lt;/code&gt; 调用 &lt;code&gt;swiper-avy&lt;/code&gt; 方便你快速定位，也挺好用的。不过我这里不好用，不知道怎么回事，只好重新绑定了一下。&lt;/p&gt;

&lt;p&gt;还可以在 swiper 查询阶段按 &lt;code&gt;M-q&lt;/code&gt; 进入替换模式。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>基于 ffi 的 libmcrypt 加密模块</title>
      <link>https://wdicc.com/libmcrypt-ffi-module/</link>
      <pubDate>Sun, 05 Jul 2015 20:55:11 +0800</pubDate>
      
      <guid>https://wdicc.com/libmcrypt-ffi-module/</guid>
      <description>&lt;p&gt;openresty 提供了 luajit 的支持，luajit 又提供了 ffi 库的支持。通过 ffi 可以很方便的调用 c 库的一些方法。&lt;/p&gt;

&lt;p&gt;我在项目里面用到了加解密，因为需要各语言支持，使用了 libmcrypt 库。之前通过 c 模块完成了在 lua 里面加密，在 perl 里面解密。有了 ffi 就可以使用纯 lua 模块搞定了。&lt;/p&gt;

&lt;p&gt;代码写的比较丑，有使用加解密的需求的可以参考下，另外计划写其他模块的也可以参考下。如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;66
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;67
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;68
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;69
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;70
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;71
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;72
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;73
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;74
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;75
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;76
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;77
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;78
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;79
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;local ffi = require &amp;#39;ffi&amp;#39;
local ffi_new = ffi.new
local ffi_str = ffi.string
local ffi_copy = ffi.copy
local setmetatable = setmetatable

local _M = { }
local mt = { __index = _M }

ffi.cdef[[
struct CRYPT_STREAM;
typedef struct CRYPT_STREAM *MCRYPT;

MCRYPT mcrypt_module_open(char *algorithm,
                          char *a_directory, char *mode,
                          char *m_directory);

int mcrypt_generic_init(const MCRYPT td, void *key, int lenofkey,
                        void *IV);

int mcrypt_generic_deinit(const MCRYPT td);
int mcrypt_generic_end(const MCRYPT td);
int mdecrypt_generic(MCRYPT td, void *plaintext, int len);
int mcrypt_generic(MCRYPT td, void *plaintext, int len);
int mcrypt_module_close(MCRYPT td);

]]

local mcrypt = ffi.load(&amp;#39;libmcrypt.so.4&amp;#39;)

_M.new = function (self)
    local cipher = &amp;#39;blowfish&amp;#39;
    local mode = &amp;#39;cbc&amp;#39;

    local c_cipher = ffi_new(&amp;#34;char[9]&amp;#34;, cipher)
    local c_mode = ffi_new(&amp;#34;char[4]&amp;#34;, mode)

    local td = mcrypt.mcrypt_module_open(c_cipher, nil, c_mode, nil)
    return setmetatable( { _td = td }, mt )
end

_M.encrypt = function(self, key, raw)
    local iv_len = 8
    local td = self._td

    local c_key = ffi_new(&amp;#34;char[?]&amp;#34;, #key+1, key)
    local c_iv = ffi_new(&amp;#34;char[9]&amp;#34;, key)
    local c_raw = ffi_new(&amp;#34;char[?]&amp;#34;, #raw+1, raw)

    mcrypt.mcrypt_generic_init(td, c_key, #key, c_iv)
    mcrypt.mcrypt_generic(td, c_raw, #raw )
    mcrypt.mcrypt_generic_deinit(td)

    return ffi_str(c_raw, ffi.sizeof(c_raw)-1)
end

_M.decrypt = function(self, key, raw)
    local iv_len = 8
    local td = self._td

    local c_key = ffi_new(&amp;#34;char[?]&amp;#34;, #key+1, key)
    local c_iv = ffi_new(&amp;#34;char[9]&amp;#34;, key)
    local c_raw = ffi_new(&amp;#34;char[?]&amp;#34;, #raw+1, raw)

    mcrypt.mcrypt_generic_init(td, c_key, #key, c_iv)
    mcrypt.mdecrypt_generic(td, c_raw, #raw )
    mcrypt.mcrypt_generic_deinit(td)

    return ffi_str(c_raw, ffi.sizeof(c_raw)-1)
end

_M.close = function(self)
    local td = self._td
    if td then
        mcrypt.mcrypt_module_close(td)
     end
end

return _M&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用方法比较简单，代码里面写死了是 &lt;code&gt;blowfish&lt;/code&gt; 的 &lt;code&gt;cbc&lt;/code&gt; 模式，并且 iv 使用 key 的前 8 个字符&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;local mcrypt = require &amp;#34;mcrypt&amp;#34;
local m = mcrypt:new()

-- 一系列加解密
local en = m:encrypt(&amp;#39;xxx&amp;#39;,&amp;#39;yyyy&amp;#39;)
...
local de = m:decrypt(&amp;#39;xxx&amp;#39;, yyyy&amp;#39;)

-- 最后关闭
m:close()&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>postgresql transaction isolation</title>
      <link>https://wdicc.com/postgresql-transaction-isolation/</link>
      <pubDate>Sun, 10 May 2015 23:20:49 +0800</pubDate>
      
      <guid>https://wdicc.com/postgresql-transaction-isolation/</guid>
      <description>

&lt;p&gt;翻译自 &lt;a href=&#34;http://www.postgresql.org/docs/current/static/transaction-iso.html，&#34;&gt;http://www.postgresql.org/docs/current/static/transaction-iso.html，&lt;/a&gt; 内容没翻译全，供参考。&lt;/p&gt;

&lt;h2 id=&#34;并发控制&#34;&gt;并发控制&lt;/h2&gt;

&lt;h3 id=&#34;13-2-事务隔离级别&#34;&gt;13.2 事务隔离级别&lt;/h3&gt;

&lt;p&gt;SQL 标准定义了四个事务隔离级别。最严格的就是串行化(Serializable)，根据标准定义，任何并发的串行化事务如果在相同的时间使用相同的顺序执行，那么需要有相同的执行结果。其他的三个隔离级别，都定义了在并发事务互相影响的情况下，在各隔离级别下不允许出现的一些现象。根据标准，这些现象都不允许出现在串行化这个级别。(这并不令人惊讶 &amp;ndash; 如果为了事务的结果一致只允许同时运行一个事务，那怎么可能会出现因为事务互相影响产生的现象)。&lt;/p&gt;

&lt;p&gt;在各级别禁止的一些现象如下：&lt;/p&gt;

&lt;p&gt;脏读(dirty read)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;一个事务读取到另一个并发的事务还没有提交的数据。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;不可重复读(nonrepeatable read)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;一个事务重复读取之前读过的数据的时候，发现数据已经被其他事务修改（就是在第一次读取之后做的提交)。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;幻读(phantom read)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;一个事务重新执行一个查找符合条件的数据的查询的时候，发现返回的数据因为这期间别的事务做了提交而发生了变化。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;四个事务隔离级别和对应的行为在表 13-1 中进行了描述。&lt;/p&gt;

&lt;p&gt;表 13-1 SQL 标准定义的事务隔离级别&lt;/p&gt;

&lt;p&gt;| 事务隔离级别               | 脏读   | 不可重复读 | 幻读   |
|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+&amp;mdash;&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;&amp;ndash;|
| 读未提交(read uncommitted) | 可能   | 可能       | 可能   |
| 读已提交(read committed)   | 不可能 | 可能       | 可能   |
| 可重复读(repeatable read)  | 不可能 | 不可能     | 可能   |
| 串行化(serializable)       | 不可能 | 不可能     | 不可能 |&lt;/p&gt;

&lt;p&gt;（译者注：这个表格是个很大的迷惑，要注意他描述的只是标准定义的，而不是 PostgreSQL 里面的情况，在 PostgreSQL 中的实际情况和上面表格标记的不一致，下面的译文里面也多次会提到。）&lt;/p&gt;

&lt;p&gt;在 PostgreSQl 中，你可以使用任意的四个隔离级别。但是，在内部其实只有三个，分别对应到读已提交、可重复读和串行化。当使用读未提交这个级别的时候，实际上和读已提交是一样的，而幻读在 PostgresSQL 的可重复读级别是不可能出现的，所以在 PostgreSQL 中实际的隔离级别可能比你选的更加严格一点。这个是 SQL 标准允许的：标准里面的四个隔离级别只定义了哪种现象不能出现，没有定义哪种现象一定会出现。PostgreSQL 只提供了三个隔离级别，是因为这是唯一比较合理的把标准定义的隔离级别映射到多版本并发控制架构上面的办法。在下面的章节里面会详细讲解各个隔离级别。&lt;/p&gt;

&lt;p&gt;设置事务隔离级别的语句是 set transaction。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;重要提示：有些 PostgreSQL 的数据类型和函数在事务里面有特别的表现。特别的，对于序列(sequence)(以及定义为 serial 类型的列对应的序列)的修改会立刻对所有事务有效，并且在事务回滚的时候也不会被回滚。请参考 9.16 和 8.1.4。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;13-2-1-读已提交事务隔离级别&#34;&gt;13.2.1 读已提交事务隔离级别&lt;/h4&gt;

&lt;p&gt;读已提交是 PostgreSQL 里面默认的事务隔离级别。当一个事务使用此级别的时候，一个 select 查询(不带 for update/share 字句)只可以查到当前查询开始前已经提交的数据，(在此查询执行的过程中)永远不会查到其他并发事务执行时的未提交数据和已提交的修改。事实上，一个 select 查询可以&amp;rdquo;看“到执行开始瞬间的数据库的一个快照。不过，select 查询可以”看“到当前事务里面已经完成更新的数据，即使他们还没有被提交。同时也要注意，如果有其他事务在一个事务的第一个 select 执行之后提交了修改，那么那个事务里面的前后成功的两个 select 查询也有可能得到不同的结果。&lt;/p&gt;

&lt;p&gt;update, delete, select for update, 和 select for share 这些语句在查找目标数据的时候的时候，表现和 select 是一样的：都是只能查找到在语句执行开始的时候就已经提交的数据。然而，这些目标数据可能就已经被其他并发事务修改（或者删除、加锁(locked))了。在这种情况下，即将执行更新的事务将会等待第一个执行了更新的事务的提交或者回滚（如果他仍然在执行中）。如果第一个更新事务执行了回滚，那么它的执行结果会取消，后续的更新事务会处理所有之前查找到的数据。如果第一个更新事务执行了提交，那么后续的更新事务会忽略第一个事务删除的行，然后针对已经更新过的数据上面执行它自己的操作。语句里面的查询条件（where 语句）会重新被执行来查看已经更新的数据是否还满足条件。如果满足，那后续的更新事务会在已经更新过的数据上面执行他自己的操作。如果执行的是 select for update 和 select for share 语句，那会返回或者锁定更新后的数据给客户端。&lt;/p&gt;

&lt;p&gt;基于以上规则，一个更新语句可能会得到一个“不稳定”的快照。它会“看”到其他并发事务对它将要更新的数据的修改，但是“看”不到其他并发事务对其他数据的修改。这个行为会导致读已提交事务隔离级别不适用于一些复杂的查询，只适用于简单的情况。例如，想象一下在事务里面更新银行账户余额：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;BEGIN&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt; accounts &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SET&lt;/span&gt; balance &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; balance &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;100&lt;/span&gt;.&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; acctnum &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;12345&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt; accounts &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SET&lt;/span&gt; balance &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; balance &lt;span style=&#34;color:#333&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;100&lt;/span&gt;.&lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; acctnum &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;7534&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;COMMIT&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果有两个类似的事务要更新 12345 这个帐号的余额，我们显然是希望第二个更新事务是基于第一个的结果来更新。因为每个语句都是更新既定的数据，所以只能“看”到更新的数据不会造成不一致。&lt;/p&gt;

&lt;p&gt;在读已提交事务隔离级别里面，复杂一点的情况可能会得到预期之外的结果。例如，想象一下一个 delete 语句操作的数据被其他语句从他的限制条件里面增加或者移除。例如，假设 website 是一个包含两行数据的表，其中 website.hits 字段分别等于 9 和 10。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;BEGIN&lt;/span&gt;;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt; website &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SET&lt;/span&gt; hits &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; hits &lt;span style=&#34;color:#333&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#888&#34;&gt;-- run from another session:  DELETE FROM website WHERE hits = 10;
&lt;/span&gt;&lt;span style=&#34;color:#888&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;COMMIT&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;虽然在执行 update 前后，都有 website.hits = 10 的数据，但是那个 delete 语句将没有任何效果。这是因为未执行成功 update 前，9 这行数据是被 delete 忽略的，当 update 执行完毕，delete 得到锁之后，新的数据的值已经不是 10 而是 11 了，已经不再符合 delete 的条件了。&lt;/p&gt;

&lt;p&gt;读已提交事务隔离级别在事务开始的时候会创建一个包含了在那个瞬间所有已提交的事务的数据的快照，同一个事务里面的后续语句会“看”到其他并发事务提交的数据。前面的问题的关键点是，单个语句是否可以得到一个持续一致的数据库。&lt;/p&gt;

&lt;p&gt;读已提交事务隔离级别对于很多程序来说就已经足够了，使用起来快速简单。显然，它并不适用于所有情况。对于使用了复杂查询和更新的程序，或许需要对数据一致性要求比读已提交更加严格的事务隔离级别。&lt;/p&gt;

&lt;h4 id=&#34;13-2-2-可重复读事务隔离级别&#34;&gt;13.2.2 可重复读事务隔离级别&lt;/h4&gt;

&lt;p&gt;可重复读事务隔离级别只能“看”到在事务开始前已经提交的数据，并且永远也“看”不到未提交的或者在事务执行期间被其他并发事务更新的数据。（当然，查询语句是可以“看”到在当前事务里面的已经执行的更新的，即使他们还没有被提交。）这么做比 SQL 标准里面针对这个隔离级别的要求严格，在表 13-1 里面表述的现象都不能发生。如前面所说，这么做标准是允许的，标准只描述了各隔离级别最低的要求。&lt;/p&gt;

&lt;p&gt;这个隔离级别不同于读已提交隔离级别，在可重复读事务隔离级别里面一个查询可以“看”到事务开始的时候的一个快照，不是当前事务里面当前查询开始的时候的快照。因此，一个事务里面成功执行的 select 语句会得到相同的结果，也就是说，他们都”看“不到在事务开始之后其他事务提交的修改。&lt;/p&gt;

&lt;p&gt;使用这个隔离级别的应用，应该在遇到序列化失败(serialization failures)的时候准备好重试。&lt;/p&gt;

&lt;p&gt;update, delete, select for update, 和 select for share 这些语句在查找目标数据的时候的时候，表现和 select 是一样的：都是只能查找到在事务执行开始的时候就已经提交的数据。然而，这些目标数据可能就已经被其他并发事务修改（或者删除、加锁(locked))了。在这种情况下，可重复读事务将会等待第一个执行了更新的事务的提交或者回滚（如果他仍然在执行中）。如果第一个更新事务执行了回滚，那么它的执行结果会取消，后续的更新事务会处理所有之前查找到的数据。如果第一个更新事务执行了提交（真的对数据执行了更新或者删除，不是只是加了锁），那么可重复读事务会执行回滚，并且报错&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ERROR:  could not serialize access due to concurrent update&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;因为可重复读事务在事务开始后不能对被其他事务做了修改的数据做修改或者锁定。&lt;/p&gt;

&lt;p&gt;当应用程序得到这个错误信息的时候，应该立刻中止当前事务，重新从事务开始再次执行。再次执行的时候，这个事务就可以”看“到之前被其他事务提交的修改了，所以使用新版本数据作为新事务的起点的时候，就不会再有逻辑冲突了。&lt;/p&gt;

&lt;p&gt;要注意只有有更新操作的事务才需要重试，只读的事务是永远不会有序列化冲突的。&lt;/p&gt;

&lt;p&gt;读已提交事务隔离机制严格保证了每个事务都得到一个完整稳定的数据库快照。However, this view will not necessarily always be consistent with some serial (one at a time) execution of concurrent transactions of the same level. For example, even a read only transaction at this level may see a control record updated to show that a batch has been completed but not see one of the detail records which is logically part of the batch because it read an earlier revision of the control record. Attempts to enforce business rules by transactions running at this isolation level are not likely to work correctly without careful use of explicit locks to block conflicting transactions.&lt;/p&gt;

&lt;p&gt;提示：在 PostgreSQL 9.1 以前，序列化事务隔离级别的情况和前面描述的信息是一样的。如果需要以前的序列化事务隔离级别，那可以使用现在的可重复读隔离级别。&lt;/p&gt;

&lt;h4 id=&#34;13-2-3-序列化隔离级别&#34;&gt;13.2.3 序列化隔离级别&lt;/h4&gt;

&lt;p&gt;序列化事务隔离级别是最严格的事务隔离级别。这个级别把所有已经提交的事务模为拟序列化执行，就像是事务执行完一个执行另一个，顺序的，而不是并发的。当然，类似于可重复读事务隔离级别，应用程序在序列化失败的情况下必须要准备好重试。事实上，这个级别和可重复读事务隔离级别是一模一样的，除了会监控 except that it monitors for conditions which could make execution of a concurrent set of serializable transactions behave in a manner inconsistent with all possible serial (one at a time) executions of those transactions. This monitoring does not introduce any blocking beyond that present in repeatable read, but there is some overhead to the monitoring, and detection of the conditions which could cause a serialization anomaly will trigger a serialization failure.&lt;/p&gt;

&lt;p&gt;举个例子，比如有表 mytab，初始的时候如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt; class | value
-------+-------
     1 |    10
     1 |    20
     2 |   100
     2 |   200&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;假设在序列化事务 A 里面执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SUM&lt;/span&gt;(value) &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;FROM&lt;/span&gt; mytab &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;1&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后把结果（30）作为 value 字段，class = 2 作为新行插入回去。同时，序列化事务 B 里面执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;SUM&lt;/span&gt;(value) &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;FROM&lt;/span&gt; mytab &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;2&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;得到结果 300,并把结果和 class = 1 作为新行插入回去。然后两个事务都尝试提交。如果任意事务执行在可重复读级别，那么两个事务都可以提交; but since there is no serial order of execution consistent with the result, 使用序列化事务隔离级别的话，会允许其中一个事务提交，而回滚另一个事务，并且报如下错误信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;ERROR:  could not serialize access due to read/write dependencies among transactions&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这是因为如果 A 在 B 之前执行的话，B 的计算结果就会是 330 而不是 300,类似的，其他顺序会导致 A 得到不同的结果。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>成长</title>
      <link>https://wdicc.com/upgrade-myself/</link>
      <pubDate>Thu, 19 Feb 2015 18:05:55 +0800</pubDate>
      
      <guid>https://wdicc.com/upgrade-myself/</guid>
      <description>&lt;p&gt;刚开始参加工作，通常都是钱多少，户口给不给，安逸不安逸等等这种单一原因决定去哪里工作。一般都还没那个能力综合考虑一家公司。&lt;/p&gt;

&lt;p&gt;那么选择大公司？选择初创公司？还是选择业界有影响力的公司？思考了很久，最后发现，这个时候选择什么公司不重要，重要的是自己，要选择自己感兴趣的，能保留自己强烈的求知欲的公司，最好公司的业务方向就是自己感兴趣的。&lt;/p&gt;

&lt;p&gt;刚进入公司这二年很重要，在此期间能学习到大量的学校学习不到的技能，比如和同事相处，怎么理解需求，代码怎么写更好，工程如何组织等等。而这些东西，通常都是靠自己学习来搞定的，通过公司的一些培训（如果有的话），通过自己的观察，通过自己从互联网等资料学习的。这个期间你要强迫自己不停的学习，不停的思考。&lt;/p&gt;

&lt;p&gt;在一个公司呆大概一年到二年左右，逐渐参与几个项目之后，应该已经可以独立承担负责一些小的事情了，这个时候一般会开始遇到瓶颈，可以学习的似乎都学的差不多了，一般都会开始思考&amp;rdquo;这家公司是否适合我&amp;rdquo;，或者&amp;rdquo;自己是否考虑换个工作经历一下&amp;rdquo;，要不然就是&amp;rdquo;你看有的同学换了一个工作工资涨了50%&amp;ldquo;，这些原因加起来，可能就会考虑是不是要换个公司了。&lt;/p&gt;

&lt;p&gt;那么要不要换呢？从开拓眼见上面来讲，换是有一定意义的。各公司通常有各公司的一些运作方式，有一些包括一些很好的经验。通过换工作，可以学习到不少项目运作，分工合作的方式。&lt;/p&gt;

&lt;p&gt;当然通常这些事情并非一定要换工作才能学习到，通过社交也能了解一部分。另外还有一个情况，别的公司的一些成功经验，也并非一定会适用你的团队。&lt;/p&gt;

&lt;p&gt;一般来讲，技术工程师有两个方向的发展。一个是资深的技术大拿，一个是管理方面的 leader。两个方向不冲突，有些人可以兼顾。技术大拿指的是那些代码能力极强，很能专研技术，对管人没有兴趣，只对自己研究的技术有兴趣的人。管理方面指的不是技术一点都不行的，一般也得对技术有一定的了解，但是更多的精力会花在组建打理团队上面，对业务比较熟悉，能很好的把业务方向和技术结合起来的人。&lt;/p&gt;

&lt;p&gt;为什么讲这个呢？和换工作有关系么？首先看你的方向是哪个。如果是专研技术，那么关注的应该是这个公司是否可以提供给你一个专心专研技术的氛围。有些技术是和业务结合比较紧密的，这种倒还好，但是有些是离业务比较远的，比如研究内核。一般业务团队都不乐意养一个研究和业务方向无关的人。&lt;/p&gt;

&lt;p&gt;如果是搞管理，那应该关注的是你的业务是不是有前景，你的老大负责的业务是不是有前景，你所在的公司搞的业务是不是有前景。当然，在视野比较小的时候，可能很难判断。简单点，就看看你的老大是不是让你觉得他很牛逼吧。如果你对他都不崇拜不佩服，那可能就得仔细考虑下了。&lt;/p&gt;

&lt;p&gt;需要关心公司的前景吗？刚工作没两年的人可能会觉得，公司再赚钱也不会多给我发多少，反正我就赚那么多，好像和我没关系。其实是有关系的。只有公司前景好，才有能力去养活更多的人，才有更多的业务方向给大家去尝试，才有机会创造更大的财富，大家也才有机会获得更多的回报。只有不断成长的公司，你的技术能力才有机会体现，才有机会负责更多更重要的事情，也就是所谓的有更多的机会。&lt;/p&gt;

&lt;p&gt;当然，可能前提是你得进入一个正常的公司，有一个正常的领导。 :D&lt;/p&gt;

&lt;p&gt;两年之后，一般就会有一些事情让你负责了，不管是重要的技术还是团队或者业务。这个时候就开始考验你的 leader 能力了。领导技术研究方向来支持业务，领导团队拿到更好的成绩。&lt;/p&gt;

&lt;p&gt;有时候跟着牛逼人物混会产生一种自己也很牛逼的错觉。当牛逼人物不在的时候，会猛然发现，离开人家之后自己好像啥都搞不太好。所以其实最重要的是学习牛逼人物的一些思考问题的方法，以及培养适合自己的学习思考和工作的方式。这些才是自己后面受用不尽的东西。&lt;/p&gt;

&lt;p&gt;两年之后的继续发展，全看你自己的能力了。思考自己后面的路的时候，你可以给自己设想一下，如果给你5个人，你能把现在的业务做成什么样子，或者你能搞出来什么引导潮流的什么牛逼技术？&lt;/p&gt;

&lt;p&gt;如果给你 20 个人呢？50 个呢？你打算怎么办？&lt;/p&gt;

&lt;p&gt;这就是所谓的成长。回答不了这些问题，说明你还没有成长。如果你能答好后面那个问题，能把 20 个人的事情安排到很好，那我估计你已经不需要看这篇文章啦。:D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《黑客与画家》读书笔记</title>
      <link>https://wdicc.com/notes-for-hackers-and-painters/</link>
      <pubDate>Sun, 28 Dec 2014 16:45:45 +0800</pubDate>
      
      <guid>https://wdicc.com/notes-for-hackers-and-painters/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;如果某一天你想要去赚大钱，那么请记住这一点，因为这是创业公司能够成功的原因之一。大公司为了避免设计上的灾难，选择了减少设计结果的标准差。但是当你排斥差异的时候，你不仅将失败的可能性排除在外，也将获得高利润的可能性排除在外。这对大公司来说不是问题，因为生产特别优秀的产品不是它们的获胜手段。大公司只要做大不太烂，就能赢。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;公司大到一定程度之后，更加希望稳定的可重复的产出，慢慢大家都会趋于稳定，不改变现有的系统。通常来说，创新和稳定肯定是冲突的，一旦选择的稳定，创新的积极性慢慢就会丧失。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;所以，viaweb 的开发人员总是与客服人员保持密切联系。客服人员坐在离程序员只有 9 米的地方，知道自己可以随时打断程序员的工作，提交新证实的 bug 的报告。遇到重大 bug，我们就算在开董事会，也会马上回来修改程序。
我们这种方式让所有人都感到满意。客户很高兴，拨打厂商服务热线是免费的，而且还被当做通风报信的人，受到郑重对待。客服人员也喜欢这样，因为这使得他们可以帮助用户，而不是对着用户读操作手册。程序员也喜欢这样，因为他们能够再现 bug，而不是通过模糊不清的二手报告了解 bug。
...... 客户支持实际上就是质量监控，也是某种程度上面的市场营销。除了记录 bug，客服人员还必须了解相关知识，回答与 bug 相关的一些问题，解释令使用者迷惑不解的功能等。有时，他们也扮演了使用者的代理人，我们会问他们哪个新功能是用户更想要的，他们总是能做出正确的回答。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;短线沟通，及时响应的重要性。程序员的成就感，有时候不一定是来自于程序写的多好，能帮人解决问题有时候也会有成就感。短线能增加成就感。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;提高软件开发质量的关键在于开发的时候全身贯注，而不是降低开发速度。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这个和现代的敏捷开发做的事情类似，保证开发人员专注。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&amp;#34;帕金森定律&amp;#34; 后来成为这些表现形式的代名词，它包括很多内容，其中有一条就是『因为你必须做到，所以你能够做到』。
可测量性和可放大性......如果你有一个令你感到安全的工作，你是不会致富的，因为没有危险，就几乎等于没有可放大性。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可测量和可放大性，一种衡量工作重要性的指标。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;假定软件有两个候选的新功能，它们创造的商业价值完全相同，那么我们总是选择较困难的那个功能。不是因为这个功能能带来更多的收入，而是因为它比较难。我们很乐于迫使那些又大又慢的竞争对手跟着我们一起走进沼泽地。 
创业公司就像游击队一样，喜欢选择不易生存的深山老林作为根据地，政府的正规军无法追到那种地方。我还记得创业初期我们是多么筋疲力尽，整天都为一些可怕的技术难题绞尽脑汁。但是，我还是感到相当高兴，因为那些问题连我们都觉得这么困难，那么竞争对手就更会认为是不可能解决的。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;难才是体现价值的地方。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;注意，我说的是“用户需要的设计”，而不是“用户要求的设计”。我不想让读者产生一种印象，认为设计师就像厨师一样，顾客点什么菜就一模一样做出来。艺术的各个领域有着巨大的差别，但是我觉得任何一个领域的最佳作品都不可能由对用户言听计从的人做出来。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;所谓的产品设计。应该是设计用户需要的，而不是用户要求的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何照顾糖尿病猫猫</title>
      <link>https://wdicc.com/how-to-take-care-of-diabetic-cats/</link>
      <pubDate>Sun, 19 Jan 2014 22:16:09 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-take-care-of-diabetic-cats/</guid>
      <description>

&lt;p&gt;注1： 最前面先公布个群，名字叫做“糖猫猫”，号码是 143834033。里面好多糖尿病猫猫的主人，可以交流，大家都很热心。&lt;/p&gt;

&lt;p&gt;注2：再在前面说点，本文最初是基于宠物医院使用的稀释的办法给猫打胰岛素的，不过后面发现了一个更好的办法，使用 bd 针管，具体看最后补充的吧。&lt;/p&gt;

&lt;p&gt;猫的糖尿病其实和人的是类似的，估计哺乳动物都这样。和人一样，猫猫上了年纪也容易得各种老年病，糖尿病就是其中一种。好像看到资料说做过绝育的母猫的得病几率更加大。&lt;/p&gt;

&lt;p&gt;我理解糖尿病应该是一种慢性病，遇到得糖尿病的猫如果救助及时，应该是可以恢复的。好的话，甚至可以恢复胰岛素的分泌，摆脱胰岛素注射。&lt;/p&gt;

&lt;p&gt;{% blockquote [&lt;a href=&#34;http://catmaid.wordpress.com/2009/01/12/diabeticcat/&#34;&gt;http://catmaid.wordpress.com/2009/01/12/diabeticcat/&lt;/a&gt;] [如何照顧糖尿病貓?] %}
動物吃下去的食物在身體裡被轉換成葡萄糖，隨著血液在身體裡流動，提供細胞養分，並且製造能量。身體裡的胰島素則是幫助細胞從血液裡取得所需能量的媒介。在正常的情況下，葡萄糖進入身體後，胰腺細胞開始釋放胰島素，並將之分配至身體的細胞，以使他們能夠”捕獲”他們所需的葡萄糖。&lt;/p&gt;

&lt;p&gt;胰腺負責製造足夠的胰島素，細心的平衡血液中的葡萄糖濃度以避免濃度過高(血醣過高症)或者過低 (血醣過低症)。然而，罹患二型糖尿病的動物，身體的細胞對於胰島素無法正確反應(亦即不會”捕獲”他們所需的葡萄糖)，加上身體無法自行處理過多的葡萄糖而導致體內葡萄糖濃度異常的高。
{% endblockquote %}&lt;/p&gt;

&lt;h2 id=&#34;糖尿病症状的前期表现&#34;&gt;糖尿病症状的前期表现&lt;/h2&gt;

&lt;p&gt;{% blockquote %}
糖尿病貓的早期症狀為體重減輕，食慾會明顯增加或是變的很貪吃，喝水量增加而且頻尿 ( 譯者註: 三多…吃的多、喝的多、尿的多 )。當身體無法處理葡萄糖，大腦開始釋放”多吃”的訊息以帶進更多的葡萄糖。此時，體內的葡萄糖濃度開始上升，但是因為胰島素缺乏而無法被利用，身體裡飢餓的細胞開始消耗脂肪及肌肉蛋白質以轉換為肝醣。由於這樣的過程不斷循環，血液中的葡萄糖滲入尿液中，並且將水分從細胞中帶出，導致貓咪不斷的感覺口渴,而大量喝水，而不論貓咪喝了多少水，身體仍然會一直處於脫水狀態。
{% endblockquote %}&lt;/p&gt;

&lt;p&gt;我看到的早期猫猫会表现出来，口渴，喝水多，同时尿多，饥饿，开始变瘦这些症状。&lt;/p&gt;

&lt;p&gt;你会发现水碗空的很快，经常看到猫猫在喝水。同时猫砂盆里面会发现尿的也多了，经常会发现超大的猫砂球，同时猫砂也用的变多了，以前可能两天不收拾也没问题，现在一天一次都感觉很多。会发现猫砂球变粘了，不容易铲，这是因为尿里面含糖量太高。老表现出来饥饿，对以前没兴趣的东西也变的感兴趣。&lt;/p&gt;

&lt;p&gt;上面总体就是我家猫初期的表现。如果能注意到，那及时把猫送宠物医院查查吧，血糖试纸验血很便宜。不过因为猫猫也不会说话，一般都会注意不到，注意到了也一般不会重视。&lt;/p&gt;

&lt;p&gt;上面表现之后，就会发现猫慢慢的没精神，吃的少了，水到是还是经常喝，像我家猫总呆在饭盆水盆前面发呆，尤其是水盆，经常趴在水盆前面睡觉。这个时候猫猫症状就已经比较严重了，一般得到医院输液救治了。下面这段引用说的就是这个情况。酮酸中毒产生之后，猫猫就基本没精神加没胃口了。并且酮酸中毒之后，可能肾，肝这些部位也会开始产生问题，出现衰竭。&lt;/p&gt;

&lt;p&gt;{% blockquote %}
最後由於身體不能利用葡萄糖做為能量來源，而使用體內的脂肪來取代，這些脂肪代謝產生的酮體，在體內累積過多後便產生酮酸中毒。酮酸中毒可以迅速發生或是在幾天內慢慢產生，如果不立即治療的話，則可能導致昏迷甚至死亡。
{% endblockquote %}&lt;/p&gt;

&lt;h2 id=&#34;如何治疗&#34;&gt;如何治疗&lt;/h2&gt;

&lt;p&gt;我总结的。不一定适合所有猫，供参考。&lt;/p&gt;

&lt;p&gt;我家猫送医院的时候，就已经是酮酸中毒的症状了。中间&lt;a href=&#34;http://wdicc.com/diabetic-cat-maomao/&#34;&gt;几经周折&lt;/a&gt;，久病成医，多少也可以讲讲，呵呵。&lt;/p&gt;

&lt;p&gt;因为猫已经不吃东西了，所以肯定是需要输液，补各种微量元素（大夫关注的好像是钾和纳，钾元素不足就会出现没精神的状态），用短效胰岛素降血糖，让血糖持续稳定在 10 以下，不过要注意也不能太低，到 2 以下可能就会引发低血糖症状了，低血糖是比高血糖更可怕的情况。我家猫当时打的是 0.6 单位（有的地方用 u 标识单位） 的短效，我看到有网站提示说是按照体重每公斤 0.25u，我家猫当时是 2.3 kg，所以 0.6 差不多。&lt;/p&gt;

&lt;p&gt;上面的目的是保持血糖数值的同时，补充身体电解质，补充体力。期间如果有了精神可以尝试喂 A/D 罐头，如果能吃东西，那我看基本就有救了。看情况可能会需要持续几天的重症监护，具体到什么时候看医生的安排吧，我感觉是看他的精神如果比较好了，就可以回家吃钾片，钾镁片等药恢复，也不用老输液，输液多也会导致血管堵塞等。&lt;/p&gt;

&lt;p&gt;回家之后一个事情就是需要持续打胰岛素。那么自己验血糖，配胰岛素，打针就是不可避免的了。这三项技能我们分开说。&lt;/p&gt;

&lt;h3 id=&#34;验血糖&#34;&gt;验血糖&lt;/h3&gt;

&lt;p&gt;验血糖和给人操作差不多，仪器也是和人通用的。我用的是怡成的jps7，国产的。有些进口的比如拜耳之类，机器比较贵的，试纸也贵。试纸是消耗品，像开始的时候，我家猫一天测个十几次的（2小时一次），进口的试纸就有点接受不了了。也有人进口的国产的都买，进口的几天测一次这种，平时用国产的。我觉得其实没啥必要，看个相对数就好，一般关注的就是下面几个范围。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;3 以下。有低血糖怀疑，如果表现出来低血糖的症状，要感觉处理。&lt;/li&gt;
&lt;li&gt;3 到 7。正常的范围。&lt;/li&gt;
&lt;li&gt;7 到 15。稍微有点高，但是问题不严重&lt;/li&gt;
&lt;li&gt;15 到 25。有点高。&lt;/li&gt;
&lt;li&gt;25 以上。很高。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这上面是我总结的，那些边界不一定就是个定死的，理解大意就好。也可以参考&lt;a href=&#34;http://petdiabetes.wikia.com/wiki/Blood_sugar_guidelines&#34;&gt;这里&lt;/a&gt;写的，这里的专业。&lt;/p&gt;

&lt;p&gt;顺便说下低血糖的症状。低血糖的表现在人就是头晕无力。猫不会说话，表现是无力，软趴趴的，你扶起来他会继续趴着，像块布一样，怎么摆布都没反应，那基本就是低血糖了，这个时候要赶紧送医院，看情况是输液，打针还是喝水补充葡萄糖。但是如果血糖低于 3，但是猫没有低血糖的症状，也不用着急，喂点吃的应该就会好起来，不要着急补充葡萄糖。低血糖是很致命的，会导致脑部缺能量，导致脑部出问题什么的，所以要慎重。&lt;/p&gt;

&lt;p&gt;给猫采血一般可以是耳朵采血或者脚垫采血。据说脚垫采血如果弄不好的话，容易发生感染（大概是因为脚比较容易接触到脏东西），所以一般都是耳朵采。买血糖仪一般会带一个采血的笔，那个玩意很好用。可以参考下&lt;a href=&#34;http://www.youtube.com/watch?v=4CDew2sNOcI&amp;amp;list=WLocLdlbhE3tvtQuJjfqU5tUwWrucncUWR&#34;&gt;这个视频&lt;/a&gt;。如果猫耳朵毛长可以剃一下，那个凡士林可以用红梅素膏代替，都是不太贵的东西。扎之前如果用酒精处理过的话，要定酒精干了才能扎。扎的时候如果不容易出血，可以调整一下笔的针头的位置，不过别调多了把猫耳朵扎穿。。。&lt;/p&gt;

&lt;h3 id=&#34;配胰岛素&#34;&gt;配胰岛素&lt;/h3&gt;

&lt;p&gt;胰岛素我买的是来得时的长效，大概 180 一支，3ml 300个单位。还有短效可以选，不过一般是说长效的控制的好一点。短效和配合长效用，长期还是靠长效控制。&lt;/p&gt;

&lt;p&gt;目前我家猫是每次 1.5u 每天 3 次，8 小时一次。早期的时候是每次 0.5u，后来慢慢调整涨上来的。我看有人每次 6u 每天 2 次的。还有每天 4 次的，猫有区别，不能照搬，得找到适合自己和自己猫的方法。看到一个说法是是按照体重来打，每公斤 0.25u，不过如果控制不住也没办法，只能加量。&lt;/p&gt;

&lt;p&gt;就是说先得确认个自己猫的胰岛素的量是多少，这可能有个调整的过程，所以掌握算法还是有必要的，呵呵。&lt;/p&gt;

&lt;p&gt;然后针管，因为每次打的量也不多，所以买 1ml 的那种就可以，淘宝上面便宜的几分钱一个，要注意针头不要太粗，否则猫可能会疼。只是要注意，针头里面其实是有空间的，那些是不算到刻度里面的。但是打针的时候那里面的其实是打不出来的。但是用它做度量的时候要注意是否需要算上针头里面的。&lt;/p&gt;

&lt;p&gt;接下来买注射用水，就是稀释胰岛素的。因为 0.1ml 就是 10 个单位，所以一般需要稀释才能用。这个东西也不贵，我买到的是 2ml 装的。&lt;/p&gt;

&lt;p&gt;万事俱备，就差公式了。胰岛素 1ml 是 100 个单位。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;100x/(k+x) = y/m

其中的变量如下，前三个单位是 ml
k: 计划使用的注射用水的总量
x: 计划使用的胰岛素的总量
m: 每针计划注射的总量
y: 每针要注射的胰岛素的量，单位是单位 u&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面公式的四个变量，确定三个就可以算第四个了。举几个例子。&lt;/p&gt;

&lt;p&gt;比如计划每针 1 个单位（y=1），为了节省注射用水，每针计划注射总量 0.05ml（m=0.05）。还差 2 个变量，先简单演算下，比如计划 2ml 注射用水都用掉，那么 k 就是 2ml，算一下胰岛素是多少。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;100x/(2+x) = 1/0.05 = 20/1
x = 0.5ml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;胰岛素是 0.5ml。两方面抽出来之后，还需要有混合的地方，一般就选注射用水的瓶子就可以，所以根据结果只需要简单的抽 0.5ml 胰岛素，打入注射用水里面，得到的就是 0.05 含 1u 胰岛素的混合液。&lt;/p&gt;

&lt;p&gt;再来一个例子，比如计划多打点 y=1.5, m=0.05, k=2ml，看看胰岛素应该是多少。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;100x/(2+x) = 1.5/0.05 = 30/1
x=60/70=0.86&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;胰岛素是 0.86ml。虽然 0.06 不太好抽，但是似乎勉强也可以。不过难点是，2ml 的注射用水的瓶子里面，是放不进去 0.86ml 的，放 0.5ml 就差不多满了。。。。所以这样是不行的。那怎么办？&lt;/p&gt;

&lt;p&gt;也简单，我们先确定胰岛素的量，既然 0.86ml 放不下，我们定个 0.7ml 试试看能不能放下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;100x0.7/(k+0.7) = 1.5/0.05 = 30/1
k= 49/30 = 1.63&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这样，注射用水是 1.63ml ，然后胰岛素 0.7ml，混合后是 2.33ml，是可以放的下的。注射用水里面需要抽出来 2-1.63=0.37ml，然后就可以把胰岛素打进去了。要注意的是，抽出来的时候，针头里面是有空间的，那里面的量是不算到刻度里面的，把针头留空抽大概 0.37ml 就可以了。&lt;/p&gt;

&lt;h3 id=&#34;打针&#34;&gt;打针&lt;/h3&gt;

&lt;p&gt;第一次打针可能会比较紧张，其实这是个非常简单的事情。可以在喂食的时候打针，糖尿病猫一般都是饿死鬼一样，根本不会理会你打针的。打针的位置是肋骨那里，或者大腿根部上面。把皮揪起来，在皮的中部靠下的位置，可以参考&lt;a href=&#34;http://petdiabetes.wikia.com/wiki/Syringe&#34;&gt;这里&lt;/a&gt;，左侧的正确的图，扎进去，推药就可以了，要注意不要扎穿了。。。。如果觉得有需要可以先用酒精擦拭，不过要等酒精干了再打。&lt;/p&gt;

&lt;p&gt;皮下注射有一点空气也关系不大，这个我是听护士说的。实际情况好像也确实关系不大。&lt;/p&gt;

&lt;h2 id=&#34;后期保养&#34;&gt;后期保养&lt;/h2&gt;

&lt;p&gt;这块我还没有太多经验，因为我家猫还没有脱离胰岛素，只能是讲讲道听途说的一些。&lt;/p&gt;

&lt;p&gt;猫的状态比较稳定之后，就进入长期和糖尿病斗争的阶段了。可以喂糖尿病猫粮，淘宝不让搜糖尿病，可以搜 &amp;ldquo;wd 猫粮&amp;rdquo;。不过是，喂干粮容易让血糖起来，我看有些人常年喂罐头，不过感觉有点贵，而且，湿粮吃多了会得口炎。。。。据说也可以喂蒸鸡胸，但是又说鸡肉含磷多，吃多了也不好。。。。所以我也不清楚。目前在尝试喂鸡肉看看，也不敢多喂。&lt;/p&gt;

&lt;p&gt;现在情况就是一天三针，每次打针后喂干粮，两针期间饿了就喂点鸡肉，没鸡肉就少吃点干粮。大致就这样了。等我有了经验再来补充。&lt;/p&gt;

&lt;h2 id=&#34;update-2014-1-31&#34;&gt;update 2014.1.31&lt;/h2&gt;

&lt;p&gt;翻了一些资料，看到&lt;a href=&#34;http://petdiabetes.wikia.com/wiki/Low-carb_diet&#34;&gt;低碳水化合物疗法&lt;/a&gt;。讲人吃低碳的食物有助于糖尿病恢复，那理论上猫也可以。并且&lt;a href=&#34;http://petdiabetes.wikia.com/wiki/Category:Feline_regulated_cases&#34;&gt;这里&lt;/a&gt;有一些低碳疗法的实例。&lt;/p&gt;

&lt;h2 id=&#34;update-2014-2-2&#34;&gt;update 2014.2.2&lt;/h2&gt;

&lt;p&gt;低碳疗法的主要理论支持是讲猫可以把脂肪转化成葡萄糖，举例说野猫只吃老鼠，但是也可以活的很好。干粮得依靠碳水化合物形成最后的形状，所以干粮离不开碳水化合物。这里有个&lt;a href=&#34;http://web.archive.org/web/20060616054707/www.geocities.com/jmpeerson/dryfood.html&#34;&gt;列表&lt;/a&gt;，列出来了各种干粮的碳水化合物含量，里面最低的就是 Innova EVO Cat &amp;amp; Kitten，这个在淘宝有卖，不过据群里人说，这个好像有点油也不太好，但是脂肪含量高了，肯定就油了啊，我也不清楚了。我现在喂的是 hills W/D 猫粮，这个倒是不油，不过感觉好像应该喂 M/D 才对&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;update-2014-2-9&#34;&gt;update 2014.2.9&lt;/h2&gt;

&lt;p&gt;目前找到的靠谱一点的干粮有下面这些。
- innova evo 英诺华（凌采露华）evo
- hills m/d 希尔斯 m/d
- Royal Canin Veterinary DS46 皇家 DS46&lt;/p&gt;

&lt;p&gt;这几个都不便宜，淘宝上面差不多一公斤 70 - 100 块钱。&lt;/p&gt;

&lt;h2 id=&#34;update-2014-3-1&#34;&gt;update 2014.3.1&lt;/h2&gt;

&lt;p&gt;这几天 hills md 和 evo 都断货了，只好开发新的。今天翻了一下，发现 &lt;a href=&#34;http://www.petcurean.com/for-cats/go/&#34;&gt;petcurean&lt;/a&gt; 的 go 品牌的猫粮似乎也可以，查了紫色包装的 FIT + FREE Chicken, Turkey + Duck （淘宝上面关键字是七种肉）和绿色包装的三种鱼，碳水化合物含量都是 13% 左右。今天买了2斤似乎效果还行，试试看。&lt;/p&gt;

&lt;h2 id=&#34;update-2014-6-16&#34;&gt;update 2014.6.16&lt;/h2&gt;

&lt;p&gt;好久没有更新了。再次更新下。&lt;/p&gt;

&lt;p&gt;饮食上面，自上次开始使用七种肉之后，一直到今天都在喂这个。一天打几次针喂几次。中间饿了就喂点蒸鸡胸肉。开始的时候食量很大，总是表现出很饿的样子，后来随着体重增加，慢慢的就吃的少了。&lt;/p&gt;

&lt;p&gt;打针上面，开始打的是 1 个单位，后来改成 1.5 个单位，但是还是发现会有 20 多血糖的情况，就增加了一次打针，一天三次打针。后来持续了一段时间之后，血糖降到了 10 几，就把打针改回了一天 2 次，每次 2 单位。持续了一段时间之后，出现了小于 10 的血糖，大于 10 的情况比较少了，就开始减量到 1.5 了。目前是 1.5 单位一天两次。这两天测试很多时间都是 10 以下了，可能需要考虑再减量了。&lt;/p&gt;

&lt;p&gt;要注意猫吃完干粮血糖肯定会增加，这个时候别着急加量，最好过个 1,2 个小时再看，如果还是高，那可能是需要加量了。&lt;/p&gt;

&lt;p&gt;我家猫现在吃的变少了，尿的也明显变少了，目前感觉恢复的还可以。正在考虑减量或者减打针次数。&lt;/p&gt;

&lt;h2 id=&#34;收集到的一些参考资料&#34;&gt;收集到的一些参考资料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;关于胰岛素剂量调整的一些经验 &lt;a href=&#34;http://blog.sina.com.cn/s/blog_59c48f3f0102eedw.html&#34;&gt;http://blog.sina.com.cn/s/blog_59c48f3f0102eedw.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一些详细的照顾猫猫的经验 &lt;a href=&#34;http://bbs.movshow.com/thread-412475-1-1.html&#34;&gt;http://bbs.movshow.com/thread-412475-1-1.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;update-2014-11-30&#34;&gt;update 2014.11.30&lt;/h2&gt;

&lt;p&gt;在群里朋友的推荐下，已经使用了一段时间的 bd 针管了。bd 针管和普通针管主要的区别如下：
- bd 针管没有针头，这样打针的时候就不会损失针头里面的药。也不用担心隐藏的气泡什么的。
- bd 针管没有的刻度和来得时搭配之后，刚好可以理解成是单位，一个刻度是 0.5u。
- 可以不用提前稀释配药了，用的时候从来得时抽就可以。
- bd 针管针头更加细，猫没有感觉。&lt;/p&gt;

&lt;p&gt;好处可能还不止这些了，用起来还不错，推荐使用。购买的话，在群里面有人卖，一次买一大盒，然后可以用好久。我目前在重复使用，基本是一周换一个。用的时间长了会发现针头变钝，最好多换。&lt;/p&gt;

&lt;h2 id=&#34;update-2017-4-8&#34;&gt;update 2017.4.8&lt;/h2&gt;

&lt;p&gt;其实就是上面的情况一直继续了，药量恢复到了 2。最近血糖测试的结果是 1x，可能还需要适当加量了。&lt;/p&gt;

&lt;p&gt;目前还没有发现有其他问题，就是感觉蹦跳能力减弱了，现在上一些高的地方，靠前爪的力量抓，不是靠后退蹦上去。我好像在哪里看到说糖尿病人后肢力量会减弱，不知道是不是就是这个现象。&lt;/p&gt;

&lt;h2 id=&#34;update-2018-01-11&#34;&gt;update 2018.01.11&lt;/h2&gt;

&lt;p&gt;大概在去年年中的时候，应该是 6 月份，猫得了一次胰腺炎。呕吐，不吃饭，体重下降到了 3.7kg 左右，然后去医院输液消炎救回来了。之后按照医生的说法，把喂食放开了，碗里面随时有吃的，不再是每天固定时间喂了。到目前，体重增加到了 4.1kg 左右，胰岛素是 2 个单位。最近几次在打针前量都是 2x，感觉有点高。&lt;/p&gt;

&lt;h2 id=&#34;update-2018-09-28&#34;&gt;update 2018.09.28&lt;/h2&gt;

&lt;p&gt;昨天晚上因为我的失误，把猫关到了卧室一天没吃饭，晚上我又脑残的给打了胰岛素，导致毛毛低血糖抽搐。一晚上没睡，今天一早去安乐死了。互相都解脱了吧，感觉对不起毛毛。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>毛毛的病情</title>
      <link>https://wdicc.com/diabetic-cat-maomao/</link>
      <pubDate>Sat, 18 Jan 2014 22:16:09 +0800</pubDate>
      
      <guid>https://wdicc.com/diabetic-cat-maomao/</guid>
      <description>

&lt;h2 id=&#34;第一篇&#34;&gt;第一篇&lt;/h2&gt;

&lt;p&gt;我家两只猫，一只叫妞妞，现在大概11岁多，一只叫毛毛，现在大概10多岁。两只都陪伴我们超过 10 年了，现在生病的是毛毛，毛毛是我从出满月就开始养的。&lt;/p&gt;

&lt;p&gt;大概最近一个多月，发现的毛毛不太爱吃猫粮，总是蹲在水盆猫粮盆前面发呆，开始还觉得好玩，不知道他再思考什么。大概是 12.28 周六，发现毛毛好像精神头也没了，12.29 周日早上，发现好像更加严重了，就赶紧抱到了楼下的宠物医院（京东万康，发现这医院还在点评的推荐医院列表里面），医生给测了体温，说是体温低，挺危险的，建议做个检查，直接给我一个单子，650。缴费之后，开始做检查，好像是验了血，生化，x光（单子和化验结果最后也没给我们，化验结果我们拍了照片。现在想想，当时应该和他们闹一通的，太恶心了），检查结果出来后，直接拿来一个单子，就是医院那种治死了也不负责什么的让我签，我就说你们这太扯了把，啥毛病不和我说就让我签这个，那个医生赶紧就开始和我说血糖还有什么xx有点高，然后就指着x光说肝肾啥的有毛病，然后说膀胱有憋尿的情况，说可能是结石之类的，说是体温低挺危险的啥啥的，我问怎么办，说是先让他排尿，说是弄个导管，或者做个穿刺啥的，我一听就觉得不太靠谱，猫都这样了，不会起因是尿憋的吧，而且他们也没个具体的说法说到底是什么毛病。我就和我老婆说到观赏把。&lt;/p&gt;

&lt;p&gt;到了观赏是项夫给看的，继续开化验，之前600 多的医生就是拿着手机看了会，最贵的生化没开，验血拍B超。我们去的时候刚好中午，毛毛精神那会已经很差了，b超的大夫去吃饭了，我老婆哭着找了半天大夫才来了一个给开始b超，所有结果出来后，基本就是尿道没问题，肝功能基本正常，有点肾衰竭的的情况，然后就是血糖高 28。就开始按照糖尿病治了，输了6个小时液，输完之后我们担心胰岛素打多了血糖变太低（是同再那看病的一个主人提醒的，说他见过先例），就找大夫又验了血糖，大概是十几，还算可以。然后就回家了。&lt;/p&gt;

&lt;p&gt;昨天 12.30 周一，又去输液，在车上的时候发现这小家伙比第一次去力气大了好多，一路叫，我和老婆还挺高兴，感觉是再变好，后来到安贞那块的时候突然不叫了，吓了一跳，到了医院好多人排队，和大家说了一下，大家都说你快先看把，我们插了个队。换了个大夫，继续让验血，验完之后说血糖是 18 还是高，就继续输液到半夜。中间验了一次血糖，降到了10 以内，还验了一次尿，好像是 4++，也不知道和人的是不是一样。&lt;/p&gt;

&lt;p&gt;这两天我和老婆两个人眼泪都哭干了，我一个大老爷们，昨天本来去上班的，说让我老婆带着去看，结果一个人做地铁就忍不住的掉眼泪，到了单位一想起来猫就想掉眼泪，后来请了半天假，回家了。&lt;/p&gt;

&lt;p&gt;目前我们感觉毛毛每天输液什么的，应该还能持续一段时间，他现在也没胃口，只喝水不吃东西，现在就是用针管再喂那种婴儿吃的果泥（鱼味道的），他到是不吐，不过喂不多，一会就会开始反抗，所以不知道有没有糖尿病猫猫的主人有没有什么经验可以传授的，多谢了。&lt;/p&gt;

&lt;p&gt;另外，各位猫猫主人，如果发现猫有食欲不振或者守着盆子发呆的情况，一定要注意，因为动物的耐受力比较强，他们什么东西都不吃的时候，病基本就已经很严重了。&lt;/p&gt;

&lt;h2 id=&#34;第二篇&#34;&gt;第二篇&lt;/h2&gt;

&lt;p&gt;今天是 2013 年最后一天，继续带毛毛去看病。今天去了本来想找郑义大夫（是个女大夫），结果她进来开会，没找到，并且之前见过相夫，还有一个姓郭的大夫都没来，只好找了一个新的叫做张炎，就是这个傻逼差点把毛毛害死。&lt;/p&gt;

&lt;p&gt;今天测血糖是 17，这样这三天测出来的血糖依次是 28, 18, 17。这个大夫也是想做个生化，我们因为做过了，没让做，可能他发现也没什么可以做的化验了，比较郁闷，就说给开3天的药，我想了下明天1.1 医院好像放假，就说开吧，然后给开了 6 个单位的胰岛素，注意是 6 个单位，3 个单位的长效，3 个单位的短效。而我们之前打的都是 0.6 个单位的短效，等于他一下放大了 10 倍。药是我开的，我也没注意这个单位的问题。打完之后开始输液。大概输了 2 个多小时，我老婆找到了郑义大夫询问毛毛的情况，郑大夫就过来看了一下，摸了一会肚子，说有点尿，有点粪便（其他大夫都是让去做b超啊，化验啊去测这个，只有郑大夫是上手摸的，郑大夫还给其他几个猫摸来着），给小力气挤了一下尿看是不是能出来，结果毛毛就开始撒尿了。其实之前毛毛一直想下地，估计就是想尿的。&lt;/p&gt;

&lt;p&gt;然后郑大夫就随口问了一句胰岛素打了多少，我们就赶紧翻单子，说不用翻，就去问护士，护士说是 6 个，郑大夫当时估计就蒙了，确认了好几次，就和护士说拿葡萄糖来打，另外安排了赶紧测血糖。血糖结果是 6.9。郑大夫解释说短效大概 4 个小时可以排出去，长效 4 个小时之后才起作用，我们猫现在就这么低的血糖，那等到了晚上长效起作用，那就得低血糖了。所以持续打了几个小时的葡萄糖，之后又验了一下，7点几，还好。然后让我们先回来了，说今天晚上2，3点的时候是长效起作用的关键时候，说得观察看看猫是不是比较低迷。另外让我们回来也给毛毛喂些东西，补充下血糖。&lt;/p&gt;

&lt;p&gt;今天毛毛回来虽然看着还是腿软，但是居然自己跳上了宜家的小凳子了，然后上了沙发，现在在我腿旁边睡着了。一会还得想办法给他喂点吃的，希望今天晚上没事。唉。看病遇上傻逼大夫真没办法，据说前几天就有只猫也是让他给搞到低血糖了，差点死了，这大夫我觉得可以上黑名单了都，还专家呢。&lt;/p&gt;

&lt;p&gt;郑义大夫真是个好大夫，在另一个帖子说再伴侣被一个星期干了三次手术的猫，今天去了说是自己吃了一点点鸡肝，开始吃东西了。并且今天明显状态好了很多。&lt;/p&gt;

&lt;p&gt;今天有只在那边抢救了好几天的狗走了，心脏病，我们第一天去的时候就在那抢救了，老头老太太轮番给守夜，今天没挺过去。我老婆伤心的哭了几把，唉。&lt;/p&gt;

&lt;h2 id=&#34;第三篇&#34;&gt;第三篇&lt;/h2&gt;

&lt;p&gt;今天是 2014 年第一天，昨天晚上回来就加了个精华区里面糖尿病猫妈的糖猫猫群，和里面有几个病友交流了下情况，感觉毛毛真是有救了。&lt;/p&gt;

&lt;p&gt;昨天一晚上回来毛毛就比较嗜睡，在床边睡了一晚上。今天早上我看毛毛还在持续睡，感觉状态有点不对，发现他自己睡的地方尿了一泡，要知道前几天可没这个情况，他虽然难受也是自己去厕所的。所以我就去搜了一下低血糖的症状，发现嗜睡，腿软毛毛身上就有，早上起来持续喂了几次饭和水，好像没多少改善，楼下买了些葡萄糖，调成 10% 的，喂了 10ml，发现好像也没多少改善，我们也不敢多喂了，观赏今天郑大夫休假，我们也不敢去了，想起来糖猫猫群里面有推荐纳吉亚，就打电话问了下，结果郭大夫刚好上班，就开车过去了。&lt;/p&gt;

&lt;p&gt;纳吉亚比较小，去了后挂号也没收钱，郭大夫比较忙。毛毛的状态看着不太好，等到了我们，我老婆忍不住又开始哭了，郭大夫看了下情况，就赶紧安排吸氧，氯化钾，葡萄糖两个一起输，然后测血糖，都已经到 2.x 了，晚点估计都得挂了。持续输了一会，再验血糖到了 10 多之后就停了葡萄糖了。然后好像给吃了补钾什么的药，因为纳吉亚地方实在太小，所以后面基本是我老婆在看着猫，所以我也不是很清楚具体打了什么针，吃了什么药。总之就是下午我观察毛毛的状态感觉是好很多了，比前几天都好。6点多他们下班的时候，郭大夫过来安排晚上的治疗，因为他们不是 24h，所以晚上得我和我老婆一起弄了。教了我们怎么测血糖，怎么打胰岛素，怎么喂药什么的。还给准备了几十个胰岛素的针，0.5 和 1 个单位的各好多。另外还准备了葡萄糖注射液。让我们到家之后每个小时测试一下血糖情况，根据血糖情况，打不同量的胰岛素，或者打葡萄糖补糖。还留了电话，说要是出现呼吸急促，1 分钟超过 50 次的话，或者有什么异常情况的话，就给他打电话。总之是把晚上都安排妥了，让我们明天早上 9 点他们开门就去，继续治疗。这大概就是今天的情况了。&lt;/p&gt;

&lt;p&gt;纳吉亚这边收费项目比观赏少了很多，比如观赏挂号就是30，吸氧针管输液都不少钱。在纳吉亚这边的时候，有些项目就不收钱了，比如吸氧针管，吸氧没收钱，给我们配了十几个胰岛素针，只是收了针管的钱和一大瓶的钱，等于免费给配的。旁边小猫的纸尿片也是他们免费给的，观赏是 2.5 一个买的。我昨天下单买了50片，20多块钱，和他们那个是一样的。因为下午需要一个小时测试一下血糖，郭大夫还说诊所的收费高，让我们自己买试纸用他们的仪器测。并且今天晚上因为需要持续观察血糖，还把血糖仪让我们带了回来。&lt;/p&gt;

&lt;p&gt;今天下午老婆一直再骂观赏的那个张炎，毛毛真的是差点就被他害死了。现在看毛毛的状态已经非常好了，今天回来之后吃了不少郭大夫给开的 ad罐头，因为还输着液，所以要固定毛毛再一个地方待着，现在我老婆正和他再斗争呢，毛毛的性格一直就不会老实再一个地方待着的，现在看来状态真是恢复了。&lt;/p&gt;

&lt;p&gt;感谢各位的祝福，新年第一天，毛毛要重生啦。&lt;/p&gt;

&lt;h2 id=&#34;第四篇&#34;&gt;第四篇&lt;/h2&gt;

&lt;p&gt;今天是 2014.1.3，这两天没来更新了。今天更新下。&lt;/p&gt;

&lt;p&gt;1.1 回来之后按照郭大夫要求输着液，郭大夫的意思是先调整身体状态，再调血糖。带了很多胰岛素葡萄糖啥的回来，然后基本2个小时检查一下血糖，然后根据情况考虑打胰岛素。因为毛毛总动，所以我和老婆两个人换着看，每人也就睡了3个小时，1.2 早上8点多就出门去纳吉亚继续输液，检测到一些什么值异常，怀疑心脏啥的毛病之类，所以继续输液。1.1 早上的时候看毛毛的情况明显已经好转了，活泼多了。这两天因为是工作日，把我老婆送过去之后，我就去上班了。下午提前请假下班再过去接她回家。昨天也就是 1.2 晚上。我和老婆继续换班，每人睡了 3 个小时，10点多打了长效胰岛素，持续观察了一晚上的血糖情况，每小时一记录。1.3 也就是今天早上，继续去纳吉亚输液。&lt;/p&gt;

&lt;p&gt;今天晚上我和老婆总算是可以休息了，不用盯着了。这两天毛毛食欲已经都恢复了，不止吃罐头，连给另一只猫的普通猫粮都吃，不过我们没敢喂，还是继续给 ad罐头。打算明天开始喂处方猫粮。今天晚上的任务就是 10点多打一个长效，然后检测下血糖情况，早上起来继续去医院输液调整。今天晚上总算可以好好睡一觉了。&lt;/p&gt;

&lt;p&gt;截止到今天，基本可以认为毛毛已经恢复了。剩下的工作就是针对糖尿病的持久战了。&lt;/p&gt;

&lt;h2 id=&#34;第五篇&#34;&gt;第五篇&lt;/h2&gt;

&lt;p&gt;好久没更新了，最近毛毛的病已经基本稳定了。现在持续在给他打针，每天目前要吃的要水看着好像还行。血糖现在也是测一次不测一次的，好像有点懒散了，不过持续一段时间看看吧，先这样了。等有时间，整理一下糖尿病猫的照顾方法。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>campus recruiting</title>
      <link>https://wdicc.com/campus-recruiting/</link>
      <pubDate>Mon, 07 Oct 2013 16:38:00 +0800</pubDate>
      
      <guid>https://wdicc.com/campus-recruiting/</guid>
      <description>

&lt;p&gt;去年就参加了校招的笔试和面试，不过都是在北京，和其他同学的经验交流也不是很多，今年参加了外省3个地区的校招，有点心得记录一下。&lt;/p&gt;

&lt;h3 id=&#34;笔试题&#34;&gt;笔试题&lt;/h3&gt;

&lt;p&gt;笔试题非常重要，因为第一轮筛选全靠他了。&lt;/p&gt;

&lt;p&gt;笔试题的难度要考虑好，需要把哪些代码能力差的，思路不靠谱的都筛掉。当然通过一两道题筛人有可能漏掉好的，但是这种几率非常小，真漏掉也没办法，毕竟一般能通过的人会很多的。&lt;/p&gt;

&lt;p&gt;我的经验是，第一题出一道实际中存在的问题，但是又得让只会 c/c++ 的同学做起来不是很复杂的，不能只想着用 python 一句话就做出来之类，那样阅卷会很困难。比如把一句英文中所有单词的首字母大写，这种题就很好。但是比如给两个文件找他们共存的字符串就不太好，只会 c 语言的同学做这个题会很费劲。&lt;/p&gt;

&lt;p&gt;第二题稍微要有点区分度，要考察下数据结构相关的内容。比如 hash 懂不懂，排序算法会不会之类。&lt;/p&gt;

&lt;p&gt;我觉得笔试时间不宜太长，一道题给 20 分钟足够，也避免了不会的人在那瞎掰一通，将来阅卷困难。&lt;/p&gt;

&lt;p&gt;笔试也要注意考场纪律，不允许交头接耳，能隔开坐最好，不能的话，可以考虑让先来的都隔开，后来的往进插，这样能隔开好朋友，能最大限度避免作弊。看到作弊的要提醒一下，提醒无效的就收卷子，或者调座位。&lt;/p&gt;

&lt;h3 id=&#34;面试&#34;&gt;面试&lt;/h3&gt;

&lt;p&gt;一个人一天大致能面试 15 个左右，差不多 30-40 分钟一个。&lt;/p&gt;

&lt;p&gt;面试考察三个方面。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;搞过的项目，实验的方向，是否都弄明白了。这个一般就是一边讲，一边问，抓到点就详细问一下，看看是否确实掌握了，同时也能考察到他的学习能力。&lt;/li&gt;
&lt;li&gt;学校学的东西是否都扎实。这也就是所谓的基础知识了。一般就是数据结构算法，网络等。&lt;/li&gt;
&lt;li&gt;沟通交流是否顺畅。是不是能很好的理解问题，能通俗简单的讲明白学到的东西。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;就我面试的经验，我感觉上面三个方面就足够了，如果都觉得可以，那基本就没问题了。如果某个方面有缺陷，那还得看其他方面是否有很多的加分。&lt;/p&gt;

&lt;h3 id=&#34;面霸&#34;&gt;面霸&lt;/h3&gt;

&lt;p&gt;对于面霸，也不要直接拒绝，最好最后一天统一给安排一次笔试，出一道题考察一下。这题一定要有区分度，类似笔试题的第二题。否则阅卷很困难。题做的好的，可以安排面试一下。不要在面试中间插入面霸，对其他同学不公平。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>how to finding a job for graduates</title>
      <link>https://wdicc.com/how-to-finding-a-job-for-graduates/</link>
      <pubDate>Mon, 07 Oct 2013 15:43:00 +0800</pubDate>
      
      <guid>https://wdicc.com/how-to-finding-a-job-for-graduates/</guid>
      <description>&lt;p&gt;昨天晚上胃难受起来翻了会知乎，回答了&lt;a href=&#34;http://www.zhihu.com/question/21721705/answer/19228492?utm_source=weibo&amp;amp;utm_medium=weibo_share&amp;amp;utm_content=share_answer&amp;amp;utm_campaign=share_button&#34;&gt;一个问题&lt;/a&gt;，也算校招的一个总结了。包含了给准备找工作的毕业生的一些建议。好久没写 blog 了，粘贴到这里除除草。&lt;/p&gt;

&lt;p&gt;刚好做了几天校招，或许对你有帮助。&lt;/p&gt;

&lt;p&gt;非计算机相关专业的同学，一般一些算法基础会稍差（当然也有自学数据结构且弄的比较明白的人），比较偏向实际应用开发方面，但是要注意并不是说做过很多类型的开发就会有很多的加分，而是要注重深入。&lt;/p&gt;

&lt;p&gt;招聘一般都会有笔试，笔试考察的是你写代码和解决问题的能力，随便用什么语言，能解决问题就可以。首先你得过笔试这关，写不了代码的，开发肯定是没办法招的。&lt;/p&gt;

&lt;p&gt;然后就是面试，比如就针对你做的开发，我会提问几个 python，java，html 相关的技术问题，看你是否确实使用并且掌握了他们的基本原理。开始会是一些非常简单的问题，比如 python 如何打印一个 dict 的所有 key，如何做类继承，如何调用执行外部命令等，就这些简单问题如果能答上来，一般会继续问一些相对深入的，了解下你熟悉的程度。这一关需要你对一些基础问题能答上来，如果后续也能答上来，那这方面的得分会比较高。如果基础问题答不上来，表示经验要么是瞎掰的，要么就是兴趣不在开发没用心研究过，那我基本不会给过。&lt;/p&gt;

&lt;p&gt;如果实际使用和学习过的东西都还算明白，那么后续会考察一些算法基础的东西，各种数据结构里面的东西，不过针对这种跨专业的，要求不会特别高，如果实在没了解过，那也没有办法。如果了解过且比较明白，那会有加分。不会也不会减分。&lt;/p&gt;

&lt;p&gt;此外还会考察交流沟通能力，思路是否清晰，思维是否敏捷等，这些方面好的话，会有加分。要注意这块如果有严重问题的，也不会给过，因为开发工程师是需要和其他人做配合工作的，如果沟通或者需求理解有问题，那是不行的。&lt;/p&gt;

&lt;p&gt;综合上面三块，看最后的结果。可以看出来，非计算机相关专业的，还是多少有点吃亏的。
哦对了，这是我们公司的要求，可能稍微有点高，就你贴出来的经验看，如果确实都是你做出来的，我感觉你至少找个开发的工作应该是没太大问题的，可能问题是在起点会是在哪里，是在大公司还是二流三流公司，呵呵。&lt;/p&gt;

&lt;p&gt;另外对于你想做 android 开发，其实并不是说你有过类似经验就只能找那个方向的工作，主要还是看你的兴趣在哪里，一般大学的那点经验对于一个公司来说，基本没什么用，太浅了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>octopress and jeklly 1.0.1</title>
      <link>https://wdicc.com/octopress-and-jeklly-1-dot-0-1/</link>
      <pubDate>Wed, 12 Jun 2013 21:45:00 +0800</pubDate>
      
      <guid>https://wdicc.com/octopress-and-jeklly-1-dot-0-1/</guid>
      <description>&lt;p&gt;自从 jeklly 1.0.x 发布之后，我的 octopress 站点就在 github，gitcafe 上面更新不了了，写了新帖子然后 push 之后，会收到个邮件，说 generate site faild。&lt;/p&gt;

&lt;p&gt;等等。。这个不是静态站点吗？generate 你妹阿！！然后就找阿找阿找解决办法，尝试过下面这些&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;touch 一个 .nojeklly 不让它 generate&lt;/li&gt;
&lt;li&gt;找 octopress 支持 jeklly 1.0.1 的新版本&lt;/li&gt;
&lt;li&gt;google 之，怎么可能就我遇到问题了呢&lt;/li&gt;
&lt;li&gt;使用 jeklly 1.0.1 单独搭一个，不用 octopress 了&lt;/li&gt;
&lt;li&gt;&amp;hellip;其他忘记了的。。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;悲剧的是，以上这些方法没一个搞定了&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;某处搜到的这个 .nojeklly 完全不管用&lt;/li&gt;
&lt;li&gt;octopress 2.1 这个 branch 支持 jeklly 1.0.1，可惜没能让他运转起来。。具体 release 日期似乎还没看到。。。&lt;/li&gt;
&lt;li&gt;google 不到有用的信息，唯一有用的就是有人给 octopress 提的 pull request，可惜被 merge 到 2.1 了&lt;/li&gt;
&lt;li&gt;这个倒是简单，可惜的是 octopress 其实背后做了很多事情，单纯的拿弄 post 过去发现有些文件解析不了，我遇到的是 ` 这个标记，是 octopress 支持的，可惜我的 post 里面好多都是这个。另外还有主题阿等等这些。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;综上，就觉得，nnd，这破玩意怎么这么复杂？！&lt;/p&gt;

&lt;p&gt;后来不知道哪天突然想到，我之前测试 hexo 的时候，它没有 jeklly 一说，不是也可以么？另外，github pages 的例子里面，也就是 echo 了一个文件呀，也没有 jeklly 阿，不是也可以么？然后就觉得豁然开朗，github 之流肯定是默认会给你处理 jeklly 的代码，然后产生一个 site，而不是直接使用你产生的 html 文件。回想之前每次 deploy github pages，都会收到一个邮件提醒说 site generate success 之类，那就应该是猜的没错了。&lt;/p&gt;

&lt;p&gt;然后就开始尝试只 push html（octopress 的结果文件在 public 里面）上去，结果确实如所料，毛问题都没有了，gitcafe 和 github 都可以了。总算舒服了。。另外还写了一个使用 octopress deploy 到 gitcafe 的&lt;a href=&#34;http://wdicc.om/octopress-and-gitcafe/&#34;&gt;帖子&lt;/a&gt;，有需要可以参考。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>octopress and gitcafe</title>
      <link>https://wdicc.com/octopress-and-gitcafe/</link>
      <pubDate>Wed, 12 Jun 2013 21:30:00 +0800</pubDate>
      
      <guid>https://wdicc.com/octopress-and-gitcafe/</guid>
      <description>&lt;p&gt;ocotpress 支持 github，不过 github 的 pages 貌似被墙了，且速度慢。gitcafe 速度还不错，也支持 pages，刚好可以切换过去。我只是简单粗暴的修改了几个文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;diff --git a/.gitignore b/.gitignore
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;index 85ed25d..5858b25 100644
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;--- a/.gitignore
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+++ b/.gitignore
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -12,3 +12,4 @@ source/stylesheets/screen.css
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt; vendor
 node_modules
 .themes/fabric/
&lt;span style=&#34;color:#00a000&#34;&gt;+gitcafe
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;diff --git a/Rakefile b/Rakefile
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;index 53072e5..62061e0 100644
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;--- a/Rakefile
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+++ b/Rakefile
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -27,6 +27,9 @@ new_post_ext    = &amp;#34;markdown&amp;#34;  # default new post file extension when using the n
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt; new_page_ext    = &amp;#34;markdown&amp;#34;  # default new page file extension when using the new_page task
 server_port     = &amp;#34;4000&amp;#34;      # port for preview server eg. localhost:4000

&lt;span style=&#34;color:#00a000&#34;&gt;+gitcafe_dir      = &amp;#34;gitcafe&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+gitcafe_branch   = &amp;#34;gitcafe-pages&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
 desc &amp;#34;Initial setup for Octopress: copies the default theme into the path of Jekyll&amp;#39;s generator. Rake install defaults to rake install[classic] to install a different them
 task :install, :theme do |t, args|
&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -219,7 +214,7 @@ end
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt; ##############

 desc &amp;#34;Default deploy task&amp;#34;
&lt;span style=&#34;color:#a00000&#34;&gt;-task :deploy do
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+task :deploy_old do
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;   # Check if preview posts exist, which should not be published
   if File.exists?(&amp;#34;.preview-mode&amp;#34;)
     puts &amp;#34;## Found posts in preview mode, regenerating files ...&amp;#34;
&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -231,6 +226,31 @@ task :deploy do
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt;   Rake::Task[&amp;#34;#{deploy_default}&amp;#34;].execute
 end

&lt;span style=&#34;color:#00a000&#34;&gt;+desc &amp;#34;deploy gitcafe&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+task :deploy do
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  # Check if preview posts exist, which should not be published
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  if File.exists?(&amp;#34;.preview-mode&amp;#34;)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    puts &amp;#34;## Found posts in preview mode, regenerating files ...&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    File.delete(&amp;#34;.preview-mode&amp;#34;)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #Rake::Task[:generate].execute # 这个地方每次都会 generate 我一般喜欢先 generate 本地看好没问题之后再 deploy，所以就注释掉了
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  end
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  puts &amp;#34;## Deploying branch to Gitcafe Pages &amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  puts &amp;#34;\n## copying #{public_dir} to #{gitcafe_dir}&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  cp_r &amp;#34;#{public_dir}/.&amp;#34;, gitcafe_dir
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  cd &amp;#34;#{gitcafe_dir}&amp;#34; do
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    system &amp;#34;git add .&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    system &amp;#34;git add -u&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    puts &amp;#34;\n## Commiting: Site updated at #{Time.now.utc}&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    message = &amp;#34;Site updated at #{Time.now.utc}&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    system &amp;#34;git commit -m \&amp;#34;#{message}\&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    puts &amp;#34;\n## Pushing generated #{gitcafe_dir} website&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    system &amp;#34;git push origin #{gitcafe_branch} --force&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    puts &amp;#34;\n## Gcafe Pages deploy complete&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+  end
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+end
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt; desc &amp;#34;Generate website and deploy&amp;#34;
 task :gen_deploy =&amp;gt; [:integrate, :generate, :deploy] do
 end
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后需要在 octopus 根目录 clone 一下你的 gitcafe 项目到 gitcafe 目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ git clone git@gitcafe.com:wd/wd gitcafe
....&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后就可以试试看 &lt;code&gt;rake generate&lt;/code&gt; , &lt;code&gt;rake preview&lt;/code&gt;, &lt;code&gt;rake deploy&lt;/code&gt; 了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>broadcom BCM wireless card on gentoo</title>
      <link>https://wdicc.com/broadcom-wireless-card-on-gentoo/</link>
      <pubDate>Fri, 24 May 2013 17:28:00 +0800</pubDate>
      
      <guid>https://wdicc.com/broadcom-wireless-card-on-gentoo/</guid>
      <description>&lt;p&gt;昨天又折腾了一下我的无线，是 dell 的本子，broadcom 的卡 BCM4313，准备写一下的时候，发现之前居然折腾过 &lt;a href=&#34;https://wdicc.com/bcm4312broadcom-stawpa_supplicantkernel2-6-33/&#34;&gt;BCM4312&lt;/a&gt;。。感觉真蛋疼。。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ lspci -vnn -d 14e4:
&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;02&lt;/span&gt;:00.0 Network controller &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0280&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;: Broadcom Corporation BCM4313 &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;802&lt;/span&gt;.11b/g/n Wireless LAN Controller &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;14e4:4727&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;rev &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
        Subsystem: Dell Inspiron M5010 / XPS &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;8300&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;1028&lt;/span&gt;:0010&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;
        Flags: fast devsel, IRQ &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;17&lt;/span&gt;
        Memory at e5300000 &lt;span style=&#34;color:#333&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;64&lt;/span&gt;-bit, non-prefetchable&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;16K&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;
        Capabilities: &amp;lt;access denied&amp;gt;
        Kernel modules: bcma&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;根据 &lt;a href=&#34;http://wireless.kernel.org/en/users/Drivers/b43#bcm43xx.2C_b43legacy.2C_b43.2C_softmac.2C..._the_full_story&#34;&gt;这里&lt;/a&gt; ， BCM 的网卡有三种可用驱动&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;b43，kernel 自带，源自 broadcom linux 驱动的逆向工程&lt;/li&gt;
&lt;li&gt;brcmsmac, kernel 自带，似乎源自 broadcom 某个开源的驱动&lt;/li&gt;
&lt;li&gt;wl, broadcom 发布的 linux 驱动&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另外，kernel 自带的 b43 和 brcmsmac 支持标准的 802.11 栈，可以通过 iw iwconfig 之类的工具来配置，获取状态。wl 就不行了。&lt;/p&gt;

&lt;p&gt;如果想使用 b43 或者 brcmsmac，需要选择下面的 kernel 选项，要注意都选择成 module，因为还需要加载 firmware，如果编译进内核那需要把 firmware 也编译到内核才可以。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;Networking support  ---&amp;gt;  Wireless  ---&amp;gt; Generic IEEE 802.11 Networking Stack (mac80211)
Device Drivers  ---&amp;gt; Broadcom specific AMBA  ---&amp;gt;  BCMA support&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;针对 b43 选择 &lt;code&gt;Device Drivers  ---&amp;gt; Network device support  ---&amp;gt;  Wireless LAN  ---&amp;gt;  Broadcom 43xx wireless support (mac80211 stack)&lt;/code&gt;, 还需要安装 &lt;code&gt;sys-firmware/b43-firmware&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;针对 brcmsmac 选择 &lt;code&gt;Device Drivers  ---&amp;gt; Network device support  ---&amp;gt;  Wireless LAN  ---&amp;gt;  Broadcom IEEE802.11n PCIe SoftMAC WLAN driver&lt;/code&gt;，还需要安装 &lt;code&gt;sys-kernel/linux-firmware&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;对于 wl，需要安装 &lt;code&gt;net-wireless/broadcom-sta&lt;/code&gt;，安装的时候会自动检查必要的内核选项，按照提示选择好就可以了。主要是要注意去掉上面的 kernel 的选项，另外可能还需要一个 ipw2100 来提供某一个隐藏的 kernel 选项。此外还有个 PREEMPT_RCU 检查，需要选择下面的内核选项 &lt;code&gt;Processor type and features  ---&amp;gt;  Preemption Model (Voluntary Kernel Preemption (Desktop))  ---&amp;gt;  Voluntary Kernel Preemption (Desktop)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如此之后编译安装重启就可以了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PostgreSQL Explain</title>
      <link>https://wdicc.com/postgresql-explain/</link>
      <pubDate>Sun, 03 Feb 2013 17:40:00 +0800</pubDate>
      
      <guid>https://wdicc.com/postgresql-explain/</guid>
      <description>
&lt;div id=&#34;table-of-contents&#34;&gt;&lt;br /&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-table-of-contents&#34;&gt;&lt;br /&gt;
&lt;ul&gt;&lt;br /&gt;
&lt;li&gt;&lt;a href=&#34;#sec-1&#34;&gt;1 notice&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;&lt;a href=&#34;#sec-2&#34;&gt;2 explain basics&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;&lt;a href=&#34;#sec-3&#34;&gt;3 explain analyse&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;&lt;a href=&#34;#sec-4&#34;&gt;4 Caveats 注意事项&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1&#34;&gt;&lt;span class=&#34;section-number-3&#34;&gt;1&lt;/span&gt; notice&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
简单翻译了一下 &lt;a href=&#34;http://www.postgresql.org/docs/9.2/static/using-explain.html&#34;&gt;http://www.postgresql.org/docs/9.2/static/using-explain.html&lt;/a&gt; ，里面有些内容没翻译。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2&#34;&gt;&lt;span class=&#34;section-number-3&#34;&gt;2&lt;/span&gt; explain basics&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-2&#34;&gt;&lt;br /&gt;





&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT * FROM tenk1;

                         QUERY PLAN
-------------------------------------------------------------
 Seq Scan on tenk1  (cost=0.00..458.00 rows=10000 width=244)
&lt;/pre&gt;&lt;br /&gt;


&lt;ul&gt;&lt;br /&gt;
&lt;li&gt;第一行输出需要的消耗。&lt;br /&gt;
&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;最后一行输出需要的消耗。&lt;br /&gt;
&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;返回的行数，假定全部返回。并非扫描处理的行数。&lt;br /&gt;
&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;每行的平均数据量，字节&lt;br /&gt;
&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
消耗是使用设置的规划器的一些 cost常量&lt;sup&gt;&lt;a class=&#34;footref&#34; name=&#34;fnr.1&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 来计算出来的，上一级的 node 的 消耗包括了所有子 node 的消耗，消耗不包括传输结果花的时间。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;SELECT relpages, reltuples FROM pg_class WHERE relname = &#39;tenk1&#39;;
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
从上面这个语句可以看到，tenk1 有 358 磁盘页和 10000 行。这个查询的消耗计算公式如下&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;pre class=&#34;example&#34;&gt;
 (disk pages read * seq_page_cost) + (rows scanned * cpu_tuple_cost)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
默认情况下 &lt;code&gt;seq_page_cost = 1.0, cpu_tuple_cost = 0.01&lt;/code&gt;, 所以最总消耗是 &lt;code&gt;(358 * 1.0) + (10000 * 0.01) = 458&lt;/code&gt; 。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT * FROM tenk1 WHERE unique1 &amp;lt; 7000;

                         QUERY PLAN
------------------------------------------------------------
 Seq Scan on tenk1  (cost=0.00..483.00 rows=7001 width=244)
   Filter: (unique1 &amp;lt; 7000)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
再看这个，加了一个 where 条件，多了一个 filter 操作，返回结果变少，但是消耗变多了。因为总体需要处理的数据没有变少，并且还多了&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;pre class=&#34;example&#34;&gt;
 10000 * cpu_operator_cost
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
需要的消耗。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
这些计算方法得到的数值可能和你系统的会稍有区别，使用 analyse 命令可能会改变计算结果，因为它会根据一些随机的样本重新收集表的状态信息。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT * FROM tenk1 WHERE unique1 &amp;lt; 100;

                                  QUERY PLAN
------------------------------------------------------------------------------
 Bitmap Heap Scan on tenk1  (cost=5.03..229.17 rows=101 width=244)
   Recheck Cond: (unique1 &amp;lt; 100)
   -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.01 rows=101 width=0)
         Index Cond: (unique1 &amp;lt; 100)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
再来看一个。子执行计划节点会先扫描索引，上一级的执行计划节点会根据索引返回的位置来获取数据。获取散列数据比获取全部数据消耗要大，不过因为毕竟是少量数据，可以看到消耗还是小于全表扫描。上级的节点会在获取散列数据之前做一个磁盘排序，好减少获取的消耗，而 Bitmap 字样表示索引返回的结果是按照存储位置排好序的，这就是使用索引的一个原因。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT * FROM tenk1 WHERE unique1 &amp;lt; 100 AND stringu1 = &#39;xxx&#39;;

                                  QUERY PLAN
------------------------------------------------------------------------------
 Bitmap Heap Scan on tenk1  (cost=5.01..229.40 rows=1 width=244)
   Recheck Cond: (unique1 &amp;lt; 100)
   Filter: (stringu1 = &#39;xxx&#39;::name)
   -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.01 rows=101 width=0)
         Index Cond: (unique1 &amp;lt; 100)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
stringu1 = &#39;xxx&#39; 减少了输出的行数，因为还需要扫描同样的行数，所以没有减少执行计划的消耗，而且还有稍微的增加，&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT * FROM tenk1 WHERE unique1 = 42;

                                 QUERY PLAN
-----------------------------------------------------------------------------
 Index Scan using tenk1_unique1 on tenk1  (cost=0.00..8.27 rows=1 width=244)
   Index Cond: (unique1 = 42)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
数据根据索引排序来获取，不需要额外的排序。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT * FROM tenk1 WHERE unique1 &amp;lt; 100 AND unique2 &amp;gt; 9000;

                                     QUERY PLAN
-------------------------------------------------------------------------------------
 Bitmap Heap Scan on tenk1  (cost=25.01..60.14 rows=10 width=244)
   Recheck Cond: ((unique1 &amp;lt; 100) AND (unique2 &amp;gt; 9000))
   -&amp;gt;  BitmapAnd  (cost=25.01..25.01 rows=10 width=0)
         -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.01 rows=101 width=0)
               Index Cond: (unique1 &amp;lt; 100)
         -&amp;gt;  Bitmap Index Scan on tenk1_unique2  (cost=0.00..19.74 rows=999 width=0)
               Index Cond: (unique2 &amp;gt; 9000)

EXPLAIN SELECT * FROM tenk1 WHERE unique1 &amp;lt; 100 AND unique2 &amp;gt; 9000 LIMIT 2;

                                     QUERY PLAN
-------------------------------------------------------------------------------------
 Limit  (cost=0.00..14.25 rows=2 width=244)
   -&amp;gt;  Index Scan using tenk1_unique2 on tenk1  (cost=0.00..71.23 rows=10 width=244)
         Index Cond: (unique2 &amp;gt; 9000)
         Filter: (unique1 &amp;lt; 100)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
这两个查询，第一个分别查两个索引，然后做 BitmapAnd 得到结果。第二个只查了其中一个索引，然后使用 filter 方式来做过滤，可以看到第二个查询里面的消耗 71.23 表示的是返回所有数据需要的消耗，Limit 节点在得到需要的结果厚，会终止执行，所以最终没有返回那么多，最终消耗小一点，比第一个查询小。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;




&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT *
FROM tenk1 t1, tenk2 t2
WHERE t1.unique1 &amp;lt; 10 AND t1.unique2 = t2.unique2;

                                      QUERY PLAN
--------------------------------------------------------------------------------------
 Nested Loop  (cost=4.33..118.25 rows=10 width=488)
   -&amp;gt;  Bitmap Heap Scan on tenk1 t1  (cost=4.33..39.44 rows=10 width=244)
         Recheck Cond: (unique1 &amp;lt; 10)
         -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..4.33 rows=10 width=0)
               Index Cond: (unique1 &amp;lt; 10)
   -&amp;gt;  Index Scan using tenk2_unique2 on tenk2 t2  (cost=0.00..7.87 rows=1 width=244)
         Index Cond: (unique2 = t1.unique2)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
这个是两表 join，最后通过嵌套循环节点来做的 join。先查询外层 &lt;code&gt;Bitmap heap scan&lt;/code&gt; 这个节点，这个节点还有个子节点。这个节点的查询和 &lt;code&gt;select ... where unique1 &amp;lt; 10&lt;/code&gt; 的查询类似。然后执行内层 &lt;code&gt;Index scan using&lt;/code&gt; 这个节点，外层查询获取到的数据会插入进来，这个时候 t1.unique2 的值已经有了，所以这层的查询和 &lt;code&gt;select ... where t2.unique2 = 常量&lt;/code&gt; 的查询类似，消耗比前面的小是因为第一次查询有了 cache，这次就会稍微快了一点。这层查询的消耗是 &lt;code&gt;外层行数*内层的消耗=10 * 7.87&lt;/code&gt; 加上一些 cpu 消耗。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT *
FROM tenk1 t1, tenk2 t2
WHERE t1.unique1 &amp;lt; 10 AND t1.unique2 = t2.unique2 AND t1.hundred &amp;lt; t2.hundred;

                                      QUERY PLAN
--------------------------------------------------------------------------------------
 Nested Loop  (cost=4.33..118.28 rows=3 width=488)
   Join Filter: (t1.hundred &amp;lt; t2.hundred)
   -&amp;gt;  Bitmap Heap Scan on tenk1 t1  (cost=4.33..39.44 rows=10 width=244)
         Recheck Cond: (unique1 &amp;lt; 10)
         -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..4.33 rows=10 width=0)
               Index Cond: (unique1 &amp;lt; 10)
   -&amp;gt;  Index Scan using tenk2_unique2 on tenk2 t2  (cost=0.00..7.87 rows=1 width=244)
         Index Cond: (unique2 = t1.unique2)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
如果有条件无法在两个子节点上面执行，那就只能在 join 节点来做 filter，类似上面这个。实际执行时间和前面那个没有 t1.hundred &amp;lt; t2.hundred 条件的差不多。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
outer join 的时候，还可能会有 Join Filter 和 Filter 同时出现的情况，join filter 出现在外表的 on 语句里面，不匹配的数据依然会返回 null。而 filter 这个时候是用来过滤 join 结果的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
对于 inner join，Join Filter 和 Filter 两个没有区别。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT *
FROM tenk1 t1, tenk2 t2
WHERE t1.unique1 &amp;lt; 100 AND t1.unique2 = t2.unique2;

                                        QUERY PLAN
------------------------------------------------------------------------------------------
 Hash Join  (cost=230.43..713.94 rows=101 width=488)
   Hash Cond: (t2.unique2 = t1.unique2)
   -&amp;gt;  Seq Scan on tenk2 t2  (cost=0.00..445.00 rows=10000 width=244)
   -&amp;gt;  Hash  (cost=229.17..229.17 rows=101 width=244)
         -&amp;gt;  Bitmap Heap Scan on tenk1 t1  (cost=5.03..229.17 rows=101 width=244)
               Recheck Cond: (unique1 &amp;lt; 100)
               -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.01 rows=101 width=0)
                     Index Cond: (unique1 &amp;lt; 100)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
改变一些条件，会看到执行计划变了，选择了 hash join。一个表的结果会在内层里面记录一个 hash 表，查另一个表的时候会查这个 hash 表来查看匹配的数据。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN SELECT *
FROM tenk1 t1, onek t2
WHERE t1.unique1 &amp;lt; 100 AND t1.unique2 = t2.unique2;

                                        QUERY PLAN
------------------------------------------------------------------------------------------
 Merge Join  (cost=197.83..267.93 rows=10 width=488)
   Merge Cond: (t1.unique2 = t2.unique2)
   -&amp;gt;  Index Scan using tenk1_unique2 on tenk1 t1  (cost=0.00..656.25 rows=101 width=244)
         Filter: (unique1 &amp;lt; 100)
   -&amp;gt;  Sort  (cost=197.83..200.33 rows=1000 width=244)
         Sort Key: t2.unique2
         -&amp;gt;  Seq Scan on onek t2  (cost=0.00..148.00 rows=1000 width=244)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
这是一个 merge jion 操作。merge join 需要输入的表都按照 join 字段先进行排序。从 t1 直接通过索引进行了查询，得到的结果就是顺序的。因为 t2 需要返回的数据量大，从 t2 做了全表扫描，然后进行了排序。通常全表扫描+排序比走索引消耗小。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
出同样的结果有很多路可以走，如果想看看其他执行计划是否更实惠，可以通过打开关闭一些标志&lt;sup&gt;&lt;a class=&#34;footref&#34; name=&#34;fnr.2&#34; href=&#34;#fn.2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;来做到。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;SET enable_sort = off;

EXPLAIN SELECT *
FROM tenk1 t1, onek t2
WHERE t1.unique1 &amp;lt; 100 AND t1.unique2 = t2.unique2;

                                        QUERY PLAN
------------------------------------------------------------------------------------------
 Merge Join  (cost=0.00..292.36 rows=10 width=488)
   Merge Cond: (t1.unique2 = t2.unique2)
   -&amp;gt;  Index Scan using tenk1_unique2 on tenk1 t1  (cost=0.00..656.25 rows=101 width=244)
         Filter: (unique1 &amp;lt; 100)
   -&amp;gt;  Index Scan using onek_unique2 on onek t2  (cost=0.00..224.76 rows=1000 width=244)
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
可以看到走索引比全表扫描消耗更大。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-3&#34;&gt;&lt;span class=&#34;section-number-3&#34;&gt;3&lt;/span&gt; explain analyse&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-3&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
explain 的 analyse 选项可以看看规划器执行 sql 所用的真实时间。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN ANALYZE SELECT *
FROM tenk1 t1, tenk2 t2
WHERE t1.unique1 &amp;lt; 10 AND t1.unique2 = t2.unique2;

                                                           QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=4.33..118.25 rows=10 width=488) (actual time=0.370..1.126 rows=10 loops=1)
   -&amp;gt;  Bitmap Heap Scan on tenk1 t1  (cost=4.33..39.44 rows=10 width=244) (actual time=0.254..0.380 rows=10 loops=1)
         Recheck Cond: (unique1 &amp;lt; 10)
         -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..4.33 rows=10 width=0) (actual time=0.164..0.164 rows=10 loops=1)
               Index Cond: (unique1 &amp;lt; 10)
   -&amp;gt;  Index Scan using tenk2_unique2 on tenk2 t2  (cost=0.00..7.87 rows=1 width=244) (actual time=0.041..0.048 rows=1 loops=10)
         Index Cond: (unique2 = t1.unique2)
 Total runtime: 2.414 ms
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
如上所示，会显示出来真实的执行时间（毫秒），返回的行数等其他信息。为了和 explain 里面消耗的取值能匹配上，loop 大于 1 的节点显示的是单次执行的时间，需要乘以循环次数。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN ANALYZE SELECT *
FROM tenk1 t1, tenk2 t2
WHERE t1.unique1 &amp;lt; 100 AND t1.unique2 = t2.unique2 ORDER BY t1.fivethous;

                                                                 QUERY PLAN
--------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=717.30..717.56 rows=101 width=488) (actual time=104.950..105.327 rows=100 loops=1)
   Sort Key: t1.fivethous
   Sort Method: quicksort  Memory: 68kB
   -&amp;gt;  Hash Join  (cost=230.43..713.94 rows=101 width=488) (actual time=3.680..102.396 rows=100 loops=1)
         Hash Cond: (t2.unique2 = t1.unique2)
         -&amp;gt;  Seq Scan on tenk2 t2  (cost=0.00..445.00 rows=10000 width=244) (actual time=0.046..46.219 rows=10000 loops=1)
         -&amp;gt;  Hash  (cost=229.17..229.17 rows=101 width=244) (actual time=3.184..3.184 rows=100 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 27kB
               -&amp;gt;  Bitmap Heap Scan on tenk1 t1  (cost=5.03..229.17 rows=101 width=244) (actual time=0.612..1.959 rows=100 loops=1)
                     Recheck Cond: (unique1 &amp;lt; 100)
                     -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.01 rows=101 width=0) (actual time=0.390..0.390 rows=100 loops=1)
                           Index Cond: (unique1 &amp;lt; 100)
 Total runtime: 107.392 ms
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
有时候还会显示更多的一些信息，比如 sort 和 hash 节点。sort 节点会显示排序的方法，内存磁盘的占用。hash 节点会显示桶（buckets）和批次（batches），如果 batches 大于 1 会使用磁盘空间。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN ANALYZE SELECT * FROM tenk1 WHERE ten &amp;lt; 7;

                                                QUERY PLAN
----------------------------------------------------------------------------------------------------------
 Seq Scan on tenk1  (cost=0.00..483.00 rows=7000 width=244) (actual time=0.111..59.249 rows=7000 loops=1)
   Filter: (ten &amp;lt; 7)
   Rows Removed by Filter: 3000
 Total runtime: 85.340 ms
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
上面这个执行计划显示了 filter 移除了多少行结果。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
explain 还提供了一个 buffers 选项。能得到 query 的哪部分 io 最密集。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;



&lt;pre class=&#34;example&#34;&gt;EXPLAIN (ANALYZE, BUFFERS) SELECT * FROM tenk1 WHERE unique1 &amp;lt; 100 AND unique2 &amp;gt; 9000;

                                                            QUERY PLAN
-----------------------------------------------------------------------------------------------------------------------------------
 Bitmap Heap Scan on tenk1  (cost=25.07..60.23 rows=10 width=244) (actual time=3.069..3.213 rows=10 loops=1)
   Recheck Cond: ((unique1 &amp;lt; 100) AND (unique2 &amp;gt; 9000))
   Buffers: shared hit=16
   -&amp;gt;  BitmapAnd  (cost=25.07..25.07 rows=10 width=0) (actual time=2.967..2.967 rows=0 loops=1)
         Buffers: shared hit=7
         -&amp;gt;  Bitmap Index Scan on tenk1_unique1  (cost=0.00..5.02 rows=102 width=0) (actual time=0.732..0.732 rows=200 loops=1)
               Index Cond: (unique1 &amp;lt; 100)
               Buffers: shared hit=2
         -&amp;gt;  Bitmap Index Scan on tenk1_unique2  (cost=0.00..19.80 rows=1007 width=0) (actual time=2.015..2.015 rows=1009 loops=1)
               Index Cond: (unique2 &amp;gt; 9000)
               Buffers: shared hit=5
 Total runtime: 3.917 ms
&lt;/pre&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
要注意的是，explain analyse 会真的执行 sql，所以对于 update，insert，delete 等的 sql 操作，最好在执行的时候启用事务，执行完 explain 之后 rollback。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-4&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-4&#34;&gt;&lt;span class=&#34;section-number-3&#34;&gt;4&lt;/span&gt; Caveats 注意事项&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-4&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
有两个情况可能会影响 explain analyse 和实际执行的差别&lt;br /&gt;
1 因为没有任何输出，所以 I/O 和网络网络传输消耗没有体现。&lt;br /&gt;
2 因为要输出执行时间，而有些系统里面 gettimeofday() 这个系统调用很慢，所以会导致消耗增加。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
在衡量 explain 执行结果的时候，最好是在情况类似的 db 上面，否则可能没有任何参考价值。比如在一个小表上面的执行计划可能和大表就会很不一样。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;div id=&#34;footnotes&#34;&gt;&lt;br /&gt;
&lt;h2 class=&#34;footnotes&#34;&gt;Footnotes: &lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-footnotes&#34;&gt;&lt;br /&gt;
&lt;p class=&#34;footnote&#34;&gt;&lt;sup&gt;&lt;a class=&#34;footnum&#34; name=&#34;fn.1&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; : http://www.postgresql.org/docs/9.2/static/runtime-config-query.html#RUNTIME-CONFIG-QUERY-CONSTANTS&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;p class=&#34;footnote&#34;&gt;&lt;sup&gt;&lt;a class=&#34;footnum&#34; name=&#34;fn.2&#34; href=&#34;#fnr.2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; : http://www.postgresql.org/docs/9.2/static/runtime-config-query.html#RUNTIME-CONFIG-QUERY-ENABLE&lt;br /&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;postamble&#34;&gt;&lt;br /&gt;
&lt;p class=&#34;date&#34;&gt;Date: 2013-02-03 18:27:03 CST&lt;/p&gt;&lt;br /&gt;
&lt;p class=&#34;author&#34;&gt;Author: Wang Dong&lt;/p&gt;&lt;br /&gt;
&lt;p class=&#34;creator&#34;&gt;Org version 7.8.11 with Emacs version 24&lt;/p&gt;&lt;br /&gt;
&lt;a href=&#34;http://validator.w3.org/check?uri=referer&#34;&gt;Validate XHTML 1.0&lt;/a&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>redmine-a-good-project-tracker</title>
      <link>https://wdicc.com/redmine-a-good-project-tracker/</link>
      <pubDate>Tue, 11 Dec 2012 14:53:00 +0800</pubDate>
      
      <guid>https://wdicc.com/redmine-a-good-project-tracker/</guid>
      <description>

&lt;p&gt;其实很早，大概2，3年前就听说了 redmine 了，不过他环境是 ruby 的，一直没有勇气去搭一个环境。现在项目人多了，bug 阿 feature 阿，就需要记录一下了，因为有些事情不记录下来总是会忘记。之前是尝试通过 wiki ＋ bugfree 来记录的，bugfree 记录在提测之后的一些问题，wiki 记录一些 feature request 什么的。bugfree 我们没权限管理，wiki 记录又不方便，然后我就又想起来 redmine 了。&lt;/p&gt;

&lt;p&gt;哦对，其实公司还提供了一个 jira 给大家用，我用了几次我觉得那玩意太难用了，和那个 confluence 的 wiki 一样难用。&lt;/p&gt;

&lt;p&gt;本身搭建没什么难度，编译一个 ruby，然后 gem 安装几个包，下载 redmine，使用 rake 命令操作就好了。启动他的 server 之后，就可以访问了。下面几个东西是我花了一些时间配置的。&lt;/p&gt;

&lt;h2 id=&#34;和-ldap-集成&#34;&gt;和 ldap 集成&lt;/h2&gt;

&lt;p&gt;在 redmine 的设置里面，本身是有一项和 redmine 集成的功能的，设置 basedn，和下面的 attributes 内容（sAMAccountName,givenName,sN,mail)就可以了。点测试，得能通过。&lt;/p&gt;

&lt;p&gt;在我这里，光设置这个还不行，还需要 hack 一段代码。注意下面的那个 &lt;code&gt;@xxxx.com&lt;/code&gt;，这个对应你自己的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;ndex: app/models/auth_source_ldap.rb
&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;===================================================================
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;--- app/models/auth_source_ldap.rb	(版本 10947)
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+++ app/models/auth_source_ldap.rb	(工作副本)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -135,11 +135,12 @@
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt;   # Get the user&amp;#39;s dn and any attributes for them, given their login
   def get_user_dn(login, password)
     ldap_con = nil
&lt;span style=&#34;color:#a00000&#34;&gt;-    if self.account &amp;amp;&amp;amp; self.account.include?(&amp;#34;$login&amp;#34;)
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;-      ldap_con = initialize_ldap_con(self.account.sub(&amp;#34;$login&amp;#34;, Net::LDAP::DN.escape(login)), password)
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;-    else
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;-      ldap_con = initialize_ldap_con(self.account, self.account_password)
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;-    end
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    ldap_con = initialize_ldap_con(login + &amp;#39;@xxxxx.com&amp;#39;, password)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #if self.account &amp;amp;&amp;amp; self.account.include?(&amp;#34;$login&amp;#34;)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #  ldap_con = initialize_ldap_con(self.account.sub(&amp;#34;$login&amp;#34;, Net::LDAP::DN.escape(login)), password)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #else
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #  ldap_con = initialize_ldap_con(self.account, self.account_password)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #end
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;     login_filter = Net::LDAP::Filter.eq( self.attr_login, login )
     object_filter = Net::LDAP::Filter.eq( &amp;#34;objectClass&amp;#34;, &amp;#34;*&amp;#34; )
     attrs = {}
&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -149,6 +150,8 @@
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt;       search_filter = search_filter &amp;amp; f
     end
 
&lt;span style=&#34;color:#00a000&#34;&gt;+    logger.debug &amp;#34;------------get_user_dn #{login} #{self.base_dn} #{search_filter} #{search_attributes}&amp;#34; if logger &amp;amp;&amp;amp; logger.debug?
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;     ldap_con.search( :base =&amp;gt; self.base_dn,
                      :filter =&amp;gt; search_filter,
                      :attributes=&amp;gt; search_attributes) do |entry|
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;总之登陆验证的代码关键就在这里了，可以自己做尝试，建议先写最简单的代码测试。比如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#007020&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;rubygems&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#007020&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;net/ldap&amp;#39;&lt;/span&gt;

ldap &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;Net&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;LDAP&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;new &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:host&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#39;qunarldap.corp.qunar.com&amp;#39;&lt;/span&gt;,
     &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:port&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00d;font-weight:bold&#34;&gt;389&lt;/span&gt;,
     &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:auth&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; {
           &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:method&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:simple&lt;/span&gt;,
           &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:username&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;wd@xxxx.com&amp;#34;&lt;/span&gt;,
           &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:password&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;pwd&amp;#34;&lt;/span&gt;
     }

filter &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;Net&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;LDAP&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;Filter&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;eq(&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sAMAccountName&amp;#34;&lt;/span&gt;,&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;wd*&amp;#34;&lt;/span&gt;)
object_filter &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;Net&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;LDAP&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#036;font-weight:bold&#34;&gt;Filter&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;eq( &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;objectClass&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; )
search_filter &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; filter &lt;span style=&#34;color:#333&#34;&gt;&amp;amp;&lt;/span&gt; object_filter

treebase &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;你的 basedn&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#888&#34;&gt;#&lt;/span&gt;

&lt;span style=&#34;color:#038;font-weight:bold&#34;&gt;attr&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;dn&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;givenName&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;sN&amp;#34;&lt;/span&gt;, &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;mail&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;

ldap&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;search(&lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:base&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; treebase, &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:filter&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; search_filter, &lt;span style=&#34;color:#a60;background-color:#fff0f0&#34;&gt;:attributes&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#038;font-weight:bold&#34;&gt;attr&lt;/span&gt; ) &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;|&lt;/span&gt;entry&lt;span style=&#34;color:#333&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;DN: &lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;#{&lt;/span&gt;entry&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;dn&lt;span style=&#34;background-color:#eee&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;
  entry&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;|&lt;/span&gt;attribute, values&lt;span style=&#34;color:#333&#34;&gt;|&lt;/span&gt;
    &lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;   &lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;#{&lt;/span&gt;attribute&lt;span style=&#34;background-color:#eee&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;:&amp;#34;&lt;/span&gt;
    values&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;|&lt;/span&gt;value&lt;span style=&#34;color:#333&#34;&gt;|&lt;/span&gt;
      &lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;      ---&amp;gt;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;#{&lt;/span&gt;value&lt;span style=&#34;background-color:#eee&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;end&lt;/span&gt;
  &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#007020&#34;&gt;p&lt;/span&gt; ldap&lt;span style=&#34;color:#333&#34;&gt;.&lt;/span&gt;get_operation_result&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;搞定这块，就可以通过 ldap 用户直接登陆了，登陆会自动创建用户。&lt;/p&gt;

&lt;h2 id=&#34;通过回复邮件自动创建和更新-issue&#34;&gt;通过回复邮件自动创建和更新 issue&lt;/h2&gt;

&lt;p&gt;用过 bugzilla 的都知道，可以通过邮件回复的方式来 comment issue。redmine 也提供了这个功能。我这种对 mail 服务器无权的用户，只能申请一个邮箱专门做这个事情了。公司邮箱是 exchange 的，没有打开 imap。redmine 只提供了 imap，pop 之类的方式。好在还有 davmail。先配置好一个 davmail，然后通过 imap 来做这个事情，imap 比 pop 好处多很多，比如可以指定 inbox，可以 move 到 read 之类，就不多说了。&lt;/p&gt;

&lt;p&gt;crontab 指令大概如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#579&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#579&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#963&#34;&gt;LOG&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;/export/redmine/log/mail_recieve.log

&lt;span style=&#34;color:#007020&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;start &lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#963&#34;&gt;$LOG&lt;/span&gt;

/usr/local/ruby/bin/rake --silent -f /export/redmine/Rakefile redmine:email:receive_imap &lt;span style=&#34;color:#963&#34;&gt;RAILS_ENV&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;localhost &lt;span style=&#34;color:#963&#34;&gt;username&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;abc &lt;span style=&#34;color:#963&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;def &lt;span style=&#34;color:#963&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;1143&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;move_on_success&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;read&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;move_on_failure&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;failed &lt;span style=&#34;color:#963&#34;&gt;unknown_user&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;accept &amp;gt;&amp;gt; &lt;span style=&#34;color:#963&#34;&gt;$LOG&lt;/span&gt; &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color:#007020&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;end &lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#963&#34;&gt;$LOG&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;不过如果 redmine 就这么简单就搞定的话，那我也没必要单独拿出来掰了。关键是，通过 imap 死活就是不行。只好又看了一下代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;Index: lib/redmine/imap.rb
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;===================================================================
&lt;/span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;--- lib/redmine/imap.rb	(版本 10947)
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+++ lib/redmine/imap.rb	(工作副本)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -30,8 +30,9 @@
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt;         imap.login(imap_options[:username], imap_options[:password]) unless imap_options[:username].nil?
         imap.select(folder)
         imap.search([&amp;#39;NOT&amp;#39;, &amp;#39;SEEN&amp;#39;]).each do |message_id|
&lt;span style=&#34;color:#a00000&#34;&gt;-          msg = imap.fetch(message_id,&amp;#39;RFC822&amp;#39;)[0].attr[&amp;#39;RFC822&amp;#39;]
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;-          logger.debug &amp;#34;Receiving message #{message_id}&amp;#34; if logger &amp;amp;&amp;amp; logger.debug?
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+          #msg = imap.fetch(message_id,&amp;#39;RFC822&amp;#39;)[0].attr[&amp;#39;RFC822&amp;#39;]
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+          msg = imap.fetch(message_id,&amp;#39;BODY[]&amp;#39;)[0].attr[&amp;#39;BODY[]&amp;#39;]
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+          logger.debug &amp;#34;Receiving message #{message_id}, msg:\n#{msg}&amp;#34; if logger &amp;amp;&amp;amp; logger.debug?
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;           if MailHandler.receive(msg, options)
             logger.debug &amp;#34;Message #{message_id} successfully received&amp;#34; if logger &amp;amp;&amp;amp; logger.debug?
             if imap_options[:move_on_success]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里把那个 RFC822 改成 BODY[] 就好了，入丝般润滑。。。&lt;/p&gt;

&lt;h2 id=&#34;过滤掉邮件回复的垃圾内容&#34;&gt;过滤掉邮件回复的垃圾内容&lt;/h2&gt;

&lt;p&gt;邮件回复 ok 之后，紧跟着问题就是，他会把整封邮件都作为回复记录进去，这个太恶心了。还好他提供了设置，在 email notification 选项里面，配置一个 email header &lt;code&gt;--Reply above this line--&lt;/code&gt;，在 incoming mail 里面配置一个 Truncate emails after one of these lines &lt;code&gt;--Reply above this line--&lt;/code&gt;，他就会截取这个字符前面的内容了。&lt;/p&gt;

&lt;p&gt;不过还有问题就是，一般邮件回复都开头都是个 &lt;code&gt;On xxxx xxx wrote:&lt;/code&gt;，这个他不会截掉，那就再 hack 一下。。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#a00000&#34;&gt;--- app/models/mail_handler.rb	(版本 10947)
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+++ app/models/mail_handler.rb	(工作副本)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;@@ -463,9 +464,12 @@
&lt;/span&gt;&lt;span style=&#34;color:#800080;font-weight:bold&#34;&gt;&lt;/span&gt; 
   # Removes the email body of text after the truncation configurations.
   def cleanup_body(body)
&lt;span style=&#34;color:#a00000&#34;&gt;-    delimiters = Setting.mail_handler_body_delimiters.to_s.split(/[\r\n]+/).reject(&amp;amp;:blank?).map {|s| Regexp.escape(s)}
&lt;/span&gt;&lt;span style=&#34;color:#a00000&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    #delimiters = Setting.mail_handler_body_delimiters.to_s.split(/[\r\n]+/).reject(&amp;amp;:blank?).map {|s| Regexp.escape(s)}
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+    delimiters = Setting.mail_handler_body_delimiters.to_s.split(/[\r\n]+/).reject(&amp;amp;:blank?).map {|s| s}
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;     unless delimiters.empty?
       regex = Regexp.new(&amp;#34;^[&amp;gt; ]*(#{ delimiters.join(&amp;#39;|&amp;#39;) })\s*[\r\n].*&amp;#34;, Regexp::MULTILINE)
&lt;span style=&#34;color:#00a000&#34;&gt;+      #regex = Regexp.new(&amp;#34;(^[&amp;gt; ]*(#{ delimiters.join(&amp;#39;|&amp;#39;) })\s*[\r\n].*)|(On (.*)wrote:[\r\n].*)&amp;#34;, Regexp::MULTILINE)
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;       body = body.gsub(regex, &amp;#39;&amp;#39;)
     end
     body.strip
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里搞定之后，在那个 Truncate emails after one of these lines 里面就可以写正则了，增加一行 &lt;code&gt;On (.*)wrote:&lt;/code&gt;，然后就可以了。&lt;/p&gt;

&lt;h2 id=&#34;code-review&#34;&gt;code review&lt;/h2&gt;

&lt;p&gt;增加了一个 code review 插件，已有项目需要在项目的模块里面启用。并且需要 admin 在角色配置里面，给相应角色增加 code review 的权限。不过貌似这插件不太好用，只能一行一行来。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some tips for bash scripting</title>
      <link>https://wdicc.com/some-tips-on-bash-scripting/</link>
      <pubDate>Sun, 02 Dec 2012 19:43:00 +0800</pubDate>
      
      <guid>https://wdicc.com/some-tips-on-bash-scripting/</guid>
      <description>

&lt;p&gt;最近几天写了一些 bash 脚本，又有些心得，记录一下。&lt;/p&gt;

&lt;h2 id=&#34;获取当前路径的绝对路径&#34;&gt;获取当前路径的绝对路径&lt;/h2&gt;

&lt;p&gt;比较常见的需求可能是获取相对路径，这样方便程序复制到其他目录也可以运行。使用 &lt;code&gt;$(dirname $0)&lt;/code&gt; 就可以获取相对路径，不过这里说的是绝对路径。&lt;/p&gt;

&lt;p&gt;其实也简单，相对路径加上当前目录，那不就是绝对路径么。不过是，有时候 &lt;code&gt;$(dirname $0)&lt;/code&gt; 取到的也可能是绝对路径（一般期望相对路径的程序也能跑通，所以不大关心）。&lt;/p&gt;

&lt;p&gt;可以用下面的做法，大意是先判断一下获取到的路径是不是 &lt;code&gt;/&lt;/code&gt; 开头，如果是，那就不处理，如果不是，那就把当前的路径附加上去得到一个绝对路径。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#963&#34;&gt;PG_DIR&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;dirname &lt;span style=&#34;color:#963&#34;&gt;$0&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;/../&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#007020&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$PG_DIR&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; | grep -q ^/

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;$?&lt;/span&gt; -ne &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt;;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#963&#34;&gt;PG_DIR&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#007020&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$PG_DIR&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;使用-getopt-获取命令行参数&#34;&gt;使用 getopt 获取命令行参数&lt;/h2&gt;

&lt;p&gt;获取参数比较常见的做法是取 &lt;code&gt;$1&lt;/code&gt; &lt;code&gt;$2&lt;/code&gt; 这些，不过不太专业，这里说的是类似于 &lt;code&gt;--prefix=/path/to/install -v&lt;/code&gt; 这种。&lt;/p&gt;

&lt;p&gt;bash 本身提供了一个内部命令 &lt;code&gt;getopts&lt;/code&gt; 来做这个事情，不过那个只能支持 short_opts，就是类似 &lt;code&gt;-v&lt;/code&gt; 这种，不支持长的。&lt;/p&gt;

&lt;p&gt;getopt 是一个 GNU 程序，他支持 long_opts。下面是个例子。代码基本来自网上。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#963&#34;&gt;ARGS&lt;/span&gt;&lt;span style=&#34;color:#333&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;$(&lt;/span&gt;getopt -a -o h -l initdb::,help -- &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;$@&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#333&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;$?&lt;/span&gt; -ne &lt;span style=&#34;color:#60e;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#333&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; usage

&lt;span style=&#34;color:#007020&#34;&gt;eval&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;set&lt;/span&gt; -- &lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#963&#34;&gt;ARGS&lt;/span&gt;&lt;span style=&#34;background-color:#eee&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;background-color:#fff0f0&#34;&gt;&amp;#34;&lt;/span&gt; 

&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;do&lt;/span&gt;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#963&#34;&gt;$1&lt;/span&gt; in
                --initdb&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
                        initdb &lt;span style=&#34;color:#963&#34;&gt;$2&lt;/span&gt;
                        ;;
                -h|--help&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
                        usage;
                        ;;
                --&lt;span style=&#34;color:#333&#34;&gt;)&lt;/span&gt;
                        &lt;span style=&#34;color:#007020&#34;&gt;shift&lt;/span&gt;
                        &lt;span style=&#34;color:#007020&#34;&gt;break&lt;/span&gt;
                        ;;
        &lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;esac&lt;/span&gt;
        &lt;span style=&#34;color:#007020&#34;&gt;shift&lt;/span&gt;
&lt;span style=&#34;color:#080;font-weight:bold&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;解释一下上面的参数的含义:
* &lt;code&gt;-o&lt;/code&gt; 参数指定的就是短参数，我试过，貌似还得指定至少一个短参数。
* &lt;code&gt;-l&lt;/code&gt; 参数指定的就是长参数。
* 多个参数用逗号 &lt;code&gt;,&lt;/code&gt; 分隔。
* 参数后面跟一个冒号 &lt;code&gt;:&lt;/code&gt; 表示这个参数(option)必须要给一个参数(argument)，类似上面的 &lt;code&gt;--prefix=/path/to/install&lt;/code&gt; 这种。
* 参数后面跟2个冒号 &lt;code&gt;::&lt;/code&gt; 表示这个参数后面的参数可有可无。比如例子里面的 &lt;code&gt;--initdb&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;find-exec-提示-no-such-file-or-directory&#34;&gt;find exec 提示 No such file or directory&lt;/h2&gt;

&lt;p&gt;这个是之前用来日志删除的一个程序，大概命令类似 &lt;code&gt;find ./ -name &#39;2012*&#39; -exec rm -r {} \;&lt;/code&gt;，后来总发现报 &lt;code&gt;No such file or directory&lt;/code&gt; 这个错误，可是去看的时候，发现那些目录也被删掉了。开始觉得可能是有其他人的程序也在删除这个目录，问了一圈结果没人删。&lt;/p&gt;

&lt;p&gt;后来经过测试琢磨找到原因了，在于这个命令的执行思路大概是先去找那个名字的文件或者目录，然后挨个执行后面的命令。那么，如果找到的既有上级目录，也有下级文件的时候，如果目录先被删掉了，那删文件的时候可不就是 &lt;code&gt;No such file or directory&lt;/code&gt; 么。&lt;/p&gt;

&lt;p&gt;好在 find 提供了一个参数 &lt;code&gt;-prune&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;       -prune True; if the file is a directory, do not descend into it. If -depth is given, false; no effect.  Because -delete implies -depth, you can-
              not usefully use -prune and -delete together.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Hello world</title>
      <link>https://wdicc.com/hello-world/</link>
      <pubDate>Wed, 28 Nov 2012 18:38:00 +0800</pubDate>
      
      <guid>https://wdicc.com/hello-world/</guid>
      <description>&lt;p&gt;Just a test.&lt;/p&gt;

&lt;p&gt;Hello world from github :D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Join 后面跟两个表</title>
      <link>https://wdicc.com/two-table-after-join/</link>
      <pubDate>Sun, 05 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/two-table-after-join/</guid>
      <description>&lt;p&gt;发现 sql 的写法真是千奇百怪，经常遇到没见过的写法。前几天就遇到了一个 sql 在 join 后写两个表，用逗号分隔。类似下面。&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
select a.a, b.f from t1 a left join ( b, c ) on ( b.id = c.id and b.a = a.a )
&lt;/pre&gt;

&lt;p&gt;看到 sql 的这些用法我一般都是去 pgsql 的文档里面去查，因为 pg 的文档里面一般会指明一种用法是否标准 sql，多写标准 sql 可以避免知识不能转移。不过去查了发现 pg 不支持这种写法，也去 pg 里面执行了，确实不支持。&lt;/p&gt;

&lt;p&gt;然后就去看 mysql 的文档，里面有对于这种写法的&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/join.html&#34;&gt;支持&lt;/a&gt;。&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
 The syntax of table_factor is extended in comparison with the SQL Standard. The latter accepts only table_reference, not a list of them inside a pair of parentheses.

This is a conservative extension if we consider each comma in a list of table_reference items as equivalent to an inner join. For example:

SELECT * FROM t1 LEFT JOIN (t2, t3, t4)
                 ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)

is equivalent to:

SELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4)
                 ON (t2.a=t1.a AND t3.b=t1.b AND t4.c=t1.c)

In MySQL, JOIN, CROSS JOIN, and INNER JOIN are syntactic equivalents (they can replace each other). In standard SQL, they are not equivalent. INNER JOIN is used with an ON clause, CROSS JOIN is used otherwise. 
&lt;/pre&gt;

&lt;p&gt;可以看到，这种写法就是等于是让括号里面的 b,c 使用 inner join 的方式连接，当然如果 on 里面没有指定 join 方式，最后就是个笛卡尔集。然后&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/nested-join-optimization.html&#34;&gt;这里&lt;/a&gt; 有更多的一些说明，还有下面这种写法。&lt;/p&gt;

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
t1 LEFT JOIN t2 ON t1.a=t2.a, t3
&lt;/pre&gt;

&lt;p&gt;这些写法都有各自的含义。&lt;/p&gt;

&lt;p&gt;其实这么看来，这个方式好像是比较方便的，不过是对于不明白的人如果乱用，这玩意出的错也是很诡异很难排查的。&lt;/p&gt;

&lt;p&gt;另外注意上面的语句里面写了，mysql 里面的 join, inner join, cross join 是完全同样的东西。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Postgresql 里面连接其他数据库</title>
      <link>https://wdicc.com/fdw-in-postgresql/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/fdw-in-postgresql/</guid>
      <description>

&lt;p&gt;PG 9.x 引入了 fdw，可以通过 pg 去连接其他 db，不仅限于其他 pg，还可以是 mysql，oracle，文件等。按照设计，fdw 还应该提供给查询规划器一些对方 db 的索引等信息，这样在查询过程中可以提升查询速度。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1&#34;&gt;dbi_link&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
dbi 就是 perl 的 dbi，总的思想就是通过 plperl 写一些 function（所以也给了调试修改的便利），通过 dbi 去连接其他数据库，可以连接的 db 和 dbi 的支持一样。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
测试了一下，第一次连接的时候会 cache 对方 db 的信息，对于复杂库没测试成功，只有一个表的库连接成功，并且可以查询。查询的时候就和查询本地库没有区别。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
效率上面看，不是很高，每次查询都必然需要获取对方全部数据。就算是有 where 条件，也不会试用到对方 db 的索引。所以综合来看，只是提供了一个简单的方法来获取数据，最好是一次性的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2&#34;&gt;db_link&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-2&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
db_link 本身是 pg 自带的，contrib 里面的。db_link 只支持 pg，建立连接之后，后续查询可以只指定使用哪个连接即可。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
相对 dbi_link，使用起来稍微复杂一点，需要特定的格式。效率上面看，查全表数据比 dbi_link 快。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
他有个优势是每次查询对方库的时候都需要指定一个 sql，而如果只需要少量数据的时候，可以在 sql 里面直接使用 where 来过滤数据，这样就能使用对方 db 的索引了，速度快很多。不过就是稍微有点繁琐。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-3&#34;&gt;fdw&lt;/h3&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-3&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
&lt;a href=&#34;http://www.postgresonline.com/journal/archives/250-File-FDW-Family-Part-1-file_fdw.html&#34;&gt;http://www.postgresonline.com/journal/archives/250-File-FDW-Family-Part-1-file\_fdw.html&lt;/a&gt; 这里有个链接，讲了 file fdw。其他 fdw 还没有试过。我理解 fdw 是否能使用对方 db 的索引，还需要看 fdw 的实现。file fdw 提供了类似 oracle 外部表一样的东西。实际上早年间 yahoo 的兄弟写过一个外部表的 pg 扩展的，不知道是不是这个 file fdw 就是从那来的。&lt;br /&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>有跳板机的 ssh 登陆</title>
      <link>https://wdicc.com/controlmaster-in-ssh/</link>
      <pubDate>Sun, 06 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/controlmaster-in-ssh/</guid>
      <description>

&lt;p&gt;我厂登陆服务器需要先走一个跳板机，不能直接登陆，很是蛋疼。实际上 ssh 早就解决了这个问题。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
大意是通过设置 proxycommand 来实现，我也写过一个 &lt;a href=&#34;http://wdicc.com/cow-ssh-proxycommand/&#34;&gt;http://wdicc.com/cow-ssh-proxycommand/&lt;/a&gt; 。配置如下&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;
# gateways
Host abc
     Hostname abc.com

# servers
Host *.xxx
     ProxyCommand ssh abc exec nc %h %p 2&gt;/dev/null
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
这样所有 .xxx 结尾的机器，都会使用 abc 这个机器来跳了。要注意的是，首先需要你机器和 abc 之间的 ssh 验证，这个使用使用的是你机器的 id_rsa 和 abc.com 的 authorized_keys。然后会是 proxy 起作用，需要你的机器和 .xxx 机器的验证，使用的是你的机器的 id_rsa 和 .xxx 的 authorized_keys，注意并不是 abc.com 和 .xxx 之间。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
倒霉的是，我厂有些 gateway 机器还需要使用 token，并不能使用 key 验证。虽然有了上面设置，如果从某个机器 cp 数据的时候，还得来回输入哪个 token，真他妈的 2b。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
还好 ssh 还提供了一个 controlmaster，很好的解决了这个问题。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;
Host *
     User dong.wang
     ServerAliveInterval 30
     ControlMaster auto
     ControlPath /tmp/ssh/master-%r@%h:%p
     ControlPersist yes
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
上面这个设置是所有服务器启用 controlmaster，哪个 /tmp/ssh 目录可以自己设置，没有就创建一个。哪个 ControlPersist 可以是个时间。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
这样设置之后，第一次连接的时候，会启动一个 master。后续连接都会走这个，连接速度很快不说，还完全不需要输入什么 token。并且因为只有 gateway 需要输入 token，所以一个 gateway 只需要输入一次。实在是爽大了，真是居家旅行必备啊。就冲着连接速度快这一点也值了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>org-mode 里面自动归档任务</title>
      <link>https://wdicc.com/auto-archive-task-for-org-mode/</link>
      <pubDate>Sun, 08 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/auto-archive-task-for-org-mode/</guid>
      <description>
&lt;p&gt;我想应该有不少人在使用 emacs 的 org-mode 来做笔记，任务管理等。我使用 org-mode 比较多的情况是使用他做一些提纲，类似思维导图一样，以及用它来管理 todo list。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
org-mode 本身提供了 remember 来创建 todo list。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
新建一个 org 文件 ~/org/todo.org，包含两行内容如下&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
* Tasks
* Done
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
然后设置下面的内容&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-lisp&#34;&gt;
(define-key global-map &#34;\C-ca&#34; &#39;org-agenda)
(global-set-key (kbd &#34;C-c m r&#34;) &#39;org-capture)
(setq org-capture-templates
      &#39;((&#34;t&#34; &#34;Todo&#34; entry (file+headline &#34;~/org/todo.org&#34; &#34;Tasks&#34;)
         &#34;* TODO %?\nCREATED: %U&#34;)
        (&#34;j&#34; &#34;Journal&#34; entry (file+datetree &#34;~/org/journal.org&#34;)
         &#34;* %?\nEntered on %U\n  %i\n  %a&#34;)))
(defun wd-move-done-task-to-done-cats ( task-pos )
  &#34;move done task to *DONE cats&#34;
  (let* ((entry (org-get-entry))
        (title (org-get-heading))
        (task (format &#34;** %s\n%s\n&#34; title entry))
        )
    (goto-char (point-min))
    (when (search-forward-regexp &#34;^* Tasks$latex &#34;)
      (goto-char (point-min))
      (when (search-forward-regexp &#34;^* Done$&#34;)
        (goto-char (match-beginning 0))
        (forward-line)      
        (insert task)
        (goto-char task-pos)
        (delete-region (org-entry-beginning-position) (org-entry-end-position))      
        )
      )
    )
  )

(defun wd-track-task-status ( changes-plist )
   &#34;Track task status, and move it to &#39;* Done&#39; cats if it is stats change from to to done
1 TODO 文件至少需要包含两个标题 * Tasks 和 * Done
2 * Tasks 里面的 TODO 内容变成 DONE 的时候，会自动把这个条目移动到 * Done
3 org-todo-keywords 的设置里面不能包含自动增加时间等的设置，否则增加的内容不能正确加到这个条目
&#34;
   ;; (interactive)
   (let ((type (plist-get change-plist :type))
          (pos (plist-get change-plist :position))
          (from (plist-get change-plist :from))
          (to (plist-get change-plist :to))
          )
     (when (and (string= from &#34;TODO&#34;)
                (string= to &#34;DONE&#34;))
       ;; (let ((answer (read-char &#34;Move this entry to *DONE ? Y/N (Y)&#34;)))
       ;;   (when (or (= answer (string-to-char &#34;y&#34;))
       ;;             (= answer (string-to-char &#34;Y&#34;))
       ;;             (= answer (string-to-char &#34;
&#34;))
       ;;             )
           (wd-move-done-task-to-done-cats pos)
         ;; ))
       )
     )
   )

(add-hook &#39;org-trigger-hook &#39;wd-track-task-status)

;; (setq org-todo-keywords
;;       &#39;((sequence &#34;TODO(t)&#34; &#34;WAIT(w@/!)&#34; &#34;|&#34; &#34;DONE(d!)&#34; &#34;CANCELED(c@)&#34;)))
(setq org-todo-keywords
      &#39;((sequence &#34;TODO(t)&#34; &#34;WAIT(w)&#34; &#34;|&#34; &#34;DONE(d)&#34; &#34;CANCELED(c)&#34;)))
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
在任何地方按一下 C-c m r，会出来一个 window 让你选择要创建 todo 还是 journal。选 t，然后输入内容就会自动插入到 ~/org/todo.org 的 * Tasks 里面。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
此后，如果任务完成的时候，打开 todo.org，然后在任务上面 C-c C-t，会提示输入状态。如果是从 TODO 变成了 DONE，那这条任务会被转移到 * Done 里面。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
因为里面都有时间，所以在 agenda list 里面，可以用 L 看到任务完成时间等。也将就用了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>关于面试的一点经验</title>
      <link>https://wdicc.com/about-interview/</link>
      <pubDate>Sun, 08 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-interview/</guid>
      <description>
&lt;p&gt;最近面试了不少，也算有点经验了，阶段总结一下。本文也基本是针对刚毕业的或者毕业没两年的，大牛就别看了，浪费时间。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;简历&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
其实写简历的时候，为了能获得更多的面试机会，通常都会有些夸大，尤其是刚毕业没多久，经验不多的，这个情况更严重。把只看过两次的东西，说成熟悉，把用过几次的说成熟练。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
对于新人来说，这么做似乎会增加面试机会。但实际上，没有目的的面试，只会浪费双方的时间。很多次看到简历觉得似乎这个是我们需要的人，叫来问两句明白水平之后，基本就只能让对方走人了。不管怎么样，这对双方都是一个损失。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
与其夸大简历寻求面试机会，有时候还不如花点时间上个培训班。我见到过不少上培训班的，可能花 3 个月半年的，来了之后你问问题，答得也还算靠谱。不过上培训班能学到的水平大家也清楚，基本是比较初级的，对于高级职位没有帮助。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
总之吧，简历不好夸大，提到的东西至少得是你有自己见解的，否则还不如不提。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;面试题&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
对于技术工程师，很多公司都有面试题。有些求职者可能觉得这个东西挺讨厌的，浪费时间。想知道水平直接聊聊不就完了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
其实面试通常时间都不会很长，在这么短的时间内要决定时不时要一个人，也不是个简单的事情，要了解各方面。通常找工程师的时候，动手能力也是一项。从面试题能看出来动手能力。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
看你写 for 循环也能看出来你的基础扎实不扎实。我还真见过不少人使用他熟悉的语言，这些都写错的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
当然，面试题不是一切，也不是不允许有笔误，毕竟现在那么多编辑工具都有提示，真没记住还不行么？错是可以错的，可是别人指出错误的时候你一要能看出来错误在哪里，二要虚心接受错误。别牛逼哄哄的还说什么从来不手写，都在编辑器写之类，那种态度要不得，哪个公司哪个领导都不愿意找一个大爷回来养着，伺候不起的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;面试过程&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
面试聊天期间大可不必紧张，你的主要目的是表达出来你会的东西。大可不必管对方需要什么样子的人，你合适不合适由对方做判断就好了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
而同时其实面试官也会努力帮你，让你表达出你会的东西。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
至于说不会的东西怎么办？如实说就可以了。可以类比，但是千万不要狡辩，你要明白的是对方的水平肯定不会比你差，你的任何狡辩只能让对方觉得你这个人很无知自大。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-4&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;将来的团队&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
面试不要只关注工资。一个好的工作环境，一个靠谱的团队，带给你的隐性收入远比眼前的工资来的多。不过说实话，这些收入恐怕1，2年就挖空了，那个时候如果一个公司不能按照行情给一个靠谱的价格，那就比较难能继续留住人了。也是个博弈吧，这些事情不是很懂。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
同时，找一个自己喜欢的愿意专研的工作也比较重要。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
当然，如果你就是想涨工资，那就另说。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-5&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;薪资&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
不要尝试讨价还价。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
现在的 IT 公司薪资基本都是不透明的，普通员工通常都只知道自己的工资。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
如果你不想让自己觉得被坑，那最好在来面试之前就通过各个渠道去获取一下这个公司的薪资水平，并且确定自己能接受的最低工资是多少，可以通过朋友你自己等对你的评价来判断，不要依赖面试官。另外你工作的前一家公司给你的工资也是一个参考，觉得自己屈才的话，大可以往上提。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
综合考虑自己的能力，公司能给你带来的隐性收入，到时候直接报你能接受的最低工资就好了。如果是对方真的觉得你的水平不到那个工资，那也没办法的事情。重要的是自己能接受的最低限度是多少，就不要和对方讨价了，否则就算入职了回头也会郁闷的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-6&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-6&#34;&gt;跳槽&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-6&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
如果是跳槽过来的，一般都会问一下为什么从原单位离职。建议如实交代，就算是因为工资不高等觉得好像放不到台面上面的原因。没关系的，诚信是个基本要求。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
跳槽也不建议太频繁。虽然现在通过跳槽涨工资是个普遍现象，但是也没有刚那边工作半年就来这边面试，并且要求工资涨 2k 的吧？那你再牛逼也没公司敢要，刚培养到能干活，跑了？&lt;br /&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>mac 里面的 emacs 的几个设置</title>
      <link>https://wdicc.com/emacs-settings-in-mac/</link>
      <pubDate>Tue, 06 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/emacs-settings-in-mac/</guid>
      <description>

&lt;p&gt;刚开始在 mac 里面使用 emacs 简直就是自虐，因为那个反人类的 command 按键。一般 pc 上面的 alt 是在 space 旁边的，macbook 的 space 旁边是 command，对于一个需要经常在 mac 里面按的键，不是一般的郁闷。这个问题有两个方法解决。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;mac 自带的解决方法&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
就是在键盘设置里面，把修饰键里面的 command 和 alt 替换一下。这个方法会很不爽，因为 mac 里面的复制粘贴是 command + c/v，以后要按 alt + c/v 的话，距离有点远。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;KeyRemap4MacBook&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
这个是个 mac 上面的软件，地址在 &lt;a href=&#34;http://pqrs.org/macosx/keyremap4macbook/document.html&#34;&gt;这里&lt;/a&gt; 。里面的设置实在太多了，这里要用到的一个就是只在 emacs 里面把 command 和 alt 替换一下，这样就解决了上面提到的问题，还算完美。可是这个时候会发现，在 emacs 界面激活的情况下，command 开头的系统级别的快捷键都不好用了，比如 command + tab，这也很郁闷。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;emacs 自带的完美解决方法&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
只说 emacs23，emacs24。早期的好像有 mac-pass-command-to-system 之类的设置，可我在 emacs24 里面没看到这个变量。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
具体设置参考&lt;a href=&#34;http://www.emacswiki.org/emacs/EmacsForMacOS#toc23&#34;&gt;这里&lt;/a&gt; ，主要是下面这些设置。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-lisp&#34;&gt;
;; key bindings
(when (eq system-type &#39;darwin) ;; mac specific settings
  (setq mac-option-modifier &#39;alt)
  (setq mac-command-modifier &#39;meta)
  (global-set-key [kp-delete] &#39;delete-char) ;; sets fn-delete to be right-delete
  )
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
现在就很爽了，按 command + x 和 alt + x 效果一样，按 command + tab 也能切换窗口。算是完美了。&lt;br /&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>postgres sql 调优一例</title>
      <link>https://wdicc.com/analyse-and-vacuum-in-postgres/</link>
      <pubDate>Sat, 03 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/analyse-and-vacuum-in-postgres/</guid>
      <description>
&lt;p&gt;前几天发现有个 sql 跑的超慢，第一次拿到 sql 大家简单分析了一下，觉得是写的有问题，里面有对一个大表的查询，数据量大概 800 万，结果还和好几个小表做了 join，而且还是 left join，速度可想而知了。单独对那个大表查询，其实也就是几分钟的事情。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
所以建议就是先对小表做 join，然后再和大表做一次 join。不过结果并不理想，时间依然还是那么长。这个时候就得仔细看执行计划了，如下。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
能看到虽然人肉对 sql 做了一些优化，但是 sql 并没有按照我们的期望去执行，执行计划里面还是首选去查 fact_tuan_rank_detail 这个大表，速度肯定慢了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
 Nested Loop Left Join  (cost=447.90..1003.43 rows=2 width=620)
   Join Filter: (team.id = team_arrive_city.team_id)
   -&gt;  Nested Loop  (cost=77.62..85.98 rows=1 width=588)
         -&gt;  HashAggregate  (cost=77.62..77.68 rows=1 width=71)
               -&gt;  Index Scan using date_idx on fact_tuan_rank_detail  (cost=0.00..77.60 rows=1 width=71)
                     Index Cond: ((thedate &gt;= &#39;2012-02-25&#39;::date) AND (thedate &lt;= &#39;2012-02-27&#39;::date))
                     Filter: (((source)::text ~~ &#39;%team%&#39;::text) AND ((source)::text !~~ &#39;%today%&#39;::text) AND ((source)::text !~~ &#39;%ongoing%&#39;::text) AND ((s
ource)::text !~~ &#39;%special%&#39;::text))
         -&gt;  Index Scan using team_pkey on team  (cost=0.00..8.28 rows=1 width=32)
               Index Cond: (team.id = fact_tuan_rank_detail.team_id)
               Filter: ((to_timestamp((team.end_time)::double precision))::date &gt; &#39;2012-02-27&#39;::date)
   -&gt;  HashAggregate  (cost=370.29..589.15 rows=14591 width=15)
         -&gt;  Seq Scan on team_arrive_city  (cost=0.00..288.19 rows=16419 width=15)
(12 rows)
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
仔细研究之后，发现了 rows=1 这个信息。这就是为什么查询分析器先对这个表做查询了，因为他认为这个表最小。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
此后对这个表执行了一下 &lt;a href=&#34;http://www.postgresql.org/docs/9.1/static/sql-analyze.html&#34;&gt;analyse&lt;/a&gt; 命令，更新了一些统计信息。然后再看执行计划如下。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;


&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
 Hash Join  (cost=1210761.12..1326052.45 rows=2282704 width=620)
   Hash Cond: (fact_tuan_rank_detail.team_id = team.id)
   -&gt;  HashAggregate  (cost=1203912.40..1265555.26 rows=1027381 width=71)
         -&gt;  Index Scan using date_idx on fact_tuan_rank_detail  (cost=0.00..1075489.81 rows=10273807 width=71)
               Index Cond: ((thedate &gt;= &#39;2012-02-25&#39;::date) AND (thedate &lt;= &#39;2012-02-27&#39;::date))
               Filter: (((source)::text ~~ &#39;%team%&#39;::text) AND ((source)::text !~~ &#39;%today%&#39;::text) AND ((source)::text !~~ &#39;%ongoing%&#39;::text) AND ((source)
::text !~~ &#39;%special%&#39;::text))
   -&gt;  Hash  (cost=6666.33..6666.33 rows=14591 width=64)
         -&gt;  Merge Left Join  (cost=6414.63..6666.33 rows=14591 width=64)
               Merge Cond: (team.id = b.team_id)
               -&gt;  Sort  (cost=4670.40..4686.82 rows=6567 width=32)
                     Sort Key: team.id
                     -&gt;  Seq Scan on team  (cost=0.00..4254.02 rows=6567 width=32)
                           Filter: ((to_timestamp((end_time)::double precision))::date &gt; &#39;2012-02-27&#39;::date)
               -&gt;  Sort  (cost=1744.23..1780.71 rows=14591 width=40)
                     Sort Key: b.team_id
                     -&gt;  Subquery Scan on b  (cost=370.29..735.06 rows=14591 width=40)
                           -&gt;  HashAggregate  (cost=370.29..589.15 rows=14591 width=15)
                                 -&gt;  Seq Scan on team_arrive_city  (cost=0.00..288.19 rows=16419 width=15)
(18 rows)
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
可以看到执行计划已经变了，先做其他表的 join，最后再和大表 join。并且提示的执行时间也大致靠谱。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
从这里面引申一下，时常会听到有人说 explain 命令执行后得出的执行时间不靠谱，需要使用 explain analyse。可是为什么不靠谱呢，其实 explain analyse 需要的时间和实际执行时间一样，explain 不靠谱的原因是因为数据库对那个表的统计信息不及时导致的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
再进一步了解，postgres 里面这个统计信息为什么不靠谱呢？难道还总是需要我维护这些信息啊？&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
其实 postgres 里面有个 autovacuum 进程就是做这个事情的。autovacuum 进程默认是启用的。他会在数据库空闲的时候，对数据库做 vavcuum 和 analyse。具体多久执行一次，&lt;a href=&#34;http://www.postgresql.org/docs/9.1/static/routine-vacuuming.html&#34;&gt;文档&lt;/a&gt; 里面都有写，建议多看看这个页面里面的信息。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
此外，还发现 postgres 还提供了很多 &lt;a href=&#34;http://www.postgresql.org/docs/9.1/static/monitoring-stats.html&#34;&gt;数据库状态查询函数&lt;/a&gt; ，使用这里面函数可以查到每个表最后一次 analyse 的时间，vacuum 的时&lt;br /&gt;
间，里面索引被使用的情况等等，好多信息。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

ps: 使用 analyse 之后，那个 sql 好用了，可是发现过两天又不行了，查看 explain select * from t1 好像没问题，那怎么回事呢？开始没想明白，只好继续 analyse 一下，又好了。可过了两天又不行了。这次得细看了。最后发现是因为真实的 sql 是有 where 条件的，日期条件限定的那部分数据查询分析器认为很少导致了问题。没办法后面只好每次导数都 analyse 一下了。发现 pg_bulkload 导数的方式有点问题。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>总算是将就同步好了 gentoo 和 mac 的 emacs</title>
      <link>https://wdicc.com/emacs-in-mac/</link>
      <pubDate>Mon, 20 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/emacs-in-mac/</guid>
      <description>
mac 里面居然自带了一个 emacs，，版本是 22.1.1，有够老的反正是。因为 gentoo 用的是 emacs24，所以按照不知道哪里推荐的，去下载了一个 emacs24。然后就是尝试在 mac 下面配置好我的 emacs 了，配置好才好通过 org2blog 写 blog。。。&lt;br /&gt;

老早就随大流把 .emacs.d 放到了 github，所以这部分比较简单，只要 clone 一下就可以了。&lt;br /&gt;

之前没想到的是我的一部分 elisp 包是通过 gentoo 管理的，这样只有 .emacs.d 显然是不行的。然后使用了 dropbox 这个方案，把 gentoo 里面的 site-lisp 部分也同步过来。主要是 &lt;em&gt;usr/share/emacs/etc&lt;/em&gt; 和 &lt;em&gt;usr/share/emacs/site-lisp&lt;/em&gt; 两个目录。把 gentoo里面的这两个目录转移到 dropbox 里面，然后做个软链。mac 里面也从 dropbox 里面做好软链，要注意路径位置不能变化，变化的话 gentoo 里面的 site-gentoo.el 里面写死的路径就不能用了。不过不变化那个路径的话，其实是会影响系统自带的 emacs22.1.1 的使用的，不过不管了，爱咋匝地吧，反正我也不用那个。&lt;br /&gt;

接下来就是在 .emacs 里面加 load-path 就可以了。gentoo 是不需要的，所以用下面的代码&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-lisp&#34;&gt;
    (setq load-path
        (cons &#34;/usr/share/emacs/site-lisp/&#34; load-path)))&lt;/pre&gt;
mac 里面用 emacs 一个郁闷的问题是，command 键挤在了 alt 和 space 中间，和普通键盘不一样，导致习惯了普通键盘的我经常按错。很郁闷，不知道能不能把那个 command 弄成 alt，反正好像 command 在 emacs 里面没用。。。

可以用上面类似的方法处理一些两个系统的特例。

顺便再吐槽下 mac 的输入法，装了个 sogou，发现这小子启动慢，经常切换过去后打了几个字母了都，他还没反应，字母就上屏了。fit的词库又不行，词频调整也有问题。‘在’我这半天输入 n 个了都，还是处在‘再’的后面，很讨厌。不知道有没有其他靠谱的。。。
</description>
    </item>
    
    <item>
      <title>mac 上面安装 wine</title>
      <link>https://wdicc.com/wine-in-mac/</link>
      <pubDate>Mon, 13 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/wine-in-mac/</guid>
      <description>
买了 mbp 之后，就尝试安装 wine。想用它搞定 rtx 来着。&lt;br /&gt;

我用的 homebrew，感觉还不错。之前尝试过 gentoo prefix，我的妈，要编译的包太多了。homebrew 好很多。&lt;br /&gt;

wine 使用 llvm-gcc 编译不过去，需要先安装 gcc，gcc 在 xcode 低版本好像是自带的，高于 4.2.x 好像就不带了。&lt;br /&gt;

gcc 也有几个选择，可以参考&lt;a href=&#34;https://github.com/mxcl/homebrew/issues/9925&#34;&gt;这里&lt;/a&gt;，我用的第一个。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
brew install --use-gcc wine&lt;/pre&gt;
基本上就没问题了，参考了 &lt;a href=&#34;https://github.com/mxcl/homebrew/issues/9925&#34;&gt;这里&lt;/a&gt;。

对了，brew 里面还有 winetricks，可以直接安装使用。还没有尝试安装 rtx，不知道这玩意能不能装上。。

ps: 感觉这片文章好水。。一点含量都没有。。
</description>
    </item>
    
    <item>
      <title>thunderbird 和 davmail 配合连接 exchange</title>
      <link>https://wdicc.com/use-davmail-to-access-exchange-server-better-in-thunderbird/</link>
      <pubDate>Wed, 01 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-davmail-to-access-exchange-server-better-in-thunderbird/</guid>
      <description>

&lt;p&gt;exchange 是个恶心玩意，虽然提供了 imap 接口，但是速度巨慢，发送接收都慢。davmail 可以解决这个问题。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;davmail 能干啥&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
&lt;a href=&#34;http://davmail.sourceforge.net/&#34;&gt;davmail&lt;/a&gt; 可以理解为就是一个 proxy，他负责和 exchange 通讯，其他邮件客户端连接 davmail 来获取邮件什么的。网站上面有图，看&lt;br /&gt;
着更加直观一点。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;安装配置 davmail&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
ubuntu 里面好像直接就有，apt-get 安装就可以了。gentoo 里面没有，我在 overlay 里面找到一个 ebuild，自己修了一下，放到我的&lt;br /&gt;
&lt;a href=&#34;https://github.com/wd/overlay&#34;&gt;overlay&lt;/a&gt; 了，在 net-mail/davmail-bin 下面。启用 server 这个 use。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
安装后会创建一个 davmail 用户，需要建立一个 /var/log/davmail 的目录，给 davmail 写权限。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
然后手动运行 &lt;i&gt;opt/davmail/davmail.sh，有界面，配置好 exchange owa 的地址，保存，会生成 ~&lt;/i&gt;.davmail.properties 文件。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
这里有个问题，如果 owa 地址是 http 的，那直接继续下面的就可以了，如果是 https 的，那还需要配置对应的 ssl 相关参数。我是&lt;br /&gt;
直接在 thunderbird 里面配置好之后，收了一下邮件，然后会提示一个什么证书的东西，这之后再继续下面的事情就可以了，这个时候&lt;br /&gt;
他会给你配置好里面 ssl 相关的东西。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
复制到 /etc/davmail.properties，把里面的 davmail.server=fales 改成 true，设置好 log 为 /var/log/davmail/davmail.log，级&lt;br /&gt;
别先使用 debug，测试好了之后改成 warn。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;

&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;配置 thunderbird&lt;/h2&gt;&lt;br /&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;&lt;br /&gt;


&lt;p&gt;&lt;br /&gt;
参考 davmail 网站上面关于 thunderbird 的配置就好了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
可配置的有接收，发送，地址簿，日历。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
排错就看看 /var/log/davmail/davmail.log 把，信息很详细。  &lt;br /&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>老文一篇，关于小毛</title>
      <link>https://wdicc.com/about-mao/</link>
      <pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-mao/</guid>
      <description>
一个老文，从 buaa bbs 翻出来，贴这里吧&lt;br /&gt;
&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;无题(1)&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1-1&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1-1&#34;&gt;序曲&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1-1&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

好久以前就想养只猫了，可是条件不允许。没法子，只能看看别人pp的小猫过过瘾了。&lt;br /&gt;

去年冬天的时候，养猫的欲望越来越严重，以至于那个时候就找robomm定了一个，其间小叶子还和我说要是想养的话可以给我找人抱一只。呵呵，不过后来robomm的大猫好像没有怀孕，结果空欢喜一场。再后来就要过年了，因为照顾起来也不方便，所以就放弃了。过年来了我就在打算抱只小猫了。开始本来打算找宠物市场买一只，可是robomm的那片文章，让我放弃了这个念头，trademark一只在怂恿我去买一只，不过还好我能顶得住，呵呵。平时也不去什么猫的论坛，那就只好让robomm给我留意一下啦，呵呵。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1-2&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1-2&#34;&gt;联系&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1-2&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

robomm给我介绍的我联系过两个，其中有一个只是发email问了问相片，不过他好久才给我回的，他给我回信时，我都已经和另外一个谈好了，呵呵，那个就是万晓飞。我介绍了我的情况之后，她说可以给我，不过有个条件，就是要送她的大猫一些猫粮，说为了让我付出点代价，这样我至少不会随便处理掉猫猫，我想都没想说没问题，然后就这么说定了。第一眼看到这些小猫的相片的时候，他们还不点大，其实也比现在大不了多少，非常可爱。而我尤其喜欢那个头上有点黑毛的小猫，之后的联系中她也同意给我那只了。高兴中，我就在bbs上面发了帖子，给大家看，那个就是我要的猫。:p&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1-3&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1-3&#34;&gt;郁闷之初&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1-3&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

因为没有满月，所以要等1，2个星期才行。上周一我给他发了个mail问小猫的事情，周二他给我打电话，说我可以过去拿了，不过告诉我那只说好了留给我的给她姐姐了，当时我很郁闷。后来一想，还不都一样啊，呵呵，我说那就拿起他的吧，没关系。然后就说起送大猫什么猫粮的事情来，然后他就说周一有个小mm花了80多块钱的猫粮，其实也就值40多，被骗了。所以让我买罐头好了，7块钱一听。也差不了那么多。期间我也没有问我需要买多少，因为我想，既然都这么联系好了，那多少还不是一个形式而已？而她也一再表示她不是要卖钱。从后来接触中听她的口气，她确实应该不缺钱，北京的有钱人。&lt;br /&gt;

没有订到我想要的那个，多少也有点郁闷吧，不过这还好。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1-4&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1-4&#34;&gt;郁闷之中&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1-4&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

周二她说我工作日晚上都可以过去吧，我说我还没有准备好猫用的东西，所以周三我需要去买点东西，周四吧，她说可以。周二晚上我来bbs问好了robomm，然后周三下午请假去买了猫粮，和一些猫用的东西。周四，我和她联系，问我晚上什么时候过去，让我郁闷的是，她说今天晚上不行。。。。。。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1-5&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1-5&#34;&gt;郁闷之极&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1-5&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

既然不行，我说那就周五吧，而且我想周五也刚好，抱回来是周末，也好照顾一下她。周五也就是今天了。今天我们部门搬到楼上，从早上9点开始，一直忙到下午6点，还有一些东西没有搞定，不过只能周一了。中午吃完饭我给他发短信问我什么时候过去，后来我就去忙了，结果他给我发的消息我没有看到，后来他给我打电话，然后我们说好了过去的时间，不过中间她问我给大猫买了多少东西，我说6听。然后他就表现出很失望的样子，我立刻郁闷了。。。&lt;br /&gt;

我说如果你觉得我买的少了，不够诚心的话，那就算了，我也就不过去了。后来反正两个人jjww了半天，还是说好过去了。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1-6&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1-6&#34;&gt;喜悦之初&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1-6&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

没想到搬家忙到了6点，这一天我就中午吃饭的时候喝了口水，而且一直搬桌子柜子，脚都疼死了，连坐一下都没有时间，不过总算是忙完了。&lt;br /&gt;

站在地铁里面，我的脚一直在疼，想相还要走那么远，稍有点不爽。&lt;br /&gt;

到了她家，门口有只黄色的大猫，跑来跑去的，据说他们有三只大猫。还有两只就是现在丁丁（我听他们喊他丁丁，我觉得也挺好听的，而且他确实很小不点，wy还说像只老鼠，呵呵，就这么叫吧 :p）的父母了。&lt;br /&gt;

万晓飞给我在沙发下面摸了半天，把丁丁给我摸了出来，呵呵，小不点，然后头顶有点淡黄色的毛，非常可爱。我看到这只小猫，之前的郁闷全都没有啦，哈哈。据说这只猫的眼睛是鸳鸯眼，反正我也不懂了。。。(to be continued…)&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;无题(2)&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-1&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-1&#34;&gt;说在前面的话&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-1&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

偶得小丁丁的名字在我叫了两天之后，终于没有能顶得住大家的压力，改名叫毛毛啦，小名就叫小毛好了，赫赫。事情是这样的，小猫抱回来之后，大家就开始给她起名字了，如下：小白、小黑、毛球、小红，我一看这可不行啊，而且关键是丁丁大家都不大同意阿，没法子，就叫毛毛吧，其实我一开始就打算叫这个的。这个名字好歹赢得了几个人的同意，赫赫。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-2&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-2&#34;&gt;继续上次的话题&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-2&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

把小毛塞到包里，我就急急忙忙的出来了。小毛一到包里，就开始喵喵叫个不停，声音很细，可是一直叫，我抱着包，然后赶紧跑出来打了个车就杀回来了。跑上楼，打开包，小毛不叫了，开始环视周围环境，哈哈，肯定吓了一跳。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-3&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-3&#34;&gt;家有小毛&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-3&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

赶紧给他准备猫粮、猫砂、水、小窝什么的，准备妥当之后，才想起来，我还没有吃饭呢，搬家搬了一天，脚后跟都疼死了。烧水煮了点面，吃完面发现小家伙不见了，喊了半天也没有反映，想想可能钻床地了。床下好多东西，掏了半天才看到，摸出来后，小家伙一溜烟，又跑到下面去了，呵呵，把我郁闷的，再次摸出来后，我就把东西都靠里面的墙边放，这样他就算再跑进去也容易够了。后来还是xh给猫的小窝上面盖了一件衣服，放进去之后小毛才算老实了，在里面呆着，哈哈，原来他是害羞阿。刚抱回来的时候给她拍了几张相片，不过没敢用闪光灯，怕吓着他，所以比较模糊，呵呵，感兴趣的可以到我的ftp上面下。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-4&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-4&#34;&gt;一个星期左右&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-4&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

现在小毛抱回来大概一个星期左右了吧，刚开始那两天天气比较冷，我这里暖气不是很足，我担心他冻着，所以就把他抱到被子里面呆了两个晚上。后来那几天转暖和了，而且我发现她的眼屎特别严重，怀疑是晚上太热所致，所以后来几天就没有让他钻了。晚上她老是要从被子的边角往里面跑，往往是我每次醒来都会发现他已经在被子里了，然后就把他抱出去，下一次醒来就又来了，呵呵，一点办法都没有。不过这几天发现小家伙懂事多了，困了会爬到你的腿上睡一会，玩一会，要不然就会爬到自己的窝里面睡，晚上也比较少钻被子了。呵呵。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-5&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-5&#34;&gt;尾声&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-5&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

就说这些了吧，我觉得养一只小猫也没有说的那么恐怖了，你只要让他找到了吃饭喝水方便的地方，基本上就不用你管了，他要是什么找不到，就会和你喵喵的叫得，你要是听到了就把他抱到吃饭喝水的地方，他自己就会去解决了。至于洗澡、打针、剪指甲之类的事情也不是天天都有，所以还是比较省心的，呵呵。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-6&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-6&#34;&gt;说在后面的话&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-6&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

就是既然上一次的标题用丁丁历险记了，这次还是继续吧，哈哈。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>介绍下 org2blog</title>
      <link>https://wdicc.com/about-org2blog/</link>
      <pubDate>Mon, 24 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-org2blog/</guid>
      <description>
&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;org2blog 是什么&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-1&#34; class=&#34;outline-text-2&#34;&gt;&lt;br /&gt;

&lt;a href=&#34;https://github.com/punchagan/org2blog&#34;&gt;org2blog&lt;/a&gt; 是用来把 org-mode 格式的文章发布到 wordpress 的工具。其实之前使用 webloger.el 也可以发布到 wordpress，不过是&lt;br /&gt;
webloger.el 已经基本没人维护了，这个 org2blog 作者支持还很积极，另外 org-mode 还提供了一些额外的方便编辑的方法，所以其实&lt;br /&gt;
是个不错的东东。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;安装&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-2&#34; class=&#34;outline-text-2&#34;&gt;&lt;br /&gt;

其实按照上面地址的内容，安装很简单。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
(setq load-path (cons &#34;~/.emacs.d/org2blog/&#34; load-path))
(require &#39;org2blog-autoloads)&lt;/pre&gt;
&lt;ol&gt;
	&lt;li&gt;依赖 &lt;a href=&#34;http://launchpad.net/xml-rpc-el&#34;&gt;xml-rpc&lt;/a&gt; ，添加到 load-path&lt;/li&gt;
	&lt;li&gt;需要最新版本的 org-mode，我使用的是 emacs 24 里面的 7.7，之前使用 7.5(?) 的时候，遇到了发布的时候会在文章结尾附加
&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; 导致 blog 的展现挂掉的问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;使用&lt;/h2&gt;
&lt;div id=&#34;outline-container-3-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-3-1&#34;&gt;配置&lt;/h3&gt;
&lt;div id=&#34;text-3-1&#34; class=&#34;outline-text-3&#34;&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
;; org2blog
;;

(require &#39;org2blog-autoloads)
(setq org2blog/wp-blog-alist
      `((&#34;abc&#34;
         :url &#34;http://abc.com/xmlrpc.php&#34;
         :username &#34;admin&#34;
         :password PWD
         :keep-new-lines t
         :confirm t
         :wp-code nil
         :tags-as-categories nil)
        ))

(setq org2blog/wp-buffer-template
  &#34;#+DATE: %s
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil TeX:nil 
#+CATEGORY: Heart
#+TAGS: 
#+PERMALINK: 
#+TITLE:
\n&#34;)&lt;/pre&gt;
我不使用 wordpress 的 code 格式，所以设置了 wp-code 为 nil。可以定义多个 blog。

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-3-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-3-2&#34;&gt;登陆，发帖&lt;/h3&gt;
&lt;div id=&#34;text-3-2&#34; class=&#34;outline-text-3&#34;&gt;

M-x org2blog/wp-login 会提示你要登陆哪个 blog
M-x org2blog/wp-new-entry 会使用设置的 template 打开一个 buffer
M-x org2blog/wp-post-buffer 保存成 draft
M-x org2blog/wp-post-buffer-and-publish 真实发布

另外，还可以发布一个 tree 而不是整个 org 文件，以及一些其他的操作就不多说了。

发布源代码可以使用 BEGIN_SRC END_SRC 块，或者冒号开头的行会被当作源代码。

我使用的是 wp-syntax，所以发布源代码使用 BEGIN_HTML 在里面使用 pre 标签
&lt;pre class=&#34;prettyprint&#34;&gt;
&amp;lt;pre lang=&#34;lisp&#34;&amp;gt;
(setq a 1)
&amp;lt;/pre&amp;gt;
#+END_HTML&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-3-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-3-3&#34;&gt;其他&lt;/h3&gt;
&lt;div id=&#34;text-3-3&#34; class=&#34;outline-text-3&#34;&gt;

使用 org2blog 只能从 org 发布到 wordpress，不能从 wordpress 回到 org 文件再进行编辑，不过我看到有人已经提供了一个解决方
法，或许将来也会支持这个功能。

使用 org2blog 发布很讨厌的一点是，他会把你的 org 加上很多的 html 代码，再编辑的时候比较讨厌。

org2blog 在 github 的页面 &lt;a href=&#34;https://github.com/punchagan/org2blog&#34;&gt;https://github.com/punchagan/org2blog&lt;/a&gt; 上面有不少有用的东西，建议看看。

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>介绍下 openresty</title>
      <link>https://wdicc.com/intro-openresty/</link>
      <pubDate>Sun, 23 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/intro-openresty/</guid>
      <description>
一直没有时间使用 ngx_lua，上周算是真正使用了下，总结下，也算是帮忙推广下 openresty。&lt;br /&gt;
&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;什么是 openresty&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-1&#34; class=&#34;outline-text-2&#34;&gt;&lt;br /&gt;

openresty 的主力作者是 &lt;a href=&#34;http://weibo.com/agentzh&#34;&gt;@agentzh&lt;/a&gt; 它的网页在 &lt;a href=&#34;http://openresty.org&#34;&gt;这里&lt;/a&gt;，上面有介绍。按我的理解，他是介于客户端浏览器 js 和数据库之间的一层。&lt;br /&gt;

在 ajex 还没有盛行的时代，数据库的数据需要展现在浏览器的时候，一般都是使用 php/jsp 之类读取数据，然后拼表格/图表这些。在客户端机器越来越牛逼之后，把部分运算放在浏览器里面开始盛行，ajex 也越来越流行。这个时候通常还需要有个服务器端的程序来配合从数据库获取并提供数据，应该也有不少类似的程序来提供这个数据。&lt;br /&gt;

老版本的 openresty 是基于 perl 做的，可以上 cpan 上面 &lt;a href=&#34;http://search.cpan.org/~agent/OpenResty-0.5.12/lib/OpenResty/Spec/REST_cn.pod&#34;&gt;搜到&lt;/a&gt; (不知道为啥这页面我打不开了)。agentzh 还专门为他写了一个 admin site，纯 js + oprensty 来实现的，可以直接在上面配置接口，很方便。目前老版本应该没人用了。&lt;br /&gt;

新版本的 openresty 基本上等于是 nginx 和一些 nginx 模块的集合，大部分模块都是 agentzh 和 &lt;a href=&#34;https://github.com/chaoslawful&#34;&gt;chaoslawful&lt;/a&gt; 完成的，目前 agentzh 离职在家全职开发 openresty 相关，chaoslawful 还在淘宝 &lt;a href=&#34;http://linezing.com&#34;&gt;量子统计&lt;/a&gt; 。&lt;br /&gt;

这大概就是我了解的 openresty 的起源和目前的情况。写的比较简单，里面的曲折就不多说了，可以找上面提到的大牛聊天。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;怎么使用 openresty&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-2&#34; class=&#34;outline-text-2&#34;&gt;&lt;br /&gt;

我下面用一个简单的例子来描述下，我是怎么使用 openresty 的，从中应该能看出来 openresty 能干啥，怎么用。&lt;br /&gt;

&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-1&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-1&#34;&gt;需求&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-1&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

在 postgresql 数据库有张网站日访问流量表，包含两个字段 thedate 和 pv。需要把里面的数据展现出来，画出来流量曲线。&lt;br /&gt;

&lt;dl&gt;&lt;dt&gt;注意&lt;/dt&gt;&lt;dd&gt;下面的代码大都从现有程序里面扒出来的，所以不一定直接就能用，只是个示意而已。&lt;/dd&gt;&lt;/dl&gt;&lt;/div&gt;&lt;br /&gt;
&lt;/div&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-2-2&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-2-2&#34;&gt;安装 openresty&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-2-2&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

首先需要安装 openresty。从 &lt;a href=&#34;http://openresty.org&#34;&gt;openresty.org&lt;/a&gt; 下载当前的 stable 版本 ngx_openresty-1.0.6.22.tar.gz。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$ cd ngx_openresty-1.0.6.22
$ ./configure --with-http_drizzle_module --with-http_postgres_module --with-pg_config=/opt/pg90/bin/pg_config --prefix=/usr/local/openresty --with-libdrizzle=/usr/local/libdrizzle/ --with-luajit --with-http_iconv_module # 这是我用到的参数，按照需要加减
$ make
# make install&lt;/pre&gt;
configure 的时候 postgres_module 是必须的，其他的 drizzle_module 是用来支持从 mysql 获取数据的，iconv_module 是用来做编码转换的，luajit 据说可以提升不少性能。

不出问题的话，在 /usr/local/openresty 目录下面就安装好了。其实更合理的方式应该是提供一个 rpm 或者 deb 包的。

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-2-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-3&#34;&gt;启动 nginx&lt;/h3&gt;
&lt;div id=&#34;text-2-3&#34; class=&#34;outline-text-3&#34;&gt;

openresty 给提供了简单可用的 nginx.conf，所以现在可以先尝试启动下 /usr/local/openresty/nginx/sbin/nginx 了，如果启动没问题，那就 ok 了。

配置文件在 /usr/local/openresty/nginx/conf/nginx.conf。

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-2-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-4&#34;&gt;配置 nginx&lt;/h3&gt;
&lt;div id=&#34;text-2-4&#34; class=&#34;outline-text-3&#34;&gt;

主要就是配置 /usr/local/openresty/nginx/conf/nginx.conf，以后很多事情都会在这里面来完成，说是 nginx.conf 编程也不为过，呵呵。

增加下面的配置
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;

    upstream pgsql {
        postgres_server server_ip:5432 dbname=test password=123 user=test;
        #postgres_keepalive  max=2 mode=single overflow=reject;
        postgres_keepalive off;
    }

# server 里面增加一个 location

       location /=/pv {
            postgres_query &#39;select thedate, pv from pv&#39;;
            postgres_pass pgsql;

            rds_json on;
            rds_json_format compact;

            xss_get on;
            xss_callback_arg &#39;_c&#39;;
        }&lt;/pre&gt;
&lt;ol&gt;
	&lt;li&gt;其中关于 upstream postgres 用来定义需要连接的数据库信息，和发送 sql 到数据库，可以参考 &lt;a href=&#34;https://github.com/FRiCKLE/ngx_postgres/&#34;&gt;这里&lt;/a&gt;。&lt;/li&gt;
	&lt;li&gt;rds_json 用来将数据库的输出变成 json 格式，可以参考 &lt;a href=&#34;https://github.com/agentzh/rds-json-nginx-module&#34;&gt;这里&lt;/a&gt; 。&lt;/li&gt;
	&lt;li&gt;xss_get 用来支持跨域，jquery 默认使用的 callback 参数是 _c，可以参考 &lt;a href=&#34;https://github.com/agentzh/xss-nginx-module&#34;&gt;这里&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
这样配置好之后，重启下。结果应该很清晰了，请求 &lt;a href=&#34;http://your_ip/=/pv&#34;&gt;http://your\_ip/=/pv&lt;/a&gt; 应该就可以得到数据库里面的数据了，可以使用 curl 看看结果，应该类似下面的
&lt;pre class=&#34;prettyprint lang-json&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-2-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-5&#34;&gt;js 画图&lt;/h3&gt;
&lt;div id=&#34;text-2-5&#34; class=&#34;outline-text-3&#34;&gt;

挑一个画图程序，比如我用过的 &lt;a href=&#34;http://highcharts.com&#34;&gt;highcharts&lt;/a&gt;, &lt;a href=&#34;http://www.amcharts.com/&#34;&gt;amcharts&lt;/a&gt; 这些都不错，amcharts 是使用 flash 画图，兼容各种浏览器，highcharts 号称也支持，不过我弄出来的图在 chrome/firefox 下面没问题，ie 不支持，他用的是 svg 标签。

就写几行代码来示意下吧
&lt;pre class=&#34;prettyprint lang-javascript&#34;&gt;
    $.ajax({
        url : &#39;http://your_ip/=/pv&#39;,
        success: function (data) {
            renderPvCharts(data);
        }
    });

    function renderPvCharts(data) {
        $(&#39;body&#39;).append(&#39;&lt;/pre&gt;
&lt;pre class=&#34;prettyprint lang-javascript&#34;&gt;
        var result = Utils.getSplineChartSeries( data ); # 将 nginx 返回的 json 格式数据转化为 highcharts 需要的格式
        var options = {
			chart: {
                zoomType: &#39;xy&#39;,
				renderTo: &#39;pv&#39;, # div 的 id
				defaultSeriesType: &#39;spline&#39;
			},
			title: {
                text: &#39;每日 pv&#39;
            },
			xAxis: {
                type: &#39;datetime&#39;
			},
			tooltip: {
				formatter: function() {
			        return &#39;&lt;strong&gt;&#39;+ this.series.name +&#39;&lt;/strong&gt;
&#39;+
						Highcharts.dateFormat(&#39;%e. %b&#39;, this.x) +&#39;: &#39;+ this.y;
				}
			},
			legend: {
				layout: &#39;vertical&#39;,
				align: &#39;right&#39;,
				verticalAlign: &#39;top&#39;,
				x: -10,
				y: 100,
				borderWidth: 0
			},
            series : result.y
        };

        var chart = new Highcharts.Chart( options );
    };

} );&lt;/pre&gt;
简单解释下
&lt;ol&gt;
	&lt;li&gt;在页面 readay 的时候，使用 ajex 设置回调函数并请求接口。&lt;/li&gt;
	&lt;li&gt;回调函数里面使用 Utils.getSplineChartSeries 转换一下数据，方便直接给 options 里面数据赋值，具体需要的数据格式，看 highcharts 的 spline 的 demo 就可以。&lt;/li&gt;
	&lt;li&gt;回调函数里面显示图表。&lt;/li&gt;
&lt;/ol&gt;
这样就完事了，数据就展现出来了。

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-2-6&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-6&#34;&gt;其他&lt;/h3&gt;
&lt;div id=&#34;text-2-6&#34; class=&#34;outline-text-3&#34;&gt;

从上面可以看到整个数据流是怎么回事。openresty 可以做的事情远比上面描述的复杂，上面只是个最简单的应用了。
&lt;ol&gt;
	&lt;li&gt;比如使用 &lt;a href=&#34;https://github.com/agentzh/rds-csv-nginx-module&#34;&gt;rds_csv&lt;/a&gt; 来直接得到 csv 格式的数据提供给用户，而不是 json。&lt;/li&gt;
	&lt;li&gt;可以使用 &lt;a href=&#34;https://github.com/chaoslawful/lua-nginx-module&#34;&gt;ngx_lua&lt;/a&gt; 在 nginx.conf 里面使用 lua 来在服务器端对数据做一些处理再丢给浏览器。
大家都知道 js 处理的数据太大的时候，会导致浏览器卡死，所以如果不方便通过 sql 控制输出的时候，可以使用 lua 来处理下。当然 这只是其中一个应用，使用 ngx_lua 你可以干很多事情，比如上面那个使用 js 来生成 spline 数据的函数就可以用 lua 来实现，lua 还可以和 c 结合来做一些事情。对于 location 的参数，在 ngx_lua 里面也是可以访问的，比如 ngx.var.arg_c 这样。具体还是看 wiki 吧，写不完的。
&lt;ol&gt;
	&lt;li&gt;openresty 还能直接访问 redis 和 memcached。&lt;/li&gt;
&lt;/ol&gt;
本篇只能算是一个入门而已，openresty 在淘宝量子统计的应用非常广泛。另外在 &lt;a href=&#34;http://qunar.com&#34;&gt;去哪网&lt;/a&gt; 也有不少应用，比如我知道的安全过滤模块，和一些数据报表，都是基于 openresty 的。

附一个 highcarts 画的图

&lt;img class=&#34;alignnone&#34; title=&#34;流量情况&#34; src=&#34;http://wdicc.com/images/2011-10-24-171245_1100x312_scrot.png&#34; alt=&#34;&#34; width=&#34;1100&#34; height=&#34;312&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>postgresql 里面的 generate_series</title>
      <link>https://wdicc.com/generate_series-function-in-postgresql/</link>
      <pubDate>Fri, 14 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/generate_series-function-in-postgresql/</guid>
      <description>

&lt;p&gt;有个报表需要把几天的记录按照小时 join 起来，最开始的作法是通过 js 来 join 数据。后来遇到了问题，就是某天某个小时可能会没有记录，然后想破头了，在 js 里面循环的时候设置每天循环到的当前的小时。可崩溃的是还会出现有的是这两小时没有，有的是另外的，用 js 搞不定了，就尝试用 sql 搞定。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
sql 开始的方法是简单的使用 full join。然后发现没法保证主表在所有的小时都有记录。后来就发现了这个 generate_series 函数，发现很有意思。地址在这里 &lt;a href=&#34;http://www.postgresql.org/docs/9.0/static/functions-srf.html&#34;&gt;http://www.postgresql.org/docs/9.0/static/functions-srf.html&lt;/a&gt; 。这里还有个 generate_scripts 的函数，可以用来遍历数组产生一个表格的。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>了解了下 hbase</title>
      <link>https://wdicc.com/intro-hbase/</link>
      <pubDate>Tue, 02 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/intro-hbase/</guid>
      <description>
&lt;p&gt;很早就知道 hbase 了，但是一直没有仔细去了解 hbase 是怎么回事。今天了解了下他的表结构。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
这篇文章 &lt;a href=&#34;http://www.searchtb.com/2011/01/understanding-hbase.html&#34;&gt;http://www.searchtb.com/2011/01/understanding-hbase.html&lt;/a&gt; 其实写的挺清楚，下面这个是个例子&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
hbase(main):007:0&amp;gt; scan &#39;test&#39;                         
ROW                                 COLUMN+CELL                                                                                            
 row1                               column=cf:a, timestamp=1312258784360, value=value3                                                     
 row1                               column=cf:b, timestamp=1312258795425, value=value3                                                     
 row2                               column=cf:b, timestamp=1312257616099, value=value2                                                     
 row3                               column=cf:c, timestamp=1312257621344, value=value3
&lt;/pre&gt;&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
在 hbase 里面访问数据都是通过 row key + column，其实也就是哪行哪列，不过不是通过数字定位。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
在 hbase 里面看不到传统数据库的表格形式的数据列表，可以看到上面这种。传统数据库里面，每行的列数是一样的，如果那列没值，那也得填一个 null 之类。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
hbase 就不一定了，可以看到上面的 row1 行，有两列 cf:a, cf:b，而 row2，row3 就只有一列。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
所以 hbase 作为 key-value 系统的时候，row key + column 就是所谓的 key。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>alarm 使用不当遇到的问题</title>
      <link>https://wdicc.com/alarm-signal-in-perl/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/alarm-signal-in-perl/</guid>
      <description>
&lt;p&gt;前段时间发现有个程序总是运行一段时间就挂掉，看各种日志里面都没有错误信息，感觉就是莫名其妙突然进程就没了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
大概流程是有个 perl 程序 a.pl&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;
.....
my $pid = fork();
if ( !$pid ) {
   my $cmdRet = `b.pl 2&gt;&amp;1`;
   print FILE $cmdRet;
   if ( $status ) {
       warn &#34;task failed&#34;;
   } else {
      warn &#34;task success&#34;;
   }
   exit;
}

waitpid ........
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
b.pl 里面会执行 rsync 去获取一些文件，他会循环到几个机器上面去 rsync&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
for ( @hosts ) {
    my $result = `rsync xxxxx 2&gt;&amp;1`;
    if ( $? ) {
        log($result);
        log(&#34;failed&#34;);
    } else {
        log($result);
        log(&#34;success&#34;);
    }
}

sub log {
    my $msg = shift;
    print $msg;
    # 然后通过 IO::Socket::INET 发送给另外一个 server  a
}
&lt;/pre&gt;&lt;br /&gt;

现象是，时不时的， b.pl 会只 rsync 了某几台(不确定是几台)机器上面的文件，然后就不继续了，从 server a 上面能收到他发日志，最后一条是 success 的信息&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
从 a.pl 记录的日志那里看, FILE 里面记录的内容丢失了 server a 收到的最后一部分的数据，多少数据不一定，不过肯定是没有那个 success 信息。 这个文件里面也没有任何的错误信息。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
程序代码啥的都不动，rsync 的文件数不是总是一样的，也有文件多的时候没出错的时候,同时也设置了打开文件数为 65536.&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
后来发现问题就在 b.pl 里面的 log 里面。因为要发送到其他机器，怕挂住影响后续程序，所以设置了一个 alarm。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;
eval {
    alarm 5;
    xxxxxxx;
    alarm 0;
};

if ( $@ ) {
    print &#34;error when send&#34;;
}
&lt;/pre&gt;&lt;br /&gt;

&lt;p&gt;&lt;br /&gt;
这个 alarm 没有设置 handle 的函数，这样就会导致 alarm 到期的时候，会直接让整个 perl 程序挂掉，并显示 &#34;Alarm clock&#34;，而且这个输出不在标准错误和标准输出里面。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
修复也简单，alarm 前设置一个 handler 就好了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
另外，还有个问题，一个 alarm 会中断前一个 alarm，所以类似 sleep 的使用，可以这样&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;
my $previousAlarm = 0;
eval {
    local $SIG{ALRM} = sub { die &#39;alarm&#39;; };
    $previousAlarm = alarm 5;
     xxxx
     alarm 0;
};
alarm 0;

if ( $@ ) {
    xxxxx;
}

alarm $previousAlarm;
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>svn merge</title>
      <link>https://wdicc.com/about-svn-merge/</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-svn-merge/</guid>
      <description>
&lt;p&gt;svn merge 的 help 信息&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
usage: 1. merge sourceURL1[@N] sourceURL2[@M] [WCPATH]
       2. merge sourceWCPATH1@N sourceWCPATH2@M [WCPATH]
       3. merge [-c M[,N...] | -r N:M ...] SOURCE[@REV] [WCPATH]
&lt;/pre&gt;&lt;br /&gt;

svn 的 merge 的本质其实就是在两个版本之间生成 diff，然后把这个 diff 再应用到另外一个版本里面。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
所以可以看到 merge 和最后的那个 WCPATH 之间，通常都需要指定两个版本。WCPATH 可以是其中的一个，这个没关系。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
一般都是把新多出来的部分 merge 到另一个版本，所以通常是 svn merge old_ver new_ver working_ver 其中那个 working_ver 可以是 old_ver。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
最好在 merge 之前加一个 &amp;ndash;dry-run 看看他会修改哪些文件。 &lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>hive 里面不能 drop table</title>
      <link>https://wdicc.com/cant-drop-table-in-hive/</link>
      <pubDate>Tue, 03 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cant-drop-table-in-hive/</guid>
      <description>
&lt;p&gt;之前部署 hive 0.6 的时候，发现用 postgress 存 metadb 的时候，不能 drop table，一执行就卡住了。当时试过 mysql，好像是有个什么问题，就没用了，后来只好用 hive 0.5 完事。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
前几天有个别的事情工作不正常，以为可能是版本的问题，毕竟现在都 0.7 了。所以尝试了下直接升级到 0.7。在 0.6 版本的 hive 里面，自带了一个 postgress 用的升级 sql，但是 0.7 的没有。执行这个 sql 后，hive 0.7 能查询，但是同样的，也遇到了不能 drop table 的问题。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
后来发现 drop table 的时候，hive 在尝试去查一个不存在的表，然后就卡在了这个 sql 上面，也不报错，也不超时，不知道是不是 jdbc 的问题。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
然后把 mysql 用的升级 sql 迁移到了 postgress，这样 hive 0.7 在 postgress 里面也没问题了。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;br /&gt;
升级 sql 和邮件列表的主题在 &lt;a href=&#34;http://www.mail-archive.com/user@hive.apache.org/msg01293.html&#34;&gt;http://www.mail-archive.com/user@hive.apache.org/msg01293.html&lt;/a&gt; 。升级的时候要注意，新建的表的 owner 需要是 hive 使用的用户。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>hive 里面的 UDTF</title>
      <link>https://wdicc.com/udf-in-hive/</link>
      <pubDate>Sun, 24 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/udf-in-hive/</guid>
      <description>
hive 支持 UDF， UDAF， UDTF，这几个让你使用 hive 更加便捷。&lt;br /&gt;
&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;UDF&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;text-1&#34; class=&#34;outline-text-2&#34;&gt;&lt;br /&gt;

udf 就是一个自定义的 function，输入一个或多个参数，返回一个返回值，类似 substr/trim 之类。写起来比较简单，重构 UDF 类的 evaluate 方法就可以了。可以参考 &lt;a href=&#34;http://richiehu.blog.51cto.com/2093113/386112&#34;&gt;http://richiehu.blog.51cto.com/2093113/386112&lt;/a&gt; 。&lt;br /&gt;

这是一个 urldecode 函数。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-java&#34;&gt;

import org.apache.hadoop.hive.ql.exec.UDF;
import java.net.URLDecoder;

public final class urldecode extends UDF {

    public String evaluate(final String s) {
        if (s == null) { return null; }
        return getString(s);
    }

    public static String getString(String s) {
        String a;
        try {
            a = URLDecoder.decode(s);
        } catch ( Exception e) {
            a = &#34;&#34;;
        }
        return a;
    }

    public static void main(String args[]) {
        String t = &#34;%E5%A4%AA%E5%8E%9F-%E4%B8%89%E4%BA%9A&#34;;
        System.out.println( getString(t) );
    }
}&lt;/pre&gt;
&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;UDAF&lt;/h2&gt;
&lt;div id=&#34;text-2&#34; class=&#34;outline-text-2&#34;&gt;

udaf 就是自定义的聚合函数，类似 sum/avg 这类，输入多行的一个或多个参数，返回一个返回值。这个还没写过，可以参考 &lt;a href=&#34;http://richiehu.blog.51cto.com/2093113/386113&#34;&gt;http://richiehu.blog.51cto.com/2093113/386113&lt;/a&gt; 。

&amp;nbsp;

&lt;/div&gt;
&amp;nbsp;

&lt;/div&gt;
&lt;div id=&#34;outline-container-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;UDTF&lt;/h2&gt;
&lt;div id=&#34;text-3&#34; class=&#34;outline-text-2&#34;&gt;

udtf 是针对输入一行，输出多行的需求来的，类似 explode 函数。可以参考 &lt;a href=&#34;http://www.linezing.com/blog/?p=323&#34;&gt;http://www.linezing.com/blog/?p=323&lt;/a&gt; 。

这个是输入数组字段，输出两列，一列是数组元素的位置，一列是数组元素。比 explode 多了一列位置，不过数组元素只能是 String 类型的。
&lt;pre class=&#34;prettyprint lang-java&#34;&gt;

import java.util.ArrayList;
import java.util.List;

//import org.apache.hadoop.io.Text;

import org.apache.hadoop.hive.ql.udf.generic.GenericUDTF;

import org.apache.hadoop.hive.ql.exec.UDFArgumentException;
import org.apache.hadoop.hive.ql.exec.description;
import org.apache.hadoop.hive.ql.metadata.HiveException;
import org.apache.hadoop.hive.serde2.objectinspector.ListObjectInspector;
import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;
import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;

import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;

@description(
        name = &#34;explodeWithPos&#34;,
        value = &#34;_FUNC_(a) - separates the elements of array a into multiple rows with pos as first col &#34;
        )

public class explodeWithPos extends GenericUDTF {

    ListObjectInspector listOI = null;

    @Override
        public void close() throws HiveException{
        }

    @Override
        public StructObjectInspector initialize(ObjectInspector [] args) throws UDFArgumentException {

            if (args.length != 1) {
                throw new UDFArgumentException(&#34;explodeWithPos() takes only one argument&#34;);
            }

            if (args[0].getCategory() != ObjectInspector.Category.LIST) {
                throw new UDFArgumentException(&#34;explodeWithPos() takes an array as a parameter&#34;);
            }

            listOI = (ListObjectInspector)args[0];

            ArrayList fieldNames = new ArrayList();
            ArrayList fieldOIs = new ArrayList();

            fieldNames.add(&#34;col1&#34;);
            //fieldOIs.add(listOI.getListElementObjectInspector());
            fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);

            fieldNames.add(&#34;col2&#34;);
            //fieldOIs.add(listOI.getListElementObjectInspector());
            fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);

            return ObjectInspectorFactory.getStandardStructObjectInspector(fieldNames, fieldOIs);
        }

        //Object forwardObj[] = new Object[2];
        Object forwardObj[] = new String[2];

    @Override
        public void process(Object [] o) throws HiveException {

            List list = listOI.getList(o[0]);

            if ( list == null ) {
                return;
            }

            int i =0;
            for (Object r : list) {
                forwardObj[0] = String.valueOf(i);
                forwardObj[1] = r.toString();
                this.forward(forwardObj);
                i++;
            }
        }

    @Override
        public String toString() {
            return &#34;explodeWithPos&#34;;
        }
}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>rsync files-from 参数</title>
      <link>https://wdicc.com/rsync-files-from-option/</link>
      <pubDate>Sat, 16 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rsync-files-from-option/</guid>
      <description>
&lt;div id=&#34;outline-container-1&#34; class=&#34;outline-2&#34;&gt;&lt;br /&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;rsync&lt;/h2&gt;&lt;br /&gt;
&lt;div id=&#34;outline-container-1_1&#34; class=&#34;outline-3&#34;&gt;&lt;br /&gt;
&lt;h3 id=&#34;sec-1_1&#34;&gt;include/exclude&lt;/h3&gt;&lt;br /&gt;
&lt;div id=&#34;text-1_1&#34; class=&#34;outline-text-3&#34;&gt;&lt;br /&gt;

rsync 支持使用 include/exclude 来过滤要同步的文件，使用这两个参数的时候，需要注意下面的这个问题&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
Note that, when using the –recursive (-r) option (which is implied by -a), every subcomponent of every path  is  vis‐
        ited  from the top down, so include/exclude patterns get applied recursively to each subcomponent’s full name (e.g. to
        include &#34;/foo/bar/baz&#34; the subcomponents &#34;/foo&#34; and &#34;/foo/bar&#34; must not be excluded).  The exclude  patterns  actually
        short-circuit  the  directory  traversal stage when rsync finds the files to send.  If a pattern excludes a particular
        parent directory, it can render a deeper include pattern ineffectual  because  rsync  did  not  descend  through  that
        excluded section of the hierarchy.  This is particularly important when using a trailing ’*’ rule.  For instance, this
        won’t work: 

/some/path/this-file-will-not-be-found
/file-is-included 
*&lt;/pre&gt;
rsync 使用 -r 来遍历子目录的时候，如果还想用 exclude include 来过滤文件，那么要注意 一个目录如果满足了 exclude，而且还没有对应的 include，那这个目录下面的子目录也会被 exclude，就算你对这个子目录写了 include 。

虽然能解决问题，可实在很费劲，直到无意中发现了 files-from 参数。

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-1_2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1_2&#34;&gt;files-from&lt;/h3&gt;
&lt;div id=&#34;text-1_2&#34; class=&#34;outline-text-3&#34;&gt;

files-from 是通过指定一个本地/远程的文件来定义需要同步的文件。这个文件生成方法可就多了，你可以用 find/sed/awk/xxxxx 等搭配来得到你这个文件，一行命令不够还可以多行，是不是爽多了？
&lt;pre class=&#34;prettyprint&#34;&gt;
如果是远程文件，那就 –files-from=:/path/to/files。

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;写在后面&lt;/h2&gt;
&lt;div id=&#34;text-2&#34; class=&#34;outline-text-2&#34;&gt;

顺便测试一下 org2blog，这帖子是用 org2blog 写的，给作者提了个建议，加上 permlink 的支持，没几天居然给加上了，刚好测试一下，呵呵。

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>emacs 上推神器 twittering-mode</title>
      <link>https://wdicc.com/twittering-mode/</link>
      <pubDate>Sun, 03 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/twittering-mode/</guid>
      <description>
emacs 里面可以干很多事情，包括上 twitter。 在 @xwl 的努力下，还能上 sina 微博。。。&lt;br /&gt;

emacswiki 地址在这里 http://www.emacswiki.org/emacs/TwitteringMode， xwl 的 fork 在这里 https://github.com/xwl/twittering-mode/，增加了 sina 微博的支持，好像最近还增加了 douban 的支持。&lt;br /&gt;

我的配置在这里 https://github.com/wd/emacs.d/blob/master/site-lisp/config/wd-twitter.el，里面 twitter 使用的是代理。&lt;br /&gt;

我用到的 twmod 的按键设置:&lt;br /&gt;
推上面 &lt;RET&gt; 回复&lt;br /&gt;
j/k/h/l 类似 vim 里面&lt;br /&gt;
h 到第一条&lt;br /&gt;
C-c C-s 发推&lt;br /&gt;
C-u M-x twittering-update-status-interactive 可以选择同时更新两个&lt;br /&gt;
M-x twittering-switch-to-unread-timeline 切换到未读的 timeline，可以绑定到一个按键上面&lt;br /&gt;

其他的看 C-h m 里面的说明吧，效果在这里 http://flic.kr/p/9vy96G&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>解析纯真 ip 库</title>
      <link>https://wdicc.com/parse-qqwry-dat/</link>
      <pubDate>Thu, 10 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/parse-qqwry-dat/</guid>
      <description>
纯真的 ip 库应用比较广泛，就那个 qqwry.dat。以前尝试过解析，死活弄不明白那写地址和 pack/unpack 啥的，晕的不行。这两天需要解析下，就尝试用 perl 写一个。&lt;br /&gt;

开始用 sysread/sysseek 很多都读不出来，看了n遍程序，没觉得有啥问题。后来全部改成了 read/seek 就好了，也不知道怎么回事。画了一个图说明下，参考了 http://lumaqq.linuxsir.org/article/qqwry_format_detail.html 。&lt;br /&gt;

&lt;table style=&#34;width:auto;&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/f83_NZhjf6QchgG9gGRueg?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/_7OB6ilikjVs/TXie-yreH2I/AAAAAAAAAKY/fTPMq-pkuqU/s640/qqwry.png&#34; height=&#34;640&#34; width=&#34;269&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&#34;font-family:arial,sans-serif; font-size:11px; text-align:right&#34;&gt;发件人 &lt;a href=&#34;https://picasaweb.google.com/wdicc0/2011310?feat=embedwebsite&#34;&gt;2011-3-10&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br /&gt;

读来的3字节地址需要加 &#34;\0&#34; 才能 unpack，不知道怎么回事，对这些问题弄不明白。对了，网上还有个 perl 版的，也能用，需要的话可以搜一下。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>总结 2010</title>
      <link>https://wdicc.com/days-in-2010/</link>
      <pubDate>Sun, 13 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/days-in-2010/</guid>
      <description>
这都 2011 年的 2 月份了才写 2010 年的总结，好像晚了点，呵呵。不过其实这不是才过年了，还不算晚。&lt;br /&gt;

翻翻看 2009 年的，比对一下。 http://wdicc.com/2009/&lt;br /&gt;

写程序方面应该是更熟悉了，perl 里面的 pm 啥的也写了几个，甭管好不好用吧，反正是也算是用上了。另外就是 js 也写了不少，不过都是瞎写。&lt;br /&gt;

2010 年开年就不利，投资错误损失了 2 万多。换了工作，并有了第一辆车，在还没来得及开一个长途之前，车就又没了。还赶上悲催的北京限车令，现在还没的开。车没了也导致直接损失 1 万多，还好有保险。一年到头本来也没多少钱。&lt;br /&gt;

2010 还真有一次自驾游，去了平谷，庆祝刷版 10 周年，一帮人玩了两天。&lt;br /&gt;

开源上面好像没什么特别的贡献，自从用上 gentoo，懒的不行了。英语也没什么长进.... 2011 年努力吧。&lt;br /&gt;

2011 年希望能来一次远一点旅游，出国最好了。实在去不了，国内也行。这几年都没有出去玩过了。&lt;br /&gt;

2011 年也希望工作上面能有成就，每天上班的时候能有激情。&lt;br /&gt;

</description>
    </item>
    
    <item>
      <title>入了一个 BlackBerry 8900</title>
      <link>https://wdicc.com/blackberry-8900/</link>
      <pubDate>Thu, 27 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/blackberry-8900/</guid>
      <description>
前两个一个小姨子让帮忙买一个黑莓9800，也不知道小孩怎么想的，告诉她这个难用，还断网，但就是不听，说要买一个用的人少的。。。&lt;br /&gt;

顺道，就弄了一个 8900 自己用。之前那个 g1 现在很不给力，速度慢，费电。用上了 89 还是挺不错的，又有点 650 的感觉了，就是软件少了点。&lt;br /&gt;

linux 下面有个 barry 可以简单管理一下 bb，不过很有限。可以用 bjavaloader 装 cod 倒是不错，想加一个 service book 发现不行，很郁闷，不过能装软件就不错了。&lt;br /&gt;

尝试过在 virtualbox 里面使用，需要 disable usb 2.0。不过后来给 bb 弄了一个 sd 卡之后，发现 vbox 里面不认了，设置里面禁掉卡也不行，也不知道怎么回事。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>perl 里面的信号处理</title>
      <link>https://wdicc.com/signal-in-perl/</link>
      <pubDate>Sat, 01 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/signal-in-perl/</guid>
      <description>
perl 里面的信号处理很简单，就是给 %SIG 这个 hash 赋值就好了。前几天遇到个问题，处理 SIG{CHLD} 的时候，我本来只起一个 child 进程，可是发现这个信号会被触发多次，开始弄不明白，后来偶然想到是不是 system，exec 之类的函数弄出来的，搜了下果然。&lt;br /&gt;

perl 里面调用外部命令是会 fork 一个子进程的，所以也会触发那个信号，想避免可以设置局部变量，例如&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
$SIG{CHLD} = sub {
    print &#34;main\n&#34;;
};

.....
{
    local $SIG{CHLD} = undef; # 注意调用外部命令的时候，如果 IGNORE 就捕捉不了结果了
    `mv xxx yyy`;
    system(xxxxx);
}

.....
&lt;/pre&gt;&lt;br /&gt;

使用 {} 来构造局部变量的方法有时候会让问题变的非常简单。&lt;br /&gt;

另外，信号触发的时候，会把 sleep 中断，这个在 sleep 的 doc 里面说的很明白。如果还是想 sleep 到足够的时间，可以用下面的方法。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
my $timeLeft = 10;
while ( 1 ) {
    last if $timeLeft &lt;= 0;
    my $actTime = sleep($timeLeft);
    $timeLeft = $timeLeft - $actTime;
}
&lt;/pre&gt;&lt;br /&gt;

越来越感觉写 perl 还是很给力的，很多的奇技淫巧，不过我现在也是属于没弄明白多少，瞎写。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>又安装了一次 oracle</title>
      <link>https://wdicc.com/oracle-install-guide/</link>
      <pubDate>Fri, 05 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-install-guide/</guid>
      <description>
好久没有弄 oracle 了，今天有机会又折腾了一天 oracle 的安装，本来觉得是挺简单的事情，没想到也折腾了挺长时间的，我觉得可能主要是因为使用的系统比较新，而 oracle 是 10g 有比较老的缘故。&lt;br /&gt;

1 配置 x11forward&lt;br /&gt;
我这安装了 xauth 和 libXtst，然后使用 ssh -Y user@host 连接的。使用 -X 好像从来没成功过，也不知道怎么回事，懒得研究了。&lt;br /&gt;

2 运行安装程序&lt;br /&gt;
解压什么的就没什么好说的了，主要是运行的时候他会检测是不是他支持的发行版，可以使用 -ignoreSysPrereqs，跳过系统检测。&lt;br /&gt;

然后其他正常，就是到最后运行 dbca 的时候，会 hung 卡在那，等多久都完成不了。这一步做的操作是会给你 create database，建 init 文件等，没这个的话 oracle 是不可用的。如果你知道手动操作这些后续步骤也可以不理会这个。&lt;br /&gt;

dbca 卡住后，可以点那个取消，然后再开一个 term， ps 找到 dbca 然后 kill 掉，前面那个界面应该就会有反应了，就可以继续往下走了。到最后 exit 了事。&lt;br /&gt;

然后就是单独启动 dbca 来完成后面的工作。执行 dbca 命令（需要你提前配置好 path），会启动一个窗口，要注意的是，在这时候能看到一个关于字体的错误，据说这个错误就是上面 huang 住的原因，如果看到了这个错误，那么 dbca 的最后一步可能是会执行不了的。。。&lt;br /&gt;

我尝试了 n 种方法解决这个问题，发现最简单的是装一个 jdk 1.6 然后把 java 命令链接覆盖 oracle 安装的那个 jdk 1.4 的 $ORACLE_HOME/jdk/jre/bin/java 命令。等于就是说使用 1.6 的 java 来启动 dbca。如果这么做还不行，那可能需要装一些字体相关的东西，比如 xorg-x11-fonts-truetype。如果还不行那就不知道怎么弄了。&lt;br /&gt;

dbca 启动后，还遇到了 ora-27102 out of memery 和 ora-01034 oracle not aviliable。后面这个是在遇到前面那个的时候点 ignore 出来的。主要是前面那个。前面那个是因为 kernel 参数关于内存的配置配置的有问题，最大共享内存太大导致的。如果遇到这个问题就去改那些参数吧。&lt;br /&gt;


dbca 配置好后，oracle 应该就启动了。你可以连上去看看了。&lt;br /&gt;

3 导入导出&lt;br /&gt;
导出使用 exp，导入 imp，一般不需要加什么参数。据说加那个 full=y 后，导入的时候会建立用户，不用你操心。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>自动连接 ssh 并输入密码</title>
      <link>https://wdicc.com/autossh-and-auto-enter-password/</link>
      <pubDate>Wed, 13 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/autossh-and-auto-enter-password/</guid>
      <description>
这年头不翻墙就看不到真像了，前几天整了个 ssh 代理，就研究了下自动登录。&lt;br /&gt;

ssh 自动登录首选就是使用 key 了，可对方不干，那就只能使用密码了。自动输入密码可以用 expect。查这个的时候发现了一个 expect-lite，发现也挺有意思的，他把写 expect 脚本简单化了，比如想 send xxx，那就用 &gt;xxxx 就行了，想 expect yyy 那就 &lt;yyy 就好了，等等这些，呵呵。不过我后来没用这个，还是用的标准的 expect，代码如下。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-expect&#34;&gt;
spawn autossh -M 20000 -p SSH_PORT -N -D 7070 YOUR_NAME@YOUR_SERVER
set timeout 60
expect {
     assword: {
         stty -echo
         send &#34;YOUR_PASS\r&#34;
         stty echo
         #exp_continue
     }
    incorrect {
         send_user &#34;invalid password or account\n&#34;
         exit
     }
    timeout {
         send_user &#34;connection to host timed out\n&#34;
         exit
     }
    eof {
         send_user &#34;connection to host failed\n&#34;
         exit
     }
}
if {[fork]!=0} exit
disconnect
&lt;/pre&gt;&lt;br /&gt;

那里面那个 autossh 能自动给你重连，没仔细研究。那个 20000 后面的参数都是给 ssh 的，具体含意可以看 ssh 的 man。&lt;br /&gt;

最主要是最后那两行，能做到连接上之后主程序就退出了，不占用你的终端，而不影响 ssh 的连接。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>chrome 的几个字体配置</title>
      <link>https://wdicc.com/some-font-configuration-for-chrome/</link>
      <pubDate>Fri, 01 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/some-font-configuration-for-chrome/</guid>
      <description>
随着各种 ext 的开发，chrome 目前的可用性已经很高了。阻碍我使用的最大一个问题，主要是字体。在 firefox 里面我喜欢自己配置中文英文字体。英文喜欢使用等宽，比如 consolas，Monaco, dejavu sans mono 之类。比较喜欢 monaco，可是目前能下载到的字体好像有点问题，有些字号没有。&lt;br /&gt;

前几天看到 ghost 在 twitter 上说到 chrome，就又动了试试看的念头。后来总算整好了。&lt;br /&gt;

chrome 本身自己有个字体设置的地方，在 tools -&gt; options -&gt; Under the Hood 里面，可以设置字体，在这里设置的字体感觉好像比平时理解的要小一点。比如我设置的 15 号才感觉好像看着舒服了点。另外，我这里设置的是英文，中文会根据 fontconfig 配置的来显示，我使用的是 WenQuanYi Zen Hei。&lt;br /&gt;

这么设置之后，在很多页面应该已经可以了。不过可能你在 google 的页面里面，还有 extension 的页面里面，还是会看到讨厌的字体。这是因为在设置了使用 css 使用的字体后，chrome 好像会优先使用 css 的设置。google 的页面和 extension 的页面使用的是 Arial 字体。在 term 使用 fc-match arial 可以看到实际使用的字体。&lt;br /&gt;

那么修改一下 fontconfig 的配置，设置一下字体替换，比如我这个。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
&lt;match target=&#34;pattern&#34;&gt;
     &lt;test qual=&#34;any&#34; name=&#34;family&#34;&gt;&lt;string&gt;Liberation Sans&lt;/string&gt;&lt;/test&gt;
     &lt;edit name=&#34;family&#34; mode=&#34;assign&#34;&gt;&lt;string&gt;DejaVu Sans Mono&lt;/string&gt;&lt;/edit&gt;
 &lt;/match&gt;
 &lt;/pre&gt;

 再启动 chrome 应该就能看到效果了。:)

 此后还有个问题，那就是 chrome 界面上面没有最小字体的设置，然后很多 n 小的文字，让人讨厌。通过 google 找到了一个&lt;a href=&#39;http://wange.im/minimum-font-size-for-chrome-is-12px.html&#39;&gt;解决办法&lt;/a&gt;，我把他贴这里。
 &lt;pre lang=&#39;txt&#39;&gt;
 到chrome安装目录下的User Data\Default文件夹；
用记事本打开Preferences，找到：
&#34;webkit&#34;: {
&#34;webprefs&#34;: {
&#34;default_fixed_font_size&#34;: 13,
&#34;default_font_size&#34;: 16,
}
在｝里面加上：
&#34;minimum_font_size&#34;: 1,
&#34;minimum_logical_font_size&#34;: 1
 &lt;/pre&gt;

 现在看，我的 chrome 就好多了，呵呵。效果可以看看这里 http://www.webpagescreenshot.info/img/420779-9292010114845AM .
</description>
    </item>
    
    <item>
      <title>emacs 的列编辑</title>
      <link>https://wdicc.com/rectangles-in-emacs/</link>
      <pubDate>Sun, 29 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rectangles-in-emacs/</guid>
      <description>
列编辑我觉得是一个编辑器不能缺少的东西。在 vim 里面使用 C-v 就能进入列编辑，然后我通常用到的，也就是 d (删除) 和 I (插入)。在 emacs 里面一直没怎么用上这个，总感觉是操作很麻烦。最近操作了几次，发现也没那么难，呵呵。&lt;br /&gt;

emacs manual 里面关于列编辑的&lt;a href=&#39;http://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html&#39;&gt;页面&lt;/a&gt;。emacs 里面那个默认的列编辑不会出来像 vim 里面那样的矩形选区（不过有别的方法好像可以做到），所以当你选择的时候，还是按行来选择的，你只需要关心选择的起始点和结束点之间的那个矩形就好了，你的操作只会在里面起作用。&lt;br /&gt;

对应到 vim 的 d，emacs 里面的应该是 C-x r d 或 C-x r k 了吧，对应到 I，应该是 C-x r t string &lt;RET&gt; 了吧，不过 emacs 里面这个是替换选择的东西为 string，你要是选个空的，应该就算是插入了吧。还有个 C-x r y 复制，我觉得会这几个应该就基本可以了吧。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 org-mode 来做自己的 job tracker</title>
      <link>https://wdicc.com/use-org-mode-as-a-job-tracker/</link>
      <pubDate>Fri, 23 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-org-mode-as-a-job-tracker/</guid>
      <description>
用 emacs 的应该都知道 org-mode 这个大杀器，一直以来都想在工作里面用上他，可总是习惯不了。&lt;br /&gt;

这几天尝试把 org-mode 打造成了我的一个 job tracker，用来记录自己的 todo 和完成情况。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-lisp&#34;&gt;
;;
;; org-mode
;;

;; (setq org-agenda-files &#39;(&#34;~/org&#34;))
(setq org-agenda-files (file-expand-wildcards &#34;~/org/*.org&#34;))  ;; 把 ~/org/*.org 都加入到 agenda 里面，使用 C-c a a 看 agenda 的时候，会从这些文件里面读
(add-to-list &#39;auto-mode-alist &#39;(&#34;\\.org$&#34; . org-mode))
(define-key global-map &#34;\C-cl&#34; &#39;org-store-link)
(define-key global-map &#34;\C-ca&#34; &#39;org-agenda)
(setq org-log-done t) ;; 变到 done 状态的时候，记录一下时间

(add-hook &#39;org-mode-hook
          (lambda ()
            (org-set-local &#39;yas/trigger-key [tab])
            (define-key yas/keymap [tab] &#39;yas/next-field-group)))

(setq org-todo-keywords
      &#39;((sequence &#34;TODO(t)&#34; &#34;WAIT(w@/!)&#34; &#34;|&#34; &#34;DONE(d!)&#34; &#34;CANCELED(c@)&#34;)))  ;; 设置一下 todo 的关键字，| 左边的是未完成状态，右边是 done 的状态


(setq org-default-notes-file &#34;~/org/todo.org&#34;) ;; 设置 remember 的默认文件 

;;;  Load Org Remember Stuff
(require &#39;remember)
(org-remember-insinuate)

;; Start clock in a remember buffer and switch back to previous clocking task on save
;; (add-hook &#39;remember-mode-hook &#39;org-clock-in &#39;append)
;; (add-hook &#39;org-remember-before-finalize-hook &#39;bh/clock-in-interrupted-task)

;; I use C-M-r to start org-remember
(global-set-key (kbd &#34;C-c m r&#34;) &#39;org-remember)
;; (define-key global-map &#34;\C-cr&#34; &#39;org-remember)

;; Keep clocks running
(setq org-remember-clock-out-on-exit nil)

;; C-c C-c stores the note immediately
(setq org-remember-store-without-prompt t)

;; I don&#39;t use this -- but set it in case I forget to specify a location in a future template
(setq org-remember-default-headline &#34;Tasks&#34;) ;; 设置默认 remember 添加的 headline

;; 3 remember templates for TODO tasks, Notes, and Phone calls
(setq org-remember-templates (quote ((&#34;todo&#34; ?t &#34;** TODO %?\nCREATED: %U&#34; nil nil nil)
                                     ;; (&#34;note&#34; ?n &#34;* %?                                                                            :NOTE:\n  %U\n  %a\n  :CLOCK:\n  :END:&#34; nil bottom nil)
                                     ;; (&#34;appointment&#34; ?a &#34;* %?\n  %U&#34; &#34;~/git/org/todo.org&#34; &#34;Appointments&#34; nil)
                                     ;; (&#34;org-protocol&#34; ?w &#34;* TODO Review %c%!\n  %U&#34; nil bottom nil))))
                                     ))) ;;设置 todo 的模板，里面第三个参数是模板，里面的变量的意思 google 下


&lt;/pre&gt;&lt;br /&gt;

在 todo.org 里面有两个 headline，一个是 * Tasks ，一个是 * Done。&lt;br /&gt;

配置好后，在任意的 buffer 按 C-c m r 就可以打开个 buffer，输入 todo 信息，然后按 C-c C-c 就可以把 todo 添加到 todo.org 里面去了，会添加到 * Tasks 这个 headline 下面。&lt;br /&gt;

完成一个任务的时候，在那上面按 C-c C-t 然后选择 done 就可以设置完成。手动（还不会自动。。。）把完成的任务挪到 Done 里面。&lt;br /&gt;

如果想看看有完成情况的统计，可以在 agenda 里面看，C-c a a，然后按 v，选择不同的模式看。每周的工作情况在那里面一目了然，呵呵。&lt;br /&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;
Week-agenda (W29):
Monday     19 July 2010 W29
Tuesday    20 July 2010
Wednesday  21 July 2010
  todo:       17:33...... [ TODO 多看看 org-mode 的 agenda
Thursday   22 July 2010
  todo:       15:18...... Closed:     DONE a test
  todo:       15:18...... [ DONE a test
Friday     23 July 2010
  todo:       14:50...... [ TODO 梳理一下
  todo:       17:08...... [ TODO 了解下
  todo:       22:49...... [ TODO 申请
Saturday   24 July 2010
Sunday     25 July 2010
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 grep sort 等工具的时候要注意 LANG 的设置</title>
      <link>https://wdicc.com/lang-settings-when-use-grep-or-sort/</link>
      <pubDate>Mon, 12 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lang-settings-when-use-grep-or-sort/</guid>
      <description>
发现在使用 sort 或 grep 等工具的时候，LANG 会影响到速度。&lt;br /&gt;

1.5G 的文件，grep -Ei &#39;keyword&#39; file, LANG=C 的时候执行时间是 22 秒，LANG=en_US.UTF-8 的时候，执行时间是 3分53秒，最后结果是一样的。&lt;br /&gt;

这还不是最恐怖的，恐怖的是下面的&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
$ cat a
a
b
C
d
E

$ LANG=en_US.UTF-8 egrep &#39;[a-z]&#39; a
a
b
C
d
E

$ LANG=C egrep &#39;[a-z]&#39; a
a
b
d
&lt;/pre&gt;&lt;br /&gt;

以后用这些工具还是小心一点吧。。。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>无聊又写一个用来发邮件的 pm..</title>
      <link>https://wdicc.com/sendmail-pm/</link>
      <pubDate>Fri, 09 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sendmail-pm/</guid>
      <description>

继使用 perl 发&lt;a href=&#39;http://wdicc.com/sendmail-use-perl/&#39;&gt;中文标题邮件&lt;/a&gt;，和&lt;a href=&#39;http://wdicc.com/sned-mail-with-attachment/&#39;&gt;中文附件邮件&lt;/a&gt;后，又把他们整合了一下写了一个 pm 干这个事。&lt;br /&gt;

其实发带附件的邮件应该是有现成的 pm 干这个事的，比如 MIME::Lite 之类，没特殊需求还是用那个吧，这个纯属无聊写的。&lt;br /&gt;

文件前面有使用方法。。&lt;br /&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;
package SendMail;

use strict;
use warnings;
use Data::Dumper;
use Encode;
use MIME::Base64;

=head1 Examples
use SendMail;

my $sm = SendMail-&gt;new( {
    To =&gt; &#39;you@foo.com, other@bar.com&#39;,
    Subject =&gt; &#39;just a test 中文&#39;,
    });

-- or --

my $sm = SendMail-&gt;new( {
    From =&gt; &#39;me@abc.com&#39;,
    To =&gt; &#39;you@foo.com, other@bar.com&#39;,
    Subject =&gt; &#39;just a test 中文&#39;,
    } );

-- or --

my $sm = SendMail-&gt;new( {
    From =&gt; &#39;me@abc.com&#39;,
    To =&gt; &#39;you@foo.com, other@bar.com&#39;,
    Cc =&gt; &#39;cc@foobar.com&#39;,
    Subject =&gt; &#39;just a test 中文&#39;,
    } );


$sm-&gt;attach( {
    Type =&gt; &#34;text/plain&#34;,
    Data =&gt; &#34;只是一个测试..a test&#34;
    });

$sm-&gt;attach( {
    Type =&gt; &#39;application/octet-stream&#39;,
    Filename =&gt; &#39;test 中文.txt&#39;,
    Data =&gt; &#34;只是一个 test ...&#34;
    });

$sm-&gt;test;

-- or --

$sm-&gt;send;

=cut



use vars qw($VERSION);
$VERSION = &#39;0.01&#39;;

our $boundary = &#34;FFFFFFFFKKKKKK&#34;;
our $from = &#39;no-reply@abc.com&#39;;
our $subject = &#34;No subject&#34;;

our $to;
our $cc;
our @body;


sub new {
    my $package = shift;
    my $info = shift;

    $subject = $info-&gt;{Subject} || $subject;
    $subject = encode(&#39;MIME-B&#39;, decode(&#39;utf8&#39;, $subject));
    $from = $info-&gt;{From} || $from;
    $to = $info-&gt;{To} || die &#34;Need to set MailTo &#39;To&#39;!&#34;;
    $cc = $info-&gt;{Cc} || &#34;&#34;;

    push @body, &#34;MIME-Version: 1.0&#34;;
    push @body, &#34;Content-Type: multipart/mixed; boundary=\&#34;$boundary\&#34;&#34;;
    push @body, &#34;&#34;;

    return bless( {}, $package);
}

sub attach {
    my $self = shift;
    my $f_hash = shift;

    die &#34;Need data when attach!&#34; if ( not defined $f_hash-&gt;{Data} );

    my $type = &#34;text/plain&#34;;
    $type = $f_hash-&gt;{Type} if defined $f_hash-&gt;{Type};

    my @t;
    push @t, &#34;--$boundary&#34;;
    if ( $type eq &#34;text/plain&#34; ) {
        push @t, &#34;Content-Type: $type; charset=utf-8&#34;;
    } else {
        my $filename = &#34;file1.txt&#34;;
        $filename = encode(&#39;MIME-B&#39;, decode(&#39;utf8&#39;, $f_hash-&gt;{Filename})) if defined $f_hash-&gt;{Filename};
        push @t, &#34;Content-Type: $type&#34;;
        push @t, &#34;Content-Disposition: attachment; filename=$filename&#34;;
    }
    push @t, &#34;Content-Transfer-Encoding: base64&#34;;
    push @t, &#34;&#34;;
    push @t, encode_base64($f_hash-&gt;{Data});

    push @body, @t;
}

sub send {
    my $self = shift;

    open(my $fh, &#39;|/usr/sbin/sendmail -t&#39;);
    $self-&gt;print_to($fh);
    close($fh);
}

sub print_to {
    my $self = shift;
    my $fh = shift;

    push @body, &#34;--$boundary--&#34;;

    print $fh &#34;From: $from\r\n&#34;;
    print $fh &#34;To: $to\r\n&#34;;
    print $fh &#34;Cc: $cc\r\n&#34; if $cc;
    print $fh &#34;Subject: $subject\r\n&#34;;

    for ( @body ) {
        print $fh &#34;$_\r\n&#34;;
    }
}

sub test {
    my $self = shift;

    open ( my $fh, &#39;&gt;-&#39;);
    $self-&gt;print_to($fh);
    close($fh);
}

1;
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 perl 发带附件的邮件</title>
      <link>https://wdicc.com/sned-mail-with-attachment/</link>
      <pubDate>Mon, 05 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sned-mail-with-attachment/</guid>
      <description>
继 &lt;a href=&#34;http://wdicc.com/sendmail-use-perl/&#34;&gt;上篇&lt;/a&gt; 使用 perl 发带中文标题的邮件后，又研究了下发带附件的。&lt;br /&gt;

基本差别不大，主要是那个 Content-type 要变一下。那个 boundary 可以自己随便写，和后面的统一就行了。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
my $title = encode_base64(&#34;标题&#34;, &#34;&#34;);
my $body = encode_base64(&#34;邮件正文&#34;);
my $attach = encode_base64(&#34;附件内容&#34;);
my $filename = encode(&#39;MIME-B&#39;, decode(&#39;utf8&#39;, &#34;文件中文.txt&#34;))

open(MAIL, &#39;|/usr/sbin/sendmail -t&#39;);
 
print MAIL &#34;From: test\@abs.com\r\n&#34;;
print MAIL &#34;To: test\@abs.com\r\n&#34;;
print MAIL &#34;Subject: =?UTF-8?B?$title?=\r\n&#34;;
print MAIL &#34;MIME-Version: 1.0\r\n&#34;;
# print MAIL &#34;Content-type: text/plain; charset=utf-8\r\n&#34;;
print MAIL &lt;&lt;EOF;
Content-Type: multipart/mixed; boundary=\&#34;FFFFFFFFKKKKKK\&#34;

--FFFFFFFFKKKKKK
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

$body
--FFFFFFFFKKKKKK
Content-Type: application/octet-stream
Content-Disposition: attachment; filename=$filename.csv
Content-Transfer-Encoding: base64

$attach
--FFFFFFFFKKKKKK--
EOF
    close(MAIL); 

&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 perl 发送中文邮件标题乱码</title>
      <link>https://wdicc.com/sendmail-use-perl/</link>
      <pubDate>Wed, 30 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sendmail-use-perl/</guid>
      <description>

代码如下面，解决乱码的方法是使用 base64 编码。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use MIME::Base64::Perl;

open(MAIL, &#39;|/usr/sbin/sendmail -t&#39;);

my $recver = &#39;wangdong@abc.com&#39;;
my $alertTitle = &#34;中文 asdfsdf sdfsdf sdf sdf s df sd fsd f sd fsd f sdf sdf sdf&#34;;
my $alertText = &#34;body &#34;;

my $encoded = encode_base64($alertTitle, &#34;&#34;);

print MAIL &#34;From: alert\@abc.com\r\n&#34;;
print MAIL &#34;To: $recver\r\n&#34;;
print MAIL &#34;Subject: =?UTF-8?B?&#34; . $encoded . &#34;?=\r\n&#34;;
print MAIL &#34;MIME-Version: 1.0\r\n&#34;;
print MAIL &#34;Content-type: text/plain; charset=utf-8\r\n&#34;;
print MAIL &#34;\n&#34;;
print MAIL &#34;$alertText&#34;;

close(MAIL);
&lt;/pre&gt;&lt;br /&gt;

这里面 encode_base64 可以把文本做 base64 编码，要注意的是这个方法的第二个参数，是用来把编码结果进行格式化的，会每 76 个字符插入一个这个参数，默认是换行。&lt;br /&gt;

如果不是 utf8 的文本，那把里面的 utf8 改一下就好了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>emacs 的 emms 里面的乱码</title>
      <link>https://wdicc.com/emms-coding-system/</link>
      <pubDate>Sat, 19 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/emms-coding-system/</guid>
      <description>
&lt;a href=&#34;http://www.gnu.org/software/emms/&#34;&gt;emms&lt;/a&gt; 是基于 emacs 的一个播放器，不过其它他做的应该只是管理音乐，具体播放还是靠 mpg123 或 mplayer 这样的程序。&lt;br /&gt;

前几天下了一些 mp3, 这两天就又搞了搞 emms。emacser.cn 有篇&lt;a href=&#34;http://emacser.com/emms.htm&#34;&gt;文章&lt;/a&gt;就是介绍这个的，就不多说了。主要是被编码问题搞死了。&lt;br /&gt;

下载的 mp3 的 tag 是 gbk 的，可是设置了 emms-info-mp3info-coding-system 为 gbk 没效果，而用 mp3info 程序看了 mp3 的 tag，确实是 gbk 的，奇怪了就。后来发现 emms 还带了一个 emms-print-metadata 这个程序，这个程序貌似不需要设置编码，他会出来的结果直接就是 utf8, 可就算用这个 (通过设置 (setq emms-info-functions &#39;(emms-info-libtag)) )，出来的结果还是乱码。&lt;br /&gt;

后来突然想起来是不是 cache 的问题，然后就发现有两个地方可能有 cache，一个是 emms-cache.el 一个是 emms-history.el，把这两个对应的 cache 文件删掉，再运行一次 emms 就没问题了。我还设置了下下面的。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
(setq emms-cache-file &#34;~/.emacs.d/emms/emms-cache&#34;
      emms-history-file &#34;~/.emacs.d/emms/emms-history&#34;)
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>备份 gentoo</title>
      <link>https://wdicc.com/backup-gentoo/</link>
      <pubDate>Fri, 28 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/backup-gentoo/</guid>
      <description>


前段时间换本子，把 gentoo 重装了一遍，记下来一些需要备份的东西。&lt;br /&gt;

rc-update&lt;br /&gt;
启动列表，从这里面能找到你之前随机启动的东西&lt;br /&gt;

world&lt;br /&gt;
主动安装的程序列表&lt;br /&gt;

kernel&lt;br /&gt;
内核的配置文件，换机器后可能需要调整里面的磁盘 cpu 什么的配置&lt;br /&gt;

layman&lt;br /&gt;
加了什么 overlay&lt;br /&gt;

etc.tar.gz&lt;br /&gt;
程序的配置文件基本都在这下面，好在这个目录也还不算大&lt;br /&gt;

home.tar.gz&lt;br /&gt;
有些程序的配置文件在这里面，比如 firefox 什么的，另外比如 kmail 把邮件也存这里面&lt;br /&gt;

/opt&lt;br /&gt;
我把自己安装的一些程序放到了这里面，这些程序基本都是不依赖别的程序的。如果是需要 make 安装的，一般会写一个 ebuild。&lt;br /&gt;

fonts&lt;br /&gt;
自己安装的字体，一般放在 /usr/share/fonts/ 下面，看习惯了&lt;br /&gt;

stardict dicts&lt;br /&gt;
这个一般在 /usr/share/stardict/dic/ 下面，好像放 home 下面也可以，没试过。。&lt;br /&gt;

我自己的大概就上面这些了吧，另外还有就是自己的 overlay&lt;br /&gt;

备份了这么多东西完全弄好好像也花了好几天时间，当时是在 5.1 前后的时候弄的，好像花了4,5 天？没事还是别折腾了&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>总算搞定了我的无线</title>
      <link>https://wdicc.com/bcm4312broadcom-stawpa_supplicantkernel2-6-33/</link>
      <pubDate>Wed, 05 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/bcm4312broadcom-stawpa_supplicantkernel2-6-33/</guid>
      <description>
本子的网卡是 bcm4312，内核里面是有驱动支持的，只要编译了，再装一个 firmware 就应该能用了。可我这的表现是开机能连上一会，后面会断，断了后就再也连不上了，只能重启。&lt;br /&gt;

没办法，找了半天，看到一个 broadcom-sta 的驱动，这个是 broadcom 官方出的。装的时候刚好赶上了 2.6.33 的内核，这个内核对比 2.6.32 有不少的变化。我记得之前没有先的选项在 .config 里面好像也是可以搜到的，不过是注释的。现在 2.6.33 里面，直接就搜不到了。而安装 broadcom-sta 的时候要求的几个内核选项花了好大功夫才搞定。&lt;br /&gt;

比如这个 wireless_ext。make menuconfig 后搜一下，能搜到，不过会发现他没有 Location，只有个 selected by。这就是说，只有满足了那些 selected by 的时候，这个才会被选上。在 selected by 里面，能看到 GELIC_WIRELESS [=n] &amp;&amp; NETDEVICES [=y] &amp;&amp; NETDEV_1000 [=y] &amp;&amp; WLAN [=y] &amp;&amp; GELIC_NET [=n] || IPW2100 [=m] &amp;&amp; NETDEVICES [=y] &amp;&amp; WLAN [=y] &amp;&amp; PCI [=y] &amp;&amp; CFG80211 [=y] 这样的一些内容。怎么理解呢？这些是按照那些 || 来分割的，竖线左右的是或的关系，不管哪边满足都可以。我在那个长长的列表里面摸索了半天，总算找到一个合适的，那就是先把 ipw2100 这个驱动选上，因为网卡不是这个型号的，所以把这个编译成模块，然后加在 blacklist 里面。&lt;br /&gt;

要使用无线，一般还需要一个模块，LIB80211_CRYPT_TKIP，用来支持 wpa 的。这个你在 dmesg | grep lib80 的时候能看到，如果没有 tkip 在里面，那基本应该是连不了 wpa 的网络的。这个模块也是需要选别的模块才能激活，上面选的那个 ipw2100 刚好还用在了这里，呵呵。另外还需要一个 hostap 的模块。&lt;br /&gt;

然后 broadcom-sta 还需要把 ssb，mac8012 这些模块关闭，反正按照提示来做就好了，这些都有 location，很好搞定。&lt;br /&gt;

装好后，就可以使用 wpa_supplicant 来连接无线了。要注意的是，使用的 driver 不是那个 braodcom，而是 wext。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>elisp 最最初级的一点入门知识</title>
      <link>https://wdicc.com/basic-elisp-programing/</link>
      <pubDate>Sun, 25 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/basic-elisp-programing/</guid>
      <description>
其实上次写 http://wdicc.com/how-i-became-a-emacser 的时候，是想写一点 eslisp 入门的东西的，结果总觉得好像也写不出来什么，就写成另一篇了，呵呵。(看这篇前最好先看看那个吧，那个更入门。)&lt;br /&gt;

不过我还是觉得，用 emacs 如果不会一点 elisp，那基本你是用不住的。记那些无聊的快捷键有什么意思，有意思的是你能让 emacs 用你希望的模式工作。今天 twitter 上面看到一个词&#34;计算姬&#34;，感觉很有点意思，呵呵，小蜜就是给你干活的嘛，不要被她折磨就好。&lt;br /&gt;

其实主要是我自我感觉目前了解的 elisp 的东西，好像基本就够用了，所以才想写出来，给比我还糊涂的指条明路。&lt;br /&gt;

1 数据类型。&lt;br /&gt;
elisp 是有类型在里面的，我看好像有什么 sequence, number 之类，具体有哪些不重要，重要的是你使用的时候，比如比较的时候，切记要弄明白他们是什么类型。我找到一个 format 函数，感觉很好用，可以转类型，具体可以查文档，可以多用用。&lt;br /&gt;

2 调试&lt;br /&gt;
调一个程序的时候，我觉得最基本的就是 print 和 message 这两个函数了吧，加上上面的 format，基本应该能搞定了。在一段 elisp 后面使用 C-x C-e 就能直接执行他，执行之后就能在当前的 emacs 里面起作用，不过对我等菜鸟来说，有时候会遇到一些奇怪的问题，不行就还是再启动一个 emacs 来验证结果吧。&lt;br /&gt;

3 emacs 简单设置&lt;br /&gt;
掌握了上面两个，基本就可以定义自己的东西了。一般用的是 setq，比如下面这个&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
;; 防止页面滚动时跳动， scroll-margin 3 可以在靠近屏幕边沿3行时就开始滚动，可以很好的看到上下文。
(setq scroll-margin 3
            scroll-conservatively 10000)
(set-terminal-coding-system &#39;utf-8)
(add-to-list &#39;auto-mode-alist &#39;(&#34;\\.py\\&#39;&#34; . python-mode))
&lt;/pre&gt;&lt;br /&gt;

可以看到他一次设置了两个变量，其实写两个括号也是可以的。&lt;br /&gt;

还有下面的两行，他是执行了一个函数，这个函数里面干的什么，他接受什么参数，直接在 emacs 里面按 C-h f 然后输入你要查的函数的名字，就会显示 help 信息，很方便吧。&lt;br /&gt;

4 hook&lt;br /&gt;
下面稍微高级一点，了解下 hook 怎么用。hook 这个东西翻译过来应该是钩子的意思吧，其实就是别人的程序预留的一些接口，可以让你在他的程序里面插入一些你自己的程序。比如下面这几个。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
(add-hook &#39;weblogger-start-edit-entry-hook (lambda()
    (auto-fill-mode -1)
    (abbrev-mode -1)
    (auto-complete-mode 1)
    ))
(add-hook &#39;cperl-mode-hook (lambda () (abbrev-mode -1)))
(add-hook &#39;view-mode-hook &#39;view-mode-keybinding-hook)

(defun weblogger-edit-entry (&amp;optional entry)
  &#34;Edit a entry.  If ENTRY is specified, then use that entry.
Otherwise, open a new entry.&#34;
   ...........
  (run-hooks &#39;weblogger-start-edit-entry-hook)
)
&lt;/pre&gt;&lt;br /&gt;

第一个是在 weblogger.el 开始编辑文件的时候，把那些 mode 关掉。第二个是 cperl-mode 启用的时候，把 abbrev-mode 关掉。第三个是在 view-mode-hook 执行的时候，执行那个函数。&lt;br /&gt;

最后是在实际代码里面这个 hook 是怎么执行的，能看到当调用 weblogger-edit-entry 的时候，就会在这里面某个时候去执行之前设置的 hook，这样个性化设置的目的就达到了。&lt;br /&gt;

eamcs 的各种 mode 一般都有各种的 hook，这应该能完全达到个性化的目的了，可有些时候想定制的地方没有 hook 怎么办？暴力一点，直接改他的程序好了。。。温柔一点的，那就看下面这个。&lt;br /&gt;

5 defadvice&lt;br /&gt;

defadvice 在文档里面写的很清楚，大概应该是可以在一个已有函数执行前或后执行你定义的东西。比如下面这个。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
;; use this to auto cancel notify
;; (add-hook &#39;erc-send-pre-hook
;;           (lambda(s)
;;             (erc-tray-change-state nil)))
(eval-after-load &#39;erc
  &#39;(progn
     (defadvice erc-send-input (before change-tray-status activate)
       (erc-tray-change-state nil))))
&lt;/pre&gt;&lt;br /&gt;

我设置了 erc 在收到消息的时候会发送 notify 到 tray，我想做到只要我在 erc 里面输入了一些东西（即使是空的），就把 tray 的状态标记为已读，就不用继续提醒我了。&lt;br /&gt;

erc 有个 erc-send-pre-hook，可以在发送一条消息前执行 hook，可是如果输入的是空行，是不会触发这个 hook 的，使用 defadvice 可以解决这个，具体使用方法还是看文档吧，我突然觉得我很罗嗦。。。。屁大点东西也能发一篇？。。。&lt;br /&gt;

我会的基本就说完了，其它高级玩意有需要的时候应该可以从文档里面去看吧，目前来看，会用 hook 和 defadvice 我就知足了，不行就来 irc 里面找牛人问一个，经过提示后，应该还是能解决的吧。反正不求能自己去写一个 mode，当时最少也要能看明白别人的那点东西，然后自己能改一下吧，要不用 emacs 会很痛苦的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我是怎么从 vim 转向 emacs 的</title>
      <link>https://wdicc.com/how-i-became-a-emacser/</link>
      <pubDate>Sun, 18 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/how-i-became-a-emacser/</guid>
      <description>
从尝试用 emacs，到现在基本（有些地方还不是很适应）习惯用 emacs，算起来得有 n 年了，我都忘记最早接触 emacs 是什么时候了。在 2010-3-20 之前尝试过很多次，基本都是记几个快捷键，过几天就又忘记了。后来自己想了下为什么不能持续的原因，我觉得有两个。&lt;br /&gt;

1 没有在日常工作里面使用。&lt;br /&gt;
之前我的开发工作基本都是直接在某台服务器上面的，这样就开发调试会比较方便，而那些机器一般要不会装 emacs，这样不常用就会导致记住的快捷键过几天就忘记了。最近刚好需要在本机写点程序，也就刚好用上了。&lt;br /&gt;

2 不会 elisp。&lt;br /&gt;
emacs 的配置文件都是 elisp 写的，而不经过配置的 emacs 就编辑文件来看，我觉得还不如去用 vim，vim 好用多了。我想刚看到 elisp 的时候一般都会觉得这个语言太变态了，全是一堆的括号。。。而不会 elisp 就会导致你只能去机械的复制别人的配置，如果刚好是你想要的，那还好，而如果还想做点小的修改，那就会很郁闷，用起来郁闷，不用可能更郁闷。不爽多了，就干脆不用 emacs 了。&lt;br /&gt;

如果你能在日常工作中经常使用，并且会写程序（比如 php,perl 什么的，随便哪个都行），那么对于基本没怎么配置过 .vimrc 的用户来说，切换到 emacs 其实应该还算是一个比较简单的事情。&lt;br /&gt;

1 emacs 是无模式的。&lt;br /&gt;
这就是说你不用经常去按那个 Esc 来切换模式了。没有模式也就意味着你不能使用像 vim 那么简短的命令了，因为像 a,i,o,h,j,k 这些对 emacs 来说，这些都是正常的输入字符，所以我们不得不在这些字符前面加上 C(control), M(Meta 一般是 Alt), S(shift) 这些前缀。在 emacs 里面需要按的可能还远不止这些控制字符加一个普通字符，比如我定义的 C-c n E 来打开 erc。不要被这些吓着了，并不需要你记住所有的，你只要记住你常用的就好了。&lt;br /&gt;

2 emacs 里面的 buffer。&lt;br /&gt;
打开一个文件，就会出现一个 buffer。调用帮助，也会打开 buffer。使用 emacs 绝对不要和一些自动出现的 buffer 过不去，使用 emacs 的理念就是一个编辑器 n 个 buffer，编辑文件的，看 mail、news 的，上 irc 的等等。你需要的是一个方便的 buffer 切换的工具，推荐的有 ido-mode 和 ibuffer。&lt;br /&gt;

3 emacs 里面有各种 mode。&lt;br /&gt;
vim 里面是通过设置 filetype(ft) 来达到语法高亮等功能的。emacs 里面是通过各种 mode。emacs 里面有主模式(main mode)，和辅模式(minor mode)。上面说的 ido-mode 就是一个辅模式。打开一个文件后，一般有一个主模式（通过一些方法也可以有多个），多个辅模式。比如我打开一个 js 文件，会同时使用到 js2-mode 这个主模式，和 highlight-tail-mode, autocomplate-mode 这几个辅模式。&lt;br /&gt;

4 写点 elisp。&lt;br /&gt;
elisp 基本就是一堆的括号，括号最左半边的是操作符或函数，后面的都是他的参数，比如 (- 10 3)，具体这个是什么意思，就要去看看 &#34;-&#34; 是干嘛的，他会对后面的参数做什么事。再比如(setq xwl-at-company? (xwl-at-company))。先去看看那个 setq 是干嘛的，查完好像是设置变量的，他会把第二个参数的值赋给第一个参数。那第二个变量是个表达式，那就等于会把这个表达式的值赋给他，对吧。这个括号表达式是干嘛的呢？xwl-at-company 这个是自己写的函数，不需要参数，他会根据一些信息返回是不是在使用公司的网络。是返回 t，不是返回 nil。ok，这不就明白了么？呵呵。还有一些像 (if, (when, (progn 等等，都是这么个理解方法。&lt;br /&gt;
写程序就避免不了调试，最简单的调试方法应该就是直接打印了吧，呵呵。elisp 里面可以使用 print, message 来输出一些调试信息。比如 (print (format &#34;value of t: %s&#34; t))，具体啥意思可以参考前面说的方法去查查。这些信息可以在一个叫 *Messages* 的 buffer 里面看到。&lt;br /&gt;

5 emacs 里面的帮助。&lt;br /&gt;
C-h 是调用帮助，可以在后面再输入 ？ 来看看有什么可用的帮助。我一般用的是 m（看当前 mode 的一些快捷键设置），k（查某个快捷键是干嘛的），v（查 emacs 变量的值）。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>强大的 git 和 git svn</title>
      <link>https://wdicc.com/powerful-git-and-git-svn/</link>
      <pubDate>Sun, 04 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/powerful-git-and-git-svn/</guid>
      <description>
在春哥的鼓动下，用上了 git。有 git svn 支持，还是很好用的，建议 svn 用户都试试看。&lt;br /&gt;

使用 git svn clone SVN_URL 来 clone 初始化你的本地 repo，然后就和 svn 没关系了，直到你需要把你的改动提交到 svn 的 repo。&lt;br /&gt;

先说说 git 的一些本地操作，就捡我自己用的说吧，我觉得应该也够用了。&lt;br /&gt;

首先 git add 是用来添加文件的，编辑好新的文件后，使用 git add file_name 就能把他加入到 git 里面管理，当然，如果还不打算提交他，那也可以先编辑以后再 add。&lt;br /&gt;

然后 git mv 改名，git rm 删文件，这和一般的 linux 命令差不多，就不用多说了。要记得的是，如果想让你的改动加入到 git 的管理里面，那就最好使用这两个文件来改名和删文件。如果直接用 linux 命令操作，比如改名，git 会认为你要删一个文件，并且那个新的文件还没不会加入到管理里面。&lt;br /&gt;

然后就是 git status 了。执行这个能看到当前 repo 的分支（例如下面的第一行说的 wd）里面有哪些改动，这个里面的信息应该是能分四类。一类是对文件的操作，比如添加删除文件等(changes to be committed)，这类文件直接使用 git commit 就能提交。一类是对现有文件的修改(changed but not updated)，这类文件使用 git add 添加后也能用 git commit 提交，不过也可以用 git commit -a 直接提交。一类是没有加入到管理的一些文件(untracked files)，这类文件不会被提交，除非你使用 git add 添加他们。好像还有一类，是你的修改如果和上游冲突的时候，这时候会多出来一类，提示你这些文件和上游冲突，打开这些文件，里面有明显的标记会指出冲突是什么，解决冲突后，git add 添加这个文件，再提交就可以了。&lt;br /&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;
# On branch wd
# Changes to be committed:
#   (use &#34;git reset HEAD &lt;file&gt;...&#34; to unstage)
#
#	new file:   a
#
# Changed but not updated:
#   (use &#34;git add &lt;file&gt;...&#34; to update what will be committed)
#   (use &#34;git checkout -- &lt;file&gt;...&#34; to discard changes in working directory)
#
#	modified:   hello
#
# Untracked files:
#   (use &#34;git add &lt;file&gt;...&#34; to include in what will be committed)
#
#	b
&lt;/pre&gt;&lt;br /&gt;

上面捎带说了下 git commit，commit 有个 -m 参数可以直接在后面指定 commit message，就不用打开那个编辑窗口了。另外还有个 --amend 能用来修改最后一次提交的 commit message。commit 后面还可以跟具体的文件或目录来只提交指定的东西。&lt;br /&gt;

还需要知道的命令，git log。能看到自己和别人提交的每个 commit 的情况。那个类似 commit 0fb8046e4bd0b5ce44d778e3936bda80e7e0ccd7 的那一长串字符就是 commit id。如果想看具体某个 commit 做了什么，那就执行一下 git show commit_id,能看到一个 diff，很方便的。&lt;br /&gt;

git diff file_name 可以用来看自己要提交的文件改动了什么。&lt;br /&gt;

git branch 还能建分支，非常的方便。使用 git branch wd 就能建立一个叫 wd 的分支，使用 git branch 就能看到当前有哪些分支，使用 git checkout wd 就能切换到 wd 这个分支，在这个分支做的改动不会影响到 master，随时可以切换回去。然后可以使用 git merge 可以把在某个分支做的变更 merge 进来。比如当前是 master 分支，git merge wd 会把在 wd 这个分支建立后，在 wd 上面做的改动 merge 到 master 里面。不过在不熟练的情况下，还是别使用分支了，呵呵。&lt;br /&gt;

如果提交了之后又想撤消，那就要用到 git reset 了。reset 分 mixed，soft，hard 几种，看名字应该能看出了一点什么，hard 会把对文件的改动都撤消，soft 只会删掉提交记录，不会对文件操作。具体这几个区别还是看看 man git reset 吧，这个操作也是稍微有点复杂，容易出问题，没熟悉的情况下慎用。我只用过 soft reset，用来修改 commit message，呵呵。&lt;br /&gt;

前面说的这些都是在本地操作的，完全不用管别人的情况，在没有网络的情况下，你也可以提交你的修改。&lt;br /&gt;

激动人心的时候到来了，怎么把修改提交到 svn 呢？&lt;br /&gt;

如果想要把自己的变更应用到 svn repo，那就要用到 git svn dcommit 了。不过别急，这时候还需要了解下 git svn rebase 命令，这个命令是用来把远程别人的改动应用到本地的，类似于 svn update（不过文档里面说还是有点区别，没看明白）。在 rebase 的过程中，难免会遇到一些冲突，这个时候会有提示信息的，而且在 git status 里面也会提醒你的。这时就需要你先去解决冲突，打开那个文件看看就知道了。解决了后使用 git add 添加那个文件，然后 git svn rebase --continue，直到完成。&lt;br /&gt;

这样之后，你就可以用 git svn dcommit 来提交你的修改了。这个命令完事后会自动 rebase 一下，所以好像可以直接使用这个命令而不 rebase 先。&lt;br /&gt;

好了，这下改动就提交到了 svn 了，整个过程就完事了。这只是一些基本的用法，应该也足够用了，遇到问题或更深入一点的用法可以看看 git 的 man。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>看了 12 怒汉 ( 12 Angry Men )</title>
      <link>https://wdicc.com/about-justice/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-justice/</guid>
      <description>

12 怒汉下了好久了，一直没看，正在看，还没看完就忍不住要写点什么。&lt;br /&gt;

俄语实在不好听，忍着看了 10 分钟，这个片子就开始吸引人了。12 个陪审团成员，还有其它人，几乎所有人都认为 20 分钟应该就会完事，因为这之前已经听法院审了三天了。在 12 比 1 的情况下，怎么说服其它人同意小孩是无罪的，这就是整个片子的内容。当然是有理有剧的。&lt;br /&gt;

当你手里掌握着别人的生命的时候，你会怎么做？今天上午还看了几集哈佛大学的那个关于公正的课，里面几个例子。&lt;br /&gt;

如果你是一个电车司机，刹车失灵了，轨道那头是 5 个工人，开过去肯定会把他们撞死，关键时刻你发现有个叉道，那边是 1 个工人，如果你打方向盘的话，那就是撞死一个人，你会怎么做？&lt;br /&gt;

再如果司机不是你，没有叉道，而你当时你站在桥上，你旁边有个胖子，如果把那个胖子推下去，车就会停，你会怎么做？&lt;br /&gt;

如果你是一个医生，医院来了 6 个病人，其中一个病的很重，其他几个轻一点。如果你救那个病重的，因为需要的时间会很长，那其它几个就会死。如果你先救那 5 个，那么病重的一个就肯定死，你怎么办？&lt;br /&gt;

再如果，来了 5 个病人，他们分别需要移植 5 个器官，可是没有现成的。这时候你想起来旁边屋子里面有一个健康的人，如果把他的器官换给那 5 个人的话，那 5 个人就会得救，当然，这个人会死，你会做么？&lt;br /&gt;

还有一个真实的案例。4 个人座船出去，路上遇到风暴，逃到了逃生艇上。没有吃的，里面有个孤儿，不听劝告，喝了海水，病的很严重，其它三个人把那个人杀了，然后挺了过去，得到了救助，到了岸上，他们供认了经过。然后你觉得他是有罪还是无罪呢？&lt;br /&gt;

之前还看过一个文章，讲什么是民主的。看 &lt;a href=&#34;http://tieba.baidu.com/f?kz=126121842&#34;&gt;这里&lt;/a&gt; 吧。&lt;br /&gt;

民主就是少数服从多数么？好像不是这样的，那民主是什么呢，我也不知道，gcd 说他们统治的国家就是民主的，可好像我连想上的网站都上不了，还不经过我同意，这个好像不那么民主。那倒底民主是什么呢？&lt;br /&gt;

看了明朝那些事，头一次知道原来内阁是可以驳回皇帝的圣旨的，原来也不是说皇帝说什么就算什么的，他也得和大臣讲道理的。如果给你 10 个人让你管，那很简单，是不是，要干什么的时候，一个人一个人和他说明白就好了。如果是 100 个呢？ok，虽然累点，好像也还是可以说清楚的。可如果是 1000 个呢，显然一个一个说就不靠谱了，得想别的办法，那就是从 1000 个人里面选 10 个人，每人分给他们 99 个人，你有什么事，教会这 10 个人就好了，然后由他们去和手下的 99 个人说明白，简单了吧。用这个模式，不管有多少人都可以搞定了，是不是？实际上军队不就是这个模式么。但发现没有，实际上你的权力被分到了那 10 个人的手上，如果他没有和手下的 99 个人表达你的意思，而表达的是他自己的意思，那么。。。皇帝有时候就得面对这个，想让内阁替你办事，那你就得把权力分给他们。&lt;br /&gt;

再来说民主。选举其实就是一个分权的过程，你把你的一部分权力分给了你选的代表，如果你都不知道这个代表你的人是男是女，或是太监的时候，这其实是很恐怖的，对吧。&lt;br /&gt;

这个片子没想到看到最后居然还转折了一下，有点意思，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>用 emacs 写 blog</title>
      <link>https://wdicc.com/use-emacs-publish-your-blog/</link>
      <pubDate>Wed, 10 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-emacs-publish-your-blog/</guid>
      <description>
不想看大段文字的可以直接看 http://github.com/wd/work/tree/master/weblogger.el/。&lt;br /&gt;

先看看 &lt;a href=&#34;http://emacser.com/weblogger.htm&#34;&gt;这个&lt;/a&gt;， 我用的weblogger.el 就是从那来的，这个 el 打了 html 支持和 tags(summary) 的支持。&lt;br /&gt;

因为写中文 title 的时候，生成的 url 会有一堆的中文字符，看起来就是乱码，不可读，这时候可以在 wp 的后台指定一个 post-slug，url 会根据这个生成。这里我主要是研究了一下对 post-slug 的支持。&lt;br /&gt;

weblogger.el 里面 应该是在 weblogger-determine-capabilities 里面判断一下你的 blog 支持的类型，我看了 wordpress 的支持的 methods，里面metaWeblog.newPost, 和 blogger.newPost 应该都是支持的，他应该首选的是 metaWeblog 那个。&lt;br /&gt;

然后呢，就是看 wp 的 xml-rpc 文件，里面有个 mw_newPost 对应的就是 metaWeblog.newPost 应该是。在这个函数头试了一把，用的确实是这个。然后就看这里面是怎么处理的了。&lt;br /&gt;

这里面最后用的是 wp_insert_post 发的贴子，再看这个函数，能看到里面用的是 post_name 来生成的 post-slug。那么我们只要设置一下这个变量就可以了。在这个函数里面，搜一下 post-name 能看到&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
// Let WordPress generate the post_name (slug) unless
// one has been provided.
$post_name = &#34;&#34;;
if(isset($content_struct[&#34;wp_slug&#34;])) {
    $post_name = $content_struct[&#34;wp_slug&#34;];
}
&lt;/pre&gt;&lt;br /&gt;

我们只要在 weblogger.el 里面 post 一个这个变量就好了。在 post 里面能看到如果有个 X-url 的话，他会 post 一个 link 字段出来。那就好了，把上面那个 wp_slug 改成 link，然后写 blog 的时候加一个字段 X-url 就会使用这个你指定的 url 了。&lt;br /&gt;

这个文章就是用 emacs 写的。 :D&lt;br /&gt;

又研究了下，再补充点内容，呵呵。(2010-03-10)&lt;br /&gt;

问题是这样的，新建一个 post 的时候会出来 subject, keywords, newsgroup 这三个字段，怎么能让他加上 summary 和 x-url 呢，这样我就不用每次都手动写了，怎么弄呢，我就找啊找啊，总算找到方法了。&lt;br /&gt;

新建的 buffer 里面不是会有个提示么，什么 &#39;--text follows this line --&#39;, 就找这个，看是哪里提供的。在 weblogger.el 里面，找了半天，发现没有这个提示。怎么回事？要相信程序，肯定是会有的，只能是找错了地方。&lt;br /&gt;

看看这个 el 的看头，引用了 message.el，搜了一下，这个原来是 gnus 提供的，找到这个 el，搜了一下，找到那几个字符了。原来是在这里面添加的。然后我就尝试定义 message-required-news-headers 这个变量，发现不好用，看来还是得在 weblogger.el 里面弄。在这里面找到 weblogger-edit-entry 这个函数，这个就是发帖子的时候用的，在里面有个顺序往下看，这个 message-goto-keywords 比较可疑，在 message.el 里面搜了下，果然，同时还看到一个 message-goto-summary，加上看看，嘿嘿，果然就搞定了。再找找 x-url，没找到，那就仿 summary 的写一个呗&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
(defun message-goto-x-url ()
  &#34;Move point to the x-url header.&#34;
  (interactive)
  (message-position-on-field &#34;X-url&#34; &#34;Subject&#34;))
&lt;/pre&gt;&lt;br /&gt;

这不完了么，这下就爽多了，嘿嘿。。不过如果能把那些 keywords, summary 等字段改成什么 categories,tags 就好了。。。有时间看看。。。&lt;br /&gt;

又研究了一下，加点内容。。(2010-03-11)&lt;br /&gt;

其实就是上面留的这点东西，我自己改吧了一下，好像能用了。地址在 http://github.com/wd/work/tree/master/weblogger.el/，里面的 permlink 就是指定 url 的。我看发文章好像没问题了。&lt;br /&gt;

另外，我试着在这个 mode 里面让他自动启动 auto-complete-mode，可是怎么弄都不行，不知道怎么回事。下面是我在 .emacs 用的代码。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
(add-hook &#39;weblogger-start-edit-entry-hook (lambda()
    (auto-fill-mode -1)
    (abbrev-mode -1)
    (auto-complete-mode 1)
    ))
&lt;/pre&gt;&lt;br /&gt;

有人能帮忙不。。。&lt;br /&gt;

又修改了一些东西。。可以看看 github 的 commit log 。。。。(2010-03-12)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Jemplate 的简单介绍</title>
      <link>https://wdicc.com/introduce-to-jemplate/</link>
      <pubDate>Sat, 27 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/introduce-to-jemplate/</guid>
      <description>
如果你还在用 php 写 web，那么你 out 了，呵呵。现在流行的是 rest + js。当然，rest 层可能还是 php 写的，不过还有用 perl 写的 openresty 1.0 和完全用 c 写的 openresty 2.0。openresty 是个很不错的东西，本来想细说一下，发现不知道怎么说好。去 cpan 上面搜吧。openresty 2.0 是基于 nginx 的，agentzh 在他上面加了好多的模块，让 nginx 直接和数据库通信，都不用 php 了。前端完全用 js 来搞定，以后应该都是 js 工程师了。&lt;br /&gt;

smarty 写 php 的人应该都知道吧，Jemplate 是很类似的一个东西，是方便你写 js 的一个工具。我这写了一个非常简单的例子。&lt;br /&gt;

下面这个是 Jemplate 的一个模板，保存为 test.tt。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
&lt;div&gt;[% test %]&lt;/div&gt;
&lt;p&gt;
[% FILTER html %]
    asdff &lt; sdf &gt; sdfsdf
[% END %]
&lt;/p&gt;
&lt;/pre&gt;&lt;br /&gt;

然后用 Jemplate 编译一下&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
jemplate --runtime &gt; a.js
jemplate --compile test.tt &gt;&gt; a.js
&lt;/pre&gt;&lt;br /&gt;

这之后就和 test.tt 没关系了，除非你改了他，那就需要重新生成这个 a.js。&lt;br /&gt;

再看我们的页面。里面 jquery-1.4.2.min.js 是为了方便操作页面使用的，jquery 决对是个好东西，写 js 应该使用他。那个 jquery.b.js 是我们自己写的，真正把数据添加到页面的代码。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;&gt;
    &lt;title&gt;test&lt;/title&gt;
    &lt;script src=&#39;jquery-1.4.2.min.js&#39; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt; &lt;/script&gt;
    &lt;script src=&#39;a.js&#39; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt; &lt;/script&gt;
    &lt;script src=&#39;jquery.b.js&#39; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt; &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=main&gt;&lt;/div&gt;    
&lt;/body&gt;
&lt;/html&gt;
&lt;/pre&gt;&lt;br /&gt;

在这个 jquery.b.js 里面，我们让 jemplate 处理了一下 test.tt，给他里面的 test 变量赋值 ffffff，然后把设置到 #main 的 html 里面。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
$(function() {
    var html= Jemplate.process(
        &#39;test.tt&#39;, { test: &#39;ffffff&#39; }
    );

    $(&#39;#main&#39;).html(html);
});
&lt;/pre&gt;&lt;br /&gt;

这样这个页面就完事了，简单么，呵呵。你可以用 jemplate 和 js 强大的语法来实现更多的功能的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>ssh 之穿越与反穿越</title>
      <link>https://wdicc.com/ssh-proxy/</link>
      <pubDate>Thu, 21 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ssh-proxy/</guid>
      <description>
&lt;p&gt;有时候我们不得不和网管对着干，去想办法去穿越某些防火墙，访问到我们要访问的资源。例如下面的情况，A 和 C 之间是有个墙的，不通。可有个 B 能访问到 C，而 A 又能访问到 B ，那我们可以通过你 ssh 做代理穿越那个墙。&lt;/p&gt;&lt;p&gt;A -&amp;gt; | -&amp;gt; C&lt;br /&gt; \-&amp;gt; B -&amp;gt; C&lt;/p&gt;&lt;p&gt;在A 上面执行下面的命令&lt;/p&gt;&lt;p&gt;ssh -f -N -g -L 8888:C_ip:80 B_ip&lt;br /&gt;参数的含义：-f 放到后台&lt;br /&gt;-N 不在对方机器请求 shell&lt;br /&gt;-g 能使得别的机器能连接 A 的那个端口&lt;br /&gt;-L 就是代理，具体看 man &lt;/p&gt;&lt;p&gt;这样，在 A 上面访问 8888 端口，就能访问到 C 的 80 端口了。&lt;/p&gt;&lt;p&gt;那如果是下面的网络情况，那怎么办？A 能访问到 C，但是 C 不能直接访问 A。&lt;/p&gt;&lt;p&gt;A -&amp;gt; C&lt;br /&gt;C-&amp;gt; | -&amp;gt; A&lt;/p&gt;&lt;p&gt;在 A 上面执行下面的命令&lt;/p&gt;&lt;p&gt;ssh -f -N -R 9999:A_ip:80 C_ip&lt;br /&gt;-R 是反向代理, -g 在这里好像不好用不知道为什么&lt;/p&gt;&lt;p&gt;从 C 上面访问自己的 9999 端口，就会访问到 A 的 80 端口。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>怎么能知道旁边的一台没有显示器的 windows 的 ip 呢？</title>
      <link>https://wdicc.com/how-to-know-a-windows-boxs-ip-in-lan/</link>
      <pubDate>Wed, 20 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/how-to-know-a-windows-boxs-ip-in-lan/</guid>
      <description>
&lt;p&gt;我旁边有个 windows，是 dhcp 获取 ip 的，ip 总变，很恶心。这机器还没有显示器，我都是通过 rdesktop 连上去用的，这样必须知道 ip 才行。那不接显示器，怎么能知道 ip 呢？&lt;/p&gt;&lt;p&gt;方法一，写一个脚本定时把 ipconfig 的结果通过 scp 或 ftp 发到某个有固定 ip 的机器。这样 ip 变了我至少过那么久的间隔就能知道他目前的 ip 了。时间设的长短可能就是你等的时间了。&lt;/p&gt;&lt;p&gt;方法二，扫描一下局域网结果存到 a，给那个机器断网，再扫一下存到 b，diff 比较那个状态有变化的。我用的就是这个方法。&lt;/p&gt;&lt;p&gt;# nmap -PN 10.32.20.0/24 -p 3389 --open &amp;gt; a&lt;/p&gt;&lt;p&gt;要用 root 执行，此外还有别的方法没？呵呵&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>关于 scrum</title>
      <link>https://wdicc.com/about-scrum/</link>
      <pubDate>Mon, 18 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-scrum/</guid>
      <description>
&lt;p&gt;领悟了下 scrum，他倡导的有这些&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;需求提供和验收的人员是确定的一个人做为接口。&lt;/li&gt;&lt;li&gt;行政角色不直接干预 sprint team。避免 team 的工作受到干扰，影响 sprint 期间的任务的完成。&lt;/li&gt;&lt;li&gt;sprint team 在确认一个 sprint 内的工作后，需要专心把承诺的工作做完做好。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我觉得 scrum 好像是偏向工程师的，呵呵。开发过程中最头大的问题就是需求变更了，这个会带来很多的问题，这么说应该都同意吧。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而 scrunm 的目的是使得需求在一个 sprint 内至少是稳定的，sprint team 的目标在这期间也应该是明确的，不受干扰的。&lt;/p&gt;&lt;p&gt;同时他也鼓励 team 成员做自己喜欢的工作，公开透明，尽力把每个人的潜力都挖掘出来，快乐工作。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但有时候需求不得不变更，怎么办呢？&lt;/p&gt;&lt;p&gt;我觉得如果 sprint team 判断变更不大，那就继续目前的 sprint 。如果需要变化太大，那就重新进行 sprint，我们就应该重新定一个 &lt;/p&gt;&lt;p&gt;sprint backlog，重新开始我们的 sprint。这个权力应该是交给 sprint team 的所有人来决定，而不是某个人，因为最终工作是由 &lt;/p&gt;&lt;p&gt;sprint team 完成的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;要是需求总在不停的变，sprint team可以考虑群殴一下 proud owner 了吧（开个玩笑）&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>2009年的最后一天</title>
      <link>https://wdicc.com/2009/</link>
      <pubDate>Thu, 31 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/2009/</guid>
      <description>
&amp;#26368;&amp;#21518;&amp;#19968;&amp;#22825;&amp;#20102;&amp;#65292;&amp;#20284;&amp;#20046;&amp;#24212;&amp;#35813;&amp;#20889;&amp;#20010;&amp;#24635;&amp;#32467;&amp;#30340;&amp;#65292;&amp;#33293;&amp;#19981;&amp;#24471;&amp;#28909;&amp;#34987;&amp;#31389;&amp;#65292;&amp;#25163;&amp;#26426;&amp;#23558;&amp;#23601;&amp;#26469;&amp;#19968;&amp;#20010;&amp;#21543;&amp;#12290;&lt;br /&gt;

2009&amp;#24180;&amp;#24037;&amp;#20316;&amp;#19978;&amp;#38754;&amp;#22909;&amp;#20687;&amp;#27809;&amp;#20160;&amp;#20040;&amp;#22909;&amp;#35828;&amp;#30340;&amp;#65292;&amp;#21807;&amp;#19968;&amp;#30340;&amp;#36827;&amp;#27493;&amp;#21487;&amp;#33021;&amp;#36824;&amp;#26159;&amp;#20889;&amp;#31243;&amp;#24207;&amp;#22909;&amp;#20687;&amp;#26356;&amp;#29087;&amp;#20102;&amp;#28857;&amp;#20102;&amp;#65292;&amp;#20854;&amp;#23454;&amp;#20063;&amp;#23601;&amp;#26159;&amp;#35266;&amp;#25705;&amp;#20102;&amp;#19968;&amp;#20010;&amp;#39640;&amp;#25163;&amp;#30340;&amp;#31243;&amp;#24207;&amp;#65292;&amp;#26412;&amp;#36523;&amp;#38271;&amp;#36827;&amp;#36824;&amp;#26159;&amp;#19981;&amp;#22823;&amp;#12290;&lt;br /&gt;

&amp;#36890;&amp;#36807;&amp;#23545;&amp;#31038;&amp;#20250;&amp;#19978;&amp;#38754;&amp;#24694;&amp;#24515;&amp;#20107;&amp;#30340;&amp;#35266;&amp;#23519;&amp;#20102;&amp;#35299;&amp;#65292;&amp;#29616;&amp;#22312;&amp;#22909;&amp;#20687;&amp;#36234;&amp;#26469;&amp;#36234;&amp;#24868;&amp;#38738;&amp;#20102;&amp;#65292;&amp;#23545;&amp;#32463;&amp;#27982;&amp;#21644;&amp;#31038;&amp;#20250;&amp;#26041;&amp;#38754;&amp;#30340;&amp;#19996;&amp;#35199;&amp;#22909;&amp;#20687;&amp;#36234;&amp;#26469;&amp;#36234;&amp;#26377;&amp;#20852;&amp;#36259;&amp;#20102;&amp;#65292;&amp;#32769;&amp;#20102;&amp;#65311;&amp;#12290;&amp;#12290;&amp;#12290;&amp;#12290;&amp;#39034;&amp;#20415;&amp;#20877;&amp;#26174;&amp;#25670;&amp;#19968;&amp;#20010;&amp;#19978;&amp;#36807;&amp;#23398;&amp;#23601;&amp;#24212;&amp;#35813;&amp;#30693;&amp;#36947;&amp;#30340;&amp;#35789;&amp;ldquo;&amp;#22269;&amp;#23478;&amp;#22404;&amp;#26029;&amp;#36164;&amp;#26412;&amp;#20027;&amp;#20041;&amp;ldquo;&amp;#65292;&amp;#26377;&amp;#26102;&amp;#20505;&amp;#23601;&amp;#22312;&amp;#24819;&amp;#65292;&amp;#26159;&amp;#19981;&amp;#26159;&amp;#24212;&amp;#35813;&amp;#25226;&amp;#37027;&amp;#26412;&amp;#25919;&amp;#27835;&amp;#20070;&amp;#32763;&amp;#20986;&amp;#26469;&amp;#20877;&amp;#30475;&amp;#30475;&amp;#21602;&amp;#65311;&amp;#36164;&amp;#26412;&amp;#35770;&amp;#19981;&amp;#30693;&amp;#36947;&amp;#29616;&amp;#22312;&amp;#36807;&amp;#26399;&amp;#19981;&amp;#12290;&amp;#12290;&amp;#12290;&amp;#20102;&amp;#35299;&amp;#37027;&amp;#20123;&amp;#20498;&amp;#19981;&amp;#19968;&amp;#23450;&amp;#26159;&amp;#21435;&amp;#24403;&amp;#20154;&amp;#22823;&amp;#20195;&amp;#34920;&amp;#65292;&amp;#21482;&amp;#26159;&amp;#33021;&amp;#35753;&amp;#33258;&amp;#24049;&amp;#33021;&amp;#25226;&amp;#36825;&amp;#20010;&amp;#31038;&amp;#20250;&amp;#36825;&amp;#20010;&amp;#22269;&amp;#23478;&amp;#30475;&amp;#30340;&amp;#26356;&amp;#21152;&amp;#36879;&amp;#24443;&amp;#19968;&amp;#28857;&amp;#12290;&amp;#19981;&amp;#36807;&amp;#35805;&amp;#35828;&amp;#22238;&amp;#26469;&amp;#65292;&amp;#20154;&amp;#22823;&amp;#20195;&amp;#34920;&amp;#20160;&amp;#20040;&amp;#26102;&amp;#20505;&amp;#25165;&amp;#21487;&amp;#20197;&amp;#28023;&amp;#36873;&amp;#21602;&amp;#65311;&amp;#12290;&amp;#12290;&amp;#12290;&amp;#12290;&lt;br /&gt;

2010&amp;#24180;&amp;#30340;&amp;#22836;&amp;#19968;&amp;#26729;&amp;#22909;&amp;#20687;&amp;#23601;&amp;#26159;&amp;#25226;&amp;#36335;&amp;#32771;&amp;#36807;&amp;#20102;&amp;#65292;&amp;#24212;&amp;#35813;&amp;#24180;&amp;#21069;&amp;#23601;&amp;#33021;&amp;#25630;&amp;#23450;&amp;#20102;&amp;#21543;&amp;#12290;&amp;#37027;&amp;#25384;&amp;#30528;&amp;#30340;&amp;#23601;&amp;#26159;&amp;#24324;&amp;#20010;&amp;#36710;&amp;#24320;&amp;#19968;&amp;#36255;&amp;#33258;&amp;#39550;&amp;#28216;&amp;#12290;&amp;#24320;&amp;#28304;&amp;#19978;&amp;#38754;&amp;#24076;&amp;#26395;&amp;#33021;&amp;#36129;&amp;#29486;&amp;#26356;&amp;#22810;&amp;#65292;&amp;#22810;&amp;#23398;&amp;#23398;&amp;#33521;&amp;#35821;&amp;#65292;&amp;#20570;&amp;#20570;&amp;#32763;&amp;#35793;&amp;#65292;&amp;#21548;&amp;#21147;&amp;#21644;&amp;#21475;&amp;#35821;&amp;#33021;&amp;#36798;&amp;#21040;&amp;#21644;&amp;#20154;&amp;#20132;&amp;#27969;&amp;#23601;&amp;#22909;&amp;#20102;&amp;#65292;&amp;#35805;&amp;#35828;&amp;#65292;&amp;#26159;&amp;#19981;&amp;#26159;&amp;#24212;&amp;#35813;&amp;#25253;&amp;#20010;&amp;#29677;&amp;#21602;&amp;#65311;&amp;#12290;&amp;#12290;&amp;#12290;&lt;br /&gt;

&amp;#34429;&amp;#28982;&amp;#26159;&amp;#20840;&amp;#38190;&amp;#30424;&amp;#65292;&amp;#25171;&amp;#23383;&amp;#20854;&amp;#23454;&amp;#36824;&amp;#26159;&amp;#27809;&amp;#30005;&amp;#33041;&amp;#29245;&amp;#65292;&amp;#21621;&amp;#21621;&amp;#12290;&lt;br /&gt;

</description>
    </item>
    
    <item>
      <title>NB 的 ssh proxycommand</title>
      <link>https://wdicc.com/cow-ssh-proxycommand/</link>
      <pubDate>Wed, 09 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cow-ssh-proxycommand/</guid>
      <description>
是从水木上面学来的。还参考了&lt;a href=&#34;http://benno.id.au/blog/2006/06/08/ssh_proxy_command&#34;&gt;这个&lt;/a&gt;。&lt;br /&gt;

如果你工作的环境是下面这样的，那 ssh 的 proxycommand 对你会很有用。&lt;br /&gt;

your pc -&gt; gw server -&gt; work server&lt;br /&gt;

一般公司的服务器的网络都会设置安全级别，防止出现安全问题。那个 gw 也叫跳板机。需要在 gw 机器上面有 nc 。&lt;br /&gt;

修改 .ssh/config 文件，加上 &lt;br /&gt;
Host gw&lt;br /&gt;
  Hostname gw.abc.com&lt;br /&gt;

Host work&lt;br /&gt;
  Hostname work.abc.com&lt;br /&gt;
  User wd&lt;br /&gt;
  ProxyCommand ssh gw nc -q 0 %h %p 2&gt;/dev/null&lt;br /&gt;

这样直接 ssh work 就好了。&lt;br /&gt;

那个 -q 0 可能有些版本的 nc 不支持。去掉就好了。那个 %h 表示 hostname，那个 %p 表示 port，可以直接写死。其它的 man ssh_config 吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>昨天和 sssslang 和 xwl 聚了个会</title>
      <link>https://wdicc.com/party-with-sssslang-and-xwl/</link>
      <pubDate>Sun, 29 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/party-with-sssslang-and-xwl/</guid>
      <description>
和 sssslang 倒是很早就见面来着，好像是他那会刚回北京？聊了聊 linux 相关的东西，呵呵。&lt;br /&gt;

说起来 linux 用户也挺郁闷的，平时旁边没几个用的，就算是用的，好像也都是 ubuntu 用户，基本就是当 windows 用的，很少主动去挖掘 linux 的一些东西，这些用户比较务实，主要还是在工作方面，开发的东西也都是工作相关的，比较少去做一些无聊的开发。。。所以和他们好像也没什么好聊的。&lt;br /&gt;

前两天 #emacs-cn 的 xwl 提议聚会，大家一拍即合，呵呵，定了时间地点，那就聚一个。 :D&lt;br /&gt;

聊的东西基本围绕在 emacs， linux， mac 上面。最主要的是 xwl 秀了下他的小黑 macbook 和他的 emacs，sssslang 倒是很详细的问了下 xwl 用的 elisp 扩展，可我对那些不是很明白，我觉得 elisp 就是一个变态的语言。。。对我来说，还记得的可能有下面几个吧。&lt;br /&gt;

1 他的 emacs 的标题会显示宋词，会定时变化。&lt;br /&gt;
2 有个渐变的扩展，叫做 highlight tail 的，很 cool 吸引小 mm 的必备啊，呵呵。&lt;br /&gt;
3 他用了很多定时器，比如执行完编译后，会 split 出来一个新的窗口显示一些编译信息，如果没有错误，那等 3 秒，这个窗口就会自动关掉。还有 1 里面说的那个，也是定时器弄的。&lt;br /&gt;
4 有个叫 woman 的东西不错。&lt;br /&gt;
5 xwl 和 sssslang 一直强调 ido 是个很不错的东西，不过我是不太明白的。呵呵。&lt;br /&gt;
6 xwl 设置打开文件默认就进只读，因为一般来说打开文件都是看看，同时也不可能写很多文件。只读后，还能设置很多单键的快捷键，比如 vim 里面的 hjkli 这些，这样让 emacs 变的有模式起来，我觉得很 cool。不过居然没有别人想到么？那应该有个 vimoper-mod 吧。。。&lt;br /&gt;
7 还有个用来画图的 graphviz 很 cool 的。&lt;br /&gt;

因为 xwl 用的是 mac，linux 也就是我和 ssslang 了，ssslang 没有本带，基本就是我秀了下我的 kde，openbox，conky 这些，好像也没别的了。&lt;del datetime=&#34;2009-11-29T06:17:37+00:00&#34;&gt;说到 linux 有个郁闷的，就是我没使用什么 networkmanager，wicd 之类，都是手动配置的 wpa_supplicant ，这样就需要知道 wifi 的 key 的类型什么的，没办法得到的话就只能猜，很不方便。人家 mac， windows， s60 都连上 wifi 上网了，我这还在猜 key 的类型。。。&lt;/del&gt; 刚发现，iwlist 实际是能显示 key 信息的。&lt;br /&gt;

mac 的效果还是很不错的，国内的很多 mac 用户真是白瞎了这个尤物了，装什么 windows。xwl 可真是 apple 的忠实 fans，花 200 块钱升级系统。。。&lt;br /&gt;

说了这么多，我感觉我很像是去打酱油的。。。&lt;br /&gt;

说实话 Starbuck 的咖啡好像也不怎么样。。。尤其一会就凉了。。很郁闷，不过回来和老婆说，老婆说：你个傻子，就不知道点一个冰的啊。。。是啊，我为什么没点一个冰的呢？。。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>ktorrent dht 不能用的问题</title>
      <link>https://wdicc.com/solved-ktorrent-dht-problem/</link>
      <pubDate>Sat, 31 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/solved-ktorrent-dht-problem/</guid>
      <description>
在国内，没有 dht 的 bt 客户端是混不下去的。&lt;br /&gt;

我一直就怀疑国内的 tracker 和那些国内的 bt 客户端是一个利益共同体，那些 tracker 根本就不让别的 client 连的。比如从 ydy 下的 heroes，里面三个 tracker 都是 btfans.3322.org 的，可全部都是 connection refused，虽然从 web 能看到这个这个 torrent 的种子很多，可是我这就是下不了。&lt;br /&gt;

这也是国内用户总抱怨 linux 下面的 bt 客户端下载速度慢，或者根本下不了的原因。因为他根本就不能从 tracker 获得信息。要不可以试试看从 mininova 下国外的 torrent，不过好像 thepiratebay 被 gfw 后，这些种子也不好下了。mininova 好多 torrent 的 tracker 是这个。不过好像可以找替代的 tracker 来替换。&lt;br /&gt;

一直以来就发现 ktorrent 的 dht 显示的 DHT: 0 nodes, 0 tasks。搜了后发现用户说的都是 ktorrent 2 的，都是 06 年的事情了。之前搜了好几次，都没有结果。&lt;br /&gt;

今天为了下 heroes，就又看了下。找到问题在哪里了。&lt;br /&gt;

可以去看看 ~/.kde4/share/apps/ktorrent/log 文件，我这里有个 dht bind faild 的错误。原因是设置里面的 network interface 选的是 all，改选一下实际使用的 eth0 就好了。再看看 log 是不是就没错误了？&lt;br /&gt;

然后找一个火热的种子下一个，dht 那应该有数了吧？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>KDE&#43;openbox 实在太赞了</title>
      <link>https://wdicc.com/kde-openbox-works-perfect/</link>
      <pubDate>Tue, 13 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/kde-openbox-works-perfect/</guid>
      <description>
好像我一闲了就总喜欢换de玩。。可能因为这个最花时间。。汗。。&lt;br /&gt;

第一次用 kde 还是过年的时候，那会是 kde 4.1? 好像是，那会还装了一个 kde live , 就是 svn 版的 kde，花了 n 多的时间。。。结果最后实在受不了 kde 的一些 bug，就换回 gnome 了。下面列几个我觉得不能忍的 bug（有些 bug 是在 dualhead 里面才有的）。&lt;br /&gt;
1 kconsole 的 tab title 截断居然是从前面开始的？emerge 的时候只能看到最后的几个字符。kconsole 里面居然还不能用 shift 增加选区，如果要选几个屏幕的东西，只能慢慢拖。&lt;br /&gt;
2 部分 gtk 程序(比如 roxterm)在 kde 里面最大化的时候居然下面还留一条？&lt;br /&gt;
3 我想在最上面加一条监控信息，开始试着用 conky, 发现不能控制不让别的程序不复盖他，让他一直显示。那就加了一条 panel，写了一个 applet 来监控。结果发现经常出现正常重启之后，上面的 panel 没了，下面的 panel 做的调整也没了。回复到了最初的状态。日啊。&lt;br /&gt;
4 pidgin 什么的，有时候一些程序不能用快捷键弄到前台。好像有最大化窗口的时候容易出现。&lt;br /&gt;
5 还没想起来，不过上面那几个已经让我不能忍了。&lt;br /&gt;

kde 换了 gnome 之后用了一段时候，又换用了一下 kde 4.2 好像还是不习惯，直接就换用 openbox+tint2 了。一直到前几天又闲了。。&lt;br /&gt;

openbox + tint2 其实也挺好用的，自定义性很强。可有点郁闷的是，他倒底不是 DE，我就懒的去弄那个 ivman ... &lt;br /&gt;

还好有 kde+openbox.用了 openbox 后，上面说的 1,2,3,4 都没问题了。term 用 roxterm , 监控用 conky， 不是一般的爽。&lt;br /&gt;

之前 openbox 有个 bug，http://bugzilla.icculus.org/show_bug.cgi?id=3792 和 &lt;br /&gt;
http://bugzilla.icculus.org/show_bug.cgi?id=3773 ，那个 patch 可以用。所以现在 kde+openbox 不是一般的爽啊。哈哈。&lt;br /&gt;

openbox 那么多的自定义功能，还有 kde 强大的 DE 功能。现在我的桌面如下&lt;br /&gt;
&lt;img src=&#34;http://paste.ubuntu.org.cn/i45608&#34; alt=&#34;dekstop&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>kernel 2.6.31 给 radeon 用上 kms</title>
      <link>https://wdicc.com/radeon-kms-in-kernel-2-6-31/</link>
      <pubDate>Sun, 13 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/radeon-kms-in-kernel-2-6-31/</guid>
      <description>
intel 显卡用户享受 gem 已经很久了，kernel 2.6.31 总算给 ati 卡的用户带来了福音。&lt;br /&gt;

首先得在 kernel 里面打开相关的选项&lt;br /&gt;
Generic Driver Options --&gt; Graphics support --&gt; 这下面 dri 相关的和几个 fb 相关的，看着选吧。&lt;br /&gt;
Staging drivers --&gt; 取消Exclude Staging drivers from being built --&gt; Enable modesetting on radeon by default&lt;br /&gt;

编好后重启下，然后看看 dmesg |grep -i drm 看看，有下面这行就好了。&lt;br /&gt;
[drm] Initialized radeon 2.0.0 20080528 for 0000:01:00.0 on minor 0&lt;br /&gt;

然后再看看 /var/log/Xorg.0.log ，有没有这个，这个应该表示相关的 x 软件还没有支持。&lt;br /&gt;
(EE) RADEON(0): [dri] RADEONDRIGetVersion failed because of a version mismatch.&lt;br /&gt;
[dri] radeon kernel module version is 2.0.0 but version 1.17.0 or newer is needed.&lt;br /&gt;
[dri] Disabling DRI.&lt;br /&gt;

$ glxinfo |grep -i render&lt;br /&gt;
direct rendering: Yes&lt;br /&gt;
OpenGL renderer string: Software Rasterizer&lt;br /&gt;

接下来就升级几个包的 9999 版本，这几个 ebuild 在 x11 overlay 里面有&lt;br /&gt;
# x11-drivers/xf86-video-ati-9999&lt;br /&gt;
# media-libs/mesa-9999&lt;br /&gt;
# x11-libs/libdrm-9999 &lt;br /&gt;

装好后，重启下 x ，看看上面那几个信息。/var/log/Xorg.0.log 里面应该有 KMS 相关的信息了，glxinfo 如下&lt;br /&gt;
$ glxinfo |grep -i render&lt;br /&gt;
direct rendering: Yes&lt;br /&gt;
OpenGL renderer string: Mesa DRI R300 (RV380 5460) 20090101 x86/MMX/SSE2 TCL DRI2&lt;br /&gt;


好，o 了。不过我怎么觉得窗口切换好像没那么流畅了？。。。等会看看，不行还得换回去。。。汗。。。&lt;br /&gt;
update:  找到一个 bug url , 不知道是不是一样的 http://bugs.freedesktop.org/show_bug.cgi?id=23085 不过里面说应该已经解决了才对。。xf86-video-ati 我用的也是最新版的呀&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>gentoo 里面字体</title>
      <link>https://wdicc.com/fonts-in-gentoo/</link>
      <pubDate>Mon, 31 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/fonts-in-gentoo/</guid>
      <description>
ubuntu 做了一个好事，给好几个包打了个补丁，让字体效果达到了空前的好效果。在 gentoo 里面也可以用这几个补丁。&lt;br /&gt;

这几个包是下面这几个。在 devnull 这个 overlay 里面有打了补丁的包，版本更新也能跟得上 portage ，建议直接加这个 overlay。&lt;br /&gt;
media-libs/fontconfig&lt;br /&gt;
media-libs/freetype&lt;br /&gt;
x11-libs/libXft&lt;br /&gt;
x11-libs/cairo&lt;br /&gt;

加了 devnull overlay 后，加一个全局的 ubuntu 的 use（或许再加一个-cleartype 的use, 这两个 use 是互相冲突的，效果好像差不多）。&lt;br /&gt;

然后重新 emerge 那几个包，要注意看装的是不是都是 overlay 里面的。&lt;br /&gt;

装好后，执行 eselect fontconfig list 看看，应该多了一些东东。&lt;br /&gt;
  [1]   10-antialias.conf *&lt;br /&gt;
  [2]   10-autohint.conf&lt;br /&gt;
  [3]   10-hinting.conf *&lt;br /&gt;
  [4]   10-hinting-full.conf&lt;br /&gt;
  [5]   10-hinting-medium.conf *&lt;br /&gt;
  [6]   10-hinting-slight.conf&lt;br /&gt;
  [7]   10-no-sub-pixel.conf&lt;br /&gt;
  [8]   10-sub-pixel-bgr.conf&lt;br /&gt;
  [9]   10-sub-pixel-rgb.conf *&lt;br /&gt;
  [10]  10-sub-pixel-vbgr.conf&lt;br /&gt;
  [11]  10-sub-pixel-vrgb.conf&lt;br /&gt;
  [12]  10-unhinted.conf&lt;br /&gt;

最主要就这几个了吧，看看那个 *，按照这个选了，然后程序启动一下 fx 看看效果。&lt;br /&gt;
&lt;del datetime=&#34;2009-11-29T15:06:28+00:00&#34;&gt;那个 10-hinting-* 可以试试看 full 和 slight，看喜欢哪种效果了。&lt;/del&gt; 见鬼了，今天又发现字体好像不怎么好看了，然后折腾了会，发现用 autohint 的效果是最好的。。。晕了。。 2008-11-29.&lt;br /&gt;

这样设置好之后，就不需要在 local.conf 里面设置相关的了。我的 local.conf 里面只是修改了一下 sans sans-serif 等的排序。对了我用的是雅黑+consolas ，效果大概就是这个吧 http://twitpic.com/7dg2q 。抓这个图后好像还改了些东西，还是有些变化的。&lt;br /&gt;

建议还是用这个 eselect 来调整字体吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>post use my g1</title>
      <link>https://wdicc.com/post-use-my-g1/</link>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/post-use-my-g1/</guid>
      <description>
好像还是不错的 呵呵&lt;br /&gt;

信&lt;strong&gt;春哥&lt;/strong&gt;&lt;br /&gt;

&lt;blockquote&gt;得永生&lt;/blockquote&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 pdnsd 来缓存 dns</title>
      <link>https://wdicc.com/use-pdnsd-cache-you-dns-record/</link>
      <pubDate>Tue, 28 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-pdnsd-cache-you-dns-record/</guid>
      <description>
如果你的网络实在很快，好像也没这个必要。当然我用他还有一个目的就是我的 dns 我做主，省的被劫持。&lt;br /&gt;

打开一个网页有时候 dns 查询就占了一些时间，如果想把这个时间也节省下来，那可以试试看这个。类似的软件还有 dnsmasq，我觉得 dnsmasq 没 pdnsd 灵活一点，反正基本的缓存功能肯定是都有的。。。我这还有同事用 bind 做缓存，呵呵，选什么看各自喜好了。&lt;br /&gt;

我用的 wicd, 他会修改 /etc/resolv.conf 这个文件，就算在他的设置里面设置了全局 dns 也没用。不过还好他提供了一个 /etc/resolv.conf.head 文件。这个文件里面的东西会被放到 /etc/resolv.conf 的开头。所以我在那里面写上了 nameserver 127.0.0.1。&lt;br /&gt;

具体到 pdns 的设置，好像我也没改什么。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;
server {
	label = &#34;opendns&#34;;
	ip = 202.181.224.2, 202.181.202.140;
	#ip = 208.67.222.222, 208.67.220.220;
#	reject = 208.69.32.0/24,  # You may need to add additional address ranges
#	         208.69.34.0/24,  # here if the addresses of their search engines
#	         208.67.219.0/24; # change.
	reject_policy = fail;     # If you do not provide any alternative server
	                          # sections, like the following root-server
	                          # example, &#34;negate&#34; may be more appropriate here.
	timeout = 4;
	uptest = ping;            # Test availability using ICMP echo requests.
   ping_timeout = 100;       # ping test will time out after 10 seconds.
	interval = 15m;           # Test every 15 minutes.
	preset = off;
	policy=included;
	exclude=&#34;.abc.com&#34;;
}

server {
	label = &#34;yahoo&#34;;
	ip = 10.62.163.4, 10.62.163.9;
	timeout = 4;
	uptest = ping;
	ping_timeout = 100;
	interval = 15m;
}
&lt;/pre&gt;&lt;br /&gt;

我设置两个 server。第一个解析除了 .abc.com 之外的，第二个解析 .abc.com 。这个 abc.com 实际上是我们内网的一个地址，只能在内网 dns 解析。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>grub2 fbsplash in gentoo</title>
      <link>https://wdicc.com/grub2-fbsplash-in-gentoo/</link>
      <pubDate>Sat, 25 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/grub2-fbsplash-in-gentoo/</guid>
      <description>
http://v.youku.com/v_show/id_XMTA4MDAwMjI0.html&lt;br /&gt;

&lt;embed src=&#34;http://player.youku.com/player.php/sid/XMTA4MDAwMjI0/v.swf&#34; quality=&#34;high&#34; width=&#34;480&#34; height=&#34;400&#34; align=&#34;middle&#34; allowScriptAccess=&#34;sameDomain&#34; type=&#34;application/x-shockwave-flash&#34;&gt;&lt;/embed&gt;&lt;br /&gt;

具体方法参考下面的文章&lt;br /&gt;
&lt;li&gt;1 &lt;a href=&#39;http://wdicc.com/fbsplash-howto/&#39;&gt;给系统加上 fbsplash 支持&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;2 &lt;a href=&#39;http://wdicc.com/how-to-use-grub2/&#39;&gt;使用 grub2&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;

视频最后从 休眠 启动后，提示了一个 xtrlock 的错误，应该是刚进桌面就休眠引起的，正常情况应该是启动后会锁定屏幕。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给系统加上 fbsplash 支持</title>
      <link>https://wdicc.com/fbsplash-howto/</link>
      <pubDate>Sat, 25 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/fbsplash-howto/</guid>
      <description>
先贴几个参考文章。&lt;br /&gt;
&lt;li&gt;1 &lt;a href=&#34;http://forums.gentoo.org/viewtopic-t-728450-highlight-grub2.html&#34;&gt;HOWTO: Fancy Grub and fbsplash on a machine with Intel graphic chipsets&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;2 &lt;a href=&#34;http://www.gentoo-wiki.info/Fbsplash&#34;&gt;Fbsplash&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;br /&gt;
这两个文章里面最重要是那些内核选项的支持，弄好了那些才有下面的内容。里面有个要注意的是 General Setup ---&gt; Initial RAM filesystem and RAM disk (initramfs/initrd) support ---&gt; Built-in initramfs compression mode 这个选项，好像是从 2.6.30 出来的。这个压缩模式选的是什么，关系到后面的工作。&lt;br /&gt;

安装 splashutils[fbcondecor] 和 media-gfx/splash-themes-gentoo 或 media-gfx/splash-themes-livecd 这两个都是提供一些 theme，在 /etc/splash 目录下面。&lt;br /&gt;

我的 kernel 没有 initrd 文件，是编译到内核的，所以这么做。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
cd /usr/src/linux &amp;&amp; make &amp;&amp; make install # recompile kernel, this is my way
&lt;/pre&gt;&lt;br /&gt;

然后就是设置内核参数，下面是我的。那个 quiet 会让 kernel 不显示信息，如果你不想，那就去掉。&lt;br /&gt;
video=uvesafb:1024x768-32,mtrr:3,ywrap quiet splash=silent,theme:natural_gentoo console=tty1 fbcon=scrollback:64K&lt;br /&gt;

如果用的是 tuxonice 内核，那还可以给 sys-apps/tuxonice-userui 加上 fbsplash use，装好后会提示你 ln 一个 splash theme 为 tuxonice ，照做就是了。另外还需要在内核里面 Power management and ACPI options ---&gt; Enhanced Hibernation (TuxOnIce) ---&gt; Default userui program location 设置为 /sbin/tuxoniceui_fbsplash ，重编内核。。。&lt;br /&gt;

这么弄完之后会发现，休眠后再启动的时候会显示一个没找到 /sbin/tuoniceui_fbsplash 的错误，还有一些百分比，这些实际上不影响正常启动。不过好像有点影响美观。我琢磨了下，觉得那个错误可能是没有把那个文件弄到 initramfs 里面的缘故，弄进去之后果然没了，不过还是有那个百分比出来。&lt;br /&gt;

先 cp 一份这个文件 /usr/src/linux/usr/initramfs_data.cpio[看压缩设置] 到临时目录，file 看看属性，我的是 gzip 压缩的，那就解压一下。然后用 cpio 看下里面的文件。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$ file initramfs_data.cpio 
initramfs_data.cpio: gzip compressed data, was &#34;initramfs_data.cpio&#34;, from Unix, last modified: Sat Jul 25 19:26:29 2009
$ mv initramfs_data.cpio initramfs_data.cpio.gz
$ gzip -d initramfs_data.cpio.gz 
$ file initramfs_data.cpio 
initramfs_data.cpio: ASCII cpio archive (SVR4 with no CRC)
$ cpio --list &lt; initramfs_data.cpio
.
lib
lib/splash
lib/splash/sys
lib/splash/proc
sbin
sbin/v86d
sbin/fbcondecor_helper
sbin/splash_helper
root
dev
dev/mem
dev/tty1
dev/fb
dev/tty0
dev/zero
dev/misc
dev/null
dev/vc
dev/console
etc
etc/splash
etc/splash/luxisri.ttf
etc/splash/natural_gentoo
etc/splash/natural_gentoo/1024x768.cfg
etc/splash/natural_gentoo/images
etc/splash/natural_gentoo/images/silent-1024x768.jpg
etc/splash/natural_gentoo/images/verbose-1024x768.jpg
xxx blocks
$ cat f
sbin/tuxoniceui_fbsplash
$ ls sbin
tuxoniceui_fbsplash
$ cpio -ov --format=newc -A -O initramfs_data.cpio &lt; f
sbin/tuxoniceui_fbsplash
xxx blocks
$ gzip -c initramfs_data.cpio initramfs_data.cpio.gz
$ mv initramfs_data.cpio.gz /usr/src/linux/usr/initramfs_data.cpio
&lt;/pre&gt;&lt;br /&gt;

ok， 这里你可以再看看文件里面的东西。没问题就可以复制过去了，要注意压缩格式。&lt;br /&gt;

回头录一个视频放上来玩玩，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 grub2</title>
      <link>https://wdicc.com/how-to-use-grub2/</link>
      <pubDate>Fri, 24 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/how-to-use-grub2/</guid>
      <description>
看到 ub 要默认用 grub2 了，看来这个东西够稳定了，就折腾了下。过程还有点头大，呵呵。这个东西最大的问题就是文档怎么那么少？。。。&lt;br /&gt;

国内的大都是抄的 &lt;a href=&#39;http://linuxtoy.org/archives/grub-2-installation-and-configuration.html&#39;&gt;这个&lt;/a&gt; ，里面不知道为什么没有排版，那个样例用的是 debian，我用的 gentoo，有点小区别。&lt;br /&gt;

gentoo 里面先 keyword unmask grub 1.96，然后安装他。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;echo &#34;=sys-boot/grub-1.96 **&#34;&gt;

安装之后，先重新生成 device.map。然后执行 update-grub 生成 grub 的一些配置文件，这个生成是根据的 /etc/grub.d 下面的文件，如果有兴趣可以去配置，我反正没配置，我手动修改的配置文件。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
sudo update-grub # 不是必须，可以手动生成配置文件&lt;/pre&gt;

现在去看看 /boot/grub/grub.cfg 文件，里面应该会根据你的系统生成了一些东西。再改巴改巴，下面是我的。对了这个文件是只读的，改一下属性就好了。
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;
set default=0
set timeout=5
set root=(hd0,1)

insmod terminal
insmod gfxterm
insmod vbe
insmod font
insmod png

font /boot/grub/unifont.pff
set gfxmode=1024x768
terminal gfxterm

set menu_color_normal=white/black
set menu_color_highlight=white/dark-gray

#background_image /boot/grub/bg.tga
background_image /boot/grub/dev2.png


### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/10_hurd ###
### END /etc/grub.d/10_hurd ###

### BEGIN /etc/grub.d/10_linux ###
menuentry &#34;无敌Gentoo&#34; {
	linux	/vmlinuz root=/dev/hda5 ro video=uvesafb:1024x768-32,mtrr:3,ywrap
}

menuentry &#34;Gentoo (old kernel)&#34; {
	linux /vmlinuz-old root=/dev/hda5 ro video=uvesafb:1024x768-32,mtrr:3,ywrap
}

menuentry &#34;测试JPEG背景图片&#34; {
  background_image /boot/grub/dev.tga
}


#title		Gentoo bootchartd
#root		(hd0,0)
#kernel		/vmlinuz root=/dev/hda5 video=uvesafb:1024x768-32,mtrr:3,ywrap init=/sbin/bootchartd
#savedefault
#
#
#title		Gentoo (rescue)
#root		(hd0,0)
#kernel		/vmlinuz root=/dev/hda5 init=/bin/bb
#savedefault
&lt;/pre&gt;&lt;br /&gt;

注意后面两个注释，其实就是老的 grub 用的，对照一下就应该知道怎么改了。原来的 hd0,0 变成了 hd0,1 ，这个是需要注意的。&lt;br /&gt;

那个背景图片是有要求的，我的用 file 查看是这样的 &#34;dev.png: PNG image, 800 x 600, 8-bit/color RGBA, non-interlaced&#34;，具体对 png jpg tga 的要求，还是去看 &lt;a href=&#34;http://grub.enbug.org/FranklinPiat/grub.cfg.manpage&#34;&gt;man&lt;/a&gt; 吧。我试了 tga 文件，好像有点慢，我那个 png 速度还行。&lt;br /&gt;

那个 font 是从 &lt;a href=&#34;http://grub4dos.sourceforge.net/grub2/unifont.pff&#34;&gt;这里&lt;/a&gt; 下的，支持中文。&lt;br /&gt;

配置好之后执行 sudo grub-install /dev/hda 就安装好了，没什么错误的话就可以重启看效果了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>你在用什么方式翻墙？</title>
      <link>https://wdicc.com/best-way-to-fuck-gfw/</link>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/best-way-to-fuck-gfw/</guid>
      <description>
翻墙估计应该是上网的必修课了，当然那些 90 后就别说了，他们大概只上 *qq.com 就好了。&lt;br /&gt;

翻墙有不少方法，比如通过找公共的 vpn，用 tor，找一些 phpproxy 网站等。我这推荐一个比较好的方法，通过 &lt;a href=&#34;http://www.sshgfw.com/&#34;&gt;fuckgfw&lt;/a&gt; 提供的 ssh proxy，速度比 tor 快的不是一点半点。&lt;br /&gt;

我用的 linux，写了一个 expect 脚本来起代理服务，如下。里面的 USER 和  PWD 换成你申请到的用户名和密码。我把这个脚本命名叫 p, 放到了 ~/bin 下面，当然我的 ~/bin 是在 path 里面的，这样，执行一个 p 命令代理就自动起来了。用完的时候可以按 Ctrl-c 退出。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
#!/bin/bash

expect -c &#39;
spawn ssh -D 7070 -N USER@SERVER
expect {
	password { 
		send &#34;PWD\r&#34;;
	}
}

interact {
	\001 exit;
}&#39;
&lt;/pre&gt;&lt;br /&gt;

当然，我用到的不只这个脚本了，要不也没什么好写的了。(本来觉得自己写了挺好的一个文章，最后还是就 expect 脚本 + autoproxy，唉，丢人。)&lt;del datetime=&#34;2009-07-20T02:13:48+00:00&#34;&gt;还用到了一个 proxy.pac ，自动使用代理的配置。如下，把这个文件存成 proxy.pac, 然后在 firefox 的 编辑-&gt;首选项-&gt;高级-&gt;网络-&gt;设置-&gt;自动代理配置URL 这个里面输入 &#34;file:///home/wd/bin/proxy.pac&#34; ，这样，你连接某个网站的时候，他会自动的去判断是不是要用代理。这个文件是 linuxsir 的 狱卒 给我的。:)&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-javascript&#34;&gt;
function FindProxyForURL(url, host)
{
    url = url.toLowerCase();
    host = host.toLowerCase();
    if (dnsDomainIs(host,&#34;twitter.com&#34;)
        || dnsDomainIs(host,&#34;my.opera.com&#34;)
        || dnsDomainIs(host,&#34;hk.yahoo.com&#34;)
        || dnsDomainIs(host,&#34;tw.yahoo.com&#34;)
        || dnsDomainIs(host,&#34;livejournal.com&#34;)
        || dnsDomainIs(host,&#34;mitbbs.com&#34;)
        || dnsDomainIs(host,&#34;friendfeed.com&#34;)
        || dnsDomainIs(host,&#34;youtube.com&#34;)
        || dnsDomainIs(host,&#34;sshgfw.com&#34;)
        )
        return &#34;SOCKS 127.0.0.1:7070&#34;;
    else 
		return &#34;DIRECT&#34;;
}
&lt;/pre&gt;&lt;br /&gt;

这么做一个问题就是，如果你要新加某个网站进去，必须得重启 fx 才能生效。实际上 foxproxy 也可以配置使用 自动代理的，而且可以设置让他多长时间自动重载一下这个文件，算是智能一点了吧。不过我用 foxproxy 的时候发现，如果同时打开两个需要用到代理的网站，他会是一个一个打开的，不能同时，不知道是怎么回事。&lt;br /&gt;

我现在用的是 multiproxy swith ，这个可以设置 pac 文件，不过是不会自动重载。当然，重启这个事情也不是什么大问题，装一个 quickrestart ext，然后在 toolbar 上面加一个，点一下就重启了，再加上 fx 会 restore session ，也就是等几秒，就生效了。&lt;/del&gt;&lt;br /&gt;

再当然一个。如果觉得这个 pac 弄起来还是麻烦，那可以装一个 autoproxy，里面内置了一些列表，你只要设置一个 127.0.0.1:7070 的 socks 代理让他用就好了。哪个用 proxy 哪个不用是全自动的，不用你管。自己添加的列表也能即时生效。目前我用的这个，推荐一下哦。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>写了一个用来 mount smb 和 u 盘之类的程序</title>
      <link>https://wdicc.com/auto-mount-smb-and/</link>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/auto-mount-smb-and/</guid>
      <description>
主要是不用 gnome 了，访问 smb 和 mount u盘有点不爽，无聊就写了一个。&lt;br /&gt;

程序不是全自动的，是基于配置文件的。写好配置文件，然后执行这个程序。&lt;br /&gt;

配置文件类似下面的&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;
# type: u  | smb | cifs
#
#
-
 name: 匿名smb
 type: cifs
-
 name: cc
 type: cifs
 ip: 192.168.1.125
 opt: iocharset=utf8,codepage=cp936
-
 name: fileserver
 type: cifs
 ip: fileserver
 user: wd
 pwd: 1111
 opt: iocharset=utf8,codepage=cp936
-
 name: g1
 type: u
 partitions: /dev/sda1, /dev/sda2
-
 name: u 盘
 type: u
 partitions: /dev/sda1
&lt;/pre&gt;&lt;br /&gt;

配置文件按 - 分段，这个文件是 yaml 格式的。这个程序得用到 dev-perl/yaml 。&lt;br /&gt;

程序在&lt;a href=&#34;http://github.com/wd/work/tree/91aa2432660a175ae486493e3a6f6edfb8ef787e/automount&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

本来之前在程序里面是有 umount 的，结果因为 umount 没成功，把我手机卡上面的东西都干掉了。。。所以还是保险一点，不加 umount 了，手动来吧。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>聪明的老婆</title>
      <link>https://wdicc.com/clever-cc/</link>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/clever-cc/</guid>
      <description>
呃，今天好像疯牛病了，怎么一下更新了好几篇呢？。。。&lt;br /&gt;

不得不说，老婆聪明没用在正道上。玩游戏那叫一个牛。昨天手机上面装了一个游戏，是一屏幕小球球，要消掉那种。我玩了会，弄出来一次把球全消了，260 多分，乐呵呵的给她看，让她玩玩，她要是玩不到，就可以取笑她了，嘿嘿。&lt;br /&gt;

结果一会还给我了，人家弄了一个 600 多记录出来。。。。这还让不让人活了。。&lt;br /&gt;

想起来之前用 palm 650 的时候，里面也有一个类似的游戏，排名前五都是他的名字，我都上不去那个榜。。。&lt;br /&gt;

还有玩 qq 那个龙珠，其实就是类似 zuma 那个游戏。他居然学会了那个自己布局，然后一次全消掉那个方法。我反正是不会弄那个。。。&lt;br /&gt;

好多次都是，我找到一个好玩的游戏，教给她怎么玩，然后过几天我就拍马也赶不上了。唉。。。可没劲了&lt;br /&gt;

另外，不得不补充一下，其它地方她怎么总表现的那个猪呢？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>清理 firefox places.sqlite 来提速</title>
      <link>https://wdicc.com/clean-places-sqlite/</link>
      <pubDate>Sat, 18 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/clean-places-sqlite/</guid>
      <description>
来自这里 http://forum.moztw.org/viewtopic.php?t=26802&lt;br /&gt;

使用前先备份，后悔了还能弄回去。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
sqlite3 places.sqlite &#34;DELETE FROM moz_historyvisits WHERE place_id IN (SELECT id FROM moz_places WHERE visit_count &lt;=2 );&#34;

sqlite3 places.sqlite &#34;DELETE FROM moz_places WHERE (visit_count &lt;=2 AND hidden &lt;&gt; 1 AND id NOT IN (SELECT place_id FROM moz_annos UNION SELECT fk FROM moz_bookmarks));&#34;

sqlite3 places.sqlite &#34;DELETE FROM moz_inputhistory WHERE place_id NOT IN (SELECT id FROM moz_places);&#34;

sqlite3 places.sqlite &#34;DELETE FROM moz_favicons WHERE id NOT IN (SELECT
favicon_id FROM moz_places);&#34;

sqlite3 places.sqlite &#34;VACUUM;&#34;
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>把 emacs 做为 python ide</title>
      <link>https://wdicc.com/use-emacs-as-python-ide/</link>
      <pubDate>Mon, 13 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-emacs-as-python-ide/</guid>
      <description>
emacs 用的其实不是很多，不过他实在是个好东西，各种 mode，用熟了肯定能帮你提升不少工作速度。&lt;br /&gt;

我用 emacs-cvs , ropemacs( dev 版， &gt; 0.6 ）, rope ( &gt; 0.9.2 ), company-mode ( &gt; 0.4.2 ) 这几个软件在 gentoo  里面都还没有，我自己写了几个 ebuild。&lt;br /&gt;

装好之后，基本就是 require 一下就好，我没做什么设置，效果如下。&lt;br /&gt;

&lt;a href=&#34;http://twitpic.com/a70je&#34;&gt;here&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>改良的 fetion.py</title>
      <link>https://wdicc.com/modified-fetion-py/</link>
      <pubDate>Mon, 06 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/modified-fetion-py/</guid>
      <description>
这个 fetion.py 来自 &lt;a href=&#34;http://blog.lazytech.info/2008/11/05/python-fetion/&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

不修改的情况下，-t 可以是 sip, uid, mobile_no 这几个。&lt;br /&gt;

我修改了下，不加 -t 参数会打印联系人列表。另外还能用 nickname 来发（没测试，我没几个好友，没好意思发）。&lt;br /&gt;

在&lt;a href=&#34;http://github.com/wd/work/tree/aa559b6b3ee1c15ccfcbf9ce45d1f7aa2208b953/fetion_py&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我日 tmd 绿爸</title>
      <link>https://wdicc.com/fuck-lvb/</link>
      <pubDate>Thu, 25 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/fuck-lvb/</guid>
      <description>
操，你干掉别的也就好了，妈了个b的，把 google.com 干掉了&lt;br /&gt;

操相关部门，日&lt;br /&gt;

现在用 opendns 能通&lt;br /&gt;
nameserver 208.67.222.222&lt;br /&gt;
nameserver 208.67.220.220&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>&#39;/svn&#39;: 301 Moved Permanently</title>
      <link>https://wdicc.com/svn-301-moved-permanently/</link>
      <pubDate>Mon, 22 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/svn-301-moved-permanently/</guid>
      <description>
今天搭了一个svn，遇到了这个问题，这个问题在 subversion 的 &lt;a href=&#34;http://subversion.tigris.org/faq.html#301-error&#34;&gt;FAQ&lt;/a&gt; 里面就有。不过看了半天没弄明白怎么回事，呵呵。后来糊里糊涂弄好了，也没明白。刚才突然明白了。。。&lt;br /&gt;

比如你的 documentroot 指向了 /www 下面， 而你的 svn 的 path 设置到了 /www/svn 下面，就会出这个问题。因为，用户如果访问的是 /www/svn/proj1 的时候，那应该是按照一个正常的目录处理呢，还是按照 svn 的一个项目处理呢？这可是不同的，因为如果是一个 svn 项目，那就交给 dav-svn 处理的，按照其它svn 项目一样，会显示这个项目的 reversion 什么的。但是如果是按照目录处理，那就交给了 apache 处理，他会在这里面找 directory index 等一些操作。这就会让 apache 很困惑。&lt;br /&gt;

解决的办法也比较简单，就是在 /www 下面不要出现你的 svn 的名字，也就是说，把你的 /www/svn 弄到 /www 之外去。这就没问题了。当然，如果哪天某个哥们无心的在 /www 下面建了一个 svn 文件夹，那这个又会出现，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>升级系统杂记一篇</title>
      <link>https://wdicc.com/upgrade-system-and-something-else/</link>
      <pubDate>Sun, 21 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/upgrade-system-and-something-else/</guid>
      <description>
受不了 kde 窗口管理器的问题，前段时间把系统切换到了 openbox。kde 的 kwin 下面，窗口总有点问题，比如 pidgin 里面设置了提取消息的快捷键，可就是不好用。比如有时候新开的窗口就不在最上面，还比如有些 gtk 程序最大化之后偏偏就不是最大的，上面还是下面来着有一条。另外 kwin 对 dual head 支持感觉也不爽。&lt;br /&gt;

kde 不用了，也懒得切回 gnome 了，就试试看 openbox 吧。目前已经用了一段时间的 ob 了，感觉还行。下面是用到的一些程序列表。&lt;br /&gt;

&lt;strong&gt;firefox&lt;/strong&gt; 目前升级到了 3.5rc1，感觉不错，建议都升级一个，在 mozilla overlay 里面有&lt;br /&gt;

&lt;strong&gt;thunderbird&lt;/strong&gt; 也用了 3.0beta2。本来用 kmail 其实挺好用的，里面的快捷键我觉得非常好，比如 r 回复作者，a 回复所有人，l 回复 maillist，有点在 mutt 里面的感觉了。不过 kmail 在 openbox 下的表现不是很爽，而且还有 kde 一陀依赖，用了一段时间还是不用了吧。支持 thunderbird  3.0 的 lightning 插件还没找到。另外，因为 thunderbird 不像 kmai 能在 tray 呆着，就自己写了一个程序，类似 mail-notification 的功能一样，呆在 tray，有 mail 的话点一下就启动 thunderbird。&lt;br /&gt;

&lt;strong&gt;tint2&lt;/strong&gt; 这个支持透明，有 tray 支持，感觉挺好的。而且对 dual head 支持非常好，可以在不同的 moniter 显示不各自的 task，非常好。&lt;br /&gt;

&lt;strong&gt;fcitx&lt;/strong&gt; 我使用二笔输入法，这个目前用的是感觉最好的，虽然新版越做越二，但是旧版也足够用了，建议此软件用户没事就不要升级了，升级可能随时会导致你的配置文件里面的配置不起作用了。&lt;br /&gt;

&lt;strong&gt;roxterm&lt;/strong&gt; 这个 term 很像 gnome-terminal, gnome-terminal 是我用的非常爽的一个 term 了，尤其是加了去掉 close button 的 patch 之后。konsole 就别说了，我觉得他除了一些我用不到的功能外，比 gnome-terminal 差好多，不能 shift 连续选择文字，tab 标题会被切隔 etc，反正用的挺不爽的。roxterm 支持快捷键设置，颜色设置等一些比较实用的东西，还比较小。 Terminal, lxdeterminal 其实也比较小巧，不过功能设置上面什么的，我觉得都不如 roxterm 好。&lt;br /&gt;

&lt;strong&gt;xchat&lt;/strong&gt; 用过 konversation 之后，这个好像看起来就没那么好了，呵呵。不过，其实也还是不错的，现在不太喜欢用 term 下面的 irc client 了，还是 gui 的好，呵呵。 &lt;br /&gt;

&lt;strong&gt;stalonetray&lt;/strong&gt; 之前因为 tint2 的 tray 支持还有点问题，tint2 crash 之后就可能导致有 tray 的程序也挂掉。之前总调整 tint2 设置的时候这个问题很不爽。尝试之后，在  trayer， stalonetray 还有几个别的里面选了 stalonetray, 因为 trayer 不能很明确的设置 tray 的位置。用单独的 tray 程序也有问题，tray 多的时候，不能很好的安排好 tray 的位置。所以还是用 tint2 自带的算了。&lt;br /&gt;

上面几个软件使用中的几个吧，别的觉得没什么好说的，就不说了。这么一弄之后，执行了 depclean 之后，就是下面的壮观结果了，呵呵。&lt;br /&gt;

Packages installed: 984 &lt;br /&gt;
Packages in world: 147 &lt;br /&gt;
Packages in system: 51 &lt;br /&gt;
Required packages: 741 &lt;br /&gt;
Number to remove: 243&lt;br /&gt;

好像好几个星期没 clean 了。&lt;br /&gt;

今天升级到了 xorg 1.6 感觉 keyboard repeat delay 有点长，g 了下，原来用 xset 就可以搞定，不得不说这个很强大。之前换了一个鼠标后，发现新的鼠标的移动速度快了好多，也是用 set 搞定的。&lt;br /&gt;

xset m 1.5 1 # 设置鼠标速度&lt;br /&gt;
xset r rate 180  # keyboard repeat delay &lt;br /&gt;

这是早先抓的图。  http://twitpic.com/6w6ym&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>把 blog 迁移了一下</title>
      <link>https://wdicc.com/move-blog-to-an-other-isp/</link>
      <pubDate>Fri, 19 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/move-blog-to-an-other-isp/</guid>
      <description>
最早的时候是在自己管的服务器上面，离职后，就买了一个盘古的空间，那会好像是几十块钱买的，着实的便宜，不过便宜没好货啊，呵呵。后来慢的实在不行，刚好和一个朋友&lt;a href=&#34;http://bulaoge.com/?qiqiao&#34;&gt;七巧仔&lt;/a&gt;聊天，他和别人合买了一块空间，我就搬过去蹭到了前几天，好像也有一年多了，呵呵。&lt;br /&gt;

这几天他的空间也要到期了，这就犯愁挪哪里去。说不弄 blog 吧，有点想记的东西还不怎么方便，弄把还得花钱找这个，唉。&lt;br /&gt;

后来想起来我之前买的那个盘古空间那个哥们了。他后来不弄盘古了，变成了从国外买空间，然后回来再卖的策略。现在经营的也挺不错的。地址在这里 &lt;a href=&#34;http://wpchina.org/hosting/&#34;&gt;http://wpchina.org/hosting/&lt;/a&gt;，这里也提供 wordpress 的中文版。这两天用的感觉，速度还不错。希望后面不要变慢，呵呵。&lt;br /&gt;

如果谁有兴趣可以联系下，现在好像有个9折的优惠。最便宜的也就 60 一年。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>用 xelatex &#43; beamer 做幻灯片</title>
      <link>https://wdicc.com/create-slide-by-latex-beamer/</link>
      <pubDate>Thu, 11 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/create-slide-by-latex-beamer/</guid>
      <description>
&lt;p&gt;&lt;a href=&#34;http://wdicc.com/lyx-unicode-howto/&#34;&gt;这篇文章&lt;/a&gt;里面写了怎么实现 latex 中文混排，使用 beamer 是基于那个的，所以先把那个搞定。 &lt;br /&gt;

然后安装好 dev-tex/latex-beamer。 &lt;br /&gt;

下面是一个例子文件。&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
\documentclass{beamer}

\mode&lt;presentation&gt;
{
%   \usetheme[blue,noshadow]{Trondheim}
%   \usetheme[blue,minimal]{Trondheim}
%  \usetheme[blue,compress,numbers,nonav]{Trondheim}
%\usetheme[sand,compress,numbers,nonav,innovation]{Trondheim}
%\usetheme[sand,compress,numbers,nonav]{Trondheim}
\usetheme{Berlin}
%\usecolortheme{ntnuold}
\usefonttheme[onlymath]{serif}
\setbeamercovered{transparent}
% 上面这段是使用 beamer 的哪个theme, 具体看 beamer 自带的例子里面的效果吧
}

\usepackage{fontspec}
\newfontfamily\zhfont[BoldFont=Microsoft YaHei]{Microsoft YaHei} %设置中文
\newfontfamily\zhpunctfont{Microsoft YaHei} % 设置中文

\setmainfont{Consolas}           %这里设置英文衬线字体
\setmonofont{Consolas}                     %英文等宽字体
\setsansfont{Consolas}               %英文无衬线字体

\usepackage{zhspacing}
\zhspacing

\title{测试标题}
\author{wd}
\institute{XXX Inc.}
\date{\today}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

\begin{frame}
  \frametitle{摘要}
  \tableofcontents
\end{frame}

\section{What do we have}

\begin{frame}
	\frametitle{what do we have}
	\begin{itemize}[&lt;+-|alert@+&gt;]
		\item have 1
		\item have 2
		\item have 4
		\item .......
	\end{itemize}
\end{frame}

\section{what do we need}
\subsection{need}
\begin{frame}
	\frametitle{what do we need}
	sth...
	\begin{itemize}[&lt;+-|alert@+&gt;]
		\item 1
		\item 2
	\end{itemize} 
	\hfill \\
	else ?...
\end{frame}

\subsection{pic}
\begin{frame}
	\frametitle{pic}
	\centerline{\includegraphics[height=6cm]{xx.jpg}}\label{phb}
\end{frame}

\section{else}
\begin{frame}
    \frametitle{else}
	\begin{center}\Huge{?}\end{center}
\end{frame}

\end{document}
&lt;/pre&gt;&lt;br /&gt;

然后用 xelatex 编译两次， 两次的目的的出那个目录，编译一次没目录。下面是效果。贴同麻烦，还是上像册看吧。&lt;br /&gt;

&lt;a href=&#34;http://www.zooomr.com/photos/wd/7615829/&#34;&gt;http://www.zooomr.com/photos/wd/7615829/&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Twitter Updates for 2009-05-23</title>
      <link>https://wdicc.com/twitter-updates-for-2009-05-23/</link>
      <pubDate>Sat, 23 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/twitter-updates-for-2009-05-23/</guid>
      <description>
&lt;ul class=&#34;aktt_tweet_digest&#34;&gt;&lt;br /&gt;
	&lt;li&gt;@&lt;a href=&#34;http://twitter.com/oceanboo&#34;&gt;oceanboo&lt;/a&gt; ibus 不慢？。。。 &lt;a href=&#34;http://twitter.com/oceanboo/statuses/1891948226&#34;&gt;in reply to oceanboo&lt;/a&gt; &lt;a href=&#34;http://twitter.com/wd/statuses/1892672825&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;猫狗情未了 - &lt;a href=&#34;http://www.u148.net/article/7949.html&#34; rel=&#34;nofollow&#34;&gt;http://www.u148.net/article/7949.html&lt;/a&gt; &lt;a href=&#34;http://twitter.com/wd/statuses/1888570693&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;&lt;a href=&#34;http://tinyurl.com/ofk8j2&#34; rel=&#34;nofollow&#34;&gt;http://tinyurl.com/ofk8j2&lt;/a&gt; DNSPod称域名解析故障是私服惹祸 &lt;a href=&#34;http://twitter.com/wd/statuses/1888467730&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;br /&gt;
&lt;p class=&#34;aktt_credit&#34;&gt;Powered by &lt;a href=&#34;http://alexking.org/projects/wordpress&#34;&gt;Twitter Tools&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Twitter Updates for 2009-05-22</title>
      <link>https://wdicc.com/twitter-updates-for-2009-05-22/</link>
      <pubDate>Fri, 22 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/twitter-updates-for-2009-05-22/</guid>
      <description>
&lt;ul class=&#34;aktt_tweet_digest&#34;&gt;&lt;br /&gt;
	&lt;li&gt;&lt;a href=&#34;http://bit.ly/w3f7J&#34; rel=&#34;nofollow&#34;&gt;http://bit.ly/w3f7J&lt;/a&gt;&lt;br /&gt;
 猫咪的睡功 &lt;a href=&#34;http://twitter.com/wd/statuses/1878069706&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;名因打劫荷兰商船而被捕的索马里海盗近日表示愿意留在当地，即便是在监狱里服役也比回去过那种吃了上顿没下顿的好。荷兰法律专家同时提醒各国：警惕索马里海盗大面积自动投降，来欧洲监狱里吃闲饭 &lt;a href=&#34;http://twitter.com/wd/statuses/1878065052&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;@&lt;a href=&#34;http://twitter.com/yegle&#34;&gt;yegle&lt;/a&gt; twitter 有点贵，google 不想买 &lt;a href=&#34;http://twitter.com/yegle/statuses/1878028103&#34;&gt;in reply to yegle&lt;/a&gt; &lt;a href=&#34;http://twitter.com/wd/statuses/1878049797&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;&lt;a href=&#34;http://www.cnbeta.com/articles/84831.htm&#34; rel=&#34;nofollow&#34;&gt;http://www.cnbeta.com/articles/84831.htm&lt;/a&gt; 暴风长老, 请收了神通吧! &lt;a href=&#34;http://twitter.com/wd/statuses/1877453735&#34;&gt;#&lt;/a&gt;&lt;/li&gt;&lt;br /&gt;
&lt;/ul&gt;&lt;br /&gt;
&lt;p class=&#34;aktt_credit&#34;&gt;Powered by &lt;a href=&#34;http://alexking.org/projects/wordpress&#34;&gt;Twitter Tools&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>eclipse 对 jdk 1.4 的依赖</title>
      <link>https://wdicc.com/eclipse-depends-on-jdk-14/</link>
      <pubDate>Sat, 16 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/eclipse-depends-on-jdk-14/</guid>
      <description>
首先日一下 bilbo，不小心按了一下 ctrl+z，内容居然都丢了，nnd，刚才都写完了。&lt;br /&gt;

言归正传。之前想安装 eclipse 的时候，发现他依赖 jdk 1.4，就没装。这次又想装了，就试着找找看哪个依赖 jdk 1.4.下面就是找的过程。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
:%s/\(\d\)\s\+.*$/\1/g #去掉结尾的没用的东西
:%s#/\(.*\)\(-\d\)#/\1/\1\2#   #把路径弄好&lt;/pre&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;for l in $(cat ~/b);do echo &#34;######$l&#34;&gt;
下面是结果中的部分。第一个 ebuild 里面这种是不会有问题的。就是第二个造成的依赖 jdk 1.4，给他加一个 java5 的 use 的就好了。
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
DEPEND=&#34;&gt;=virtual/jdk-1.4
RDEPEND=&#34;&gt;=virtual/jre-1.4&#34;
######dev-java/tomcat-servlet-api/tomcat-servlet-api-5.5.27.ebuild
DEPEND=&#34;java5? ( &gt;=virtual/jdk-1.5 )
!java5? ( =virtual/jdk-1.4* )
RDEPEND=&#34;java5? ( &gt;=virtual/jdk-1.5 )
!java5? ( =virtual/jdk-1.4* )&#34;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>asm 和 python的扯淡 zz</title>
      <link>https://wdicc.com/asm-and-python/</link>
      <pubDate>Thu, 14 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/asm-and-python/</guid>
      <description>
&lt;p&gt;python: 兄弟，最近我手头紧，能借点不？&lt;br /&gt;&lt;br /&gt;asm: 行，不过怎么你以前不是过得还滋润的，怎么现在混这么差，&lt;br /&gt;&lt;br /&gt;python: 不知道啊，现在根本接不到什么项目，听说还有风声要收回我的开发资质。&lt;br /&gt;&lt;br /&gt;asm: 你要改变观念，才会有市场。&lt;br /&gt;&lt;br /&gt;python: 什么观念？&lt;br /&gt;&lt;br /&gt;asm: 现在流行的是软件的要有科学性&lt;br /&gt;&lt;br /&gt;python: 什么是软件的科学性？&lt;br /&gt;&lt;br /&gt;asm: 我自己也不清楚，不知道哪位大神定义的科学的软件就是要有bug，现在的人们认为软件不可能没有bug，&lt;br /&gt;否则就不是软件，所以bug越多越好，我就非常适合创造bug。搞好点三步一回头，搞不好一步三回头。&lt;br /&gt;&lt;br /&gt;python：我不行啊，我开发的东西bug相对少得很多。&lt;br /&gt;&lt;br /&gt;asm: 难怪别人不找你做项目。通常别人都认为软件这个东西啊就是通过不断消灭bug，不断创造bug，最终走&lt;br /&gt;向稳定成熟的。你bug要是少了，客户会认为你蒙它，不科学。&lt;br /&gt;&lt;br /&gt;python: 太阳啊，我设计出来就是为了减少软件开发少出bug的，这样不是要我的命？&lt;br /&gt;那你开发项目时候弄出那么多bug,进度不是很慢，成本也很高？客户能接受？&lt;br /&gt;&lt;br /&gt;asm: 这你不懂,这里的人就是人傻，钱多，你不这样干，他们还认为你是在蒙它，哪里有这么轻易就作出来的东西，&lt;br /&gt;我的特点就是能把简单的东西弄复杂，而你呢，把复杂的东西简单化，显然不受常人的欢迎，人都是好奇的动物，&lt;br /&gt;喜欢复杂的事情，越花花绿绿越好。你还不错了，看Lisp兄弟那惨样。&lt;br /&gt;&lt;br /&gt;python: 那项目要是复杂了，规模大了你能应付？&lt;br /&gt;&lt;br /&gt;asm: 管他，我也知道我对付不了大规模的项目，用人堆，人月算得高高的，到那个程度，我自己也糊涂了，&lt;br /&gt;不知道要怎么整合了，bug比太平洋里头的珊瑚虫还多，根本做不下去。就给客户说目前技术水平只能达到&lt;br /&gt;这个程度就行了，他们能接受，能将就用就用，不能用就宣告失败。&lt;br /&gt;&lt;br /&gt;python: 不会吧，这种规模的东西在我看来并不难啊，项目失败他们不去告你？&lt;br /&gt;&lt;br /&gt;asm: 也有告的，不过现在法律有规定，只要你能列出你开发时候的所有设计过程和调试信息，能证明你尽力了，&lt;br /&gt;系统确实复杂到技术是无法解决的，就没事。&lt;br /&gt;python: 你怎么提供?&lt;br /&gt;&lt;br /&gt;asm: 我开发的特点你还不知道，代码量本身巨大，调试信息非常多，而且清楚得很，动不动就扔N个core出来，上次那个&lt;br /&gt;破搜索项目我扔了几十T的core给客户，他们还屁颠地当宝一样永久保存&lt;br /&gt;&lt;br /&gt;python: 搜索～～，太阳！这些家伙为什么就是不找我？&lt;br /&gt;&lt;br /&gt;asm: 现在的人不懂你那套，太玄，你的log绝大部分只记录你逻辑上的东西，现在的客户要求太高了，每一步都要知道CPU各寄存器的状态，&lt;br /&gt;总线电压高低，内存的实时快照，多了。你还自动类型定义，自动类型转换，谁信。什么高阶函数，闭包都冒出来。&lt;br /&gt;你的设计思想不错，我都想学习，不过很难学，至于客户，他们更搞不懂，云里雾里。上次Lisp大兄弟去接个基因分析项目被&lt;br /&gt;人轰了出来，说什么一堆乱七八糟的括号太神秘，什么抽象语法树，语法还能自定义，简直胡扯，就是巫术，内存管理更&lt;br /&gt;不透明。那些客户喜欢看到分配释放内存，很具体，很直观，Python兄弟你这个连内存管理都不给客户看的，也很难混日子。&lt;br /&gt;&lt;br /&gt;pyton: 我自己带了gc，又不要他们考虑。&lt;br /&gt;&lt;br /&gt;asm: 他们不会吃你gc这套的，你不明确给他们说分配多少字节内存出来，什么时候释放，他们不卖帐。&lt;br /&gt;&lt;br /&gt;python: 我太阳，又不是所有项目都要这么控制精细的。&lt;br /&gt;&lt;br /&gt;asm: 看我，我每一段代码都很明确，和机器结合得很紧密，写磁盘发个IO指令，让他们看得实在。你那个write太玄乎，到最后写盘还不知道隔了多少层&lt;br /&gt;他们不放心。现在的人认死理，一个问题只能有一个答案，一种解决方法。你看你变化多端，谁都能搞得糊。不过不要紧，我做不下去的时候可以介&lt;br /&gt;绍他们过来给你继续做。&lt;br /&gt;&lt;br /&gt;python: 那真的很感谢，最近真的没米下锅，你是帮了我的大忙了。&lt;br /&gt;&lt;br /&gt;asm: 没什么，不过我要告诉你的就是这类客户的开发经费被我榨得差不多了，到你那可能没多少钱付给你了。&lt;br /&gt;&lt;br /&gt;python: 没关系，再少总比没有好。（哭）&lt;br /&gt;&lt;br /&gt;asm: 最后告诉你一个秘密，人的弱点就是天生有奴性，贱，喜欢复杂的东西，好奇，盲从，注重眼前，捡芝麻丢西瓜。&lt;br /&gt;对简洁的东西不感兴趣。因为他们通常认为简洁就是简单。书从薄读到厚，又从厚读到薄 的人没几个的。太相信&lt;br /&gt;自己的眼睛，不相信自己的心。我猜可能是猪油吃太多了的缘故。 表面的东西他们非常热衷，看得到，实在。喜欢&lt;br /&gt;追涨杀跌，所以股市里头为什么那么多人输钱，就是这样，你弄得越火热，价格越高，越多人买，生怕赶不上末班车，&lt;br /&gt;价格越掉越不买，持币待购。我早期玩股票，学了点技术，觉得自己无所不能了，也来搞一把，也是整天盯着盘，&lt;br /&gt;那个实时价格跳得我心都肿了，输得去穿strip，后来学乖了，抓住趋势，买入，中间不看了细节了，趋势没了就抛了，&lt;br /&gt;最后挣钱了。前几年房价疯涨，多少人怕涨到天上去，砸锅卖铁，把下辈子的养老钱都预支出来去买，看现在，傻了吧。&lt;br /&gt;所以有些复杂的东西，你越想从细节控制它，它越不听你的话，你和它对抗没用，早晚死它手里，要顺势。&lt;br /&gt;明白了，今后你要挣这些人的钱，要抓他们的弱点。&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>人民网：要追究制造发帖获刑案官员罪责</title>
      <link>https://wdicc.com/fuck-gfw/</link>
      <pubDate>Tue, 05 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/fuck-gfw/</guid>
      <description>
&lt;p&gt;&lt;a href=&#34;http://news.sina.com.cn/c/2009-05-02/004917729248.shtml&#34;&gt;人民网：要追究制造发帖获刑案官员罪责&lt;/a&gt;&lt;/p&gt;&lt;p&gt;河南的王帅、内蒙古的吴保全因言获罪，经过新兴媒体的披露和公众的理性参与，成为人们热议的话题，由此产生如何杜绝公民“因言获罪”现象的讨 论。王帅事件已经有了初步结果，河南省副省长兼省公安厅厅长表明了态度，并且开始追究构陷者的责任。内蒙古的吴保全案还没有圆满结果，那位“因言获罪”的 年轻人还在牢里，这算不算是当地法制的耻辱呢？&lt;/p&gt;&lt;p&gt;中国建设和完善民主法制走过了漫长的路程。党和国家提出依法治国，提出建设社会主义法治国家，是时代和社会的进步。经历过没有法制，没有民主， 没有人权的人们，绝对不会同意类似“十年动乱”那样的年代死灰复燃。但是，当我们从网络上和报纸上看到先是河南的王帅，后是内蒙古的吴保全，仅仅因为在网 络上批评一下当地的官员，评论一下当地的政府，披露一下某些事情，就被当地警方跨省抓捕，进而关进牢房，我们确实被震撼了、惊动了。尽管这只是一些被披露 的个案，尽管这只是国家在建设和谐社会中的一点噪音，但是，这些个案和噪音反映了我国建设民主和法制社会的长期性、艰巨性和复杂性，反映了我们社会的一些 亟需改善的现状。&lt;/p&gt;&lt;p&gt;“因言获罪”是非民主社会例如“十年动乱”中最明显的特征之一。人们的每一句话都可能被认为是影射、借喻、讽刺当权者；人们的每一篇文章都可能 被视作煽动和挑衅，而遭到莫名其妙的迫害。有的人因为在私密的日记中记载了一点自己的思想，而获祸罹难。言论成为那个年代最敏感的节点。说假话，说空话， 说大话，逐步成为人们的习惯，话语体系走进了一条令人生厌的死胡同。这种影响，至今尚未完全清除。&lt;/p&gt;&lt;p&gt;改革开放，解放思想，拨乱反正，特别是近年来国家民主、法制和人权事业的进步，让我们认识到，在一个民主和法治的社会里，人们的言论是自由的， 批评是自由的，思想是自由的。诬陷罪、诽谤罪只针对个人而言，政府没有权利通过公安抓捕那些仅仅是用语言评论政府的所作所为，或者用某些不太中听的话批评 政府官员的公民，哪怕这些评论和批评不太准确。法院也应该严格遵守宪法的规定，不当权力的帮凶，不去侵害公民的合法权益。否则，我们的社会何来公平正义， 何来和谐稳定、文明进步？&lt;/p&gt;&lt;p&gt;抓捕“言论”者的执法人员和他们后面的官员，可能以为他们的这些做法，是在维护党和国家的利益，是在维护我们的社会主义制度。其实，他们错了。 党和国家的根本利益，就是人民的利益，就是保证大家能够充分享受美好的生活，树立正确的民主、自由、人权、发展等价值观。我们的社会主义制度，也是为了最 大限度地维护人民的核心利益，而且正在不断地改进和完善中。保证公民充分享受言论权、批评权、监督权，才是实事求是地爱护我们现有的制度，才能更快得让我 们的国家跻身于世界民族之林。用这样的思路去分析官员和执法人员抓捕“言论”者，正好证明，这些目无党纪国法的官员和执法人员，破坏的恰恰是党和国家的根 本利益，践踏的恰恰是当前以人为本的社会主义制度，侮辱的恰恰是人民群众神圣的尊严。&lt;/p&gt;&lt;p&gt;所以，人们特别是上级领导机关的人千万别让那些侵犯人权、制造冤案的人用满嘴“国家利益”、“社会利益”的理由忽悠了，别听他们一唱高调就心软 手松。一定要追究制造冤假错案者的法律责任，一定要坚决清除他们制造冤案所谓“合理性”的影响，促使我们国家各个地方的冤假错案、荒唐事件越来越少，直至 彻底消失！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;以上内容完全是复制粘贴，本人并不明白其意思，故本人不对以上内容负法律责任，请不要跨省追捕。要详查请自己联系原作者，谢谢！&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>奇怪的秤</title>
      <link>https://wdicc.com/strange-weighing-apparatus/</link>
      <pubDate>Mon, 13 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/strange-weighing-apparatus/</guid>
      <description>
也不知道秤的英文是哪个，查了下，就用这个 weighing apparatus 了，嘿嘿。balance 好像也有这个意思。&lt;br /&gt;

很早的时候去超市，看到秤就买了一个，是那种指针式的。过年的时候呢，我老婆的妈妈，从家又给带了一个秤，是那种电子的。电子的好看数，而且还是透明的，看着也时尚，自然就把那个指针的给淘汰了，放到了一边。&lt;br /&gt;

这几天办了一个健身卡，打算减减肥，第一次上去秤的时候，着实高兴了一把，因为好像我轻了 2kg，这个可不得了，因为我好像才锻炼了2天而已。。后来就发现有问题，因为我在锻炼的地方秤的结果好像是没什么变化，怎么回事？就把那个指针秤也拿了出来。&lt;br /&gt;

发现问题了。&lt;br /&gt;

我在那个电子秤上面秤的时候，和指针秤比较，轻2kg。不过，比较奇怪的是，我老婆在两个秤之间却几乎没差别，这个是怎么回事呢？&lt;br /&gt;

奇怪的秤。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>A nice way to fuck gfw</title>
      <link>https://wdicc.com/a-nice-way-to-fuck-gfw/</link>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-nice-way-to-fuck-gfw/</guid>
      <description>
转载自 : http://fuckgfw.jottit.com/&lt;br /&gt;

&lt;p&gt;本文将提供一种一劳永逸的翻墙方式（ssh -D），实施之后，那道墙——对你来说——将从此透明。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;本文面向的用户：使用Windows作为操作系统并且使用Firefox作为常用浏览器。&lt;/p&gt;&lt;br /&gt;

&lt;h2&gt;第一步：免费获取拥有SSH权限的帐号和密码。&lt;/h2&gt;&lt;br /&gt;

&lt;p&gt;默认的免费获取方式：将本文转载到你自己的博客上，将转载后的文章网址发送到&lt;img src=&#34;http://photos.smugmug.com/photos/497999637_nw25h-O.png&#34; alt=&#34;f.ckgfw#gmail.com&#34; title=&#34;&#34; /&gt;。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;转载方式：拷贝&lt;a href=&#34;https://dl.getdropbox.com/u/398/html.txt&#34;&gt;文章代码&lt;/a&gt;至博客后台HTML编辑器中，直接发布即可，文章标题自拟，可在前后文插入自己的评论。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;经过人工审核，你将收到一封附有五个拥有SSH权限的帐号和密码的电子邮件，你可以将它们赠与你自己的读者。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;更多获取方式将在今后陆续激活，请关注帐号配送中心：&lt;a href=&#34;https://friendfeed.com/rooms/fuckgfw-for-free&#34;&gt;https://friendfeed.com/rooms/fuckgfw-for-free&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;

&lt;h2&gt;第二步：配置MyEntunnel软件&lt;/h2&gt;&lt;br /&gt;

&lt;p&gt;下载并安装MyEntunnel，该软件全名为My Encrypted Tunnel。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;一键下载：&lt;a href=&#34;https://dl.getdropbox.com/u/398/myentunnel.exe&#34;&gt;https://dl.getdropbox.com/u/398/myentunnel.exe&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956295_FRKXY-O.jpg&#34; alt=&#34;myentunnel&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;按照上图将第一步收到的帐号信息填写到相应的地方后，点击&lt;img src=&#34;http://photos.smugmug.com/photos/497956305_GuUqV-O.jpg&#34; alt=&#34;save&#34; title=&#34;&#34; /&gt;按钮，再点击&lt;img src=&#34;http://photos.smugmug.com/photos/497956257_vDBHg-O.jpg&#34; alt=&#34;hide&#34; title=&#34;&#34; /&gt;按钮。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;第一次连接过程中会出现一个认证对话框，按照提示确认即可。以后的自动连接中将不再出现此认证对话框。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;最后点击&lt;img src=&#34;http://photos.smugmug.com/photos/497956277_uqUyE-O.jpg&#34; alt=&#34;hide&#34; title=&#34;&#34; /&gt;按钮，使对话框隐藏到系统任务栏中。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;提示：&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;为MyEntunnel创建一个快捷方式，将其复制到系统的【启动】（C:\Documents and Settings\当前用户名（需要修改成你自己的）\「开始」菜单\程序\启动）文件夹中，今后开机便可自动启动软件，并自动连接服务器。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956351_pNNkc-O.png&#34; alt=&#34;tray&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;绿色代表连接成功且稳定；黄色代表正在连接或重新连接；红色代表连接失败。&lt;/p&gt;&lt;br /&gt;

&lt;h2&gt;第三步：配置Firefox浏览器&lt;/h2&gt;&lt;br /&gt;

&lt;p&gt;假设你正使用&lt;a href=&#34;http://www.mozilla.com/firefox&#34;&gt;Firefox浏览器&lt;/a&gt;阅读本文。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;一键安装：&lt;a href=&#34;http://autoproxy.mozdev.org/latest.xpi&#34;&gt;http://autoproxy.mozdev.org/latest.xpi&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/498951512_XzxSh-O.png&#34; alt=&#34;xpi-offical&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;点击立即安装，安装后，重新启动Firefox。然后你会看到如下对话框，选择gfwlist (P.R.China)后，点击确定。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956357_vmp9W-O.png&#34; alt=&#34;gfwlist&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;接着你会看到Firefox主界面右上角出现有一个“福”字图案，点击“福”。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956204_t4d3L-O.png&#34; alt=&#34;fu&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;点击“代理服务器——编辑代理服务器”。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956317_yWwtL-O.png&#34; alt=&#34;edit&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;随即出现如下画面，你会看到如GAppProxy、Tor和Your Freedom这样一系列代理服务器名称。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956227_jQby9-O.png&#34; alt=&#34;before&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;将GAppProxy一栏的参数修改为如下图所示。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;&lt;img src=&#34;http://photos.smugmug.com/photos/497956232_ttQRj-O.png&#34; alt=&#34;after&#34; title=&#34;&#34; /&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;修改完毕后，点击确定。至此配置已全部就绪。&lt;/p&gt;&lt;br /&gt;

&lt;p&gt;获取更多帮助，请关注反馈中心：&lt;a href=&#34;https://friendfeed.com/rooms/fuckgfw-feedback&#34;&gt;https://friendfeed.com/rooms/fuckgfw-feedback&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;

&lt;h2&gt;第四步：支持fuckGFW&lt;/h2&gt;&lt;br /&gt;

&lt;p&gt;获取详情，请关注捐赠与推广中心：&lt;a href=&#34;https://friendfeed.com/rooms/fuckgfw-donation-and-marketing&#34;&gt;https://friendfeed.com/rooms/fuckgfw-donation-and-marketing&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;

&lt;h4&gt;版权信息：您可以自由复制、传播、演绎本作品且无需署名、无需注明原始出处。&lt;/h4&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>perl and fork</title>
      <link>https://wdicc.com/perl-and-fork/</link>
      <pubDate>Sat, 07 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/perl-and-fork/</guid>
      <description>
最近写程序用到了 fork ，记一下。&lt;br /&gt;

我在 perl 里面某个地方开始，fork 多个进程去操作 db，主进程等子进程完事后，再继续后面的操作。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use POSIX &#34;:sys_wait_h&#34;;
my $thread_num = 5;
my %pids = ();

# $dbi-&gt;{InactiveDestroy} = 1 用到 dbi 的话还要设置这个，要不子进程exit后，dbi
# 连接就断了

# .....前面的程序
for ( 1..$thread_num ) {
	my $pid = fork;
	if (not $pid) { # 子进程
		$pids{$pid} = 1;
		# blalbalbla... 子进程去干活
		eixt 0; # 要记得 exit ，要不子进程还会继续执行后面的。
	} else { # 主进程
		# balbalbal ... 如果没事做也可以不写
	}
}

while( keys( %pids ) ) {
	my $kid = waitpid(-1,WNOHANG);
	if ($kid &gt;0) {
		delete $pids{$kid};
		print &#34;$kid end.\n&#34;;
	} else {
		sleep 1; # 继续等，如果有时间限制，可以在这里去 kill 子进程
	}
}

# ....继续后面的程序

&lt;/pre&gt;&lt;br /&gt;

还可以参考这个 http://www.perlmonks.org/?node_id=619722&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>内核的 shmall 和 shmmax 参数</title>
      <link>https://wdicc.com/shmall-and-shmmax-kernel-paramaters/</link>
      <pubDate>Mon, 02 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/shmall-and-shmmax-kernel-paramaters/</guid>
      <description>
shmall 是全部允许使用的共享内存大小，shmmax 是单个段允许使用的大小。这两个可以设置为内存的 90%。例如 16G 内存，16*1024*1024*1024*90% = 15461882265，shmall 的大小为 15461882265/4k(getconf PAGESIZE可得到) = 3774873。&lt;br /&gt;

修改 /etc/sysctl.conf。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
kernel.shmmax=15461882265
kernel.shmall=3774873
kernel.msgmax=65535
kernel.msgmnb=65535
执行 sudo sysctl -p
&lt;/pre&gt;&lt;br /&gt;

可以使用 ipcs -l 看结果。ipcs -u 可以看到实际使用的情况。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
------ Shared Memory Limits --------
max number of segments = 4096
max seg size (kbytes) = 15099494
max total shared memory (kbytes) = 15097856
min seg size (bytes) = 1
 
------ Semaphore Limits --------
max number of arrays = 128
max semaphores per array = 250
max semaphores system wide = 32000
max ops per semop call = 32
semaphore max value = 32767
 
------ Messages: Limits --------
max queues system wide = 16
max size of message (bytes) = 8192
DEFAULT max size of queue (bytes) = 16384
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>去掉了 gnome-terminal 的 tab 上面的关闭按钮</title>
      <link>https://wdicc.com/disable-gnome-terminal-close-button/</link>
      <pubDate>Fri, 06 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/disable-gnome-terminal-close-button/</guid>
      <description>
gnome-terminal 上面有个红红的 叉叉，就是关闭按钮了。因为开 tab 多的时候会不小心按到，所以就想把他干掉。可惜 gnome 没提供去掉的选项，google 了下，发现不少人烦这个，可是 gnome 不理会这些声音，2007 年有人写了个&lt;a href=&#34;https://bugs.launchpad.net/gnome-terminal/+bug/99978&#34; target=&#34;_blank&#34;&gt;补丁&lt;/a&gt;，可惜没转正。我琢磨琢磨改巴改巴把他弄到自己能用了。原来那个补丁还添加了 gconf 的配置项，我没那需求，就去掉了。这个是对 gentoo 里面的 gnome-terminal-2.24.2 打的补丁，别的版本没准还得改改。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-diff&#34;&gt;
diff -ur gnome-terminal-2.24.2.org/src/terminal-window.c gnome-terminal-2.24.2/src/terminal-window.c
--- gnome-terminal-2.24.2.org/src/terminal-window.c	2009-02-06 17:51:54.277755771 +0800
+++ gnome-terminal-2.24.2/src/terminal-window.c	2009-02-06 18:04:34.601756240 +0800
@@ -1929,7 +1929,7 @@
 
   gtk_box_pack_start (GTK_BOX (hbox), label, TRUE, TRUE, 0);
 
-  close_button = gtk_button_new ();
+/*  close_button = gtk_button_new ();
   gtk_button_set_relief (GTK_BUTTON (close_button), GTK_RELIEF_NONE);
   gtk_button_set_focus_on_click (GTK_BUTTON (close_button), FALSE);
   gtk_button_set_relief (GTK_BUTTON (close_button), GTK_RELIEF_NONE);
@@ -1939,17 +1939,17 @@
   image = gtk_image_new_from_stock (GTK_STOCK_CLOSE, GTK_ICON_SIZE_MENU);
   gtk_container_add (GTK_CONTAINER (close_button), image);
   gtk_box_pack_end (GTK_BOX (hbox), close_button, FALSE, FALSE, 0);
-
+*/
   sync_tab_label (screen, NULL, label);
   g_signal_connect (screen, &#34;notify::title&#34;,
                     G_CALLBACK (sync_tab_label), label);
 
-  g_signal_connect (close_button, &#34;clicked&#34;,
+/*  g_signal_connect (close_button, &#34;clicked&#34;,
 		    G_CALLBACK (close_button_clicked_cb), screen_container);
 
   g_signal_connect (hbox, &#34;style-set&#34;,
                     G_CALLBACK (tab_label_style_set_cb), close_button);
-
+*/
   gtk_widget_show_all (hbox);
 
   return hbox;
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>写了一个 kde plasma applet</title>
      <link>https://wdicc.com/writing-a-kde-plasma-applet/</link>
      <pubDate>Fri, 23 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/writing-a-kde-plasma-applet/</guid>
      <description>
用 gnome 的时候，对 panel 上面的 cpu 等 applet 情有独钟。这个东西能让我对自己的系统有第一手信息，有时候某个程序出问题了 cpu 100% 了，这个时候系统反应不一定会变慢的，但是这个程序是必须要被干掉的，有了这个 applet 我就能知道第一时间知道出问题了。还有的时候看 firefox 里面的 flash 的时候也会出类似的情况，这时会导致看别的网页很慢，那就干掉他。&lt;br /&gt;

第一次装 kde 的时候发现没有那些东西，让我很失望。后来看到 ob 在 openbox 里面把 panel 设的短一点，然后用 conky 在空出来的地方显示一些信息，感觉豁然开朗啊，呵呵。&lt;br /&gt;

这次装好 kde，就弄了一个 conky，可是发现他的风格和系统不兼容。有点不爽，就琢磨自己能不能弄一个，因为需求实在太简单了。&lt;br /&gt;

昨天花了一个下午，总算弄好了。参考的文档 &lt;a href=&#34;http://www.qtopia.org.cn/doc/qiliang.net/qt/classes.html&#34;&gt;qt的类&lt;/a&gt;, &lt;a href=&#34;http://www.zetcode.com/tutorials/pyqt4/&#34;&gt;pyqt4 turtorial&lt;/a&gt;,&lt;a href=&#34;http://techbase.kde.org/Development/Tutorials/Plasma/Python/GettingStarted&#34;&gt;plasma python&lt;/a&gt; .&lt;br /&gt;

效果就这样。电池旁边那个就是。&lt;br /&gt;

&lt;a href=&#34;http://img339.imageshack.us/img339/6986/200901231045132304x1024oo0.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://img339.imageshack.us/img339/6986/200901231045132304x1024oo0.png&#34; alt=&#34;&#34; width=&#34;300&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

代码&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-python&#34;&gt;
from PyQt4.QtCore import *
from PyQt4.QtGui import *
from PyKDE4.plasma import Plasma
from PyKDE4 import plasmascript
import time                                      

class Cpuinfo(plasmascript.Applet):
        def __init__(self,parent,args=None):
                plasmascript.Applet.__init__(self,parent)

        def init(self):
                self.freqnow = &#39;&#39;
                self.freqmax = &#39;&#39;
                self.temp = &#39;&#39;
                self.text = &#39;&#39;   

                self.getCurrentFreq()
                self.getMaxFreq()
                self.getTemp()       

                self.setHasConfigurationInterface(False)
                self.setMinimumWidth(100)
                self.setAspectRatioMode(Plasma.Square)
                self.startTimer(1000)

        def getCurrentFreq (self):
                line = open (&#39;/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq&#39;, &#39;r&#39;).read().rstrip(&#39;\n&#39;)
                line = int(line) / 1000 /1000.0
                self.freqnow = line

        def getMaxFreq (self):
                line = file(&#39;/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq&#39;, &#39;r&#39;).read().rstrip(&#39;\n&#39;)
                line = int(line) / 1000 /1000.0
                self.freqmax = line

        def getTemp (self):
                line = file(&#39;/proc/acpi/thermal_zone/TZ1/temperature&#39;, &#39;r&#39;).read().rstrip(&#39;\n&#39;)
                line = &#34; &#34;.join(line.split()[1:])
                self.temp = line

        def timerEvent(self, event):
                self.getCurrentFreq()
                self.getTemp()
                self.text = &#34;%s\n%.2f %d%%&#34; % (self.temp, self.freqnow, self.freqnow / self.freqmax * 100)
                self.update() 

        def paintInterface(self, painter, option, rect):
                painter.save()
                painter.setPen(Qt.white)
                #painter.setFont(QFont(&#39;Consolas&#39;,11))
                painter.drawText(rect, Qt.AlignVCenter | Qt.AlignHCenter, self.text)
                painter.restore()

def CreateApplet(parent):
                return Cpuinfo(parent)

if __name__ == &#39;__main__&#39;:
        a = Cpuinfo(None)
        a.init()
        print a.freqnow&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>将 gnome 换成 kde 4.2</title>
      <link>https://wdicc.com/use-kde-42-in-gentoo/</link>
      <pubDate>Fri, 23 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-kde-42-in-gentoo/</guid>
      <description>
下面的步骤一定要明白干的是什么再操作，否则后果自负 :)。&lt;br /&gt;

1 修改 make.conf 里面的 use 为 kde4 -kde -gnome qt4 -qt3 -avahi -esd 这样。把 gnome 相关的 use 都 - 掉。我还有 -arts，看需要。使用 kde 这个use有时会导致安装 kde3，所以如果要使用最好在 /etc/portage/package.use 里面单独指定。如果不介意 kde + gnome 共存，那么 1,2 不是必须的。&lt;br /&gt;

2 emerge -uDN world&lt;br /&gt;

3 修改 /etc/portage/package.unmask ,加入 &amp;gt;sys-apps/portage-2.1, unmask portage 2.2 ，2.2 才支持 set&lt;br /&gt;

4 layman -a kde-testing&lt;br /&gt;

5 emerge -av @kdebase-4.2&lt;br /&gt;
其他想装的东西可以去 /usr/local/portage/layman/kde-testing/sets 里面看。比如 emerge -av @kdepim-4.2，或者装里面的某个包，emerge kde-base/kmail:4.2&lt;br /&gt;

6 修改 /var/lib/portage/world ，删掉里面的 gnome 的包，当然不介意 gnome 和 kde 共存的话后面的就不需要做了。&lt;br /&gt;

7 emerge --depclean -p 清理 gnome 的包。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 perl 来登录网页</title>
      <link>https://wdicc.com/perl-cookie/</link>
      <pubDate>Tue, 06 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/perl-cookie/</guid>
      <description>
应该不能用。。。只是为了记录&lt;br /&gt;

使用 LWP::UserAgent 可以简单的去访问网页，获取页面内容。例如&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use LWP::UserAgent;

my $ua = LWP::UserAgent-&gt;new();
$ua-&gt;timeout(10);
$ua-&gt;agent(&#39;mozilla&#39;);

my $r = $ua-&gt;get(&#39;http::/www.google.com&#39;);
print $r-&gt;content; # or $r-&gt;decoded-&gt;content
&lt;/pre&gt;&lt;br /&gt;

$r 的其它属性可以去 cpan 看看。这样就获取到了内容。但是，如果一个网页是需要登录的怎么办？可以用保存 cookie 的方式。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use LWP::UserAgent;
use HTTP::Cookies;
use Digest::MD5 qw(md5 md5_hex); # 用来生成 md5 的
use JSON; # 用来在 json 串和 perl 的 hash 串之间转换
use Data::Dumper;

my $cookie_jar = HTTP::Cookies-&gt;new(
	file =&gt; &#34;lw.dat&#34;,
	autosave =&gt; 1
);

my $ua = LWP::UserAgent-&gt;new();
$ua-&gt;timeout(10);
$ua-&gt;agent(&#39;mozilla&#39;);

my(@rest) = (&#34;/&#34;, &#34;.yahoo.com&#34;, undef, 0, 0, 60*60, 0);
$cookie_jar-&gt;set_cookie(0, &#39;session&#39;, $session, @rest);

$ua-&gt;cookie_jar($cookie_jar);

$o = $ua-&gt;get($url);
........
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>把硬盘的分区都换成了 ext4</title>
      <link>https://wdicc.com/convert-reiserfs-t-ext4/</link>
      <pubDate>Sat, 03 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/convert-reiserfs-t-ext4/</guid>
      <description>
我的分区都是 reiserfs 的。这次 ext4 吵的这么火爆，实在忍不住了，就换过去了。&lt;br /&gt;

我的磁盘比较小，转换还费了点功夫。先找一个和 / 分区差不多的分区，用来放 / 的数据。我找的是 /home ，然后把 / /home 之外的分区转换了。方法就是先把其中一个的数据弄到其它的上面，然后重新格式化，然后再把数据弄回来。&lt;br /&gt;

可以用 cp -p /source /dest 的方式，也可以用 tar cpf - --exclude=/home | tar xpf - 的方式，后面这个方法可以支持过滤掉某个目录不考。&lt;br /&gt;

这些都弄好之后就可以弄 / /home 了。先把 /home 的东西备分一下， tar cpf /data/home.tar ，/data 最好是一个单独的分区。&lt;br /&gt;

rc-update del xdm ，然后重启 root 登录。格式化 /home，再 mount 上他，用来复制 / 的内容过来。复制的时候需要注意下，先把 / /home 之外的那些分区都 umount，省得复制的时候不小心一起复制了过来。&lt;br /&gt;

cd /home; tar cpf - --exclude=/home --exclude=/proc --exclude=/sys | tar xpf -&lt;br /&gt;

复制完之后，在 /home 下建立 /home/proc /home/sys 目录。修改 /home/boot/grub/menu.lst 文件（如果是独立的 boot 分区，需要挂上再修改），kernel 参数为新的 root，建议新加一行，保留原来的，免得有问题还能方便回去。然后修改 /etc/fstab。就可以重启了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>在 gnome 中替换 wm</title>
      <link>https://wdicc.com/change-wm-in-gnome/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-wm-in-gnome/</guid>
      <description>
gnome 中的 window manger (wm) 是 metacity，有时候可能会用的不爽，换成 openbox ，或着 xfwm4 之类。&lt;br /&gt;

gnome 提供了简单的方法，就是设置 WINDOW_MANAGER 这个变量。如果用的是 dm，例如 gdm ，那么在 .profile 里面放上下面一句就可以了。startx 的话，放在 .xinitrc 里面。&lt;br /&gt;

export WINDOW_MANAGER=&#34;/usr/bin/openbox&#34;&lt;br /&gt;

用 gdm 的话，还可以在启动的时候选择 openbox-gnome-session 这个来使用 openbox 做为 wm，那个命令是个 shell 脚本，可以看看。&lt;br /&gt;

如果设置了不管用，可以看看 gconf 里面的 desktop/gnome/session/required_components/windowmanager 的值。/usr/bin/gnome-wm 这个程序可能会用这个，具体好像和 gnome 的版本有关，这个文件是 gnome-base/gnome-session 这个包里面的。&lt;br /&gt;

gdm 启动的时候，会运行 /etc/X11/gdm/Xsession 这个程序。可以试试看在这里面小小的 debug 一下。&lt;br /&gt;

最后郁闷一下，openbox 在 gnome 的 dual head 里面好像有个 &lt;a href=&#34;http://bugzilla.icculus.org/show_bug.cgi?id=3922&#34; target=&#34;_blank&#34;&gt;bug&lt;/a&gt;，提交给了 openbox，还没回复，只能继续 metacity 了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>更新 kenerl 到了 2.6.28</title>
      <link>https://wdicc.com/upgrade-kenerl-to-2-6-28/</link>
      <pubDate>Sat, 27 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/upgrade-kenerl-to-2-6-28/</guid>
      <description>
之前用的是 tuxonice 的 kernel, 为了体验他的休眠。可是最近发现我基本就不用休眠。而且 tuxonice 的内核还一直停留在 2.6.26 上面。最近 2.6.28 火的不行，所以就给他升级了。&lt;br /&gt;

升级没遇到什么问题。新选择了 ext4 支持，等哪天把 fs 都修改到 ext4 去，不过好像有点折腾，呵呵。&lt;br /&gt;

gentoo-souces 也是支持的休眠的。想要在 gnome 下面休眠的话，安装一个 pm-utilus 这个包就可以了。在电源管理那里选休眠就可以了。不过发现 挂起 好像不支持，挂起了就不能唤醒了，很郁闷。我记得 tuxonice 下面挂起好像也不支持，不管他了。&lt;br /&gt;

那个号称革命性的 GEM 不知道什么时候能在 radeon 上面出现。等着吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>科学家们拿猴子作了几个试验</title>
      <link>https://wdicc.com/monkey-test/</link>
      <pubDate>Thu, 04 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/monkey-test/</guid>
      <description>
&lt;strong&gt;- 道德的起源 -&lt;/strong&gt;&lt;br /&gt;
把五只猴子关在一个笼子里，上头有一串香蕉实验人员装了一个自动装置,一旦侦测到有猴。子要去拿香蕉，马上就会有水喷向笼子而这五只猴子都会一身湿. 首先有只猴子想去拿香。蕉，当然，结果就是每只猴子都淋湿了. 之後每只猴子在几次的尝试後，发现莫不如此, 於是猴子们达到一个共识：不要去拿香蕉，以避免被水喷到. 後来实验人员把其中的一只猴子释放，换进去一只新猴A, 这只猴子A看到香蕉，马上想要去拿.结果，被其他四只猴子海K了一顿 因为其他四只猴子认为猴子A会害他们被水淋到，所以制止他去拿香蕉 A尝试了几次，虽被打的满头包，依然没有拿到香蕉 当然，这五只猴子就没有被水喷到 後来实验人员再把一只旧猴子释放，换上另外一只新猴子B 这猴子B看到香蕉，也是迫不及待要去拿 当然，一如刚才所发生的情形，其他四只猴子海K了B一顿 特别的是，那只A猴子打的特别用力（这叫老兵欺负新兵，或是媳妇熬成婆 ^O^）。B猴子试了几次总是被打的很惨，只好作罢。 後来慢慢的一只一只的，所有的旧猴子都换成新猴子了，大家都不敢去动那香蕉 但是他们都不知道为什麽，只知道去动香蕉会被猴扁。这就是道德的起源&lt;br /&gt;

&lt;strong&gt;－阶级的起源－&lt;/strong&gt;&lt;br /&gt;
实验人员继续他们的实验，不过这一次他们改变了喷水装置，一旦侦测到有猴子要去拿香蕉，马上就会有水喷向拿香蕉的猴子，而不是全体。 然后实验人员又把其中的一只猴子释放，换进去一只新猴子C ，不同以往的是猴子C特别的孔武有力。当然猴子C看到香蕉，也马上想要去拿，一如以前所发生的情形，其他四只猴子也想海K猴子C一顿。不过他们错误估计了C的实力，所以结果是反被C海K了一顿。于是猴子C拿到了香蕉，当然也被淋了个透湿。一边打着喷嚏一边吃着香蕉，美味但是也美中不足。A、B、D、E没有香蕉吃却也比较快乐，毕竟没有被淋到嘛！后来C发现只有拿香蕉的那个才会被淋到，他就要最弱小的A替他去拿。A不想被K，只好每天拿香蕉然后被水淋。B、D、E越发的快乐了起来，这就叫比上不足，比下有余嘛  于是五只猴子有了三个阶级，这下子阶级也随着道德的起源了。&lt;br /&gt;

&lt;strong&gt;－道德的沦丧－&lt;/strong&gt;&lt;br /&gt;
天变热了，笼子里的猴子们想冲凉却找不到地方。终于出现了一位反潮流英雄，猴HERO。HERO在无意中碰到了香蕉，理所当然的引来了一顿饱打。但在挨打的过程中，猴子们享受到了冲凉的乐趣。等身上 的水干了之后，猴子A在无意中碰撞了HERO，使HERO又一次接触到了香蕉，于是，猴子们享受了第二次冲凉，HERO遭到了第二次痛殴。在此之后，只要大家有冲凉的需要，就会有一只猴子X挺身而出，对HERO进行合理冲撞。 大家对HERO的态度也有了明显的不同，在平时大家会对HERO异常温和，以弥补在冲凉时为维护规则而不得不对它进行的暴力举动。一天， 在大家冲凉时，饱受折磨的HERO闻到了香蕉的清香旁鹜时将香蕉吃了。而且此后没有了新的香蕉来填补空缺。猴子们陷入了另一个尴尬境地没有冲凉的水，也没有香蕉，只有HERO。于是，另一个规则形成了。猴子在烦躁的时候会痛打HERO出气，HERO不得反抗。当笼子里的旧猴子被新猴子换掉时，新猴子会在最快的时间内学会殴打HERO。 终于有一天，老天有眼，历尽沧桑的HERO被另一只猴子代替了。猴子们失去了发泄的对象只能任意选取一个目标进行攻击。从此以后，笼子里的猴子们不吃不喝不冲凉，唯一的举动就是打架。这就是道德的沦丧。&lt;br /&gt;

&lt;strong&gt;－道德的重建－&lt;/strong&gt;&lt;br /&gt;
实验人员对猴子们的争斗不休感到不安。为了重建道德秩序，他们决定继续供应香蕉。一天，正在混战的猴子们发现头顶多了一串香蕉，它们其中的一个A不顾身上的剧痛，把香蕉摘了下来。于是久违的甘露出现了，未曾尝过甜头的猴子们先是茫然失措，继而争先恐后的加入冲凉的行列。香蕉反而被遗忘了。当猴子B、C、D、E发现A在享受淋浴的同时还吃着美味的香蕉，嫉妒心使它们暂时团结起来，共同K了A一顿，将A吃剩的香蕉夺过来，但是，此刻的香蕉成了匹夫怀里的宝玉，得到它的猴子虽然可以享受美味，但付出的代价也是巨大的。 实验人员不断放入香蕉，却发现战斗比以前更激烈了。分析清楚原因后，他们用木头做了一个假香蕉扔进了笼子。此时猴子们已经学聪明了，它们知道触摸香蕉可以享淋浴，而试图独占香蕉则会遭到痛扁。于是，一个新的现象出现了，当猴子们有冲凉的需要时，会有一只猴子将香蕉拿起来，而当它发现有遭到攻击的可能时，它会马上放下香蕉逃到一边去。这样，猴子们都能冲凉，但是又不至于再象以前那样N败俱伤。 (没有猴子发现那个香蕉是假的。)&lt;br /&gt;

&lt;strong&gt;－信仰的起源－&lt;/strong&gt;&lt;br /&gt;
五只猴子A、B、C、D、E三个阶级快乐地生活了很久。他们精确的给出了三个阶级的定义，即吃香阶级、拿香阶级和干看着阶级。 可惜猴子A由于长期的水中作业无可避免地引发了它肺部功能的衰竭。一天他在例行的拿香蕉作业中跌倒了就再也没有爬起来。于是实验人员又送进了一只同样孔武有力的猴F ，当然他还是对屋顶的香蕉很有兴趣。不幸的是他最终以微弱的劣势被以C为首的群猴再次K。第二天，又到了拿香蕉的时候，猴子C很无所谓，反正他还要吃香蕉，反正他不会被水淋到，真正恐慌的是B、D、E三猴。F是那么的健壮，他们这些媳妇是熬不成婆了。他们将面临一个艰难的抉择，谁该去步A的后尘? 猴子B、D、E展开了激烈的争论，讨论谁最应该做下一个拿香阶级。猴子F很奇怪也很好奇，什么叫“拿香阶级”呢？猴子B、D、E解释道：所谓“拿香阶级”就是猴子界勇敢者的阶级，需具备一不怕苦二不怕死的大无畏精神方能得此殊荣。猴子F闻听不禁有些神往，有些跃跃欲试。当然他最终达到了目的，作了唯一的拿香阶级。再后来，B、D、E三猴陆续被换出局，换来的猴子个个健壮如C ，他们继续大大出手，不过目标不是香蕉，而是那个唯一的拿香阶级。于是信仰也出现了&lt;br /&gt;

&lt;strong&gt;－迷信的起源－&lt;/strong&gt;&lt;br /&gt;
后来Ａ终于被好心的实验人员拉出了苦海。新来了猴子F。 Ｃ觉得有必要维护自己的阶级地位，Ｂ、Ｄ、Ｅ则生怕自己顶了Ａ的缸……在各种复杂心情的作用下，B、Ｄ、Ｅ在Ｃ的带领下爆扁了F一顿，然后强令Ｆ做拿香蕉阶级。 Ｆ开始不乐意，后来慢慢在Ｂ等的劝说下等“待多年的媳妇熬成婆”这一宿命。 慢慢的老资格的Ｂ、Ｄ、Ｅ猴子渐渐被淘汰，Ｃ发现自己在体力上不再占有优势，很难再通过武力让这一游戏规则继续下去，觉得十分苦恼。这时，一只最有希望升级为吃香蕉阶级（暨Ｃ的理所当然接班人）也是Ｃ谋臣的Ｈ向Ｃ进言。于是君臣定计。Ｈ开始依靠自己多懂几种猴语而在其他若干猴面前树立的权威形象向其他猴鼓吹：“每一只新来笼子的猴子都是有罪的，这种罪责来自血统。……只有摘香蕉的猴子才能被（实验人员）送到天堂。” 事实上，因为被水冲很容易得肺炎病倒而被实验人员淘汰掉，猴子们不知道反而以为被淘汰的猴子真的进了天堂。渐渐，猴子都相信了这套理论，并且讲给每一只新猴子听。然后就这么流传下去越传越神奇。以至于后来摘香蕉阶级的猴子都为了能摘香蕉而大打出手。……这些都是Ｃ没有想到，Ｈ没有看到的，那时他们都已经死了。然而迷信就这么诞生了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>命令行发送有附件的邮件</title>
      <link>https://wdicc.com/send-mail-with-attachment/</link>
      <pubDate>Mon, 01 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/send-mail-with-attachment/</guid>
      <description>
命令行下面发送邮件比较简单，恐怕都会使用。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$ echo &#34;hello .. &#34; | mail -s subject xxx@abc.com
$ cat /path/to/file | mail -s subject xxx@abc.com
$ mail -s subject xxx@abc.com &lt;&lt; EOF
hi
the end..
EOF
&lt;/pre&gt;&lt;br /&gt;

上面这些方法都可以发送邮件。还有一种方法。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$ cat a.txt
Subject: test
From: xxx@abc.com
To: xxx@abc.com

hi
sdfsdfsdf
the end.
$ cat a.txt | sendmail -t
&lt;/pre&gt;&lt;br /&gt;

这样可以把邮件头信息写到文件里面的，你也可以用 php，perl 来打印类似的信息给 sendmail -t ，让他来发。&lt;br /&gt;

那么如果有附件应该怎么办？可以使用 uuencode。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$ uuencode a.txt a.txt | mail -s test xxx@abc.com
$ (cat a.txt; uuencode b.txt b.txt; cat c.txt) |sendmail -t
&lt;/pre&gt;&lt;br /&gt;

应该说的很明白了吧？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>lyx 的中文化</title>
      <link>https://wdicc.com/lyx-unicode-howto/</link>
      <pubDate>Thu, 27 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lyx-unicode-howto/</guid>
      <description>
lyx 可以认为是一个 latex 的所见即所得的编辑工具。&lt;br /&gt;

先来搞定 latex 的中文。latex 的中文配置是千奇百怪的，怎么配的都有。看到那些帖子真的很头疼，不知道从哪里下手好。最近从 linuxsir gentoo 的论坛上面看到了一个简单的配置方法，总算我也可以使用 latex 生成支持中英文混排的 pdf 文件了。&lt;br /&gt;

首先需要安装 dev-tex/zhspacing(gentoo-china-overlay) 和 dev-texlive/texlive-fontsrecommended 这两个包，会依赖安装一些别的包。&lt;br /&gt;

此后就可以使用 xelatex 命令来编译 tex 文件了。如果没有 simsun simhei 那些字体，就还需要下面的操作。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-latex&#34;&gt;
\usepackage{fontspec}
\newfontfamily\zhfont[BoldFont=Microsoft YaHei]{Microsoft YaHei} %设置中文
\newfontfamily\zhpunctfont{Microsoft YaHei} % 设置中文
%\makeglossary

\setmainfont{Consolas}           %这里设置英文衬线字体
\setmonofont{Consolas}                     %英文等宽字体
\setsansfont{Consolas}               %英文无衬线字体

\usepackage{zhspacing}
\zhspacing
\begin{document}
中Eng文混排，“标点压缩”，间 距 调 整 ……
\end{document}&lt;/pre&gt;
里面那几行有注释的，就是用来设置字体的。设置为 fc-list 列表里面的一个或者几个字体，然后使用 xelatex xx.tex 命令来编译你的 tex 文件，是不是生成了相应的 pdf？可以去看看里面的中文英文是不是都正常显示了。

接下来配置 lyx。我参考了&lt;a href=&#34;http://blog.bs2.to/post/EdwardLee/8545&#34;&gt;这个&lt;/a&gt;文章，新建一个文档，设置几个地方。

文档-&amp;gt; 首选项-&amp;gt; 语言 使用 utf8。

文档-&amp;gt; 首选项-&amp;gt; latex序 添加下面的内容。
&lt;pre class=&#34;prettyprint lang-latex&#34;&gt;
\newfontfamily\zhfont[BoldFont=Microsoft YaHei]{Microsoft YaHei} %设置中文
\newfontfamily\zhpunctfont{Microsoft YaHei} % 设置中文
%\makeglossary

\setmainfont{Consolas}           %这里设置英文衬线字体
\setmonofont{Consolas}                     %英文等宽字体
\setsansfont{Consolas}               %英文无衬线字体

\usepackage{zhspacing}
\zhspacing&lt;/pre&gt;
我还设置了保存为文档缺省设置，这样新编辑的文件就不用设置了，当然也可以保存成模板，这样每次加载这个模板就可以了。

还需要设置

lyx 可以认为是一个 latex 的所见即所得的编辑工具。

先来搞定 latex 的中文。latex 的中文配置是千奇百怪的，怎么配的都有。看到那些帖子真的很头疼，不知道从哪里下手好。最近从 linuxsir gentoo 的论坛上面看到了一个简单的配置方法，总算我也可以使用 latex 生成支持中英文混排的 pdf 文件了。

首先需要安装 dev-tex/zhspacing(gentoo-china-overlay) 和 dev-texlive/texlive-fontsrecommended 这两个包，会依赖安装一些别的包。

此后就可以使用 xelatex 命令来编译 tex 文件了。如果没有 simsun simhei 那些字体，就还需要下面的操作。
&lt;pre class=&#34;prettyprint lang-latex&#34;&gt;
\usepackage{fontspec}
\newfontfamily\zhfont[BoldFont=Microsoft YaHei]{Microsoft YaHei} %设置中文
\newfontfamily\zhpunctfont{Microsoft YaHei} % 设置中文
%\makeglossary

\setmainfont{Consolas}           %这里设置英文衬线字体
\setmonofont{Consolas}                     %英文等宽字体
\setsansfont{Consolas}               %英文无衬线字体

\usepackage{zhspacing}
\zhspacing
\begin{document}
中Eng文混排，“标点压缩”，间 距 调 整 ……
\end{document}&lt;/pre&gt;
里面那几行有注释的，就是用来设置字体的。设置为 fc-list 列表里面的一个或者几个字体，然后使用 xelatex xx.tex 命令来编译你的 tex 文件，是不是生成了相应的 pdf？可以去看看里面的中文英文是不是都正常显示了。

接下来配置 lyx。我参考了&lt;a href=&#34;http://blog.bs2.to/post/EdwardLee/8545&#34;&gt;这个&lt;/a&gt;文章，新建一个文档，设置几个地方。

文档-&amp;gt; 首选项-&amp;gt; 语言 使用 utf8。

文档-&amp;gt; 首选项-&amp;gt; latex序 添加下面的内容。
&lt;pre class=&#34;prettyprint lang-latex&#34;&gt;
\newfontfamily\zhfont[BoldFont=Microsoft YaHei]{Microsoft YaHei} %设置中文
\newfontfamily\zhpunctfont{Microsoft YaHei} % 设置中文
%\makeglossary

\setmainfont{Consolas}           %这里设置英文衬线字体
\setmonofont{Consolas}                     %英文等宽字体
\setsansfont{Consolas}               %英文无衬线字体

\usepackage{zhspacing}
\zhspacing&lt;/pre&gt;
我还设置了保存为文档缺省设置，这样新编辑的文件就不用设置了，当然也可以保存成模板，这样每次加载这个模板就可以了。

还需要设置 工具-&amp;gt;首选项-&amp;gt;file handling-&amp;gt;转换器 这里的 latex(pdflatex)-&amp;gt;PDF(pdflatex) 这项，然后设置 转换器 为 xelatex $$i 。点击那个修改按钮，保存，应用。

这样，以后写好文件，点那个 pdf 的图标就可以直接预览到 pdf 文件啦。
</description>
    </item>
    
    <item>
      <title>说说 vpn</title>
      <link>https://wdicc.com/vpnc-howto/</link>
      <pubDate>Mon, 17 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/vpnc-howto/</guid>
      <description>
好久没更新了，最近改了改 vpnc 的设置，就发一个吧。&lt;br /&gt;

有些公司启用了 vpn 来让员工可以访问到公司内网的一些信息，或者让员工访问公司服务器的时候更加安全。一般可以用 cisco 的硬件 vpn 来搞定，也可以用 linux 下面的 openvpn 之类软件来构建一个 vpn server。&lt;br /&gt;

构建 vpn server 咱没搞过，我们公司用的是 cisco 的产品。连接 vpn server 的 client 有 vpnc 和 openvpn 什么的。&lt;br /&gt;

我使用的是 vpnc。networkmanager 还有他的插件（当然，也有 openvpn 的），就是说你可以做到点点鼠标就连接上你的 vpn。不过我这里没用他，因为他缺少一些 vpnc 配置文件支持的配置项，曾经还修改过 net-misc/networkmanager-vpnc 0.6.4 的源代码，来做到支持我的 vpn server，后来发现图形界面的不可靠，有时候连不上，一些错误信息还看不到。升级到了 0.7 之后，也一直懒得改源代码，字符界面的用起来也不错。图形界面一定要改，因为我不能让他记住密码我们的密码是一个 pin 码 + token 生成的，token 是变化的。而有个 group 密码是必须要记住的，因为这个又长又没有规律。图形界面没办法实现这个组合，只能修改源代码硬写到代码里面。&lt;br /&gt;

vpnc 的配置文件在 /etc/vpnc/ 下面。这里面有个 default.conf，当然你也可以写自己的 xxx.conf。如果执行 sudo vpnc xxx，那么用到的就是 xxx.conf，如果没有参数，那么使用 default.conf。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;
# example vpnc configuration file
# see vpnc --long-help for details

#Interface name tun0
#IKE DH Group dh2
#Perfect Forward Secrecy nopfs

# You may replace this script with something better
Script /etc/vpnc/custom-script

IPSec gateway vpn.xxx.com
IPSec ID General
IPSec secret xxxxxx
Xauth username wd
NAT Traversal Mode cisco-udp
#Xauth password&lt;/pre&gt;
gateway 就是你的 vpn server 的地址，IPSec secret 就是我说的 group pwd，Xauth password 是你的密码。还可以加上 debug level xxx 来显示 debug 信息，xxx 是一个数字，越大信息越多。

注意里面有个 script 行，这个就是最近修改的一个参数。有时候使用 vpn 可能只是需要连接一下公司的服务器而已，我可不想让他作为我的默认路由，比如我在开 bt 下载的时候如果用了 vpn 作%
</description>
    </item>
    
    <item>
      <title>linux 下面同步 palm 手机</title>
      <link>https://wdicc.com/palm-in-linux/</link>
      <pubDate>Tue, 07 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/palm-in-linux/</guid>
      <description>
plam 是万能的，呵呵。&lt;br /&gt;

主要参考了 gentoo wiki 上面的&lt;a href=&#34;http://gentoo-wiki.com/Category:Palm&#34; target=&#34;_blank&#34;&gt;几篇文章&lt;/a&gt;。编译好内核，然后 modprobe visor ，接着按hotsync同步按钮。此时可以看到 dmesg 的输出。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
usb 2-2: new full speed USB device using uhci_hcd and address 6
usb 2-2: configuration #1 chosen from 1 choice
visor 2-2:1.0: Handspring Visor / Palm OS converter detected
usb 2-2: Handspring Visor / Palm OS converter now attached to ttyUSB0
usb 2-2: Handspring Visor / Palm OS converter now attached to ttyUSB1&lt;/pre&gt;

然后还需要建立一个 udev 的 rule。

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
$ cat /etc/udev/rules.d/10-palm.rules 
# PalmOne Tungsten T3
BUS==&#34;usb&#34;,SYSFS{serial}==&#34;PalmSN12345678&#34;, KNERNEL=&#34;ttyUSB*&#34;,OWNER=&#34;root&#34;,GROUP=&#34;plugdev&#34;,MODE=&#34;0666&#34;,SYMLINK=&#34;pilot&#34;, RUN=&#34;/bin/su - wd -c &#39;/usr/bin/jpilot -s&#39;&#34;
#BUS=&#34;usb&#34;, SYSFS{product}=&#34;Palm Handheld*&#34;, KERNEL=&#34;ttyUSB*&#34;, MODE=&#34;666&#34;, SYMLINK=&#34;pilot&#34;, RUN=&#34;/bin/su - wd -c &#39;/usr/bin/jpilot -s&#39;&#34;
&lt;/pre&gt;&lt;br /&gt;

注意里面那个 serial，如果你不知道你的，或许可以用下面的那个 product。其实也可以查看 /proc/bus/usb/devices 来获取上面那些 serial 或者 product 信息的。仔细找找。另外还需要修改那个 wd 为你自己的用户名。&lt;br /&gt;

然后还需要装一个 jpilot 这个软件。需要先设置一下首选项，设置设备是 /dev/ttyUSB1 。以后同步的时候，只需要先启动 jpilot，然后按那个hotsync同步按钮就行了。还可以装软件，呵呵，不过似乎没办法选择装卡上还是手机上，估计都是手机上面了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>oracle 里面 kill session</title>
      <link>https://wdicc.com/kill-session-in-oracle/</link>
      <pubDate>Tue, 07 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/kill-session-in-oracle/</guid>
      <description>
eygle &lt;a href=&#34;http://www.eygle.com/faq/Kill_Session.htm&#34; target=&#34;_blank&#34;&gt;有篇文章&lt;/a&gt;讲了这个，之前也看过。昨天实际操作了一下。&lt;br /&gt;

因为如 eygle 所讲，kill 了 session 之后，操作系统里面的进程资源有时候不一定会立即释放，所以最好在 kill 之前就找到系统的进程 id，这样，如果不释放的时候，可以直接kill。省的之后找起来麻烦。&lt;br /&gt;

昨天操作的时候有这么几个步骤&lt;br /&gt;
&lt;ol&gt;&lt;br /&gt;
	&lt;li&gt;select * from v$session where username like &#39;UP&#39; --先找到这个用户的 session。&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;select * from v$sql a, v$session b where b.username = &#39;UP&#39; and a.sql_id = b.sql_id --找出来这个用户这些 session 对应的 sql 语句，好确认 session 的 id。&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;select * from v$process a, v$session b where a.addr = b.paddr and b.username like &#39;UP&#39; and b.sid = xxx --找出来他的系统进程id，就是那个 spid。&lt;/li&gt;&lt;br /&gt;
	&lt;li&gt;ALTER SYSTEM KILL SESSION &#39;sid, serial#&#39; --可以实施kill了，可能会提示你marked for kill，有必要的话，在os级别kill前面找出来的 spid。&lt;/li&gt;&lt;br /&gt;
&lt;/ol&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>域名终于搞回来了</title>
      <link>https://wdicc.com/wdicc-com-is-return/</link>
      <pubDate>Mon, 22 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/wdicc-com-is-return/</guid>
      <description>
历经周折，总算把域名弄回来了。我还是喜欢 wdicc.com 多过 wdicc.cn。呵呵。顺便鄙视一下 xh 这头猪，差点把我的域名弄丢。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>搜索引擎比较</title>
      <link>https://wdicc.com/compare-search-engines/</link>
      <pubDate>Fri, 19 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/compare-search-engines/</guid>
      <description>
前两天wii的放电视上面那个红外发射器的线断了，就搜索了一下看能不能修好。结果在 google.cn 搜到一条相关结果。今天看到 youdao.com 上线的消息，就兴起把各个搜索引擎都测试了一下。抓图如下。&lt;br /&gt;

百度的结果似乎和“断了”没有关系，这也敢号称最懂中文？三个关键字就sb了，垃圾一个。&lt;br /&gt;

&lt;a href=&#34;http://pic.yupoo.com/wdicc/321736367295/8lb7ro0u.jpg&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;百度的结果&#34; src=&#34;http://pic.yupoo.com/wdicc/321736367295/8lb7ro0u.jpg&#34; alt=&#34;&#34; width=&#34;1009&#34; height=&#34;1551&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

yahoo.cn 的结果也不是我想要的，不过至少“断了”这个关键字出来了。。。&lt;br /&gt;

&lt;a href=&#34;http://pic.yupoo.com/wdicc/297556367294/9roy8wm3.jpg&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;yahoo.cn的结果&#34; src=&#34;http://pic.yupoo.com/wdicc/297556367294/9roy8wm3.jpg&#34; alt=&#34;&#34; width=&#34;548&#34; height=&#34;1024&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

youdao 的结果比较来说好像是最好的了，里面我需要的不少。&lt;br /&gt;

&lt;a href=&#34;http://pic.yupoo.com/wdicc/115486367294/eadyj9iz.jpg&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;有道搜索的结果&#34; src=&#34;http://pic.yupoo.com/wdicc/115486367294/eadyj9iz.jpg&#34; alt=&#34;&#34; width=&#34;1009&#34; height=&#34;1663&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

google.cn 的结果第一条很符合我的要求，不过后面的。。怎么还出来psp了？。。。&lt;br /&gt;

&lt;a href=&#34;http://pic.yupoo.com/wdicc/477506367294/slrxdfz8.jpg&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;google.cn 的结果&#34; src=&#34;http://pic.yupoo.com/wdicc/477506367294/slrxdfz8.jpg&#34; alt=&#34;&#34; width=&#34;1009&#34; height=&#34;1259&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

不完全测试，仅作为消遣用，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>超强的rtorrent</title>
      <link>https://wdicc.com/supper-rtorrent/</link>
      <pubDate>Sat, 13 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/supper-rtorrent/</guid>
      <description>
越狱又开始了，没周末总要下一个看看。之前用 delug，速度还行，用起来感觉不错。可是自从 1.0rc 的某个版本之后，下载的时候时不时出现 CPU 100% 的情况。就装了 transmisstion，他不支持 dht，国内的下载速度很慢，去下国外的好像还行。&lt;br /&gt;

今天又试了一下 rtorrent，之前也用过，不过速度总上不来让人很郁闷。rtorrent 从某个版本就开始支持 dht 了，我之前使用的时候不知道从哪里去看这个支持，速度很慢，基本就不用了。今天总算发现了问题在哪里。&lt;br /&gt;

rtorrent 的配置文件是 ~/.rtorrent.rc ，例如我的。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-ini&#34;&gt;
# ~/.rtorrent.rc and enable/modify the options as needed. Remember to
# uncomment the options you wish to enable.

# Maximum and minimum number of peers to connect to per torrent.
min_peers = 40
max_peers = 200

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
#max_peers_seed = 50

# Maximum number of simultanious uploads per torrent.
#max_uploads = 15

# Global upload and download rate in KiB. &#34;0&#34; for unlimited.
#download_rate = 0
upload_rate = 30

# Default directory to save the downloaded torrents.
directory = /movie/download

# Default session directory. Make sure you don&#39;t run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = ./rtorrent-session

# Watch a directory for new torrents, and stop those that have been
# deleted.
#schedule = watch_directory,5,5,load_start=./watch/*.torrent
#schedule = untied_directory,5,5,stop_untied=

# Close torrents when diskspace is low.
#schedule = low_diskspace,5,60,close_low_diskspace=100M

# Stop torrents when reaching upload ratio in percent,
# when also reaching total upload in bytes, or when
# reaching final upload ratio in percent.
# example: stop at ratio 2.0 with at least 200 MB uploaded, or else ratio 20.0
#schedule = ratio,60,60,&#34;stop_on_ratio=200,200M,2000&#34;

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
port_range = 18204-19203

# Start opening ports at a random position within the port range.
#port_random = yes

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
#check_hash = no

# Set whetever the client should try to connect to UDP trackers.
use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip&#39;s.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
encryption = allow_incoming,enable_retry,prefer_plaintext

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to &#34;disable&#34; (completely disable DHT), &#34;off&#34; (do not start DHT),
# &#34;auto&#34; (start and stop DHT as needed), or &#34;on&#34; (start DHT immediately).
# The default is &#34;off&#34;. For DHT to work, a session directory must be defined.
#
dht = on

# UDP port to use for DHT.
#
dht_port = 18203

# Enable peer exchange (for torrents not marked private)
#
peer_exchange = yes

#
# Do not modify the following parameters unless you know what you&#39;re doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10

encoding_list = UTF-8&lt;/pre&gt;
里面最主要的是 dht=on 和 session，这两个同时启用，才能让 dht 生效，因为 dht 需要保存 dht table 到这个路径下面。配置好之后，去 tracker list 里面看，应该多了一个 dht:// ，这就o了，还有些其他信息，可以自己琢磨琢磨。
</description>
    </item>
    
    <item>
      <title>ATI 显卡双头显示配置</title>
      <link>https://wdicc.com/ati-dual-head/</link>
      <pubDate>Mon, 08 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ati-dual-head/</guid>
      <description>
参考自&lt;a href=&#34;http://gentoo-wiki.com/HOWTO_Dual_Monitors#ATI&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt; 。&lt;br /&gt;

双头就是接第二个显示器，或者接投影仪什么的，ati 里面叫做 bigdesktop，nvidia 叫做 twinview ，intel 的不太清楚，我记得好像也有个自己的名字。&lt;br /&gt;

Nvidia 的官方驱动有 twinview 的支持，图形界面下面配置起来似乎也不是很难。 ATI 的官方驱动支持的是 bigdesktop ，也有图形界面，不过那个界面很恶心，经常出现问题，不过可以试着删除 &lt;a href=&#34;http://wdicc.cn/howto-reset-ati-fglrx-settings/&#34; target=&#34;_blank&#34;&gt;/etc/ati/amdpcsdb&lt;/a&gt; 文件试试看。&lt;br /&gt;

下面是一个 bigdesktop 的 xorg.conf 文件。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;Section &#34;ServerLayout&#34;&gt;
	Identifier     &#34;Default Layout&#34;
	Screen         &#34;Default Screen&#34; 0 0
	InputDevice    &#34;Generic Keyboard&#34;
	InputDevice    &#34;Configured Mouse&#34;
	InputDevice    &#34;Synaptics Touchpad&#34;
EndSection

Section &#34;ServerFlags&#34;
	Option	    &#34;AIGLX&#34; &#34;off&#34;
	#Option	    &#34;AIGLX&#34; &#34;true&#34;
EndSection

Section &#34;Module&#34;
	load &#34;dbe&#34;
EndSection

Section &#34;InputDevice&#34;
	Identifier  &#34;Generic Keyboard&#34;
	Driver      &#34;kbd&#34;
	Option	    &#34;CoreKeyboard&#34;
	Option	    &#34;XkbRules&#34; &#34;xorg&#34;
	Option	    &#34;XkbModel&#34; &#34;pc104&#34;
	Option	    &#34;XkbLayout&#34; &#34;us&#34;
	#Option &#34;XkbOptions&#34; &#34;ctrl:nocaps&#34;
EndSection

Section &#34;InputDevice&#34;
	Identifier  &#34;Configured Mouse&#34;
	Driver      &#34;mouse&#34;
	Option	    &#34;CorePointer&#34;
	Option	    &#34;Device&#34; &#34;/dev/input/mice&#34;
	Option	    &#34;Protocol&#34; &#34;ImPS/2&#34;
	Option	    &#34;Emulate3Buttons&#34; &#34;true&#34;
EndSection

Section &#34;InputDevice&#34;
	Identifier  &#34;Synaptics Touchpad&#34;
	Driver      &#34;synaptics&#34;
	Option	    &#34;SendCoreEvents&#34; &#34;true&#34;
	Option	    &#34;Device&#34; &#34;/dev/psaux&#34;
#	Option	    &#34;Protocol&#34; &#34;auto-dev&#34;
	Option	    &#34;HorizScrollDelta&#34; &#34;0&#34;
EndSection

Section &#34;Monitor&#34;
	Identifier   &#34;Generic Monitor&#34;
	HorizSync    28.0 - 51.0
	VertRefresh  43.0 - 60.0
	Option	    &#34;DPMS&#34;
EndSection

Section &#34;Device&#34;
	Option	    &#34;DesktopSetup&#34; &#34;horizontal&#34; #Enable Big Desktop
	Option	    &#34;Mode2&#34; &#34;1280x1024&#34; #Resolution for second monitor
	Option	    &#34;VideoOverlay&#34; &#34;on&#34;
	Option	    &#34;OpenGLOverlay&#34; &#34;off&#34;
	Identifier  &#34;Generic Video Card&#34;
	Option &#34;XAANoOffscreenPixmaps&#34; &#34;true&#34;
	Driver      &#34;fglrx&#34;
	Option		&#34;DRI&#34; &#34;true&#34;
EndSection

Section &#34;Screen&#34;
	Identifier &#34;Default Screen&#34;
	Device     &#34;Generic Video Card&#34;
	Monitor    &#34;Generic Monitor&#34;
	DefaultDepth     24
	SubSection &#34;Display&#34;
		Modes    &#34;1024x768&#34;
	EndSubSection
EndSection

Section &#34;Extensions&#34;
	Option	    &#34;Composite&#34; &#34;Disable&#34;
	#Option	    &#34;Composite&#34; &#34;enable&#34;
EndSection

Section &#34;DRI&#34;
	Group 0
	Mode 0666
EndSection&lt;/pre&gt;
比较简单，只需要在 device 里面设置好就行了。

用 ati 的开源驱动，也可以双头显示。用下面的 xorg.conf 。
&lt;pre class=&#34;prettyprint lang-conf&#34;&gt;Section &#34;ServerLayout&#34;&gt;
	Identifier     &#34;Default Layout&#34;
	Screen         &#34;Default Screen&#34;
	InputDevice    &#34;Generic Keyboard&#34;
	InputDevice    &#34;Configured Mouse&#34;
	InputDevice    &#34;Synaptics Touchpad&#34;
EndSection

Section &#34;ServerFlags&#34;
	Option	    &#34;AIGLX&#34; &#34;off&#34;
	#Option	    &#34;AIGLX&#34; &#34;true&#34;
EndSection

Section &#34;Module&#34;
	load &#34;dbe&#34;
EndSection

Section &#34;InputDevice&#34;
	Identifier  &#34;Generic Keyboard&#34;
	Driver      &#34;kbd&#34;
	Option	    &#34;CoreKeyboard&#34;
	Option	    &#34;XkbRules&#34; &#34;xorg&#34;
	Option	    &#34;XkbModel&#34; &#34;pc104&#34;
	Option	    &#34;XkbLayout&#34; &#34;us&#34;
	#Option &#34;XkbOptions&#34; &#34;ctrl:nocaps&#34;
EndSection

Section &#34;InputDevice&#34;
	Identifier  &#34;Configured Mouse&#34;
	Driver      &#34;mouse&#34;
	Option	    &#34;CorePointer&#34;
	Option	    &#34;Device&#34; &#34;/dev/input/mice&#34;
	Option	    &#34;Protocol&#34; &#34;ImPS/2&#34;
	Option	    &#34;Emulate3Buttons&#34; &#34;true&#34;
EndSection

Section &#34;InputDevice&#34;
	Identifier  &#34;Synaptics Touchpad&#34;
	Driver      &#34;synaptics&#34;
	Option	    &#34;SendCoreEvents&#34; &#34;true&#34;
	Option	    &#34;Device&#34; &#34;/dev/psaux&#34;
#	Option	    &#34;Protocol&#34; &#34;auto-dev&#34;
	Option	    &#34;HorizScrollDelta&#34; &#34;0&#34;
EndSection

Section &#34;Monitor&#34;
    	Identifier      &#34;Integrated LCD&#34;
	 Option      &#34;DPMS&#34;
EndSection

Section &#34;Monitor&#34;
	Identifier      &#34;External VGA&#34;
	Option &#34;RightOf&#34; &#34;Integrated LCD&#34;
	 Option      &#34;DPMS&#34;
EndSection

Section &#34;Device&#34;
	Identifier  &#34;Generic Video Card&#34;
	Driver		&#34;radeon&#34;
#	# accelration
	Option          &#34;AGPMode&#34; &#34;4&#34;
	Option          &#34;EnablePageFlip&#34; &#34;on&#34;
	Option          &#34;RenderAccel&#34; &#34;on&#34;
	Option          &#34;AccelMethod&#34;   &#34;EXA&#34; # or XXA
	Option          &#34;DynamicClocks&#34; &#34;on&#34;
	Option		&#34;DRI&#34; &#34;true&#34;
        # Color Tiling
        Option          &#34;ColorTiling&#34;   &#34;on&#34;
    Option          &#34;Monitor-VGA-0&#34; &#34;External VGA&#34;
    Option          &#34;Monitor-LVDS&#34;  &#34;Integrated LCD&#34;
    # Option &#34;XAANoOffscreenPixmaps&#34; &#34;true&#34; # for composit
EndSection

Section &#34;Screen&#34;
	Identifier &#34;Default Screen&#34;
	Device     &#34;Generic Video Card&#34;
	Monitor    &#34;Integrated LCD&#34;
	DefaultDepth     24
	SubSection &#34;Display&#34;
		Modes    &#34;1280x1024&#34; &#34;1024x768&#34;
		Virtual 2304 1024
	EndSubSection
EndSection

Section &#34;Extensions&#34;
	Option	    &#34;Composite&#34; &#34;Disable&#34;
	#Option	    &#34;Composite&#34; &#34;enable&#34;
EndSection

Section &#34;DRI&#34;
	Group 0
	Mode 0666
EndSection&lt;/pre&gt;
可以看到改动也不是很大，主要增加了两个显示器，device里面增加了这两个显示器的设置。另外 screen 里面增加了那个 virtual，这个的参数就是将来两个显示器总共的屏幕大小，我的是 1024+1280 x 1024 ，横向相加，竖向的取最大的。

ok，这样就可以了。注意这里没有用到最上面那个链接里面说的 MergedFB。似乎最新的 xorg 用 xrandr 实现了这个，所以 MergedFB 就不需要了。这有个好处，可以随时调整分辨率什么的。例如 xrandr --output VGA --off ，去掉第二个显示器。 xrandr --output VGA --right-of LVDS ，设置 bigdesktop等等。xrandr 的方法还可以参考&lt;a href=&#34;http://wiki.debian.org/XStrikeForce/HowToRandR12&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。

升级到 xorg 1.5.3 以后，鼠标键盘的设置可以不在这里了，所以更加简单。
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;

# xorg.conf (xorg X Window System server configuration file)
#
# This file was generated by dexconf, the Debian X Configuration tool, using
# values from the debconf database.
#
# Edit this file with caution, and see the xorg.conf manual page.
# (Type &#34;man xorg.conf&#34; at the shell prompt.)
#
# This file is automatically updated on xserver-xorg package upgrades *only*
# if it has not been modified since the last upgrade of the xserver-xorg
# package.
#
# If you have edited this file but would like it to be automatically updated
# again, run the following command:
#   sudo dpkg-reconfigure -phigh xserver-xorg

Section &#34;ServerFlags&#34;
	#Option	    &#34;AIGLX&#34; &#34;off&#34;
	Option	    &#34;AIGLX&#34; &#34;true&#34;
EndSection

Section &#34;Module&#34;
	load &#34;dri&#34;
EndSection

Section &#34;Monitor&#34;
    	Identifier      &#34;Integrated LCD&#34;
	Option      &#34;DPMS&#34;
EndSection

Section &#34;Monitor&#34;
	Identifier      &#34;External VGA&#34;
	Option &#34;RightOf&#34; &#34;Integrated LCD&#34;
	Option      &#34;DPMS&#34;
EndSection

Section &#34;Device&#34;
	Identifier  &#34;Generic Video Card&#34;
	Driver		&#34;radeon&#34;
#	# accelration
	Option          &#34;AGPMode&#34; &#34;8&#34;
	Option          &#34;EnablePageFlip&#34; &#34;on&#34;
	Option          &#34;RenderAccel&#34; &#34;on&#34;
	Option          &#34;AccelMethod&#34;   &#34;EXA&#34; # or XXA
	Option          &#34;DynamicClocks&#34; &#34;on&#34;
	Option		&#34;DRI&#34; &#34;true&#34;
        # Color Tiling
        Option          &#34;ColorTiling&#34;   &#34;on&#34;
    Option          &#34;Monitor-VGA-0&#34; &#34;External VGA&#34;
    Option          &#34;Monitor-LVDS&#34;  &#34;Integrated LCD&#34;
EndSection

Section &#34;Screen&#34;
	Identifier &#34;Default Screen&#34;
	Device     &#34;Generic Video Card&#34;
	Monitor    &#34;Integrated LCD&#34;
	DefaultDepth     24
	SubSection &#34;Display&#34;
		Modes    &#34;1280x1024&#34; &#34;1024x768&#34;
		#Modes    &#34;1024x768&#34;
		Virtual 2048 1024
		Virtual 2304 1024
	EndSubSection
EndSection

Section &#34;Extensions&#34;
	#Option	    &#34;Composite&#34; &#34;Disable&#34;
	Option	    &#34;Composite&#34; &#34;enable&#34;
EndSection

Section &#34;DRI&#34;
	Group 0
	Mode 0666
EndSection&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ORA-00257 和 ORA-19815</title>
      <link>https://wdicc.com/ora-00257-and-ora-19815/</link>
      <pubDate>Sat, 06 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ora-00257-and-ora-19815/</guid>
      <description>
这几天遇到了这两个错误，记录一下。&lt;br /&gt;

使用 perl 的 DBI 连接的时候，会提示 ora-00257 错误，这个用 三qlplus 估计也是一样的错误，注意时远程连接才出错。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
CRITICAL : Can&#39;t connect &#34;db8.sds.cnb.yahoo.com&#34;&lt;/pre&gt;

同时，数据库的alert 里面有下面的信息

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
ORA-19815: WARNING: db_recovery_file_dest_size of 268435456000 bytes is 100.00% used, and has 0 remaining bytes available.
************************************************************************
You have following choices to free up space from flash recovery area:
1. Consider changing RMAN RETENTION POLICY. If you are using Data Guard,
   then consider changing RMAN ARCHIVELOG DELETION POLICY.
2. Back up files to tertiary device such as tape using RMAN
   BACKUP RECOVERY AREA command.
3. Add disk space and increase db_recovery_file_dest_size parameter to
   reflect the new space.
4. Delete unnecessary files using RMAN DELETE command. If an operating
   system command was used to delete files, then use RMAN CROSSCHECK and
   DELETE EXPIRED commands.
************************************************************************
ARCH: Archival stopped, error occurred. Will continue retrying
ORACLE Instance nirv3 - Archival Error&lt;/pre&gt;

登陆上数据库看看

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;

NAME                                 TYPE                   VALUE
------------------------------------ ---------------------- ------------------------------
archive_lag_target                   integer                0
log_archive_config                   string                 dg_config=(stb1)
log_archive_dest                     string
log_archive_dest_1                   string                 location=&#34;USE_DB_RECOVERY_FILE
log_archive_dest_10                  string
log_archive_dest_2                   string
log_archive_dest_3                   string
log_archive_dest_4                   string
log_archive_dest_5                   string
log_archive_dest_6                   string
log_archive_dest_7                   string

NAME                                 TYPE                   VALUE
------------------------------------ ---------------------- ------------------------------
log_archive_dest_8                   string
log_archive_dest_9                   string
log_archive_dest_state_1             string                 ENABLE
log_archive_dest_state_10            string                 enable
log_archive_dest_state_2             string                 ENABLE
log_archive_dest_state_3             string                 enable
log_archive_dest_state_4             string                 enable
log_archive_dest_state_5             string                 enable
log_archive_dest_state_6             string                 enable
log_archive_dest_state_7             string                 enable
log_archive_dest_state_8             string                 enable

NAME                                 TYPE                   VALUE
------------------------------------ ---------------------- ------------------------------
log_archive_dest_state_9             string                 enable
log_archive_duplex_dest              string
log_archive_format                   string                 %s_%t_%r_%a.arc
log_archive_local_first              boolean                TRUE
log_archive_max_processes            integer                4
log_archive_min_succeed_dest         integer                1
log_archive_start                    boolean                FALSE
log_archive_trace                    integer                0
standby_archive_dest                 string                 ?/dbs/arch

SQL&amp;gt; select * from v$log;

    GROUP#    THREAD#  SEQUENCE#      BYTES    MEMBERS ARCHIV STATUS                           FIRST_CHANGE# FIRST_TIME
---------- ---------- ---------- ---------- ---------- ------ -------------------------------- ------------- ------------
         1          1     221250   52428800          1 YES    INACTIVE                            5082709437 05-SEP-08
         2          1     221252   52428800          1 NO     INACTIVE                            5082713458 05-SEP-08
         3          2     270972   52428800          1 YES    INACTIVE                            5082699510 05-SEP-08
         4          2     270975   52428800          1 NO     CURRENT                             5082713581 05-SEP-08
         9          1     221251   52428800          1 NO     INACTIVE                            5082712943 05-SEP-08
        10          2     270973   52428800          1 YES    INACTIVE                            5082705151 05-SEP-08
        11          1     221253   52428800          1 NO     CURRENT                             5082713765 05-SEP-08
        12          2     270974   52428800          1 NO     INACTIVE                            5082711887 05-SEP-08
        13          3     275581   52428800          1 NO     INACTIVE                            5082712519 05-SEP-08
        14          3     275582   52428800          1 NO     CURRENT                             5082713078 05-SEP-08
        15          3     275579   52428800          1 NO     INACTIVE                            5082710114 05-SEP-08

    GROUP#    THREAD#  SEQUENCE#      BYTES    MEMBERS ARCHIV STATUS                           FIRST_CHANGE# FIRST_TIME
---------- ---------- ---------- ---------- ---------- ------ -------------------------------- ------------- ------------
        16          3     275580   52428800          1 NO     INACTIVE                            5082711321 05-SEP-08

12 rows selected.

SQL&amp;gt; ????select value from v$diag_info where name =&#39;Diag Trace&#39;;

VALUE
------------------------------------------------------------------------------------------------------------------------------------------------------
/home/oracle/app/diag/rdbms/nirv/nirv3/trace

SQL&amp;gt; select * from V$FLASH_RECOVERY_AREA_USAGE;

FILE_TYPE                                PERCENT_SPACE_USED PERCENT_SPACE_RECLAIMABLE NUMBER_OF_FILES
---------------------------------------- ------------------ ------------------------- ---------------
CONTROL FILE                                              0                         0               0
REDO LOG                                                  0                         0               0
ARCHIVED LOG                                            100                         0           13109
BACKUP PIECE                                              0                         0               0
IMAGE COPY                                                0                         0               0
FLASHBACK LOG                                             0                         0               0
FOREIGN ARCHIVED LOG                                      0                         0               0

7 rows selected.

SQL&amp;gt; show parameter db_recovery_file_dest_size

NAME                                 TYPE                   VALUE
------------------------------------ ---------------------- ------------------------------
db_recovery_file_dest_size           big integer            250G
SQL&amp;gt; show parameter DB_RECOVERY_FILE_DEST

NAME                                 TYPE                   VALUE
------------------------------------ ---------------------- ------------------------------
db_recovery_file_dest                string                 /sds/oradata
db_recovery_file_dest_size           big integer            250G
SQL&amp;gt; alter system set db_recovery_file_dest_size=300G;  

System altered.

SQL&amp;gt; show parameter DB_RECOVERY_FILE_DEST

NAME                                 TYPE                   VALUE
------------------------------------ ---------------------- ------------------------------
db_recovery_file_dest                string                 /sds/oradata
db_recovery_file_dest_size           big integer            300G
SQL&amp;gt; select * from V$FLASH_RECOVERY_AREA_USAGE;

FILE_TYPE                                PERCENT_SPACE_USED PERCENT_SPACE_RECLAIMABLE NUMBER_OF_FILES
---------------------------------------- ------------------ ------------------------- ---------------
CONTROL FILE                                              0                         0               0
REDO LOG                                                  0                         0               0
ARCHIVED LOG                                          83.41                         0           13115
BACKUP PIECE                                              0                         0               0
IMAGE COPY                                                0                         0               0
FLASHBACK LOG                                             0                         0               0
FOREIGN ARCHIVED LOG                                      0                         0               0

7 rows selected.&lt;/pre&gt;

可以看到空间是 83% 了，数据库应该就好了。不过这个是治标不治本的操作，需要把archive log删掉才行，具体怎么搞我也不会。。。汗。。
</description>
    </item>
    
    <item>
      <title>Apache优化之KeepAlive</title>
      <link>https://wdicc.com/apache-keepalive/</link>
      <pubDate>Fri, 05 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-keepalive/</guid>
      <description>
KeepAlive是在HTTP/1.1中定义的，用来保持客户机和服务器的长连接，执子之手与子偕老。通过减少建立TCP Session的次数来提高性能。常用的配置参数有{KeepAlive, KeepAliveTimeout, MaxKeepAliveRequests}。逐个说来：KeepAlive是决定开启KeepAlive支持；KeepAliveTimeout决定一 个KeepAlive的连接能保持多少时间，Timeout就尽快shutdown链接，若还有数据必须再建立新的连接 了；MaxKeepAliveRequests于KeepAliveTimeout相似，意思是服务多少个请求就shutdown连接。看个例子：&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
   KeepAliveTimeout 5&lt;/pre&gt;
意思是说，打开KeepAlive，每个连接只保持5秒就中断。

对于KeepAlive的配置需要慎重，错误的参数可能导致严重的性能问题。一个高负载的Server，如果建立的很多长连接将无法继续服 务新的连接。因此需要根据server的性质调整KeepAliveTimeout或是MaxKeepAliveRequests的值。

例如：你的网页上有三幅图画2个外部javascript，他们都存放在你自己的server上。因此将 MaxKeepAliveRequests设置为7比较合适。3幅图2个js各一个link，网页本身一个link，还有firefox传说中的 favicon.ico。当然还是要有KeepAliveTimeout的。如果客户机用了该死的IE并且设置了某个该死的选项，IE是不会向服务器发送 HEAD请求查看图片（或是其他资源）是否过期的，而是直接使用本地图片。这个时候服务器是不会计算Request的(因为压根就没有Request 嘛)。再如果只有MaxKeepAliveRequests参数，服务器会默认等待5秒才结束KeepAlive连接。通常这5秒可能玩死一个高负载的服 务器(所以说这个社会需要闪婚...)。因此打开Firefox，启动Firebug，看看你的站究竟需要多少次请求，再决定KeepAlive吧。
</description>
    </item>
    
    <item>
      <title>给超强二笔作的几个码表文件</title>
      <link>https://wdicc.com/cqeb-mb/</link>
      <pubDate>Thu, 04 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cqeb-mb/</guid>
      <description>
最近被忽悠玩上了二笔输入法，弄了几个码表。&lt;br /&gt;

一个是给 palm treo 650 的掌易用的，下载地址在 &lt;a href=&#34;http://www.box.net/shared/22s9qp8s77&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

treo 650 上面少几个键，所以做了下面的合并。&lt;br /&gt;

;与k键合并&lt;br /&gt;
,与m键合并&lt;br /&gt;
.与v键合并&lt;br /&gt;
/与q键合并&lt;br /&gt;
另外一个是 scim 用的，下载地址在 &lt;a href=&#34;http://www.box.net/shared/0a2pn45rpt&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

需要先安装 scim-tables ，直接复制到 /usr/share/scim/tables/ 下面就行。图标用了 scim-tables 里面的二笔的，名字叫 二笔*超强。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>感动奥运</title>
      <link>https://wdicc.com/gandong-aoyun/</link>
      <pubDate>Sun, 31 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gandong-aoyun/</guid>
      <description>
转载自这里 http://www.my1510.cn/article.php?2ccc057193ec54ae&lt;br /&gt;

感动——奥运精神和风频吹&lt;br /&gt;
2008北京奥运圣火熄灭了，电视机天天重复着奥运夺冠的镜头，人们在激动过后回想奥运到底给我们带来了什么？是什么改变我们的生活？是不是金牌影响着我们的选择？还是选手背后鲜为人知的故事最激励我们的斗志。&lt;br /&gt;
奥运选手的故事和金牌相得益彰，演绎着“更快、更高、更强”，也给我们树立了一个顽强不屈的榜样，这些故事高高举起五环，照亮人们前进的路程。有梦想，就有希望；有奋斗，就会有奇迹。&lt;br /&gt;
赛艇女子单人单桨选手32岁的张秀云，在1996年亚特兰大奥运会上获得了银牌。2000年和2004年两届奥运会，她都获得了参赛资格，但因为有严重的 心脏病，两次都没有划出一桨无功而返。张秀云从没有放弃，又带着自己的梦想参加了北京奥运会。虽然她在决赛中，名列第四。赛后她说：“我已尽我所能。”&lt;br /&gt;
19日北京奥运会男子举重105公斤以上级的颁奖仪式上演了感人的一幕：该项目冠军、德国选手马·施泰纳把亡妻苏珊的照片和奥运金牌高高举起，让人们不仅 看到一个强壮的大力士，还深深感受到他对妻子深深的爱。这位德国大力士在比赛最后阶段上演大逆转，用一枚沉甸甸的奥运金牌来祭奠亡故的妻子，此情此景令人 不禁潸然泪下，成为北京奥运会上感人至深的一幕。去年7月的一起车祸夺去了施泰纳妻子苏珊的生命，从此施泰纳就一直随身带着苏珊的照片，高强度的艰苦训练 就成为施泰纳摆脱痛苦思念折磨的唯一途径。26岁的施泰纳在夺金后激动地表示，他的亡妻苏珊在比赛中一直陪伴着他，给予他夺金的勇气。他说：“我所有的期 盼就是苏珊在今天可以看到我的成功。我不是一个迷信的人，但我可以肯定的是，苏珊在注视着我，她在我的心里，给予我勇气和力量。这是一场献给苏珊的胜利。 ”马·施泰纳夺得的这枚奥运金牌不仅是德国16年来获得的第一枚奥运举重金牌，更证明了爱能创造奇迹。&lt;br /&gt;
帕蒂卡用一只手臂做到了常人用两只手都很难做到的事情。一个天生右下臂残疾的坚强姑娘，一个被誉为为乒乓球而生的波兰“维纳斯”。13日她代表波兰队与中 国香港队进行女团小组赛的第一轮比赛，虽然最终以微弱分差惜败。但比赛中，这位独臂女侠还是赢得了全场的尊敬和掌声。在波兰排名第三、世界排名第147位 的帕蒂卡，从7岁起就迷上了乒乓球，11岁参加残奥会，15岁赢得2004年雅典残奥会乒乓球冠军。今年她还在世乒赛首轮小组赛中打败了世界排名第六的新 加坡名将李佳薇，证明了自己的实力。虽然帕蒂卡最终没有取得本届奥运会女单的入场券，但她却得以代表波兰乒乓球女队参加女团比赛，同时也力求在残奥会上捍 卫金牌。&lt;br /&gt;
荷兰人范德韦登剃着光头，脑门两侧皮肤上各印着“ＮＥＤ”（荷兰的英文简称）三个字母。你再仔细看的话，会发现他头顶上有两个一元硬币大小的伤疤，说话喘 气的时候都会翕动。那两个触目惊心的伤疤，是白血病患者做化疗和骨髓移植的痕迹。不过，曾经的白血病患者，在8月21日成了北京奥运会男子10公里马拉松 游泳的冠军，这也是奥运会历史上首个男子马拉松游泳冠军。2001年，20岁的范德韦登被确诊患上了白血病，游泳生涯看似就要走向终点。“当你躺在医院 里，忍受着巨大的病痛，你简直就不会去想下个月，下个星期，乃至下个小时的事情，”获胜后的范德韦登说。“我从白血病上学到了什么？就是凡事要一步一步 来，要有耐心。”&lt;br /&gt;
8月20日，在刚刚结束的奥运会女子游泳10公里马拉松比赛中，来自南非的独腿女侠纳塔莉-杜托伊特没能获得奖牌，也没能跻身前十名，但是所有人都对她表 示钦佩。在比赛中，纳塔莉在24名运动员中以落后冠军、俄罗斯选手拉里莎-伊利琴科1分22秒2的成绩排名第16，领先第24名12分8秒2之多，让很多 健全的运动员以及现场观众惊叹不已。更让大家惊奇的是，她在下水之前将假肢去掉，几乎用一条右腿游完10公里。&lt;br /&gt;
西山丽是获得本届奥运会冠军的日本女子垒球队的二垒手，她曾经实施过更换心脏的手术。初中二年级时，一位美国器官捐赠者捐赠了适合西山丽的心脏。在经过8 个小时的心脏移植手术后，西山丽在父母的呼唤声中睁开了眼睛。那一刻她脸上的微笑令她的父母至今难忘。但是，这次手术只能保证她拥有正常人的生活。当父亲 询问她还要不要打垒球时，西山丽回答：“我已经做了手术，死亡的威胁已经不存在了，让我打垒球吧！”她在心里暗暗发誓：“为了那些病中的人们，为了给他们 带来梦想和勇气，我一定要努力。”在北京，西山丽依旧笑着，“我希望孩子们能够像我一样拥有自己的理想。”每逢西山丽参加比赛，母亲千子一定会去现场观 看。每次，她都在赛场边祈祷：“一定要平安无事地结束比赛。”&lt;br /&gt;
在体操女子个人全能决赛中，出现了一张并不年轻的面容，其眼神透出坚定与温柔。她就是已经33岁的德国老将奥克萨娜·亚历山德罗芙娜·许索维蒂纳。为了给 患白血病的儿子治病，她曾以26岁高龄复出参赛，此次是她第5次参加奥运会比赛，并获得女子跳马银牌，现场观众对她表达了敬佩之情。许索维蒂纳的大儿子阿 廖沙2002年被诊断患上白血病，由于治疗需要高昂的费用，生活并不富裕的许索维蒂纳一家实在难以支付，于是她选择了复出参赛，因为“一枚世锦赛金牌等于 3000欧元的奖金，这是我唯一的办法”许索维蒂纳说。为了能够尽可能多的参加比赛，争取获得奖金的机会，许索维蒂纳每次都会把体操的4个项目全部都报上 名。为了儿子，从26岁开始，许索维蒂纳朝全能型发展。“母爱胜于天”，中国这句老话很适合许索维蒂纳。&lt;br /&gt;
8月20日，美国选手凯尔·贝内特（88号）在小轮车男子竞速计时排位赛中，一位选手在他面前摔倒。贝内特躲避不及也被阻拦倒下，之后又造成后面选手连环 摔倒。贝内特在这次事故中受伤，躺在赛场上长时间无法动弹，最后在医生紧急诊治下，他又顽强地站了起来，并拒绝了医护人员的担架，重新跨上小轮车。尽管左 手已经不能握把，但他还是完成了比赛路程，现场观众给予他热烈的掌声。他最终以小组第四的身份晋级半决赛。&lt;br /&gt;
“除非我的腿断了，否则我会一直跑下去”，这是英国34岁的马拉松选手拉德克里夫的奥运宣言。拉德克里夫是当今女子马拉松项目上最优秀的选手之一，她目前 仍然保持着2小时15分25秒的女子马拉松世界纪录。已经是妈妈选手的拉德克里夫这次已经是第四次参加奥运会了。没成想此次参赛前，拉德克里夫惨遭股骨骨 折，但她还是坚持训练，誓言夺金。然而在比赛的关键时刻她被对手踩掉鞋子，肌肉突然痉挛又引发旧伤，当她一瘸一拐中途休息时，脸上痛苦的表情让所有人都以 为她要放弃比赛，可她短暂调整后，再次奔跑起来。拉德克里夫咬着牙流着泪跑到终点。这次她依然没有拿到金牌， 最终位列第22名。拉德克里夫赛后说：“跑到后半程时，我的左腿已经完全僵硬了，我几乎是用一条腿跑完剩下的比赛的。”即便如此，她仍坚强展望：“还没有 结束，我想下一次在伦敦的时候我会更有机会。”&lt;br /&gt;
21日，中华台北选手苏丽文在跆拳道女子57公斤级铜牌争夺战中，带着严重的腿伤，独腿上阵，多次因伤倒地，但她坚持到底。因为三局后双方4比4打平，根 据规则要进行加时赛，加时赛采用“突然死亡法”，即谁先得分谁就获胜。她第14次倒在了地上，却第一次伤心地哭了出来，并再也无力站起来了。虽然最终她负 于克罗地亚选手祖布契奇，没能获得奖牌，但她赢得了人们的赞誉。罗宾称赞苏丽文是“勇敢的对手”。&lt;br /&gt;
马修·埃蒙斯把头深埋在妻子怀里，没有人看到这一刻他是否落泪。从雅典到北京，这一枪原本能击碎四年的噩梦，这一枪原本能成就一对奥运金牌夫妻，这一枪原 本能写下一个童话般的结局。和四年前一样，卡捷琳娜坐在看台上给捷克电视台当解说嘉宾；马特站在男子50米步枪三姿的决赛2号靶位上；4.4的数字出现在 显示屏上，冰冻了卡捷琳娜的脸，她张着嘴巴，眼睛一眨不眨，愣了好几秒钟，然后冲下看台，把丈夫拥入怀里，在他耳边轻轻地说：“命中注定还不是时候。”柴 静在后来的访谈中透露，其实是埃蒙斯反而安稳妻子，下次再夺金。&lt;br /&gt;
8月18日，俄罗斯选手伊辛巴耶娃在北京奥运会女子撑杆跳高决赛中夺得金牌并创造新的世界纪录5.05米。这是这位跳高女王第24次改写自己保持的世界纪 录。伊辛巴耶娃自豪说“天空是我不断挑战的极限，我想我很快会向5米10发起冲击的。”这个距离天空最近的女人，无忧无虑地在属于她的高度自由飞翔。&lt;br /&gt;
伊拉克奥运代表团在奥运会开幕不到十天才得到参赛资格，他们的队员甚至连队服都没有。皮划艇上，其他国家的选手都穿着合适的队服，而伊拉克的选手则穿着旧 T恤，但他们仍然在顽强的比赛。 而由于资金匮乏，参加短跑比赛的伊拉克女选手达娜·侯赛因也只能穿着一双有些破损的“二手”跑鞋参加比赛。她的一句话曾让世界潸然泪下，她躲过了两次枪击 后依然坚持训练，但是此前得知无法参加北京奥运会时，她一度崩溃了。教练安慰她，4年后可以参加伦敦奥运会，21岁的达娜脱口而出：“照伊拉克这个样子， 我不知道自己能不能活到2012年……”中国网友得知这一消息无不为之动容，在开幕式伊拉克代表团入场时，全场中国观众给予了不亚于东道主代表团的礼遇， 报以热烈的掌声。当他们离开时，中国网友特意将自己准备的球鞋、衣服、福娃以及各种具有中国特色的礼物送给伊拉克代表团。伊拉克队的教练非常感动地说：“ 虽然我们远离家乡，但我们在中国感受到了温暖。希望大家有机会能到巴格达，让我们来回报你们。”&lt;br /&gt;
三名外国人波兰代表队首席医务官休伯特·克日什托菲亚克、队医马尔钦·克日什托杰克和23岁的波兰皮划艇女选手贝娅塔·米科瓦伊奇克在开幕式上救助一名晕 倒的中国女孩，为此，他们错过了奥运会点火仪式。网友说：这完美地诠释了本届奥运会主题曲表达的情感：我们来自同一个世界，我们是一家人。奥运会将人们连 在了一起，不论种族、文化和语言。&lt;br /&gt;
“因为我爱，所以我回来”著名女子花剑运动员栾菊杰曾在1984年洛杉矶奥运会上为中国赢得第一枚击剑金牌，也是迄今为止中国击剑史上唯一的一枚奥运金 牌。如今，50岁的她重披战袍，以教练员和运动员的双重身份代表加拿大出征北京奥运会。当被问及年过半百，“挥剑出山”的因由时，这位已是三个孩子的母亲 表示，她放弃职业运动员生涯已经有20年，如果不是因为这一届奥运会在中国举办，她不会想到重披战袍，“随着北京奥运会的临近，这个念头越来越强烈，因此 我最终作出了重新回来的决定。”&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>总算搞定了我的CDMA无线上网卡</title>
      <link>https://wdicc.com/cmda-1x-in-gentoo-linux/</link>
      <pubDate>Sat, 26 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cmda-1x-in-gentoo-linux/</guid>
      <description>
早先在 Archlinux 的时候，就使用过这块卡。现在换了 gentoo，内核要自己编译，昨天拿回网卡后一直没搞定，今天总算搞定了。&lt;br /&gt;

我的是一块品速的 pinsu-100c 网卡，是 pccard（pcmcia）类型的。&lt;br /&gt;

如果是大于2.6.13内核的，先安装 sys-apps/pcmciautils 这个包。否则安装 pcmcia-cs 这个包。&lt;br /&gt;

内核参数需要设置的有下面几个：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
Device Drivers
 Network device support (NETDEVICES [=y]) 下面的
  ppp
   PPP support for async serial ports
# 如果搞不定可以试试看把别的ppp的也选上
# 然后是
Bus options (PCI etc.)
 PCCard (PCMCIA/CardBus) support
# 这下面相关的，我选的有 16-bit 那个和 yenta-compatible bridge ，通常就这个
# 然后是下面这个，对应的模块是 serial_cs，这个会把 pccard 对应到 /dev/ttyS* 这个设备文件
Device Drivers
 Character Devices
  PCMCIA character devices
# 相关的模块
pcmcia_core            31892  4 serial_cs,pcmcia,yenta_socket,rsrc_nonstatic
&lt;/pre&gt;&lt;br /&gt;

搞定这些kernel选项之后，插入 pccard，应该会看到类似下面的信息，我之前因为kernel没有支持最后那个 serial_cs 模块，插入的时候没有最后两行信息。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
$ dmesg
pccard: card ejected from slot 1
pccard: PCMCIA card inserted into slot 1
pcmcia: registering new device pcmcia1.0
ttyS1: detected caps 00000700 should be 00000100
1.0: ttyS1 at I/O 0x2f8 (irq = 18) is a 16C950/954

$ ls -alh /dev/ttyS1
crw-rw---- 1 root uucp 4, 65 07-26 22:28 /dev/ttyS1

# 要注意那个时间，应该是你插入的时间，否则就有问题了。
&lt;/pre&gt;&lt;br /&gt;

好了，设备识别出来了。那再安装 net-dialup/wvdial 这个包，用来拨号的。如果是 gnome 环境，也可以安装 net-dialup/gnome-ppp ，他会关联安装 wvdial，这个是 gui 的，可能更友好一点。&lt;br /&gt;

同时还需要安装一个叫做 sys-apps/setserial 的包，用来给 ttyS1 设备设置比特率，不太清楚为什么需要设置。用命令 sudo setserial /dev/ttyS1 baud_base 230400 ，要注意那个 230400，我从网上搜到的说网卡支持最高的比特率是这个，所以设置了这个，设置别得行不行，没试过。&lt;br /&gt;

然后呢，还需要有一个 /etc/wvdial.conf 文件。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
[Modem0]
  Modem = /dev/ttyS1
  Baud = 57600
  SetVolume = 0
  Dial Command = ATDT
  Init1 = ATZ
  FlowControl = Hardware (CRTSCTS)
[Dialer Defaults]
  Username = CARD
  Password = CARD
  Phone = #777
  Stupid Mode = 1
  Inherits = Modem0
&lt;/pre&gt;&lt;br /&gt;

从网上搜到的，照抄就行了。关键是那个 /dev/ttyS1 ，和那个 Baud。一个对应你的设备，一个是比特率。我不太清楚为什么和上面设置的那个比特率不一样，不过我使用 minicom 测试的，只有这个比特率能 work。但是或许你那的情况会不一样，可以使用 minicom 来测试，minicom 里面设置了比特率之后，可以多输入几个 AT 回车看看有没有返回 OK，返回就能工作。&lt;br /&gt;

这样就一切ok了，sudo wvdial 就可以拨号了。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
$ sudo wvdial
--&gt; WvDial: Internet dialer version 1.60
--&gt; Initializing modem.
--&gt; Sending: ATZ
OK
--&gt; Modem initialized.
--&gt; Sending: ATDT#777
--&gt; Waiting for carrier.
CONNECT
--&gt; Carrier detected.  Starting PPP immediately.
--&gt; Starting pppd at Sat Jul 26 22:15:52 2008
--&gt; Pid of pppd: 11766
--&gt; Using interface ppp0
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; local  IP address 211.145.60.183
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; remote IP address 220.192.0.22
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; primary   DNS address 220.192.0.130
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
--&gt; secondary DNS address 220.192.8.58
--&gt; pppd: ��[06][08]��[06][08][08]�[06][08]
&lt;/pre&gt;&lt;br /&gt;

最主要那个 ATZ 发送之后，要返回一个 OK，如果没有，那就是表示没 work，继续搞吧，设备文件没问题的话，一般就出在比特率上面了，结合 setserial 和 minicom 多修改几个看看。&lt;br /&gt;

gnome-ppp 使用很简单了，自己琢磨吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>昨天去看了《功夫熊猫》</title>
      <link>https://wdicc.com/kong-fu-panda/</link>
      <pubDate>Sun, 06 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/kong-fu-panda/</guid>
      <description>
浦发的电影票好久没定上了，所以熊猫出来好久了也没去看。&lt;br /&gt;

&lt;img src=&#34;http://pic.yupoo.com/wdicc/655915d3eac1/aafljbo3.jpg&#34; alt=&#34;功夫熊猫&#34; width=&#34;500&#34; height=&#34;500&#34; /&gt;&lt;br /&gt;

片子还是不错的，“Mr 乌龟”的这种叫法不知道是怎么搞出来的，呵呵。&lt;br /&gt;

这里有不少预告片，可以去看看。 http://www.mtime.com/movie/44740/trailer.html&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>万恶的 ATI fglrx 驱动</title>
      <link>https://wdicc.com/howto-reset-ati-fglrx-settings/</link>
      <pubDate>Fri, 04 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/howto-reset-ati-fglrx-settings/</guid>
      <description>
ATI 官方驱动带了一个 amdcccle 命令，可以显示图形界面对显示器作一些设置，例如修改分辨率，twinview, dual head, bigdesktop 这些设置。其实 nvidia 的官方驱动也是带了这么一个工具的。&lt;br /&gt;

但是呢，有时候就会发现，通过这个命令修改显示之后，你的xorg.conf 里面的设置就不起作用了！无论你之后如何去修改你的 xorg.conf ，他根本不会去理会。&lt;br /&gt;

我遇到的问题就是，某次通过 amdcccle 设置了一下 bigdesktop，结果导致接上我的另外一个LCD之后，那个LCD的分辨率死活就卡在 1024x768 上了。要知道，那个LCD是支持 1280x1024的，可是无论如何设置，就是不能提高分辨率了。查看 xorg 的log，能看到读取的 /etc/X11/xorg.conf 文件，可是就是没效果。&lt;br /&gt;

开始怀疑是显示器出于保护，把分辨率设置底了，结果接到别人的笔记本上面是没问题的。后来研究来研究去，发现还是 ATI 驱动的问题。&lt;br /&gt;

/etc/ati 下面有不少文件，也不知道这些文件是什么用途，但是 amdpcsdb 这个文件就是罪魁祸首了。删掉后LCD的分辨率就正常了。&lt;br /&gt;

很奇怪，我执行 amdcccle 的时候，用的可不是 sudo ，他是怎么写到这个文件里面的？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>自动登录网站的 greasemonkey 脚本</title>
      <link>https://wdicc.com/greasemonkey-autologin-script/</link>
      <pubDate>Sun, 22 Jun 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/greasemonkey-autologin-script/</guid>
      <description>
自动登录 gmail 的 greasemonkey 脚本，可以根据需要修改 formElement.name==&#34;Email&#34; 为别的，来登录别的网站。注意修改 name, include 这些相关的东东&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-javascript&#34;&gt;
// (c) 2007, Yabin Guo
// To install, you need Greasemonkey: http://greasemonkey.mozdev.org/
//
// --------------------------------------------------------------------
// ==UserScript==
// @name          gmail Login
// @description   Auto-login of gmail
// @include       https://www.google.com/a/wdicc.com/*
// ==/UserScript==

//replace your seraph username and password in the following expression;
userName=&#34;wd&#34;;
passWord=&#34;*******&#34;;

function submitFirstPasswordForm() {
	var form=document.forms[0];
    var submitButton = null;
	var passwordElem;
	var accountElem;
	var submitButton;
    for (i=0; formElement=form[i]; ++i){
		if(formElement.type==&#34;password&#34;){
			passwordElem=formElement;
		}else if(formElement.name==&#34;Email&#34;){
			accountElem=formElement;
		}else if(formElement.type==&#34;submit&#34;){
			submitButton=formElement;
		}
	}

	accountElem.value=userName;
	passwordElem.value=passWord;

    if (submitButton) {
        submitButton.focus();
        submitButton.style.MozOutline = &#34;2px solid purple&#34;;
        // Submit the form by calling click() on the submit button.
        submitButton.click();
        // Break out of both loops.
        return; 
      }
}

window.addEventListener(
  &#34;load&#34;, 
  function() { 
    setTimeout(submitFirstPasswordForm, 0); 
  }, 
  false
);
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>张贴小广告~</title>
      <link>https://wdicc.com/guanggaoguanggao/</link>
      <pubDate>Sun, 25 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/guanggaoguanggao/</guid>
      <description>
&lt;a href=&#34;http://uglyorbeauty.blog.sohu.com/&#34;&gt;http://uglyorbeauty.blog.sohu.com/&lt;/a&gt;&lt;br /&gt;

做个广告哈~嘿嘿，大家多捧场~&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>开始锻炼第二天</title>
      <link>https://wdicc.com/doing-exercise/</link>
      <pubDate>Tue, 06 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/doing-exercise/</guid>
      <description>
从昨天早上开始，就早早爬起来来公司附近的健身中心跑步了。&lt;br /&gt;

说起来，去年也曾经跑了2个月，不过体重下去2斤，汗... 昨天去了之后称了一下，已经比去年冬天又重了2，3公斤，日阿，长的真快。&lt;br /&gt;

昨天去了之后，基本就是恢复一下体力，两条杆的那个跑步机上面跑了25分钟左右，累的不行了。就去器械做了20多个走人。今天先去那里搞了 15 分钟热身，然后去跑步机上面跑了 15 分钟，本来打算是10分钟完事的，结果咬着呀跑了15分钟。希望明天能直接在跑步机上面跑30分钟。&lt;br /&gt;

事实证明，跑步的时候有个好看的片子来分散注意力的话，还是很容易坚持的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>尝试了一下APE到flac格式的转换</title>
      <link>https://wdicc.com/ape-to-flac/</link>
      <pubDate>Sun, 20 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ape-to-flac/</guid>
      <description>
突然没事，就尝试一下看看。。。参考 &lt;a href=&#34;http://www.linuxgem.org/tip/convert-ape-and-cue-to-flac.html&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

gentoo 里面，需要安装 mac-ports 和 shntools。shntools 需要启用 flac 的 use。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

转完之后，文件名都是 lssplit-track00.flac 这种的。如果出现不认识 ape 格式的错误，多半是 mac-ports 没安装的缘故。

另外，现在在用 scim-python 打字，感觉有点意思。速度还行，词库有几十M，应该不差吧。。。
</description>
    </item>
    
    <item>
      <title>实话实说</title>
      <link>https://wdicc.com/shihuashishuo/</link>
      <pubDate>Sat, 19 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/shihuashishuo/</guid>
      <description>
小 崔：大叔大妈，好久不见，股票炒得挺好吧？&lt;br /&gt;

宋丹丹：好啊，那是相当得好！&lt;br /&gt;

小 崔：买的都是啥股票？&lt;br /&gt;

赵本山：都是中石油嘛。&lt;br /&gt;

宋丹丹：不说话还能把你憋死？&lt;br /&gt;

赵本山：我看中石油得先把你憋死！&lt;br /&gt;

小 崔：大妈，我听说中石油最近跌得很厉害啊？&lt;br /&gt;

宋丹丹：假象，绝对的假象！不会下蹲的股票是跳不高的。股评家说了，买了中石化，生活不用怕；买了中石油，生活不用愁。&lt;br /&gt;

赵本山：是啊，那中石油是干蹲不起，啥时候跌停板了也就到底了。&lt;br /&gt;

小 崔：大叔，你买的是什么股票？&lt;br /&gt;

宋丹丹：那他能好意思说吗？中国平安！&lt;br /&gt;

小 崔：大叔，您当时咋想的？&lt;br /&gt;

赵本山：我寻思中国平安从149元跌到100元就是地板价了，没想到地板下面还有地窖，地窖下面还有地狱，更没想到的是地狱还有十八层！&lt;br /&gt;

小 崔：看来炒股赚钱还真挺难的。 大叔大妈,现在有啥打算？&lt;br /&gt;

宋丹丹：还打算啥呀？搁家解套呗！石油套—-钢钢的—-老他妈难解了！问君能有几多愁，恰似满仓中石油。&lt;br /&gt;

赵本山：我整个锣，没事出去敲一敲：平安无事了！&lt;br /&gt;

小 崔：大叔大妈，每人一句话,总结感言.&lt;br /&gt;

宋丹丹：我十分想抛中石油.&lt;br /&gt;

赵本山：说那玩儿干啥?我整点有用的说.印花税啥时候降下来呀?&lt;br /&gt;

零七年，走远了，牛市一去不返了。&lt;br /&gt;

零八年，危险了，股市出现拐点了。&lt;br /&gt;

蓝筹股，跌惨了，中国石油腰斩了。&lt;br /&gt;

概念股，疲软了，奥运行情搁浅了。&lt;br /&gt;

融资门，上演了，千亿增发拍板了。&lt;br /&gt;

印花税，不减了，政协提案白喊了。&lt;br /&gt;

美联储，拨款了，纽约股市回暖了。&lt;br /&gt;

证监会，不管了，转眼又跌百点了。&lt;br /&gt;

抢反弹，没胆了，弱市积重难返了。&lt;br /&gt;

要救市，太晚了，市场人心都散了。&lt;br /&gt;

三千五，不远了，主力杀跌急眼了。&lt;br /&gt;

同学们，快闪了，再不撤退破产了&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用 uvesafb</title>
      <link>https://wdicc.com/use-uvesafb/</link>
      <pubDate>Sun, 13 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-uvesafb/</guid>
      <description>
FB 就是 Frambuffer 了。直观一点说，使用之后，可以给 console 设置分辨率，可以在console下面看电影，看图？&lt;br /&gt;

在 Kernel 里面，ATI 显卡有个 Readonfb，使用后不需要修改 grub 就可以直接出现高分辨率的 console，但是他和 ATI 的 fglrx 驱动冲突，会导致死机，所以，基本没法子用，除非你不打算进 x。&lt;br /&gt;

&lt;a href=&#34;http://dev.gentoo.org/~spock/projects/uvesafb/&#34; target=&#34;_blank&#34;&gt; uvesafb&lt;/a&gt; 以前叫做 vesafb-tng，似乎是从 kernel 2.6.23 开始改名的。使用这个也很简单了，参考作者的 &lt;a href=&#34;http://dev.gentoo.org/~spock/projects/uvesafb/&#34; target=&#34;_blank&#34;&gt;web&lt;/a&gt; 页面。&lt;br /&gt;

有几个内核参数：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
Graphics support ---&amp;gt; Userspace VESA VGA graphics support
General Setup ---&amp;gt;  Initial RAM filesystem and RAM disk (initramfs/initrd) support 设置为 /usr/share/v86d/initramfs
上面几个设置分别是
CONFIG_CONNECTOR=y
CONFIG_FB_UVESA=y
CONFIG_INITRAMFS_SOURCE=&#34;/usr/share/v86d/initramfs&#34;&lt;/pre&gt;
安装 klibc 和 v86d 。修改 grub，添加 video=uvesafb:1024x768-32,mtrr:3,ywrap

如果遇到 &#39;uvesafb: failed to execute /sbin/v86d&#39; 的错误，可能是最后一个内核参数没有设置好的缘故。
</description>
    </item>
    
    <item>
      <title>庆祝一下把blog迁移到了新的空间</title>
      <link>https://wdicc.com/new-blog-space/</link>
      <pubDate>Thu, 10 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/new-blog-space/</guid>
      <description>
只能说，盘古太tmd的慢了。而且今天发现他们很无耻的一个地方，ftp上传下载网页代码的时候速度很快，但是数据库文件死活就弄不下来，mmd，气死我了。后来还好 &lt;a href=&#34;http://oceanboo.cn/&#34; target=&#34;_blank&#34;&gt;ob&lt;/a&gt; 帮我弄下来了。&lt;br /&gt;

新的空间要感谢 &lt;a href=&#34;http://77boy.cn&#34; target=&#34;_blank&#34;&gt;七巧仔&lt;/a&gt; ，呵呵，不知道可以用多久。不过快一点是一天了。发现有点问题就是 fanfou tools 不能用了。好像是连不上 饭否 的api服务器。郁闷。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Test emacs post</title>
      <link>https://wdicc.com/test-emacs-post/</link>
      <pubDate>Mon, 07 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/test-emacs-post/</guid>
      <description>

Just for a test..&lt;br /&gt;

&amp;amp;amp;lt;strong&amp;amp;amp;gt;Strong text&amp;amp;amp;lt;/strong&amp;amp;amp;gt;&lt;br /&gt;

Seemes not support post slug to..&lt;br /&gt;

So, just post it.&lt;br /&gt;

&amp;lt;pre lang=&#39;perl&#39;&amp;gt;&lt;br /&gt;
use strict;&lt;br /&gt;
my $test;&lt;br /&gt;
&amp;lt;/pre&amp;gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>gnome 里面的 usb automount 终于好了</title>
      <link>https://wdicc.com/usb-automount-in-gnome/</link>
      <pubDate>Sat, 05 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/usb-automount-in-gnome/</guid>
      <description>
升级到 gnome 2.22 之后，发现 usb 不自动mount了，归罪于gnome 2.22。但是刚才尝试手动mount的时候才发现，根本没有 /dev/sdx 设备，靠。想起来我好像把 scsi 相关的 kernel 选项都关掉了，nnd。重新编译内核之后，啥问题都没了。。。&lt;br /&gt;

就连之前 分区不显示在桌面上面 的问题都好了，ft，和scsi有关系？&lt;br /&gt;

gnome 下面有 gnome-volume-manager &amp;amp; gnome-mount &amp;amp; gnome-vfs 和自动挂载相关。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>《见龙卸甲》又一个大烂片诞生了</title>
      <link>https://wdicc.com/jianlongxiejia-so-bad-movie/</link>
      <pubDate>Sat, 05 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/jianlongxiejia-so-bad-movie/</guid>
      <description>
看完《江山美人》觉得像吃了一个烂蛋糕，可没想到今天又吃了一次，nnd。&lt;br /&gt;

《见龙卸甲》讲的是赵云的故事，可是里面tmd和《三国演义》里面的差太多了，简直就是编剧重新写了一本《三国》。那个年代的武将，估计都是“力拔山兮气盖世”的，而一个女的都督还那么牛b，可以和赵云单挑，这女的吃激素长大的阿。实在太烂了。&lt;br /&gt;
&lt;blockquote&gt;《见龙卸甲》虽说是根据《三国演义》改编，但真正的剧情走向早就远离原著十万八千里，长坂坡单骑救主的赵云居然换成凤鸣山救主，就为了帮导演画一 个善始善终的“圆”。生造出的曹操孙女曹婴、赵云同乡罗平安和只会“青龙白虎阵”的诸葛亮更是让读过《三国演义》的观众啼笑皆非。而影片最关键的凤鸣山一 战在电影中完全被颠覆，张苞、关兴刚一露面就被杀，赵云舍生取义，决意战死……这些颠三倒四、似是而非的改编只有一个目的，把赵云塑造成一个人性化的反战 英雄，在乱世之中，他只想要有一个安定的天下，有一个自己的家，其中再夹杂一些男人间的友情和责任感等——这样的想法看起来并不错，但实际上是偷懒的做 法。所谓重新解读历史人物，应该是从人物本身出发，从真实细节中发掘出原先被忽视的部分。但《见龙卸甲》对赵云的重新解读却是主题先行，肆意编造细节和情 节来实现预设的主题。主题先行导致人物概念化，这个主角可以是赵云，也可以是张飞、关羽，甚至可以是武松、鲁智深，任何一个背景下英雄人物都可以套上这样 “人性化”的模板。&lt;/blockquote&gt;&lt;br /&gt;
上面引用一段&lt;a href=&#34;http://www.news365.com.cn/xwzx/whyyyl/200804/t20080404_1820801.htm&#34; target=&#34;_blank&#34;&gt;别人&lt;/a&gt;的话.&lt;br /&gt;

贴一个剧照吧。&lt;br /&gt;

&lt;img src=&#34;http://pic.yupoo.com/wdicc/5840055b04c0/medium.jpg&#34; alt=&#34;见龙卸甲&#34; width=&#34;351&#34; height=&#34;500&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>在gnome下面使用mplayer</title>
      <link>https://wdicc.com/use-mplayer-in-gnome/</link>
      <pubDate>Sat, 05 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-mplayer-in-gnome/</guid>
      <description>
使用mplayer其实没必要用什么前端了，多简洁，不过可能是因为我很少看有字幕的视频的缘故。smplayer是基于qt的，有兴趣可以试试看，我觉得速度有点慢。此外还有gnome-mplayer，有选项可以stop gnome的screensaver。&lt;br /&gt;

今天忽然兴起就想看看smplayer的最新版是否能在播放的时候屏蔽gnome screensaver，结果在他们论坛上面找到了方法。其实smplayer本身是没那个功能的，作为前端，他只是负责把 stop-xscreensaver 参数传递给mplayer而已。不过却发现了一个mpalyer的设置：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;heartbeat-cmd=&#34;gnome-screensaver-command -p&#34;&gt;
这个设置不知道是从什么时候出现的，可以用来停止gnome的screensaver，放到 .mplayer/config 里面就行了。

这下子gnome-screensaver 也可以干掉了，这玩意不支持mplayer的一些快捷键，例如osd切换。在播放一些有问题的文件的时候，还经常 cpu 100% 死掉。

另外，gnome里面的文件，在nautilus里面双击默认的打开方式是由 /usr/share/applications 里面的那些desktop文件决定的，这些文件里面定义了可以打开什么类型的文件。gnome的菜单也是从这里生成的。当然，在文件上面右键-&amp;gt;属性-&amp;gt;打开方式也可以自定义一个。

此外，~/.local/share/applications 里面也有一些 desktop，这些是你自定义的。比如系统经过判断，rmvb的文件使用 realplayer 来打开，但是你又想用 mplayer 来打开，那么就会在这个目录下面的文件里面记录下来。

mplayer 的那个 desktop 文件里面指定的是 gmplayer 来打开文件的，我可不喜欢这个gmplayer，所以修改一下这个文件就好了。这样比自己添加自定义命令的好处是，有个图标。。。还有可以打开 smb:// 的文件。
</description>
    </item>
    
    <item>
      <title>搞定安装emacs之后pidgin打开邮箱的功能失效</title>
      <link>https://wdicc.com/emacsclient-conflict-with-pidgin/</link>
      <pubDate>Sat, 05 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/emacsclient-conflict-with-pidgin/</guid>
      <description>
安装emacs之后，发现在 pidgin 里面选择打开 hotmail 邮箱的时候不好用了，浏览器没反映，以前是会打开一个 file:///tmp/purple2CMD9T 这样的文件的，然后这个文件重定向到 hotmail 邮箱，其实说白了基本没用，还不如自己在浏览器打一个 hotmail.com，因为他好像不会发送你的帐户信息，就像在msn里面那样，直接登录。&lt;br /&gt;

但是不能用了，总觉得心里堵的荒，趁着刚搞定 mplayer 对gnome的屏保的xxoo，以及 automount 的东风，一定要搞定这个，嗯。&lt;br /&gt;

查看 pidgin 的debug信息可以看到，pidgin是调用xdg-open 来打开那个文件，由xdg-open 调用相应的程序来打开。命令行执行一下，可以看到xdg-open 调用了 emacsclient 来打开那个文件，这显然是不行的。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
/usr/bin/emacsclient: can&#39;t find socket; have you started the server?
To start the server in Emacs, type &#34;M-x server-start&#34;.
/usr/bin/emacsclient: No socket or alternate editor.  Please use:
--socket-nam
--server-file      (or environment variable EMACS_SERVER_FILE)
--alternate-editor (or environment variable ALTERNATE_EDITOR)&lt;/pre&gt;
怎么修改，尝试了 xdg-mime ，结果不行。今天 sssslang 提醒说 xdg-open 是个shell脚本，看了之后发现在gnome下面，他调用的其实是 gnome-open 来打开的。gnome-open 是个bin文件，没的看了。搜了一下，发现 /etc/gnome-vfs-mime-magic 似乎是用来判断文件类型的，根据文件的头。不过这个和打开程序没关系。

然后找到 /usr/share/applications/mimeinfo.cache 这个文件，把里面emacsclient 相关的都删掉，反正我也不用他。然后还得把 /usr/share/applications/emacsclient.desktop 里面 MimeType 行干掉，要不后面执行更新的时候会再次把emacsclient 的信息更新到 mimeinfo.cache 里面。

好了，执行一下 sudo update-desktop-database 更新一下cache，就没问题了。需要注意这个cache在 .local/share 下面也有一个。

太高兴了，问题都解决了。
</description>
    </item>
    
    <item>
      <title>每日播报~</title>
      <link>https://wdicc.com/%E6%AF%8F%E6%97%A5%E6%92%AD%E6%8A%A5/</link>
      <pubDate>Fri, 04 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/%E6%AF%8F%E6%97%A5%E6%92%AD%E6%8A%A5/</guid>
      <description>
以后每天都来写一个~吼吼吼&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>让人又爱又恨的 gnome 2.22</title>
      <link>https://wdicc.com/gnome-222-bad-or-good/</link>
      <pubDate>Wed, 02 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gnome-222-bad-or-good/</guid>
      <description>
上周没忍住诱惑，升级到了  gnome 2.22 。惊喜不多，问题不少。&lt;br /&gt;

automount 功能不能用了。以前桌面上面会出现一些别的分区的图标的，现在也没有了。这是很郁闷的一个事情。别的比如 metacity的compiz特性，alt+tab切换窗口的效果等，原来都是和compiz是一样一样的，都一样的耗费资源，shit。&lt;br /&gt;

不过值得欣慰的一点是 evolution 2.22 里面邮件提醒可以设置不只监控收件箱了，过滤到别的文件夹里面的邮件也会提醒了。mail-notification 可以删掉了。&lt;br /&gt;

scribefire 好像没办法设置 post slug？那怎么用？不设置的话，中文标题生成的链接太恶了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>赫赫，哦k了</title>
      <link>https://wdicc.com/heheokle/</link>
      <pubDate>Wed, 02 Apr 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/heheokle/</guid>
      <description>
哈哈 终于能在老公的网站上发帖子啦，噢也~&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>domin will die...</title>
      <link>https://wdicc.com/domin-will-die/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/domin-will-die/</guid>
      <description>
05年12月份购买的，参加yahoo的smallbusiness服务，5年100多点。那会没有信用卡，让xh代买的。结果那头猪忘记了自己的帐号，我只能改改域名指向了，靠。气死我了。&lt;br /&gt;&lt;br /&gt;给yahoo发了一个mail，不知道能不能有反馈。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>昨天去看了国家宝藏2：夺宝秘笈</title>
      <link>https://wdicc.com/national-treasure-book-of-secrets/</link>
      <pubDate>Sun, 23 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/national-treasure-book-of-secrets/</guid>
      <description>
一句话评价，至少比那个《江山美人》强多了。。。&lt;br /&gt;

老美的电影里面经常去搞总统，在这部片子里面，还上巴黎的白金汉宫里面玩了一把。其中有一段，是在总统府里面举办什么‘滚彩蛋’比赛，好像是给孩子们玩的。再想想国内，49周年国庆的时候，我们在天安门广场上面待了一个晚上，就是为了第二天早上能看到升旗，结果呢，到早上4，5点被清理出了广场，因为只有被安排的人才能在国旗下面看升旗，我们只是在很远的外围看了一下，我记得好像连旗子都不怎么看得见。当时还有哥们爬树上看，爱国可真不容易。&lt;br /&gt;

&lt;img src=&#34;http://pic.yupoo.com/wdicc/593085491f9b/medium.jpg&#34; alt=&#34;National Treasure: Book of Secrets&#34; height=&#34;500&#34; width=&#34;358&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>一个转换 mp3 tag 编码的东东</title>
      <link>https://wdicc.com/mp3-tag-encoding/</link>
      <pubDate>Fri, 21 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/mp3-tag-encoding/</guid>
      <description>
虽然是jar的，不过还是挺好用的。网址在&lt;a href=&#34;http://www.cs.berkeley.edu/~zf/id3iconv/&#34; title=&#34;id3iconv&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。这种程序还是挺多的，python 的 mutagen 也可以。&lt;br /&gt;

下载以后，用下面的命令转换：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>桌面从 debian 切换到了 gentoo</title>
      <link>https://wdicc.com/gentoo-is-good-and-powerfull/</link>
      <pubDate>Sun, 16 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gentoo-is-good-and-powerfull/</guid>
      <description>
今天居然打开了blog的发表页面，奇迹了，那就写一篇好了。&lt;br /&gt;

gentoo 真不错呀，嗯，软件全，还可以自己定制。真是太爽了。套用一句某个女星给某洗衣粉作的广告“用一次，就知道是我想要的”，呵呵。&lt;br /&gt;

呀，好像没什么好写的了。。。汗。凑字数中。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>用650半个多月的感受</title>
      <link>https://wdicc.com/about-treo-650/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-treo-650/</guid>
      <description>
还是很强大的。&lt;br /&gt;
刚开始对他有成见，总觉得买个二手的二手的x手不是很爽，能用多久阿？但实际上还是不错的，呵呵。&lt;br /&gt;

买回来基本没怎么折腾，我也听说这玩意弄不好会频繁重启，所以基本不敢大动，连什么那个 zluncher 也不敢装，总觉得这玩意动作太大，搞不好就系统崩溃了。就自带的luncher凑合吧&lt;br /&gt;

说palm 单线程有点不符，还是有个人说的单gui好一点。因为并不是说你看电子书的时候就不能接电话了，只不过是电话ui出来之后，电子书就退出了。但是有些程 序，比如那个听歌的ptunes，是可以让他在退出ui的时候也继续播放的。单线程这个说法也不知道谁第一个说的，让我开始以为我安装一个闹钟软件之后， 难道得一直开着这个程序才能起作用？其实不是的。这样也好，不用担心动不动给你开一堆后台程序，搞的你很郁闷，你还不知道怎么回事。比如ppc，比如 s60。。。&lt;br /&gt;

我装的软件有下面几个：&lt;br /&gt;
vbook : 看小说，这个支持txt。还能看卡上的，退出的时候会自动记录上次看到的位置。不过我有一次打开小说后直接到最后了，估计是有人拿着看给我弄的。基本上勇者还行。&lt;br /&gt;

rscbackup: 用来备份到卡上面的。我只备份国一次，还没有恢复过，所以具体这玩意怎么回事还说不太明白，但是大家都推荐，又没有常驻进程，那就装一个好了，呵呵。&lt;br /&gt;

butler: 我用了其中的提醒管理，和闹钟设定。提醒可以提醒你没看的短信，没接的电话什么的，可以设置提醒次数，和提醒时段，比如晚上11点到第二天的早上8点是睡 觉时间，没听见就算了，不用提醒。butler 的其他功能我都没用，我的想法是，能不用就不用，省得搞起来冲突，搞的重启。&lt;br /&gt;

pmt xl: 用来记账的，很强大。。只能这么说了，不好好整整是弄不明白怎么玩的。。。&lt;br /&gt;

zdic: 字典。从网上吓了一个 wiki 的词库，没事可以显摆一下。。。我好像一直没用过。。&lt;br /&gt;

分钟提醒： 打电话的时候 50秒的时候提醒你一下什么的，还有点别的功能，比如对方挂电话了提醒你下，省的你还在那外外。。&lt;br /&gt;

拨号助手： 有些外地电话波17951不是便宜么，可是电话本里面又不想直接就存上，比如有时候还想发个短信呢。装上这个就好了，选号码之后，按回车，就会出来一个菜单，让你选前面加17951 还是不加等，还可以加106什么的，还可以自己定制，比如波一个ip卡&lt;br /&gt;

掌易： 输入法。加上sogou的词库，很强大。。。输入太tmd的快了，就是650的按键有点小。&lt;br /&gt;

cardreader: 把你的650变成一个u盘。要不然你得有读卡器才能直接读写你的扩展卡不是。&lt;br /&gt;

sugarmemo, accessorizer, crash, rescoexplorer,, gizmo keygtime ptunes tcpmp 这些都是别人说装上就装上的，我基本没怎么用国&lt;br /&gt;
例如 gizmo 这个im软件，用了一下觉得不怎么好用。&lt;br /&gt;

我的 650 买回来后，基本能用4天。可能是我电话短信都不多把，另外装的软件也不多。不过我基本上下班晚上睡觉前都要看会电子书。&lt;br /&gt;
这样就是周日晚上冲上电，周一早上取下来，要等到周四晚上再冲，不过那会就剩10%多的电力了，保险的是3天应该没问题。&lt;br /&gt;

用 了这么久，刚那回来的时候，装一个keygen的时候按什么键都没反应了，就捅了pp。还有就是今天上午不知道什么时候电话模块关掉了，还不知道怎么回 事。别的就没什么问题了，也没重启什么的。感觉还可以亚。我的经验就是，应用软件你可以多装同样功能的，基本没问题。但是系统调整软件尽量不要这么用，容 易冲突，容易重启。相同功能的，最好删掉一个再装另一个。留一个就行了。我觉得palm的不稳定可能和他的系统太开放有关系？很多系统调用都给你了，几个 程序一抢，就重启了。但是这样也有好处，不是可以让软件能更加随心所欲一点么？&lt;br /&gt;

最后说一句，black berry 8700 那个垃圾都能卖到 1500，palm 650 真的不贵。。。8700是在太垃圾了，我入手一个月卖掉，亏了500，那个输入法那个系统太屎了，不是自虐别买。。。。...&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>盘古的空间还能再慢么？！</title>
      <link>https://wdicc.com/pangu-tooooo-slow/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/pangu-tooooo-slow/</guid>
      <description>
靠阿靠，去年7，8月份买的，那会速度好像也没现在这么慢阿。现在不论在哪里访问，速度都慢的要死，只能靠了！还花了我100多呢。&lt;br /&gt;

看到淘宝上面有人卖 dreamhost 的空间，最低才30块钱，汗，不知道多少人用的一个主机，不过还真是便宜阿。。。回头再研究研究，打算弄一个。嗯。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>《江山美人》这个大烂片</title>
      <link>https://wdicc.com/so-bad-jiangshanmeiren/</link>
      <pubDate>Mon, 10 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/so-bad-jiangshanmeiren/</guid>
      <description>
浦发信用卡弄的票，20块钱2个人，还送每人一杯可乐，一桶爆米花。还算合算，就是热线电话不好打通，多亏了我老婆了。&lt;br /&gt;

这个片子是个超级大烂片，实在太烂了。能不堪还是不要看了，看完了只想吐，就像吃了个坏蛋糕。没啥剧情， 陈慧琳那口“普通话”还让人听得直恶心。中间有段，山上负责暗杀的人跳下来的时候，陈和马都是站在水里面的，陈正在洗马 。抬头一看上面来人了，立刻一个猛子扎到水里面了，居然还来了一段深水混战，请注意，是“深水”。。。。马呢？我都无语了。。。&lt;br /&gt;

这种情况里面太多了， 还是不说了，贴一个剧照吧。&lt;br /&gt;

&lt;img src=&#34;http://pic.yupoo.com/wdicc/8575653835c8/medium.jpg&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>看了 长江7号</title>
      <link>https://wdicc.com/changjiang-7/</link>
      <pubDate>Mon, 25 Feb 2008 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/changjiang-7/</guid>
      <description>
上周五晚上去看的，这个片子感觉更适合给小孩看看，那个玩具倒是挺cute，时不时引来看电影的mm们的羡慕声。&lt;br /&gt;

片子里面没什么新意，对话语调类似功夫里面的，大人小孩都那样。剧情里面有些也是周星驰电影里面的，比如让那个毛球做各种表情动作，完全就是喜剧之王里面的翻版。按老婆说的，这片子看完之后脑子里面什么都没留下，看完就完了。&lt;br /&gt;

&lt;img src=&#34;http://pic.yupoo.com/wdicc/65288525ab74/osf6aajk.jpg&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>老婆明天就要回来了</title>
      <link>https://wdicc.com/cc-will-be-back-soon/</link>
      <pubDate>Sun, 23 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cc-will-be-back-soon/</guid>
      <description>
老婆回家呆了有一个星期了吧，明天总算要回来了，据说还会给带回来好多好吃的，期待ing。D字头的车贵是贵了点，不过速度真是快，4、5个小时就回来了。不过估计过年的时候买不上火车票，只能坐汽车了。挨。&lt;br /&gt;

今天得把屋子收拾收拾了，还要去买菜，买灯，洗衣服等。这周把黑莓手机卖掉了，用了一个半月，亏了500块钱，真是郁闷。当时太冲动了，挨。有啥办法呢，对电子产品的抵抗力太低了，啥都想玩玩，我的钱阿。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>好久好久没有更新blog了</title>
      <link>https://wdicc.com/long-time-havent-update-blog/</link>
      <pubDate>Sun, 18 Nov 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/long-time-havent-update-blog/</guid>
      <description>

挺长时间了好像。上班的时候没时间来写，下了班回家又懒得写，有时间去看连续剧了。《越狱》第三季确实没什么好看的，scofiled 完全没有第一季那种感觉，一切都在自己的掌握中。不过将就看了。《heroes》还算好看，不过里面有超能力的人也太多了吧，真像谁说的来着，在那里面，没有超能力都不好意思和人打招呼。现在看这个片子感觉就是在关注什么新的超能力被发现，还有超能力大战了。另外美剧好像都喜欢弄一个很大的后台，叫做company，一波一波的人都为这个公司干活，而且这个公司几乎是无所不能。&lt;br /&gt;

昨天老婆给买了一个羽绒服，挺好看，穿着舒服，哈哈。现在买衣服基本什么都不管了，老婆逛街的时候给捎带上就行，呵呵。 嗯，这是有老婆的一个好处。 :D&lt;br /&gt;

最近还在写一个perl的脚本。按照计划下周应该完工了。perl的cpan还是很强大的，不过perl的oo感觉没有python好，python的缩进有时候却又让人头疼，呵呵。可惜我们这边python好像不怎么吃香，大家还都停留在perl。php，perl都得会呀，虽然我现在只懂毛皮。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>把wordpress升级到了2.3版本</title>
      <link>https://wdicc.com/upgrade-blog-to-wp-23/</link>
      <pubDate>Sat, 29 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/upgrade-blog-to-wp-23/</guid>
      <description>
测试版的时候懒的弄，现在正式版了，今天有空，就升级了一下。tag使用了自带的，发现不一定就比人家 &lt;a href=&#34;http://www.neato.co.nz/ultimate-tag-warrior/&#34; title=&#34;Visit plugin homepage&#34;&gt;Ultimate Tag Warrior&lt;/a&gt; 好用。修改工作倒没什么，找了一篇文章参考一下就好。&lt;br /&gt;

最近工作基本都切换到了 ArchLinux ，gnome的环境，为了省事吧，fvwm配置起来是很好用，可是那个配置文件几天不看就看不懂了，这实在太累了。&lt;br /&gt;

目前遇到的问题好象都能解决。域登陆问题还没有搞定，不知道怎么能登陆windows域，访问那个 fileserver。不过还好，不是总要去访问那个东西。&lt;br /&gt;

scim 和 OOo 的冲突问题很麻烦，不过使用 scim-bridge 解决了。但是又出现了 nautilus 和 scim冲突，nautilus 里面不能输入中文，鬼知道是哪个的问题了。不过不能输入中文 就算了，我输入英文总可以了，实在不行还可以去 terminal 下面修改。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给freebsd添加新硬盘</title>
      <link>https://wdicc.com/add-disk-in-freebsd/</link>
      <pubDate>Tue, 18 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/add-disk-in-freebsd/</guid>
      <description>
没想到freebsd里面这么变态，linux下面可能fdisk就搞定的事情，到了这里需要好几个操作，还搞不明白怎么回事。。。&lt;br /&gt;

要弄清楚这个，先要了解几个概念。bsd下面的ide硬盘叫做 ad，scsi 硬盘叫做da。ad0,ad1,ad2...，按照ide接口来定的。假定新加的硬盘是 ad2。每个ad又可以分4个 slice，这样就有了 ad2s1, ad2s2...。每个slice下面呢，又可以分几个区，例如 ad2s1e, ad2s1f ，可以从 a 到 h 八个，abcd是有特殊意思的。最后实际挂载使用的就是这个 /dev/ad2s1e 了。&lt;br /&gt;

这样整个过程就分几个步骤。&lt;br /&gt;

&lt;strong&gt;1 先初始化硬盘&lt;/strong&gt;&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
1+0 records in
1+0 records out
1024 bytes transferred in 0.000160 secs (6400845 bytes/sec)&lt;/pre&gt;
或者
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
******* Working on device /dev/ad2 *******&lt;/pre&gt;
此后可以用 fdisk ad2 命令看到一些信息，可以看到整个硬盘的信息。
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
parameters extracted from in-core disklabel are:
cylinders=516822 heads=15 sectors/track=63 (945 blks/cyl)

Figures below won&#39;t work with BIOS for partitions not in cyl 1
parameters to be used for BIOS calculations are:
cylinders=516822 heads=15 sectors/track=63 (945 blks/cyl)

Media sector size is 512
Warning: BIOS sector numbering starts with sector 1
Information from DOS bootblock is:
The data for partition 1 is:
sysid 165,(FreeBSD/NetBSD/386BSD)
start 63, size 488396727 (238474 Meg), flag 80 (active)
beg: cyl 0/ head 1/ sector 1;
end: cyl 725/ head 14/ sector 63
The data for partition 2 is:
&amp;lt;unused&amp;gt;
The data for partition 3 is:
&amp;lt;unused&amp;gt;
The data for partition 4 is:
&amp;lt;unused&amp;gt;&lt;/pre&gt;
&lt;strong&gt;2 使用 fdisk 命令分 slice&lt;/strong&gt;

fdisk -i ad2 会一步一步询问4个slice的设置，比较麻烦。不过这里也可以不分，就一个slice，一样用，呵呵。

&lt;strong&gt;3 使用 disklabel 命令分区&lt;/strong&gt;

这里假定我们就一个slice。为这个 slice 建立分区。
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
这样就建立了一个 ad2s1c 的分区，c表示的是整个硬盘。使用下面的命令进行分区，这个还不会玩。。:(
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
&lt;strong&gt;4 使用newfs建立文件系统&lt;/strong&gt;

就以分一个区为例，执行下面的命令。
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
这个命令会打印一堆数字，应该表示的是建立文件系统的进度，等会打印完了，分区就可以用了。

参考文章： http://bbs.fyjy.net/printthread.php?t=2037
</description>
    </item>
    
    <item>
      <title>gdm登陆窗口的方块乱码</title>
      <link>https://wdicc.com/gdm-problem/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gdm-problem/</guid>
      <description>
&lt;p&gt;这几天一直有个问题解决不了，gdm的登陆窗口上面的字体是方块。我一般都是使用home下面的.fonts.conf 来配置字体的。不过gdm启动的时候好像也不会读取你home的下吧，所以还是把他放到了/etc/fonts/local.conf 里面。&lt;/p&gt; &lt;p&gt;使用gdm的时候，配置为theme的时候，gdm会起不了，不停的尝试，最后出一个提示窗口，全是方块。不过应该是提示没办法启动welcome窗口的。配置为简介模式的话，gdm至少能起来，虽然上面的字体全是方块，连我输入的字也是方块，就算是英文。&lt;/p&gt; &lt;p&gt;开始以为是字体设置的问题，把我的自定义设置全部去掉也不行。locale改成英文就正常了。不过还是不爽，搜了半天没找到解决办法，后来有篇文章提示了一下，会不会是字体权限的问题？我才想起来自己添加的雅黑字体，去看了一下，果然只有root可读。修改权限之后，方块的现象没了。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>安装配置一台 apache&#43;php&#43;mysql 的rh el4服务器</title>
      <link>https://wdicc.com/setup-apache-mysql-php-in-rhel4/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/setup-apache-mysql-php-in-rhel4/</guid>
      <description>
&lt;p&gt;&lt;strong&gt;系统&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;rh el4 是四张盘，用第一张启动电脑。前面没啥好说的了，后面选择软件的时候，不要选x界面的东西，开发工具全选上，别的好像默认就行了，大概需要2G好像是。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;apache的下载地址：&lt;a title=&#34;http://httpd.apache.org/download.cgi&#34; href=&#34;http://httpd.apache.org/download.cgi&#34;&gt;http://httpd.apache.org/download.cgi&lt;/a&gt;，选一个mirror，下载就行了。&lt;/p&gt; &lt;p&gt;编译选项： ./configure --prefix=/usr/local/apache/ --enable-rewrite --enable-so&lt;/p&gt; &lt;p&gt;rewrite还是很有必要装上的，enable so让apache可以加载php模块。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Mysql&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;mysql 的下载地址(以5.0为例)：&lt;a title=&#34;http://mysql.org/downloads/mysql/5.0.html#source&#34; href=&#34;http://mysql.org/downloads/mysql/5.0.html#source&#34;&gt;http://mysql.org/downloads/mysql/5.0.html#source&lt;/a&gt;&lt;/p&gt; &lt;p&gt;注意我们这里下载的是 source，要自己来编译。这样可以控制mysql默认的字符集是什么。&lt;/p&gt; &lt;p&gt;编译选项： ./configure --prefix=/data/mysql --with-charset=gbk --with-extra-charsets=all&lt;/p&gt; &lt;p&gt;这里设置的字符集是gbk，根据需要自己来设计自己的。别的安装的过程可以参考源码目录里面的INSTALL文件，基本按照那个一步一步来就行了。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;libjpeg&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;安装php之前，先需要自己编译一个 libjpeg 和 libpng，系统安装的少东西，php编译不过去。&lt;/p&gt; &lt;p&gt;libjpeg 的下载地址：&lt;a title=&#34;ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz&#34; href=&#34;ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz&#34;&gt;ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz&lt;/a&gt;&lt;/p&gt; &lt;p&gt;编译选项：./configure --enable-static --enable-shared --prefix=/usr/local/libjpeg&lt;/p&gt; &lt;p&gt;&lt;strong&gt;libpng&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;libpng的下载地址：&lt;a title=&#34;http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download&#34; href=&#34;http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download&#34;&gt;http://prdownloads.sourceforge.net/libpng/libpng-1.2.20.tar.bz2?download&lt;/a&gt;&lt;/p&gt; &lt;p&gt;编译选项：./configure --prefix=/usr/local/libpng&lt;/p&gt; &lt;p&gt;&lt;strong&gt;php&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;php的下载地址(目前的最新版)：&lt;a title=&#34;http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror&#34; href=&#34;http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror&#34;&gt;http://cn.php.net/get/php-5.2.4.tar.bz2/from/this/mirror&lt;/a&gt;&lt;/p&gt; &lt;p&gt;编译选项：&lt;/p&gt; &lt;p&gt;./configure --with-apxs2=/usr/local/apache/bin/apxs --with-mysql=/data/mysql/&amp;nbsp; --prefix=/usr/local/php5/ --with-config-file-path=/usr/local/php5/etc --with-openssl --enable-mbstring --with-iconv --with-curl --with-gd --with-zlib&amp;nbsp; --with-png-dir=/usr/local/libpng --with-jpeg-dir=/usr/local/libjpeg&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给ibm server设置raid</title>
      <link>https://wdicc.com/raid-on-ibm-server/</link>
      <pubDate>Sun, 16 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/raid-on-ibm-server/</guid>
      <description>&lt;br /&gt;

拆封之后，把硬盘（最少2块，1块做什么raid？）都插上，要注意使劲往里推。然后接上电源、显示器和键盘，就可以开机了。图片都可以在&lt;a href=&#34;http://www.yupoo.com/albums/view?id=ff80808114fa6bd801150bd0b8ab6243&#34;&gt;这里&lt;/a&gt;看到。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085619_251160821.jpg&#34; /&gt;&lt;br /&gt;

开机后第二屏信息，上面是2块网卡的信息。提示&amp;lt;CTRL&amp;gt;&amp;lt;A&amp;gt;的时候，按ctrl+a。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085627_387692339.jpg&#34; /&gt;&lt;br /&gt;

按了ctrl+a之后会多出来一行提示，告诉你等会会进入raid的设置界面。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085634_622747700.jpg&#34; /&gt;&lt;br /&gt;

ok，这就是这个界面了。就选第一个 Array Configuration Utility。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085644_1443274542.jpg&#34; /&gt;&lt;br /&gt;

先得初始化一下硬盘。其实这会如果直接 create array的话，他也会提示你需要先初始化硬盘的。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085653_409760939.jpg&#34; /&gt;&lt;br /&gt;

先查找连接上来的硬盘。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085724_132744006.jpg&#34; /&gt;&lt;br /&gt;

找到2块。按insert键选择硬盘，选了之后会在右边的窗口出现。这里是需要2块全选的。选好后，按回车确定。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085704_25723597.jpg&#34; /&gt;&lt;br /&gt;

提示你初始化会删除所有数据。确定，输入yes。此后就开始初始化，我这里好像很快。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085714_1883779879.jpg&#34; /&gt;&lt;br /&gt;

初始化完毕之后又会返回这个菜单，这次选 create array。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085740_911137399.jpg&#34; /&gt;&lt;br /&gt;

再来选硬盘。选完按回车。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085750_1590784025.jpg&#34; /&gt;&lt;br /&gt;

出现raid的设置界面。我就2块硬盘，只有raid 0和1可选。选需要的。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085759_322804327.jpg&#34; /&gt;&lt;br /&gt;

别的都默认好了，不清楚有什么差别。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085807_924423596.jpg&#34; /&gt;&lt;br /&gt;

这就可以done了。之后会重启。&lt;br /&gt;

&lt;img src=&#34;http://photo11.yupoo.com/20070916/085819_1295559709.jpg&#34; /&gt;&lt;br /&gt;

看到那个raid信息了吧。&lt;br /&gt;

&lt;img src=&#34;http://photo5.yupoo.com/20070916/085836_2002971014.jpg&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>锻炼好身体迎接2008</title>
      <link>https://wdicc.com/take-exercise/</link>
      <pubDate>Tue, 11 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/take-exercise/</guid>
      <description>
&lt;p&gt;今天坐车听广播说只有332天了。其实奥运会如何和我没关系，我也不会去看。一来门票买不起，二来也买不上。尤其好看的比赛，门票就更难买了。总觉得还不如在家看电视。&lt;/p&gt; &lt;p&gt;这周是我正式开始锻炼的第二周了。每天早上到健身中心在有个跑步机上面跑20分钟，在另外一个类型的跑步机上面跑15分钟，走5分钟。总共是40分钟。强度不是很大，不过练完了也是大汗淋漓了。跑步20分钟好像大概有200卡热量被消耗，虽然不知道这玩意到底代表什么，不过看着还是挺爽的，呵呵。跑完步还能洗个澡，现在都不用在家里洗澡了，哈哈。&lt;/p&gt; &lt;p&gt;不过锻炼了这几天好像啥作用没起还胖了，郁闷。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>yahoo 全能搜索</title>
      <link>https://wdicc.com/yahoo-search/</link>
      <pubDate>Sat, 01 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/yahoo-search/</guid>
      <description>
&lt;p&gt;yahoo新推出的全能搜索感觉很新颖，尤其那个人物关系图，国内好像还没有别家做，呵呵。不过不知道这个图是怎么维护的，如果是人工，那还是很费事的，也不知道这玩意怎么做到智能，我估计还是得人工设置关键字之间的关系。&lt;/p&gt; &lt;p&gt;下面是一个介绍的视频。地址在&lt;a href=&#34;http://www.yahoo.cn/homepage/flash.html&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;object codebase=&#34;http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0&#34; height=&#34;480&#34; width=&#34;640&#34; align=&#34;middle&#34; classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34;&gt;&lt;param name=&#34;_cx&#34; value=&#34;16933&#34;&gt;&lt;param name=&#34;_cy&#34; value=&#34;12700&#34;&gt;&lt;param name=&#34;FlashVars&#34; value=&#34;&#34;&gt;&lt;param name=&#34;Movie&#34; value=&#34;http://www.yahoo.cn/swf/onesearch.swf&#34;&gt;&lt;param name=&#34;Src&#34; value=&#34;http://www.yahoo.cn/swf/onesearch.swf&#34;&gt;&lt;param name=&#34;WMode&#34; value=&#34;Window&#34;&gt;&lt;param name=&#34;Play&#34; value=&#34;-1&#34;&gt;&lt;param name=&#34;Loop&#34; value=&#34;-1&#34;&gt;&lt;param name=&#34;Quality&#34; value=&#34;High&#34;&gt;&lt;param name=&#34;SAlign&#34; value=&#34;&#34;&gt;&lt;param name=&#34;Menu&#34; value=&#34;-1&#34;&gt;&lt;param name=&#34;Base&#34; value=&#34;&#34;&gt;&lt;param name=&#34;AllowScriptAccess&#34; value=&#34;sameDomain&#34;&gt;&lt;param name=&#34;Scale&#34; value=&#34;ShowAll&#34;&gt;&lt;param name=&#34;DeviceFont&#34; value=&#34;0&#34;&gt;&lt;param name=&#34;EmbedMovie&#34; value=&#34;0&#34;&gt;&lt;param name=&#34;BGColor&#34; value=&#34;FFFFFF&#34;&gt;&lt;param name=&#34;SWRemote&#34; value=&#34;&#34;&gt;&lt;param name=&#34;MovieData&#34; value=&#34;&#34;&gt;&lt;param name=&#34;SeamlessTabbing&#34; value=&#34;1&#34;&gt;&lt;param name=&#34;Profile&#34; value=&#34;0&#34;&gt;&lt;param name=&#34;ProfileAddress&#34; value=&#34;&#34;&gt;&lt;param name=&#34;ProfilePort&#34; value=&#34;0&#34;&gt;&lt;param name=&#34;AllowNetworking&#34; value=&#34;all&#34;&gt;&lt;param name=&#34;AllowFullScreen&#34; value=&#34;false&#34;&gt; &lt;embed src=&#34;http://www.yahoo.cn/swf/onesearch.swf&#34; quality=&#34;high&#34; bgcolor=&#34;#ffffff&#34; allowscriptaccess=&#34;sameDomain&#34; type=&#34;application/x-shockwave-flash&#34; pluginspage=&#34;http://www.macromedia.com/go/getflashplayer&#34; align=&#34;middle&#34; height=&#34;480&#34; width=&#34;640&#34;&gt; &lt;/object&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>培训结束了</title>
      <link>https://wdicc.com/see-u-forver/</link>
      <pubDate>Sat, 01 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/see-u-forver/</guid>
      <description>
&lt;p&gt;看似很长的2个星期的培训就这么结束了，昨天晚上大家一起在ktv的时候，感觉真像是又毕业了一次。不过这次少了从学校毕业的一些伤感，毕竟培训完了大家也还在一个公司嘛，不像从学校毕业后就各奔东西了，或许就再也没有机会相见了。&lt;/p&gt; &lt;p&gt;以前经历过2个公司，一个国企，一个sp公司。国企里面就算有集体活动，也大都以那些高姿态的领导为“核心”了，而且主要是组织活动的人大都是快要退休的脑子已经固化的人，活动基本没什么意思。也可能是我呆的那个国企的平均年龄太大的缘故，活跃不起来。&lt;/p&gt; &lt;p&gt;在第二个公司里面，第一次参加了拓展，不过基本是室内的活动，室外就做了那个“牵手”活动。虽然简单，但这一次还是让我感受到了拓展的魅力。在活动里面，教练很会调动大家的积极性，让你毫不害羞的当着大家的面来参加一些活动或者做一些动作。就算你本身很内向，在这里面，也会把你埋藏的很深的那些火热的激情释放出来。&lt;/p&gt; &lt;p&gt;而这次的培训不止是在教你如何工作、如何团队合作了，这次是在教你如何做人。公司为什么肯投入这么大的经历来做这个事情呢？我的想法是，要学做事、先学做人。我想人品如果有问题，办出来的事估计也不会好到哪里去。害群之马、一块臭肉坏了整锅汤等，说的不就是个别人影响整个团队么？就像六脉神剑里面要求的，只有团队里面的每个人都诚信、都爱岗敬业、都富有激情，才能谈得上上面一层的团队合作，这些都是团队真正能合作很好的基础。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我能漂起来了，哈哈</title>
      <link>https://wdicc.com/i-can-float/</link>
      <pubDate>Sat, 01 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/i-can-float/</guid>
      <description>
&lt;p&gt;算起来，今天是第三次游泳了吧。我能漂起来了，哈哈。自我感觉还挺好，写写经验。&lt;/p&gt; &lt;p&gt;学游泳首先要练的就是憋气。有人会说这个没用，呵呵，我也确实看到了有人头一直露在上面在游，这当然不需要憋气了，不过这个怎么做到的我是真不明白了，所有人教我的时候都是让我把头先伸到水里再说。&lt;/p&gt; &lt;p&gt;学会憋气其实也能克服一下对水的恐惧心理。我之前头往水里一浸就害怕，特紧张，就感觉随时都憋不住了。其实后来我和我老婆比赛憋气的时候，我还是能憋好一会的。&lt;/p&gt; &lt;p&gt;现在水浅的地方练习憋气，练好之后就去水深的地方，比如到脖子的那种。深水里面水压更大，如果这里面憋气都没问题的话就好说了。&lt;/p&gt; &lt;p&gt;憋气的时候，手扶着边，然后脚就做那个自由泳的动作，就是快速的上下摆动，你就会发现你的脚会漂起来露出水面，同时手那里需要的依靠就小了。这基本就漂起来了。&lt;/p&gt; &lt;p&gt;之后可以尝试让朋友伸出双手扶着你的手，慢慢往前游看看，应该也没问题了。后面怎么玩我还没学会，哈哈。我现在手一离开依赖就特别害怕，下一步得克服这个。初步想的是找一个有扶梯的地方，扶着水下的部分看看，然后慢慢离开那个依赖。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>难道我的广告卖出去了？</title>
      <link>https://wdicc.com/my-alimama-ad-sold/</link>
      <pubDate>Sat, 25 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/my-alimama-ad-sold/</guid>
      <description>
&lt;p&gt;今天总算可以上会网了，看看阿里妈妈上面，发现广告卖出去了？状态是投放中，可是blog应该显示广告的地方显示的是一片空白？很怪异，我也不知道咋回事了。&lt;/p&gt; &lt;p&gt;发现alimama上面很多大网站也开始上了，alimama 的成功值日可待啊，呵呵。投放广告之前就可以广告可能的展示次数，还是不错的，可以广告的投放客户很透明的知道这个网站的pv，不过是如果这个网站不想要透露这个信息的话，也是比较麻烦的一个问题。google的adsense广告的话，网站自己可以知道广告的pv，投放广告的就不清楚能不能知道了。不过至少第三方是不清楚这个信息的。他们之间的交易是如何的，可能只有google知道了。alimama 的透明、诚信还是有他的道理的。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>该死的 KB928366</title>
      <link>https://wdicc.com/damned-kb928366/</link>
      <pubDate>Wed, 15 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/damned-kb928366/</guid>
      <description>
&lt;p&gt;自从领了笔记本，安装过几次更新之后，就发现有一个更新死活就装不上了。黄盾牌出来后，点安装，等一会提示已经安装成功了。可是过一会黄盾牌就又出来了，依然是刚才的那个补丁。这个补丁是针对 .net frameword 1.1 sp1 的，我已经安装了 .net 的 1.1，2.0，3.0，声明一下不是我自愿的，人家就这么安排的，不清楚为啥装这么多。这个补丁叫 KB928366 。&lt;/p&gt; &lt;p&gt;搜索了一下，发现遇到这个问题的还真不少。理解了一下，造成这个问题的原因应该是 .net 1.1 安装完毕之后就将安装文件删掉了，但是安装这个补丁的时候呢，还需要这个安装文件，所以就这样了。解决办法是重新下载一次 .net 1.1 ，然后解出来里面的文件，安装 kb928366 的时候指定一下安装位置。我看有些人就这么解决了。可是我发现我这里运行 kb928366 根本没反应，硬盘灯闪一会，什么窗口都没出来，更别说指定位置了。这招行不通了。&lt;/p&gt; &lt;p&gt;另外一个解决办法就是先将 2.0，3.0 ，1.1 都卸载掉，然后重新安装一遍，安装2.0，3.0之前安装那个补丁就好了。我就是这么做的。期间卸载 1.1 的时候遇到了卸载不了的问题，可以参考&lt;a href=&#34;http://support.microsoft.com/kb/824643&#34;&gt;这里&lt;/a&gt;。那个 Msizap.exe 可以在 WindowsXP-KB838079-SupportTools-ENU 这个里面找到，不用下载那个 sdk，那个 sdk 太大了。&lt;/p&gt; &lt;p&gt;那个黄色盾牌总算不出来了，nnd。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>阿里妈妈来了</title>
      <link>https://wdicc.com/alimama-is-coming/</link>
      <pubDate>Sat, 11 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/alimama-is-coming/</guid>
      <description>
&lt;p&gt;不知道什么是&lt;a href=&#34;http://www.alimama.com/&#34;&gt;阿里妈妈&lt;/a&gt;？那你老土了，哈哈。第一次听说的时候，大家都在问，那有阿里爷爷，阿里儿子没？呵呵。&lt;a title=&#34;http://www.alimama.com/&#34; href=&#34;http://www.alimama.com/&#34;&gt;http://www.alimama.com/&lt;/a&gt;&amp;nbsp;是阿里妈妈的网址，这两天刚上线。&lt;/p&gt; &lt;p&gt;alimama 是一个广告的c2c平台。什么是c2c？c2c=Consumer To Consumer，b2b=Business to Business。你可以把你网站的广告位放到这个平台上面去卖，我看了一下，有卖50元/一周的，也有卖0.5元/一周的，呵呵，就看你网站的pv，uv了。&lt;/p&gt; &lt;p&gt;btw：还是装了一个livewriter，blog后台打开太慢了。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>有好几天没有更新blog了</title>
      <link>https://wdicc.com/update-blog-and-setup-wiki/</link>
      <pubDate>Fri, 10 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/update-blog-and-setup-wiki/</guid>
      <description>
新的公司感觉大家都在忙忙碌碌的工作，我虽然事情不多，但是需要学的东西还是有的，所以上班也就没功夫来整这些东西了。不过忙里偷闲，晚上回来还是把我的&lt;a href=&#34;http://wiki.wdicc.com&#34; title=&#34;wiki&#34;&gt; wiki&lt;/a&gt; 弄好了，以后技术内容可以放那里了。感觉还是wiki比较适合组织这些东西。&lt;br /&gt;

wiki程序用的是 douku wiki，感觉像是中国人取的名字。。。不过看网址又不像，不知道了就。用起来还挺好用的。mediawiki 需要php5，twiki需求更麻烦，perl的，租的空间也不容易满足。doukuwiki还挺好用的，不需要数据库，编辑起来格式也简单，界面还算清新。&lt;br /&gt;

live writer还没有安装，所以只能来blog后台来写了，好久没用后台了都。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>特制面条的做法</title>
      <link>https://wdicc.com/spacial-noodles/</link>
      <pubDate>Mon, 30 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/spacial-noodles/</guid>
      <description>
&lt;p&gt;我家乡的做法，嗯。上次给一个人说了半天如何做，打了不少字，就copy下来了，放这里好了。&lt;/p&gt; &lt;p&gt;做法挺简单的。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;先把材料准备好，西红柿1个，土豆2，3个，豆腐半个，肉一点，葱姜花椒末，尖椒3，4个。&lt;/li&gt; &lt;li&gt;都切好，西红柿可以最后切。土豆切小指宽的条。葱切碎末。豆腐和土豆一样。肉切末比较好，也可以切块切条，如果是末的话，可以在出国前撒锅里，如果是块的话，就最早放锅里，肉变色了再放别的。&lt;/li&gt; &lt;li&gt;先放油，油开了放花椒末，放葱，放肉，肉变色放尖椒，然后放鸡精，炒一下放土豆，翻炒几下，放酱油，让土豆能变色就行了，多少无所谓，会影响到最后出锅的汤的颜色深浅。&lt;/li&gt; &lt;li&gt;然后翻炒几下，放水。看你的食量放水，等水开。这时可以切西红柿，切豆腐放进去。&lt;/li&gt; &lt;li&gt;水开后，放面条，再开放鸡蛋。&lt;/li&gt; &lt;li&gt;注意不要糊锅，别盖锅盖。等鸡蛋熟了面条软硬合适，关火，放切好的葱末和鲜姜末，搅匀就可以吃了，最后那一步鲜姜很重要。&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;回头看哪天弄一个图片上来，我老婆说我的面条已经到了“神仙画画”的地步了，呵呵。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>测试看看还乱码不</title>
      <link>https://wdicc.com/test-live-writer-3/</link>
      <pubDate>Sun, 29 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/test-live-writer-3/</guid>
      <description>
&lt;p&gt;迁移了一下之后，live writer 发布的时候总乱码，不知道咋回事。再测试看看。&lt;/p&gt; &lt;p&gt;在&lt;a href=&#34;http://e-spacy.com/blog/1894.html&#34;&gt;这里&lt;/a&gt;找到一个乱码问题的解决方法，测试看看。&lt;/p&gt; &lt;p&gt;下面这个图是空调车。。。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo8.yupoo.com/20070717/091948_1908862546.jpg&#34;&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Blog 做了一下迁移</title>
      <link>https://wdicc.com/move-blog-to-paangood/</link>
      <pubDate>Sat, 28 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/move-blog-to-paangood/</guid>
      <description>
因为要从这边离职了，不能蹭公司的服务器了，所以得找个新的地方。看来看去，dreamhost肯定是很爽的，可是也太贵了，咱现在还没这个资本去买这个空间，后来还是买了盘古的空间了。150一年，100M空间。不过北京网通访问起来速度不是很快。凑合用了，反正也就100多块钱。而刚好我在&lt;a href=&#34;http://blog.wdicc.com/wordpress/about-mycity/&#34;&gt;博邻&lt;/a&gt;的奖金也是150.。。。这就给这边花了，呵呵。老婆还说奖金可以去吃好多顿火锅呢，看来没戏了，哈哈。&lt;br /&gt;

我原来的数据库用的是　mysql 4.1.x ，新的是 4.0.x ，版本看起来差别不大，可是变化挺大。4.1支持每个库，每个表设置  charset，4.0还没有。4.0导入4.1好多人都乱码了。我从4.1 导入 4.0 开始也乱码了。后来搜了一下，找到一个方法，4.1 的mysqldump  有个 compactable 选项，指定是 mysql40 就行了。现在 phpmyadmin 里面看，中文也正常了。&lt;br /&gt;

迁移的时候顺手就换了一个  theme，弄了一天才弄好。不太喜欢这种用ftp上传的方法，都习惯用vim直接编辑文件了，本地没有环境，只能修改一下上传一次。盘古的ftp发呆时间还比较短，隔一会就得重新连接一下。感觉好墨迹。&lt;br /&gt;

老婆这几天一定要我写写她，可是写什么呢，她一天到晚都呆在家里，我觉得都要发霉了，让她去晒晒太阳好茁壮成长都懒得去，没办法。不过前几天她突发奇想写了一首改编自《小白兔，白又白》那个儿歌的儿歌，我贴到水木上面，加了好多个x，还是被不可re了，就看到有人发了一个帖子说“我靠，那个儿歌太x了。。。”，不过此文也被立刻删掉啦。不能re了肯定上不了十大了，也挺郁闷的，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>涉及到linux系统安全的几个文件</title>
      <link>https://wdicc.com/some-importent-files-in-linux/</link>
      <pubDate>Tue, 24 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/some-importent-files-in-linux/</guid>
      <description>
&lt;p&gt;部分内容转自&lt;a href=&#34;http://man.chinaunix.net/linux/debian/debian_learning/index.html&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1 cron.allow,cron.deny&lt;/strong&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;If the cron.allow file exists, then you must be listed therein in order to  be  allowed  to  use  this  command.   If  the  cron.allow  file  does  not  exist but the cron.deny file does exist, then you must not be listed in the cron.deny file in order to use this command.  If neither of these files exists, only the super user will be allowed to use this command.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;上面是引用 man crontab 里面的一段解释。如果 cron.allow 存在，那里面的用户可以使用crontab命令。如果cron.allow 不存在，而 cron.deny 存在，那么列在里面的用户不可以使用crontab命令。如果都不存在，那么只允许super用户来使用这个命令。 &lt;p&gt;安装rh的时候，默认就会存在一个 cron.deny 的空文件，所以普通用户也可以使用crontab。 &lt;p&gt;&lt;strong&gt;2 at.allow,at.deny&lt;/strong&gt; &lt;blockquote&gt; &lt;p&gt;The  superuser  may  use  these  commands  in  any case.  For other users, permission to use at is determined by the files&lt;br&gt;/etc/at.allow and /etc/at.deny. &lt;/p&gt; &lt;p&gt;If the file /etc/at.allow exists, only usernames mentioned in it are allowed to use at. &lt;/p&gt; &lt;p&gt;If /etc/at.allow does not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed to use at.  &lt;p&gt;If neither exists, only the superuser is allowed use of at.  &lt;p&gt;An empty /etc/at.deny means that every user is allowed use these commands, this is the default configuration.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;这个其实和上面那个是类似的。默认也是有个空的 at.deny 文件，允许所有用户使用at。 &lt;p&gt;&lt;strong&gt;3 /etc/security/access.conf&lt;/strong&gt; &lt;blockquote&gt; &lt;p&gt;# Login access control table.&lt;br&gt;# &lt;br&gt;# When someone logs in, the table is scanned for the first entry that&lt;br&gt;# matches the (user, host) combination, or, in case of non-networked&lt;br&gt;# logins, the first entry that matches the (user, tty) combination.  The&lt;br&gt;# permissions field of that table entry determines whether the login will &lt;br&gt;# be accepted or refused.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;login 权限控制表。可以控制允许登陆的ip，登陆的tty等信息。 &lt;blockquote&gt; &lt;p&gt;# Disallow console logins to all but a few accounts.&lt;br&gt;#&lt;br&gt;#-:ALL EXCEPT wheel shutdown sync:LOCAL&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;比如可以设置只允许某些用户从本地登陆。建议设置root用户不能从本地登陆。 &lt;p&gt;&lt;strong&gt;4 /etc/securetty&lt;/strong&gt; &lt;p&gt;该文件可控制根用户登录的设备，该文件里记录的是可以作为根用户登录的设备名，如tty1、tty2等。用户是不能从不存在于该文件里的设备登录为根用户的。这种情况用户只能以普通用户登录进来，再用su命令转为根用户。/etc/securetty文件的格式如下：&lt;pre&gt;# /etc/securetty: list of terminals on which root is allowed to login.&lt;br /&gt;
# See securetty(5) and login(1).&lt;br /&gt;
console&lt;br /&gt;

# for people with serial port consoles&lt;br /&gt;
ttyS0&lt;br /&gt;

# for devfs&lt;br /&gt;
tts/0&lt;br /&gt;

# Standard consoles&lt;br /&gt;
tty1&lt;br /&gt;
tty2&lt;br /&gt;
tty3&lt;br /&gt;
...&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;如果/etc/securetty是一个空文件，则根用户就不能从任务的设备登录系统。只能以普通用户登录，再用su命令转成根用户。如果/etc/securetty文件不存在，那么根用户可以从任何地方登录。这样会引发安全问题，所以/etc/securetty文件在系统中是一定要存在的。&lt;br /&gt;
&lt;p&gt;&lt;strong&gt;5  /etc/login.defs&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;login.defs是设置用户帐号限制的文件，在这里我们可配置密码的最大过期天数，密码的最大长度约束等内容。该文件里的配置对root用户无效。如果/etc/shadow文件里有相同的选项，则以/etc/shadow里的设置为准，也就是说/etc/shadow的配置优先级高于 /etc/login.defs。下面内容是该文件的节选：&lt;pre&gt;...&lt;br /&gt;
#&lt;br /&gt;
# Password aging controls:&lt;br /&gt;
#&lt;br /&gt;
#       PASS_MAX_DAYS   Maximum number of days a password may be used.&lt;br /&gt;
#       PASS_MIN_DAYS   Minimum number of days allowed between password change.&lt;br /&gt;
#       PASS_WARN_AGE   Number of days warning given before a password expires.&lt;br /&gt;
#&lt;br /&gt;
PASS_MAX_DAYS 99999&lt;br /&gt;
PASS_MIN_DAYS 0&lt;br /&gt;
PASS_WARN_AGE 7&lt;br /&gt;
...&lt;br /&gt;
#&lt;br /&gt;
# Number of significant characters in the password for crypt().&lt;br /&gt;
# Default is 8, don&#39;t change unless your crypt() is better.&lt;br /&gt;
# If using MD5 in your PAM configuration, set this higher.&lt;br /&gt;
#&lt;br /&gt;
PASS_MAX_LEN            8&lt;br /&gt;
...&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;strong&gt;6 /etc/pam.d/su&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;通过pam来限制su命令的使用。比如可以设置哪些组，哪些用户才能使用。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;#auth       sufficient   /lib/security/$ISA/pam_wheel.so trust use_uid&lt;br&gt;# Uncomment the following line to require a user to be in the &#34;wheel&#34; group.&lt;br&gt;auth       required     /lib/security/$ISA/pam_wheel.so group=admin&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>帖一些相片，嘿嘿</title>
      <link>https://wdicc.com/some-pics/</link>
      <pubDate>Fri, 13 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/some-pics/</guid>
      <description>
&lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2679936_ffb63a009d_m.jpg&#34;&gt; &lt;img src=&#34;http://static.zooomr.com/images/2679932_45d14a4f03_m.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2679930_b51c3fbfd2_m.jpg&#34;&gt; &lt;img src=&#34;http://static.zooomr.com/images/2679928_ee9dafa8fe_m.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2667181_f939e0ac36.jpg?r=360&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2666817_de6ea1fc4e.jpg?r=360&#34;&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>非常不错的 utorrent</title>
      <link>https://wdicc.com/utorrent-is-the-best-bittorrent-client/</link>
      <pubDate>Tue, 10 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/utorrent-is-the-best-bittorrent-client/</guid>
      <description>
&lt;p&gt;最早发现bt这玩意的时候，还是2003年。那会上 btchina 找新资源是一种乐趣。那会用的是官方的那个下载软件，就一个界面，下载几个开几个窗口，下载速度不能控制。后来慢慢有了能控制速度的版本，但是界面还基本都那么单一。再后来就用上了 bitsprit，bitcomet这些。bitcomet用了很长时间，内网速度很好，占资源又少。但是自从 0.7（好像是这个版本）之后，就没用过了，下载速度不见长，还往下掉，运行也越来越慢。那会我就开始用bitsprite了，虽然也不怎么样，但是下载还是有速度的。。。&lt;/p&gt; &lt;p&gt;今天无聊试了下utorrent，发现速度还是上不去，就几k，这真没办法用。翻了一下utorrent 的论坛，&lt;font color=&#34;#008080&#34;&gt;取消了“upnp映射”这个选项&lt;/font&gt;的选择后，发现速度上去了！现在长时间都是 100多k，还是比较爽的。还用上了 utorrent 的webui，类似 mldonkey 了现在，可以远程操纵 utorrent。感觉良好，呵呵。&lt;/p&gt; &lt;p&gt;webui 地址： &lt;a href=&#34;http://forum.utorrent.com/viewtopic.php?id=14565&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;，最新的 utorrent 1.7 beta 可以用。看看 webui的readme就知道怎么安装了。&lt;/p&gt; &lt;p&gt;另外还有一个 fx 的扩展： &lt;a href=&#34;http://forum.utorrent.com/viewtopic.php?id=15619&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://www.zooomr.com/photos/wd/2660430/&#34; target=&#34;_blank&#34; atomicselection=&#34;true&#34;&gt;&lt;img src=&#34;http://static.zooomr.com/images/2660430_10aa0a1b1e.jpg?r=360&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>smsd 发送中文短信乱码</title>
      <link>https://wdicc.com/smsd-and-chinese/</link>
      <pubDate>Thu, 05 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/smsd-and-chinese/</guid>
      <description>
&lt;p&gt;smsd是使用mysql数据库的，所以这个乱码很容易把人搞晕。我之前&lt;a href=&#34;http://blog.wdicc.com/wordpress/gnokii_howto_chinese_sms/&#34;&gt;写过&lt;/a&gt;gnokii发送短信是和locale有关系的，只要在utf8的locale下面就可以正常发送中文短信了。而smsd也和这个类似，也需要utf8的locale。但是还需要注意的一点就是mysql也是有编码设置的。所以可能会认为，文本插入数据库之前是不是也需要对数据库做utf8的设置呢？其实是不需要的，这么做反而会造成乱码。&lt;/p&gt; &lt;p&gt;smsd连接mysql用的是mysql默认的字符集，那么我们插入文本的时候，也同样需要使用这个字符集，需要注意的是，这个文本也需要是utf8编码的。mysql默认的字符集通常是 “default-character-set&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; latin1”。&lt;/p&gt; &lt;p&gt;我写的一个python的用来插入数据库要发送的信息的程序。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;python&#34;&gt;#!/usr/bin/env python2.3&lt;br /&gt;
#coding=utf-8&lt;br /&gt;
import sys&lt;br /&gt;
import MySQLdb&lt;br /&gt;

#  inbox&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| Field      | Type             | Null | Key | Default             | Extra          |&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| id         | int(10) unsigned |      | PRI | NULL                | auto_increment |&lt;br /&gt;
#| number     | varchar(20)      |      |     |                     |                |&lt;br /&gt;
#| smsdate    | datetime         |      |     | 0000-00-00 00:00:00 |                |&lt;br /&gt;
#| insertdate | timestamp        | YES  |     | CURRENT_TIMESTAMP   |                |&lt;br /&gt;
#| text       | varchar(160)     | YES  |     | NULL                |                |&lt;br /&gt;
#| phone      | tinyint(4)       | YES  |     | NULL                |                |&lt;br /&gt;
#| processed  | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#+------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;

#  outbox&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| Field          | Type             | Null | Key | Default             | Extra          |&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;
#| id             | int(10) unsigned |      | PRI | NULL                | auto_increment |&lt;br /&gt;
#| number         | varchar(20)      |      |     |                     |                |&lt;br /&gt;
#| processed_date | timestamp        | YES  |     | CURRENT_TIMESTAMP   |                |&lt;br /&gt;
#| insertdate     | timestamp        | YES  |     | 0000-00-00 00:00:00 |                |&lt;br /&gt;
#| text           | varchar(160)     | YES  |     | NULL                |                |&lt;br /&gt;
#| phone          | tinyint(4)       | YES  |     | NULL                |                |&lt;br /&gt;
#| processed      | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#| error          | tinyint(4)       |      |     | -1                  |                |&lt;br /&gt;
#| dreport        | tinyint(4)       |      |     | 0                   |                |&lt;br /&gt;
#| not_before     | time             |      |     | 00:00:00            |                |&lt;br /&gt;
#| not_after      | time             |      |     | 23:59:59            |                |&lt;br /&gt;
#+----------------+------------------+------+-----+---------------------+----------------+&lt;br /&gt;

class Mydb:&lt;br /&gt;
        def __init__(self):&lt;br /&gt;
                try:&lt;br /&gt;
                        self.db=MySQLdb.Connection(host=&#34;localhost&#34;,user=&#34;gnokii&#34;,&lt;br /&gt;
                                passwd=&#34;gnokii&#34;,db=&#34;gnokii&#34;)&lt;br /&gt;

                except MySQLdb.OperationalError, message:&lt;br /&gt;
                        errorMessage = &#34;Error %d:\n%s&#34; % (message[ 0 ], message[ 1 ] )&lt;br /&gt;
                        print errorMessage&lt;br /&gt;
                        sys.exit(1)&lt;br /&gt;
                else:   &lt;br /&gt;
                        self.cursor = self.db.cursor()&lt;br /&gt;
#                       self.cursor.execute(&#34;SET NAMES &#39;utf8&#39;&#34;)&lt;br /&gt;
                        return&lt;br /&gt;
                        &lt;br /&gt;
        def insert(self,sql):&lt;br /&gt;
                self.cursor.execute(sql)&lt;br /&gt;
        &lt;br /&gt;
        def showdata(self,sql):&lt;br /&gt;
                self.cursor.execute(sql)&lt;br /&gt;
                return self.cursor.fetchall()&lt;br /&gt;
                &lt;br /&gt;
        def __del__(self):&lt;br /&gt;
                self.cursor.close&lt;br /&gt;
                self.db.close&lt;br /&gt;

text = sys.stdin.read()&lt;br /&gt;
db = Mydb()&lt;br /&gt;

if len(sys.argv) &amp;gt; 1 and len(text):&lt;br /&gt;
        number = sys.argv[1]&lt;br /&gt;
        sql = &#39;insert into outbox (number,text) VALUES (&#34;&#39; + number + &#39;&#34;,&#34;&#39; + text + &#39;&#34;)&#39;&lt;br /&gt;
        &lt;br /&gt;
        db.insert(sql)&lt;br /&gt;

else:   &lt;br /&gt;
        print &lt;br /&gt;
        print &#34;    ********** outbox ********** &#34;&lt;br /&gt;
        for rs in db.showdata(&#34;select * from outbox&#34;):&lt;br /&gt;
                print rs[0],rs[1],rs[2],rs[-7],rs[-5]&lt;br /&gt;
        &lt;br /&gt;
        print &#34;    ********** inbox *********&#34;&lt;br /&gt;
        for rs2 in db.showdata(&#34;select * from inbox&#34;):&lt;br /&gt;
                print rs2[0],rs2[1],rs2[-3]&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天是老婆生日</title>
      <link>https://wdicc.com/happy-birthday-to-cc-2/</link>
      <pubDate>Mon, 02 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/happy-birthday-to-cc-2/</guid>
      <description>
&lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2610988_289076f6e9_m.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2610528_a2783d34d0_m.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://static.zooomr.com/images/2610438_046cef82a2_m.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;这是老婆过生日她同学送的花篮，呵呵。zoomr传了半天失败了n次才把这个图片传上去，真郁闷。&lt;/p&gt; &lt;p&gt;老婆又生日了，和我认识的第4个了。2004年5月份认识，也就是在她的生日前后在一起的。在一个桑拿天去了嘉年华，那汗把我一件新T恤上面的图案都洗了，北京的天气真bt，不过也可能是我的T恤的问题。。。。&lt;/p&gt; &lt;p&gt;刚想起来和老婆在一起后的一个小故事，呵呵。有天早上我走的时候，顺手从冰箱里面拿出来一袋牛奶，本来想自己带的，结果放桌子上面忘记了。老婆后起来的，看到那个牛奶还挺感动，以为是我怕牛奶太凉早上喝不合适，提前给她拿出来的，哈哈呵呵嘿嘿。。。&lt;/p&gt; &lt;p&gt;老婆&lt;font color=&#34;#008000&#34; size=&#34;4&#34;&gt;生日快乐&lt;/font&gt;哦。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>oracle 的 job 又遇到问题了</title>
      <link>https://wdicc.com/oracle-jobs/</link>
      <pubDate>Fri, 29 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-jobs/</guid>
      <description>
&lt;p&gt;还是高级复制的问题，这次可能是因为job执行过程中，对方机器刚好重启导致的。反正job是卡在那里了，都10多天了。&lt;/p&gt; &lt;p&gt;查看 dba_jobs_running 表，可以看到卡住的job的 job_id 和 sid 。查看 dba_jobs 表，可以看到相应 job 的信息，this_date 如果有数据的话，表示的是 job 开始执行的时间，next_date 是下次执行 job 的时间，如果 job 正常执行完毕，那么 this_date 应该是空的。根据 sid 还可以查看 v$session_wait 和 v$session 里面的这个 job 的一些状态。&lt;/p&gt; &lt;p&gt;尝试了下面的方法来重新运行job，当时好像不好用，不过今天来看的时候，job是执行了。现在也不清楚是不是我这个操作起作用了，真晕。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;SQL&amp;gt; exec dbms_job.broken(109,true);&lt;br /&gt;

PL/SQL procedure successfully completed.&lt;br /&gt;

SQL&amp;gt; commit;&lt;br /&gt;

Commit complete.&lt;br /&gt;

SQL&amp;gt; select job,sid from dba_jobs_running;&lt;br /&gt;

       JOB        SID&lt;br /&gt;
---------- ----------&lt;br /&gt;
       109        656&lt;br /&gt;

SQL&amp;gt; select saddr,sid,serial#,paddr,username,status from v$session where username = &#39;REPADMIN&#39;;&lt;br /&gt;

SADDR           SID    SERIAL# PADDR    USERNAME                       STATUS&lt;br /&gt;
-------- ---------- ---------- -------- ------------------------------ --------&lt;br /&gt;
973CF8C4        626         27 98F96BB8 REPADMIN                       ACTIVE&lt;br /&gt;
973D2E7C        629         10 98F88670 REPADMIN                       ACTIVE&lt;br /&gt;
973F11F4        656         10 98F88174 REPADMIN                       ACTIVE&lt;br /&gt;

SQL&amp;gt; alter system kill session &#39;656,10&#39;;&lt;br /&gt;

System altered.&lt;br /&gt;

SQL&amp;gt; select saddr,sid,serial#,paddr,username,status from v$session where username = &#39;REPADMIN&#39;;&lt;br /&gt;

no rows selected&lt;br /&gt;

SQL&amp;gt; select job,sid from dba_jobs_running;&lt;br /&gt;

no rows selected&lt;br /&gt;

SQL&amp;gt; select job,log_user,last_date,next_date from dba_jobs where log_user=&#39;REPADMIN&#39;;&lt;br /&gt;

       JOB LOG_USER                       LAST_DATE&lt;br /&gt;
---------- ------------------------------ -------------------&lt;br /&gt;
NEXT_DATE&lt;br /&gt;
-------------------&lt;br /&gt;
       106 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;

       109 REPADMIN                       2007-06-28 16:07:38&lt;br /&gt;
4000-01-01 00:00:00&lt;br /&gt;

       110 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;


SQL&amp;gt; exec dbms_job.broken(109,false,sysdate);&lt;br /&gt;

PL/SQL procedure successfully completed.&lt;br /&gt;

SQL&amp;gt; commit;&lt;br /&gt;

Commit complete.&lt;br /&gt;

SQL&amp;gt; select job,log_user,last_date,next_date from dba_jobs where log_user=&#39;REPADMIN&#39;;&lt;br /&gt;

       JOB LOG_USER                       LAST_DATE&lt;br /&gt;
---------- ------------------------------ -------------------&lt;br /&gt;
NEXT_DATE&lt;br /&gt;
-------------------&lt;br /&gt;
       106 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;

       109 REPADMIN                       2007-06-28 16:07:38&lt;br /&gt;
2007-06-28 16:28:40&lt;br /&gt;

       110 REPADMIN                       2007-06-28 16:25:43&lt;br /&gt;
2007-06-28 16:35:43&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;此后就我所知道的，就只能等着了。dbms_job.run(job_id) 也可以让 job 立即执行。关键是看 this_date ，他的值就是开始执行 job 的时间，job 如果执行时间太长，而下次执行又太快的话，可能也会导致问题。所以还可以尝试手动执行 job 看看。 dba_jobs 的 waht 字段就是对于的语句。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>爆笑幼儿园（转载）</title>
      <link>https://wdicc.com/funny-words-of-child/</link>
      <pubDate>Fri, 29 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/funny-words-of-child/</guid>
      <description>&lt;br /&gt;
 &lt;p&gt;&lt;strong&gt;2号幼儿园 &lt;/strong&gt;&lt;br&gt;问题一：人为什么只有两条腿？ &lt;br&gt;　　小朋友A：因为我们不是动物。（鸭子难道是四条腿？） &lt;br&gt;　　小朋友B：人长不出四条腿。（这是上天的安排，最大） &lt;br&gt;　　小朋友C：（自己大笑）长四条腿就要打架了。 &lt;br&gt;　　追问：可是狗狗长得四条腿跑得很快啊？ &lt;br&gt;　　小朋友C：（发呆）……（众小朋友纷纷大叫：我比狗跑得快！） &lt;br&gt;问题二：怎样才能让胖子马上瘦下来？ &lt;br&gt;　　小朋友A：吃减肥饼干。（还算聪明） &lt;br&gt;　　追问：吃减肥饼干不能立即瘦，怎样才能一下子变瘦？ &lt;br&gt;　　小朋友A: 那不吃减肥饼干。（你耍我？） &lt;br&gt;问题三：怎样才能让瘦子马上胖起来？ &lt;br&gt;　　小朋友A：喝牛奶。（牛奶又不是猪饲料） &lt;br&gt;　　小朋友B：吃很多饭就能当公安。（公安都是胖子？） &lt;br&gt;问题四：为什么有气球会飞到天上去？ &lt;br&gt;　　小朋友A：因为它有气。（没气能叫气球吗？） &lt;br&gt;　　追问：那为什么有的气球不能飞上天？ &lt;br&gt;　　小朋友A：因为里面气太少。（真会胡扯） &lt;br&gt;&lt;strong&gt;3号幼儿园&lt;/strong&gt;&lt;br&gt;问题一：什么动物两只脚，早上太阳公公起来的时候，它会叫你起床？ &lt;br&gt;　　小朋友A：鸡，公鸡。（另一个小孩叫道：父鸡） &lt;br&gt;　　很好奇地问：什么叫父鸡？ &lt;br&gt;　　小朋友：母鸡叫母鸡，公鸡就叫父鸡。（恍然大悟……） &lt;br&gt;　　小朋友B：妈妈。 &lt;br&gt;　　小朋友C：太阳。（汗……太阳它8是动物啊） &lt;br&gt;　　继续问：太阳长脚吗？ &lt;br&gt;　　小朋友C：太阳有五只脚。（另一个小孩反驳：七只，彩虹是七种颜色的） &lt;br&gt;问题二：什么叫七嘴八舌？ &lt;br&gt;　　小朋友A：就是七个嘴巴，八个舌头，说话很乱。（有道理）又补充道：我们现在就是七嘴八舌。（还是有自知之明的） &lt;br&gt;　　小朋友B：变出很多个舌头。（好可怕……） &lt;br&gt;问题三：怎么分辨男女？ &lt;br&gt;　　小朋友A：看头发，长头发的是女孩，短头发的是男孩。（旁边一个短头发女孩泪奔……） &lt;br&gt;　　小朋友B：偷看他（她）小便，站着的是男生，蹲着的是女生。（这点年纪就好色……） &lt;br&gt;　　小朋友C：看他（她）穿什么袜子，红的是女生，蓝的是男生。（好纯情……） &lt;br&gt;　　小朋友D：看眼神。（好飘忽……） &lt;br&gt;问题四：如果朝鱼塘里扔块石头，会发生什么现象？ &lt;br&gt;　　小朋友A：水会变成波波。（……） &lt;br&gt;　　小朋友B：鱼会漂上来。（渔民很开心……） &lt;br&gt;　　小朋友C：罚款五块。（汗……） &lt;br&gt;&lt;strong&gt;4号幼儿园&lt;/strong&gt;&lt;br&gt;问题一：汤山为什么叫汤山？ &lt;br&gt;　　小朋友A：因为是喝汤的山。（还真是望文生义啊……） &lt;br&gt;　　小朋友B：汤山是个温泉，洗澡的地方。（答非所问……） &lt;br&gt;　　小朋友C：下面很烫，所以叫汤山呗。（汗……原来是烫山……） &lt;br&gt;　　小朋友D：汤山是谁？（……） &lt;br&gt;问题二：有个老爷爷丢了一匹马，你认为马还会回来吗？ &lt;br&gt;　　小朋友A：不会，因为马在路上玩呢。（贪玩的马……） &lt;br&gt;　　小朋友B：不会，马它不会看年轮。（没见过马走路还要看年轮的……） &lt;br&gt;　　小朋友C：不会，马去和别的马结婚了。（还真是个浪漫的小孩……） &lt;br&gt;　　小朋友D：不会，老爷爷对那马不好，马去找新主人了。（现实很残酷，马也需要跳槽……） &lt;br&gt;问题三：医院里发药的阿姨为什么要戴口罩？ &lt;br&gt;　　小朋友A：因为院长怕她们偷吃。（难道药好吃？） &lt;br&gt;　　立即有个小朋友抢着说道：那些拿手术刀的叔叔戴口罩是不是怕他们聚餐啊？（晕……） &lt;br&gt;　　小朋友B：因为要讲卫生，怕口水流下来。（戴口罩原来是不让口水流下来啊…） &lt;br&gt;&lt;strong&gt;5号幼儿园 &lt;/strong&gt;&lt;br&gt;问题一：可口可乐和百事可乐有什么不一样？ &lt;br&gt;　　小朋友A：名字不一样。（这个连火星人都知道） &lt;br&gt;　　小朋友B：可口可乐的罐子是红的，百事可乐是蓝色的。（我知道你不是色盲啦，乖） &lt;br&gt;　　小朋友C：百事可乐有周杰伦，可口可乐有香草（口味）。 &lt;br&gt;　　小朋友D：可口可乐是酸酸的，喝了鼻子会冒气！（会冒气说明那是罐敬业的可乐） &lt;br&gt;问题二：为什么地铁要在地底下开呢？ &lt;br&gt;　　小朋友A：因为地铁有个“地”字，所以要在地下开。（我就猜到有人会这么回答） &lt;br&gt;　　小朋友B：地铁没有轮子，不能在地上开。（有轮子吗？没有吗？有吗？） &lt;br&gt;问题三：世界上是先有鸡还是先有蛋？ &lt;br&gt;　　小朋友A：先有蛋。 &lt;br&gt;　　问：没有鸡的话，蛋从哪里来呢？ &lt;br&gt;　　小朋友A：…… &lt;br&gt;　　小朋友B：先有母鸡，然后下蛋。 &lt;br&gt;　　小朋友C：一共有30只蛋！ &lt;br&gt;　　惊讶：啥？？？30只蛋，没听错吧？ &lt;br&gt;　　小朋友C：因为有2只老母鸡，每个下了15个蛋，所以有30个！（小朋友您好神啊） &lt;br&gt;问题四：4月1日是什么节？ &lt;br&gt;　　小朋友A：母亲节。 &lt;br&gt;　　小朋友B：妇女节。 &lt;br&gt;　　提醒：妇女节是3月8号啦。 &lt;br&gt;　　小朋友B：那就是植树节！ &lt;br&gt;　　忍不住了：愚人节是几月几号？ &lt;br&gt;　　小朋友C：是1月8号！（这个……） &lt;br&gt;　　小朋友D：我知道了，4月1号是司机叔叔过节！（你是怎么想出来的，好奇中） &lt;br&gt;问题五：怎么样才能变漂亮？ &lt;br&gt;　　小朋友A：贴黄瓜，我妈妈天天在家贴。 &lt;br&gt;　　小朋友B：贴木瓜，我阿姨老是贴。 &lt;br&gt;　　小朋友C：贴鸡蛋！（难度真大） &lt;br&gt;　　小朋友D：贴土豆，我婆婆给我贴过手。 &lt;br&gt;　　小男孩E：我贴过芒果皮！（那是你瞎折腾的吧） &lt;br&gt;&lt;strong&gt;总结：一个比一个神奇，DIY果然风行。&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>2007年高考语文北京作文一篇（转载）</title>
      <link>https://wdicc.com/gaokao-zuowen/</link>
      <pubDate>Thu, 28 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gaokao-zuowen/</guid>
      <description>&lt;br /&gt;
 &lt;p&gt;一般人听到叶闲花的故事早就吓得去买尿不湿了，但是秋细雨没有去买。&lt;br&gt;秋细雨不是一般人。&lt;br&gt;他知道，杀人不但要靠技术，还要拼人品！&lt;br&gt;秋细雨很镇定，他正用一把指甲刀修整着手指甲，他的手指修长有力。他要等待，等待对方先沉不住气。高手相争，不允许一丝一毫的失误，先沉不住气的人就会露出破绽。&lt;br&gt;致命的破绽！&lt;br&gt;因此秋细雨一言不发，只是静静地玩弄着指甲刀。&lt;br&gt;没想到叶闲花更是好整以暇，自己悠然自得地涂口红，喷香水。&lt;br&gt;秋细雨只好先发制人，道：&#34;你知道我找你出来是为什么。&#34;&lt;br&gt;叶闲花温柔道：&#34;在我们动手之前，不能先谈谈么？&#34;&lt;br&gt;秋细雨道：&#34;我是来杀人的，不是来聊天的。&#34;&lt;br&gt;叶闲花道：&#34;你有把握杀我？&#34;&lt;br&gt;秋细雨道：&#34;我从不做没有把握的事情。&#34;&lt;br&gt;叶闲花道：&#34;我要提醒你一件事。&#34;&lt;br&gt;秋细雨道：&#34;你说。&#34;&lt;br&gt;叶闲花道：&#34;百晓生作杀手谱，小女子是杀手榜排名第一，阁下区区第二，你真能杀得了我么？&#34;&lt;br&gt;秋细雨道：&#34;我也要提醒你一件事。&#34;&lt;br&gt;叶闲花道：&#34;你说。&#34;&lt;br&gt;秋细雨道：&#34;论杀手实力，我本在你之前，只是那次排名百晓生采用了短信投票系统，中国&#39;花痴&#39;人数过于庞大才让你得了第一。&#34;&lt;br&gt;叶闲花的脸色一变，道：&#34;我更要提醒你，我的粉丝团叫&#39;花粉 &#39;，不叫&#39;花痴&#39;！&#34;&lt;br&gt;秋细雨道：&#34;我最后要提醒你，你的那些&#39;花粉&#39;全都是花痴。还有，我们已经跑题了。&#34;&lt;br&gt;叶闲花道：&#34;我们这样拼命厮杀，你难道不怕麻烦么？&#34;&lt;br&gt;秋细雨道：&#34;你以后再也不用怕麻烦了，天下只有一种人永远不怕麻烦，死人！ &#34;&lt;br&gt;叶闲花道：&#34;这么说你非逼我出手不可？&#34;&lt;br&gt;秋细雨没有回答，他已不用回答。&lt;br&gt;秋细雨道：&#34;亮兵器！&#34;&lt;br&gt;叶闲花道：&#34;我用刀。&#34;&lt;br&gt;秋细雨道：&#34;你用刀？刀在何处？&#34;&lt;br&gt;叶闲花道：&#34;我就是刀！&#34;&lt;br&gt;叶闲花露出甜甜的笑容，忽然间褪下了自己的衣服，全身上下只剩下蕾丝比基尼和黑色丝袜。&lt;br&gt;叶闲花的脸美得让人窒息，再配上这样的身材，这样的服饰，充满了一种原始的诱惑力。&lt;br&gt;她的眼睛会说话，她的媚笑会说话，她的手，她的胸膛，她的腿……她身上每分每寸都会说话。&lt;br&gt;她知道，只要是个不瞎的男人，现在肯定会被她迷得神魂颠倒。&lt;br&gt;秋细雨是个男人，而且是个不瞎的男人。&lt;br&gt;可他现在却偏偏好像瞎了一样，完全无动于衷。&lt;br&gt;他知道，美丽的女人是一把刀，当你沉醉的时候，刀就会切进你的胸口。&lt;br&gt;秋细雨沉吟道：&#34;我只想问你一件事。&#34;&lt;br&gt;叶闲花娇笑着：&#34; 请讲。&#34;&lt;br&gt;秋细雨道：&#34;大夏天的，穿这么少你丫不怕蚊子叮啊？&#34;&lt;br&gt;叶闲花沉默了半晌，幽幽地道：&#34;你一定以为刚才我在喷香水，是不是？我告诉你，我喷的是六神花露水！&#34;&lt;br&gt;叶闲花又道：&#34;不过这不是普通的六神，是我特别提炼的药水，无色无味无毒，不过却会慢慢扩散在空气中，闻到它的人会四肢麻痹不能动弹。&#34;&lt;br&gt;秋细雨一惊，忽然觉得身体已经麻木不听使唤，不由得一身冷汗。&lt;br&gt;叶闲花又道：&#34;你以为我和你扯淡是因为我害怕，以为我脱掉衣服是想色诱你，其实这都是为了拖延时间让药水能扩散到你周围。&#34;&lt;br&gt;秋细雨面上不动声色，道：&#34;难道你自己不怕药水的厉害？&#34;&lt;br&gt;叶闲花得意地道： &#34;一开始我涂的口红就是解药，所以我仍然可以自由行动。&#34;&lt;br&gt;叶闲花逼视着秋细雨，问道：&#34;现在你还认为你能杀了我么？&#34;&lt;br&gt;秋细雨道：&#34; 我能。&#34;&lt;br&gt;叶闲花道：&#34;你不能动而我能动，你却能杀了我，这不是很好笑么？ &#34;&lt;br&gt;秋细雨道：&#34;是很好笑，但是你一定会被我杀死。&#34;&lt;br&gt;叶闲花道：&#34;为什么我会被你杀死？&#34;&lt;br&gt;秋细雨忽然反问道：&#34;飞刀能不能杀人？&#34;&lt;br&gt;叶闲花道：&#34;好像能。&#34;&lt;br&gt;秋细雨道：&#34;我有没有手？&#34;&lt;br&gt;叶闲花道：&#34;的确有。&#34;&lt;br&gt;秋细雨道：&#34;我手上有没有刀？ &#34;&lt;br&gt;叶闲花道：&#34;你手上好像只有指甲刀。&#34;&lt;br&gt;秋细雨道：&#34;足够了。&#34;&lt;br&gt;叶闲花道：&#34;足够了？&#34;&lt;br&gt;秋细雨道：&#34;我有手有刀，就能置人死地。&#34;&lt;br&gt;叶闲花道：&#34;指甲刀也能杀人？实在可笑！&#34;&lt;br&gt;秋细雨道：&#34;以前江湖中有七十三个人觉得我这把指甲刀很可笑。&#34;&lt;br&gt;叶闲花道：&#34;现在呢？&#34;&lt;br&gt;秋细雨道：&#34;现在人都已死了，死在这把刀下。&#34;&lt;br&gt;叶闲花道：&#34;你的手还能动？&#34;&lt;br&gt;秋细雨道：&#34;你要不要试试？&#34;&lt;br&gt;叶闲花脸上的笑容渐渐凝固，忽然间，她已出手！&lt;br&gt;一招&#34; 冒牌九阴白骨爪&#34;直逼秋细雨天灵盖，这一招她已练过七年四个月零二十九天，她完全有把握相信没有任何人可以抵挡得了这一招。&lt;br&gt;可这一次她错了。&lt;br&gt;刀光一闪，&#34;盗版小李飞刀&#34;已插入她的咽喉。&lt;br&gt;她到死也不相信，一把指甲刀可以要了她的命！&lt;br&gt;闲花终于落地！&lt;br&gt;三个时辰后，药水的药效渐渐淡去，秋细雨终于可以动弹了。&lt;br&gt;望着叶闲花的尸体，秋细雨道：&#34;虽然你已经死了，但是我还要告诉你两件事。第一，我一直用甲刀修整着手指甲是为了调整手和刀之间的同步率，说白了就是找手感。第二，我杀你的真正目的不是为了钱或者名利。&#34;&lt;br&gt;一边说，秋细雨一边从叶闲花衣服的口袋里搜出了刘翔的奥运会入场证。&lt;br&gt;秋细雨坚定地说：&#34;我爱北京，我要看奥运！&#34;&lt;br&gt;从此，再也没有人见过秋细雨。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>稍微深入了解了一下cacti的thold插件的邮件通知</title>
      <link>https://wdicc.com/change-trigger-setting-for-thold/</link>
      <pubDate>Thu, 28 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-trigger-setting-for-thold/</guid>
      <description>
&lt;p&gt;通过cacti的thold插件，可以做到snmp抓取到的数值低于你规定的值的时候进行邮件通知，例如我用他来监控磁盘空间，当磁盘空间低于某个数的时候就会给指定的email发邮件。但是有一点郁闷的是，有时候，可能是由于网络原因，抓取会超时，这样就会导致触发trigger，给你发送邮件。5分钟抓取一次，我这里的情况是几乎每个小时总会有2，3封这种邮件，很烦人，而且根本没意义。早就想屏蔽掉这种情况了，看了代码挺复杂就懒得弄，今天实在受不了了，深入了解了一下。&lt;/p&gt; &lt;p&gt;其实thold本身已经考虑到了这种情况，在 thold 的设置里面，就有一项 Default Trigger Count （Number of consecutive times the data source must be in breach of the threshold for an alert to be raised），就是连续触发几次才认为他真的低于 thold 了，才发送邮件。我尝试过修改这个设置，发现不管用。看了代码才了解，每个 &lt;strong&gt;Thresholds&lt;/strong&gt;&amp;nbsp;都有自己的 trigger 值，那个 default trigger count 只对新建的 thresholds 才有用。所以针对现有的，需要逐个去修改才行。如果不设置这个选项，那么使用的就是上面设置的那个默认的，所以没特殊需要，还是不要针对每个 thresholds 设置自己的 trigger 值比较好，这样方便修改。我通过修改数据库的方法，直接把这些都修改了。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;sql&#34;&gt;update thold_data set thold_fail_trigger = NULL;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;修改了之后还没有收到，这下应该清净了吧？&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为resin配置oracle连接池</title>
      <link>https://wdicc.com/resin-and-oracle/</link>
      <pubDate>Wed, 27 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/resin-and-oracle/</guid>
      <description>
&lt;p&gt;resin 2.x 的配置方法和 3.x 的方法有区别。按照&lt;a href=&#34;http://www.caucho.com/resin-3.1/doc/db-thirdparty.xtp&#34;&gt;官方文档&lt;/a&gt;，做下面的配置。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;database&gt;&lt;br /&gt;
  &lt;jndi-name&gt;oraPool&lt;/jndi-name&gt;&lt;br /&gt;
  &lt;driver&gt;&lt;br /&gt;
    &lt;type&gt;oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/type&gt;&lt;br /&gt;
    &lt;url&gt;jdbc:oracle:thin:@localhost:1521:dbname&lt;/url&gt;&lt;br /&gt;
    &lt;user&gt;username&lt;/user&gt;&lt;br /&gt;
    &lt;password&gt;password&lt;/password&gt;&lt;br /&gt;
  &lt;/driver&gt;&lt;br /&gt;
#....&lt;br /&gt;
&lt;/database&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&amp;nbsp;在上面的 &lt;font color=&#34;#ff0000&#34;&gt;.... &lt;/font&gt;这里还可以添加&lt;a href=&#34;http://www.caucho.com/resin-3.1/doc/database-tags.xtp&#34;&gt;其他的&lt;/a&gt;配置信息。配置好之后启动resin，会发现提示类似下面的信息。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;conf/resin.conf:218: java.lang.ClassNotFoundException: oracle.jdbc.pool.OracleConnectionPoolDataSource&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;提示没有找到连接oracle数据库的jdbc驱动。这个驱动在oracle的安装目录里面有。比如我这里是在 /db/oracle/10.1.0/product/10g/jdbc/lib/ 。里面好多文件，具体都什么作用可以看&lt;a href=&#34;http://www.oracle.com/technology/tech/java/sqlj_jdbc/htdocs/jdbc_faq.htm#02_07&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;复制这个目录里面的 classes12.jar 和 nls_charset12.jar 到resin的 lib 目录下面，重新启动 resin 就可以了。本文完成过程中参考了&lt;a href=&#34;http://dev.csdn.net/article/29/29762.shtm&#34;&gt;这篇&lt;/a&gt;文章。如何使用这个pool，官方文档也有&lt;a href=&#34;http://www.caucho.com/resin-3.1/doc/config-database.xtp#usage/lookup&#34;&gt;说明&lt;/a&gt;。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>天气太热了</title>
      <link>https://wdicc.com/such-hot-weather/</link>
      <pubDate>Wed, 27 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/such-hot-weather/</guid>
      <description>
&lt;p&gt;最近两天天气有点变态了，闷热，北京的桑拿天又开始了。空调还没买上，晚上得整晚开风扇了。还好偶们家的风扇很强悍，风够大。早就说要把凉席弄上了，一直没时间，今天晚上回去看看。不知道周末天气如何，希望那两天能是个好天气。&lt;/p&gt; &lt;p&gt;北京的交通是越来越让人郁闷了。前天早上有个超高的车在一个天桥那里卡住了，结果导致后面的车堵了得有几公里。平时十几分钟的路程走了1个小时。现在走在路上最怕的就是有事故。本来就2个车道（一个汽车道，一个自行车道，基本上自行车道都会被汽车占用，骑自行车的人都是在汽车中间穿梭），一旦发生事故，通常这条路就废了，这种路上也不时常安排几个交警，出现情况了，基本上就只能自己郁闷了，没几个小时解决不了问题。&lt;/p&gt; &lt;p&gt;今天早上在车上还想，以前军训站排的时候，好像也没现在一早上站的时间长吧。从7点起来，洗脸刷牙穿衣服到车站，等车来了继续车上站着，换地铁还是站着，这一路下来也不少时间呢，现在站功也不得了了，呵呵。&lt;/p&gt; &lt;p&gt;昨天和一个哥们一起喝酒，还在郁闷北京这种生活，但是郁闷归郁闷，生活还是得继续不是。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>sendmail 中自动抄送某个用户的邮件给别人</title>
      <link>https://wdicc.com/howto-cc-an-email-to-others-in-sendmail/</link>
      <pubDate>Tue, 26 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/howto-cc-an-email-to-others-in-sendmail/</guid>
      <description>
&lt;p&gt;sendmail有个 /etc/aliases 配置文件，在里面可以给某个帐号设置alias，这样给这个alias发的邮件，都会给设置好的用户转发过去。要知道sendmail的帐号是和系统帐号联系在一起的，添加mail帐号得给系统添加帐号（qmail可以实现虚拟用户，或许sendmail也可以，而我不知道罢了）。而这个alias帐号却不是必须有得有系统帐号的，只要设置了alias，就可以给alias用户发邮件，就好像系统真有这么一个帐号一样。&lt;/p&gt; &lt;p&gt;关于 /etc/aliases 文件，&lt;a href=&#34;http://www.feep.net/sendmail/tutorial/intro/aliases.html&#34;&gt;这里&lt;/a&gt;有个文章有说明。下面复制几个例子。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;conf&#34;&gt;# RFC 822 规定每个域名都需要有一个 &#34;postmaster&#34; &lt;br /&gt;
postmaster      : root&lt;br /&gt;

# 将 postmaster 的邮件都转发给 root 帐号，当然你下面还可以将root帐号的邮件在转发给别人。&lt;br /&gt;

# 转发也可以转发到文件&lt;br /&gt;
# 比如这个，都说了nobody了还给发邮件，邮件都丢掉&lt;br /&gt;
nobody          : /dev/null&lt;br /&gt;

# 也可以通过管道作为另一个程序的输入&lt;br /&gt;
# 比如给procmail，它能实现的功能可就多了，比如可以根据邮件大小转发到不同的用户，或者调用spamassian、clamav来查垃圾邮件和病毒等&lt;br /&gt;
# 一个自动的bug跟踪程序&lt;br /&gt;
program-bugs: |/usr/local/bin/program-bug-tracker&lt;br /&gt;

# 也可以转发到多个帐号，用逗号分隔就可以&lt;br /&gt;
project-list: johndoe@host1.uiuc.edu,jsmith@host2.uiuc.edu,someone@host.purdue.edu&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;可以看到功能还是很强悍的，尤其是可以 pipe 到程序，procmail、maildrop都是很不错的过滤程序，能实现很多其他的功能。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;标题的要求是“抄送”某个帐号的邮件给别的用户，有点类似监控的意思。怎么实现呢？可能第一个想到的就是类似下面这种方法：&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;conf&#34;&gt;somebody:other1,other2,somebody&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;这样是不是就能实现抄送呢？这样会造成死循环，呵呵。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;看样子似乎只能通过pipe到程序实现了，看procmail、maildrop的文档还不够头疼的。其实还有个简单的方法，就是 &lt;a href=&#34;http://www.feep.net/sendmail/tutorial/intro/forward.html&#34;&gt;.forward&lt;/a&gt; 文件。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;.forward 文件位于用户的 home 下面，权限是 600 。他的功能和 /etc/aliases 文件类似，不过是 aliases 文件只能由root用户来修改，而 .forward 文件用户自己就可以修改。除了上面aliases能做到的事情外，他还多了一个功能，就是标题要求的功能。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;按照标题的要求，只需要在 somebody 用户的 .forward 文件中放入下面的内容就可以了。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;conf&#34;&gt;\\somebody&lt;br /&gt;
other1&lt;br /&gt;
other2&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;要注意 somebody 前面的那个\，就是用来防止转发死循环的。加了\之后，给somebody转发的时候会忽略该用户的 .forward 文件。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>不得不说yupoo越来越慢了。。</title>
      <link>https://wdicc.com/slow-yupoo/</link>
      <pubDate>Tue, 26 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/slow-yupoo/</guid>
      <description>
&lt;p&gt;刚从 &lt;a href=&#34;http://flickr.com&#34;&gt;flickr&lt;/a&gt; 迁移到 &lt;a href=&#34;http://wdicc.yupoo.com&#34;&gt;yupoo&lt;/a&gt; 的时候，速度还挺快的，当时就担心越来越慢。现在的情况是，我blog上面引用的图片好多时候都显示不了，真郁闷啊。现在flickr被盾了，难道又得找新的地方了么？&lt;/p&gt; &lt;p&gt;yupoo 还是不错的，又有桌面的上传工具，又有 fx 的扩展。还是国内的，也不用担心被盾。可是。。速度为啥就不能快点呢。。。&lt;/p&gt; &lt;p&gt;似乎可以考虑下 &lt;a href=&#34;http://beta.zooomr.com/&#34;&gt;zooomr&lt;/a&gt; ，不过是国外的，难说哪天又被盾了。真郁闷。&lt;/p&gt; &lt;p&gt;我来看，&lt;a href=&#34;http://yutube.com&#34;&gt;yutube&lt;/a&gt; 被盾是迟早的。&lt;/p&gt; &lt;p&gt;zooomr 申请了一个帐号，贴个图看看先。这是kfc的优惠券，打印了就可以用，呵呵。&lt;/p&gt;&lt;a title=&#34;Photo Sharing&#34; href=&#34;http://www.zooomr.com/photos/wd/2552707/&#34;&gt;&lt;img height=&#34;500&#34; alt=&#34;kfc&#34; src=&#34;http://static.zooomr.com/images/2552707_f4edee8491.jpg&#34; width=&#34;381&#34;&gt;&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>resin 的安装步骤</title>
      <link>https://wdicc.com/install-resin/</link>
      <pubDate>Thu, 21 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-resin/</guid>
      <description>
&lt;p&gt;resin目前已经到了3.1版本，从resin网站上面下载的resin不带jdk，需要自己去下载。resin的下载页面在&lt;a href=&#34;http://www.caucho.com/download/index.xtp&#34;&gt;这里&lt;/a&gt;。下载最新的 Resin Pro 3.1.1 版本。&lt;/p&gt; &lt;p&gt;jdk的下载地址在 &lt;a href=&#34;http://java.sun.com/javase/downloads/index.jsp&#34;&gt;这里&lt;/a&gt;&amp;nbsp;，resin 3.1需要1.5及以上版本的jdk。&lt;/p&gt; &lt;p&gt;先来安装resin：&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;bash&#34;&gt;tar zxvf resin-pro-3.1.1&lt;br /&gt;
cd resin-pro-3.1.1&lt;br /&gt;
./configure --prefix=/usr/local/resin #安装的目的地址&lt;br /&gt;
make &amp;amp;&amp;amp; make install&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;安装完resin之后，安装jdk：&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;bash&#34;&gt;cd /usr/local&lt;br /&gt;
chmod +x /root/jdk-6u1-linux-i586.bin&lt;br /&gt;
/root/jdk-6u1-linux-i586.bin&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;此后会在/usr/local/下面建立一个jdk1.6.0_01目录，jdk就安装完毕了。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;resin 的配置文件在 /usr/loca/resin/conf 下面，主要是 resin.conf 。默认的端口是8080。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;http port=&#34;8080&#34; address=&#34;*&#34;&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;然后就是添加自己的应用地址了。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;host id=&#34;&#34; root-directory=&#34;.&#34;&gt;&lt;br /&gt;
      &lt;web-app id=&#34;/&#34; root-directory=&#34;webapps/ROOT&#34;&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;在这下面添加一行&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;&lt;web-app id=&#34;/test&#34; root-directory=&#34;/www/test/&#34;&gt;&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;此后呢，访问 http://ip:8080/test 就可以访问到你的应用了。 &lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>老婆送的momo熊</title>
      <link>https://wdicc.com/momo-bear/</link>
      <pubDate>Thu, 21 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/momo-bear/</guid>
      <description>
&lt;p&gt;昨天老婆和一个邻居出去逛街，很晚才回来。回来的时候我都睡的迷迷糊糊的了，不知道咋回事，整天困的不行，最近晚上睡的都比较早。今天早上走的时候发现手机上面多了一个吊饰，就是下图右边那个了。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070621/144312_797301615.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;我觉得，这个不就是狗么？。。。老婆一定说是熊。。汗。。&lt;/p&gt; &lt;p&gt;那个胳膊是可以动的，买了一对，左边的是老婆的，右边的是我的，哈哈。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>tmp下面有好多的sess_文件</title>
      <link>https://wdicc.com/lots-sess_-files/</link>
      <pubDate>Wed, 20 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lots-sess_-files/</guid>
      <description>
&lt;p&gt;之前以为是有个&lt;a href=&#34;http://blog.wdicc.com/wordpress/update-blog-to-2-2/&#34;&gt;did_you_path_math插件&lt;/a&gt;的问题，可是停止这个插件后，发现还是会有这些文件出来。&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;txt&#34;&gt;-rw-------    1 nobody   4294967295        0 Jun 20 16:01 sess_l12chvh9bjik2a7ms152ggnu36&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 16:00 sess_r6gml3pbcfaribnctamiq9rk53&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 16:00 sess_lnvhsb928701qq1kgf1fiiuem5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 16:00 sess_bhlk360m7jqh1c8khku000gte4&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:58 sess_uuflltlj4c81pk116qtegr15q2&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:57 sess_6fbdvd4fmq49pp9kvi0g68ihr5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:55 sess_s4o0c5untrfj2rpdqemp06lk65&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:51 sess_9cir4ug259se527d01pcgr63j0&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:50 sess_kj973ei5sudldg3n9bfq0cgb23&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:49 sess_7j8h39red2jak1upe1k80c1tt7&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:45 sess_tnhhikhc2hgui3e9ugh835i0s0&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:44 sess_mgpr813dtuil5m6u765kbov503&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:41 sess_8vcse5004pvd2icntct9jgt5m4&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:39 sess_g2r1hkg2u4o9v0c919nem61724&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:39 sess_60qoqf65giur2ulj01ce2snal0&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_vier69ckh0dmp9613k0gfm05m3&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_m57eveg1oarv2hheem2nkv45i4&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_hgtktf6eeeghdfm1e7blb1v4a7&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:38 sess_qko77d166lmadk3gcn4lop7qe1&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:36 sess_en9v49gnlbmtma56s8tkqpqbc5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:32 sess_aeu3nad39iljqr6kahaq7ceih5&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_ulboab1mt4ov930fkllrc6rlt3&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_47on5eflfdfnupdov6a59soui3&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_o98ss7kbp31jce5d2jt133n183&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:31 sess_p97q0t0qlmtalkbpism7aa7gb6&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:30 sess_le35e8bodjrlp4ufk33c2k6h62&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:29 sess_9dlskkqqas3nu7t2asu4ok8ec2&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:29 sess_a56sha53hr1737nt9rahh2nn02&lt;br /&gt;
-rw-------    1 nobody   4294967295        0 Jun 20 15:29 sess_2g2r8j02h4al5rmbb0mnpuu865&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&amp;nbsp;见鬼了，也不知道是怎么回事。google了一下，说修改php.ini的下面几个参数。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;pre lang=&#34;ini&#34;&gt;; Define the probability that the &#39;garbage collection&#39; process is started&lt;br /&gt;
; on every session initialization.&lt;br /&gt;
; The probability is calculated by using gc_probability/gc_divisor,&lt;br /&gt;
; e.g. 1/100 means there is a 1% chance that the GC process starts&lt;br /&gt;
; on each request.&lt;br /&gt;

session.gc_probability = 1&lt;br /&gt;
session.gc_divisor     = 1000&lt;br /&gt;

; After this number of seconds, stored data will be seen as &#39;garbage&#39; and&lt;br /&gt;
; cleaned up by the garbage collection process.&lt;br /&gt;
session.gc_maxlifetime = 1440&lt;/pre&gt;&lt;br /&gt;
&lt;p&gt;修改好像也是治标不治本，不知道有没有办法查出来这些文件是怎么会出来的，有时候会一分钟出来好几个这个文件，很烦。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>每天早上打开电脑的第一件事情</title>
      <link>https://wdicc.com/read-rss/</link>
      <pubDate>Wed, 20 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/read-rss/</guid>
      <description>
&lt;p&gt;不管是在上班，还是在家，每天早上打开电脑的第一件事情恐怕就是打开水木去十大看看了，呵呵。第一件事情没什么好说的，说第二件事情。第二件事情就是打开google reader看订阅的blog和新闻。&lt;/p&gt; &lt;p&gt;自从rss流行起来后，就一直在换rss阅读器。最早的时候用过greatnews，feeddaemon，还有水木上面某个兄弟开发的一个软件，不过好像后来没消息了。那会不知道看什么好，不过还好greatnews里面内置了一些新闻rss，比如sina的。不过后来发现那些新闻都没啥意思就没有怎么用了。&lt;/p&gt; &lt;p&gt;再之后呢，用上了fx后，频繁看到对于sarge的推荐，就又开始看了几天rss。此后看别人推荐就去了bloglines，之后就喜欢上这个了。不需要客户端，能上网的电脑就能看，而且能记住你上次看过的信息。不过后来发现了一个郁闷的地方（写到这里有个插曲需要先插播一下）&lt;/p&gt; &lt;p&gt;突然不能输入中文了，考，破玩意。开始还以为是输入法的问题，换了一个输入法折腾了半天也不行，重装了live wrtier也不行，搜了一下找到一个&lt;a href=&#34;http://crody.blogspot.com/2006/10/live-writer.html&#34;&gt;解决办法&lt;/a&gt;。需要注意的是这个blog是blogspot上面的，被盾了，引用下里面的解决方法吧。&lt;/p&gt; &lt;p&gt; &lt;blockquote&gt; &lt;p&gt;如果用live writer写文章时频繁切换中英文输入法，有可能使得中文输入法失效。&lt;/p&gt; &lt;p&gt;具体表现就是可以切换到中文输入法，但输入仍然是英文。&lt;/p&gt; &lt;p&gt;昨天遇到几次之后终于找到了一个解决方法:将光标移到标题栏，在这里切换到中文输入法的。&lt;/p&gt; &lt;p&gt;然后再跳回到正文部分，看看，是不是已经可以输入中文了？&lt;/p&gt; &lt;p&gt;估计是由于用快捷键切换输入法时与writer的key hook冲突，导致正文部分失去输入焦点。已经向作者报告BUG了，有遇到同样问题的可以试试这个土办法 ;)&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;这个方法确实好用。&lt;/p&gt; &lt;p&gt;再继续上面的话题，。。不说别的了，bloglines的问题以及后面的事情，都在&lt;a href=&#34;http://blog.wdicc.com/wordpress/google-reader-and-zhuaxia/&#34;&gt;这个帖子&lt;/a&gt;里面说清楚了，嗯，就不多说了。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天下班天气挺凉快</title>
      <link>https://wdicc.com/cool-weather/</link>
      <pubDate>Wed, 13 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cool-weather/</guid>
      <description>
&lt;p&gt;下了公交，凉嗖嗖的，这算是最近最舒服的一个天气了。进了小区，好多绿树和小花，顺手拍了一些。&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://www.yupoo.com/photos/view?id=ff80808113090bf90113253e5d163c2f&#34; atomicselection=&#34;true&#34;&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070613/212048_941426665_m.jpg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.yupoo.com/photos/view?id=ff80808113090c230113253e1c197070&#34; atomicselection=&#34;true&#34;&gt;&lt;img src=&#34;http://photo8.yupoo.com/20070613/212032_238552313_m.jpg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://www.yupoo.com/photos/view?id=ff80808113090c230113253e5ac8708f&#34; atomicselection=&#34;true&#34;&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070613/212048_1580372169_m.jpg&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.yupoo.com/photos/view?id=ff80808113090c230113253e040c7067&#34; atomicselection=&#34;true&#34;&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070613/212025_38375377_m.jpg&#34;&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;上次出门的时候看到有个女人领着小孩在摘最后那个图里面的花玩，一会我们回来的时候，看到地上落了一地的花瓣，真是有其母必有其子啊，呵呵。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>《飘渺之旅》看完了</title>
      <link>https://wdicc.com/piaomiao-is-a-good-book/</link>
      <pubDate>Mon, 11 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/piaomiao-is-a-good-book/</guid>
      <description>
&lt;p&gt;这本小说写的挺不错的，自成一个世界。最开始有人推荐的时候，看了一下就觉得这个作者写作的语言太差了，呵呵。文笔很一般。那个《搜神记》的作者就很会描述一些情况，虽然故事一般，但是讲解起来也能有声有色。《飘渺之旅》的作者很会编故事，但是场面铺的有点太大了。挖了一些坑，后来都没时间填了。之前看黄易的《覆雨翻云》的时候，也是感觉场面很大，但是人家的描写起来，好多人都有自己的性格，感觉好一些。&lt;/p&gt; &lt;p&gt;总的来说，《飘渺之旅》这本书还是值得一看的。作者很会编故事，从开始的天庭星，往后的坦邦大陆，封缘星，霖明星等，主角一步一步从被逼着修炼成神。后来来了地球还又小小讽刺了一下警察、房地产商这些公敌，呵呵。&lt;/p&gt; &lt;p&gt;现在在看别人给写的续集，《飘渺神之旅》，续的比原作差一点，凑合看了。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>最近这几天太热了</title>
      <link>https://wdicc.com/the-hot-weather/</link>
      <pubDate>Sun, 10 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/the-hot-weather/</guid>
      <description>
&lt;p&gt;最近这几天太热了，妞妞趴在地板上面都不愿意起来，现在晚上都不上床睡了，都在窗户旁边地板上面。猫猫们倒是知道怎么安排自己，呵呵。北京的天气就是有点变态，才这会温度就要飙升到40度了，不过还好，家里所有门窗都开着的话，还有嗖嗖的小风，就是不知道再过段时间会怎么样。&lt;/p&gt; &lt;p&gt;今天&lt;font face=&#34;宋体&#34; color=&#34;#ff0000&#34; size=&#34;4&#34;&gt;老婆陪我&lt;/font&gt;去西单给自己的N70换了一个壳，现在是白色的了。Nokia手机的这个功能还是很不错的，没换之前我那个手机看着好像都用了好几年了，因为后盖被磨掉好多地方。可是换了之后，立马就是新的了，又可以显摆一段时间了。说起来这个手机有点买错方向了，3G的功能一点用都没有，还不如wifi来的实用一点。公司和家里都有wifi，上起网来，还是很方便的，不过就是速度有点慢。&lt;/p&gt;&lt;p&gt;&lt;img src=&#34;http://photo7.yupoo.com/20070610/215722_566099266.jpg&#34;&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>继续测试 live writer 的 post-slug 功能</title>
      <link>https://wdicc.com/test-live-writer-post-slug/</link>
      <pubDate>Sat, 09 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/test-live-writer-post-slug/</guid>
      <description>
&lt;p&gt;居然没有提示就装好了，搞得我重装了好几次，下载了好几个版本。&lt;/p&gt; &lt;p&gt;这次看看post-slug好用不好用。&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;pre lang=&#34;bash&#34;&gt;grep -r &#34;shit&#34; GFW&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>升级了一下blog，顺便换了一个spam插件</title>
      <link>https://wdicc.com/update-blog-to-2-2/</link>
      <pubDate>Thu, 07 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/update-blog-to-2-2/</guid>
      <description>
wordpress 早就升级到 2.2 了，一直懒得弄，今天升级了一下。&lt;br /&gt;

最近发现有spam了，那个 Did You Pass Math 插件居然没挡住？spam还会计算这个？真晕了。因为这个插件老搞出来很多session文件在/tmp目录，所以刚好换一个用用。&lt;br /&gt;

弄了一个 &lt;a href=&#34;http://www.paulbutler.org/&#34;&gt;JS SpamBlock&lt;/a&gt; ,会在comment下面隐藏一个input段，如果不支持js的浏览器访问，就得在input里面填数字才能发表。支持js的就不需要填了。spam应该都不支持的吧？。。&lt;br /&gt;
&lt;p class=&#34;poweredbyperformancing&#34;&gt;Powered by &lt;a href=&#34;http://scribefire.com/&#34;&gt;ScribeFire&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>google reader 和 zhuaxia</title>
      <link>https://wdicc.com/google-reader-and-zhuaxia/</link>
      <pubDate>Wed, 06 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/google-reader-and-zhuaxia/</guid>
      <description>
最早的时候用的是&lt;a href=&#34;http://www.bloglines.com&#34;&gt;bloglines&lt;/a&gt; ，结果发现有时候有的看过的feed会又变成没看过的，也不知道是feed的问题，还是bloglines的问题，但是这个问题让人很郁闷。后来 &lt;a href=&#34;https://www.google.com/reader/&#34;&gt;Google reader&lt;/a&gt; 支持帖标签分类之后，就用 Google reader 了。&lt;br /&gt;

Google reader 最近用的有点郁闷，有写feed有时候会有些撞墙的问题，搞的 reader 里面不能点这几个feed，点完之后别的也看不了了，很让人郁闷。然后就想起来了好多人推荐的 &lt;a href=&#34;http://www.zhuaxia.com&#34;&gt;zhuaxia&lt;/a&gt; 。&lt;br /&gt;

zhuaxia用了一段时间，发现他的切换不同的tag速度慢，最郁闷的问题是每次打开首页都会显示上次看的feed，这样没新内容还好，有新内容的时候，就会显示这些内容，这时左边的列表是合起来的，不注意不知道是哪个feed，很郁闷。今天无意中又看到了一个信息，Google reader 支持 https 访问，试了一下果然可以，那可真爽了，就不用担心撞墙了，呵呵。所以，又换回来了。 :)&lt;br /&gt;

&lt;p class=&#34;poweredbyperformancing&#34;&gt;Powered by &lt;a href=&#34;http://scribefire.com/&#34;&gt;ScribeFire&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我的城市呼和浩特--博邻征文</title>
      <link>https://wdicc.com/about-mycity/</link>
      <pubDate>Wed, 06 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-mycity/</guid>
      <description>
响应 &lt;a href=&#34;http://www.365bloglink.com&#34;&gt;博邻&lt;/a&gt; 的号召，写写我的城市。&lt;br /&gt;

虽然在北京已经呆了9年了，可是说到我的城市，我还是不想写他。住了这么久，好像也一直没有融入到北京这个城市里面来，北京这个城市好像缺少自己的特点。去了好多次沈阳，那种文化给人的感觉是很不一样的。&lt;br /&gt;

说到呼和浩特市，其实我是住郊区的，那里少了市区的喧嚣，有蓝色的天，青色的山，绿色的大草地和田地，市区那些人工的绿地没办法比的。&lt;br /&gt;

现在最怀念的，就是小学放暑假的时候了，长长的假期里面，好多好玩的东西。和伙伴们一起去爬山，去山里的山泉积的天然“游泳池”里面游泳，不过惭愧的很，到现在我也没学会游泳 :( 。爬山累了，吃山上的野果，喝山泉，这是最有意思的事情了。记得有次大家做了一个决定，要试试看爬到最高的那座山看看。结果爬了半天，总算到了，有句老话叫做“一山更比一山高”啊，站到在山下看到的那个最高的山上，大家那个郁闷，后面的高山还是好像很多。。。后来知道了，那个可是阴山山脉，开玩笑，能让我们爬过去么，呵呵。最后下来的时候都已经晚上9点多了，吃着家里妈妈给做的饭，那个香啊。&lt;br /&gt;

说到吃饭，现在特别怀念家里的一些饭菜，焖面、莜面、烩菜什么的，简直是想起来什么都那么好吃，以前不怎么喜欢的菜，现在回去吃都是美味啊。呃。。好像跑题了。。&lt;br /&gt;

在北京的时候，去过一次康熙草原，当时看到那片草地的时候，那个失望啊。如果这也可以叫做草原的话，我们那岂不是遍地都是草原么。。。去那里玩的最爽的结果是划船，晕。在家乡，周末或者暑假可能常得去牧马，在山下的绿草地里面，小伙伴们玩着自己的游戏，马群自己悠闲的吃着嫩绿的小草。那会有时还会把我们家的一只羊一起带过去，那只小羊不知道为什么，特喜欢跟着我弟弟跑，我弟弟又特别害怕他，所以经常被那只羊追着乱叫。&lt;br /&gt;

好像写了很多儿时的记忆，其实一个地方留给人们最多的，可能就是回忆了。美好的回忆总是让人难以忘记。&lt;br /&gt;

&lt;p class=&#34;poweredbyperformancing&#34;&gt;Powered by &lt;a href=&#34;http://scribefire.com/&#34;&gt;ScribeFire&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>linux tuning</title>
      <link>https://wdicc.com/linux-tuning/</link>
      <pubDate>Mon, 04 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/linux-tuning/</guid>
      <description>
地址 &lt;a href=&#34;http://www.enigma.id.au/linux_tuning.txt&#34;&gt;http://www.enigma.id.au/linux_tuning.txt&lt;/a&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
# server with a decent amount of memory.
#
# This file should be saved as /etc/sysctl.conf
# You can source it manually if your system has booted by using:
# sysctl -e -p /etc/sysctl.conf
#
# Paul Day, paul (at) bur.st
#
# Last updated 02/03/05 and tested on 2.6.9
#

# Increase RPC slots
sunrpc.tcp_slot_table_entries = 32
sunrpc.udp_slot_table_entries = 32
# Increase size of RPC datagram queue length
net.unix.max_dgram_qlen = 50
# Log spoofed, source routed and redirects
net.ipv4.conf.default.log_martians = 1
# Don&#39;t accept source routes
net.ipv4.conf.default.accept_source_route = 0
# Don&#39;t send redirects
net.ipv4.conf.default.send_redirects = 0
# Source route verification on - incoming packets must match outgoing routing
net.ipv4.conf.default.rp_filter = 1
# Don&#39;t accept redirects
net.ipv4.conf.default.accept_redirects = 0
# Don&#39;t forward source routes
net.ipv4.conf.default.mc_forwarding = 0
# Disable forwarding 
net.ipv4.conf.default.forwarding = 0
# Log spoofed, source routed and redirects
net.ipv4.conf.all.log_martians = 1
# Don&#39;t relay bootp
net.ipv4.conf.all.bootp_relay = 0
# Don&#39;t proxy arp for anyone
net.ipv4.conf.all.proxy_arp = 0
# Don&#39;t accept source route packets
net.ipv4.conf.all.accept_source_route = 0
# Don&#39;t send redirects
net.ipv4.conf.all.send_redirects = 0
# Source route verification on - incoming packets must match outgoing routing
net.ipv4.conf.all.rp_filter = 1
# Don&#39;t accept redirects
net.ipv4.conf.all.accept_redirects = 0
# Don&#39;t forward source routes
net.ipv4.conf.all.mc_forwarding = 0
# Don&#39;t enable forwarding
net.ipv4.conf.all.forwarding = 0
# Don&#39;t allow the arp table to become bigger than this
net.ipv4.neigh.default.gc_thresh3 = 2048
# Tell the gc when to become aggressive with arp table cleaning.
# Adjust this based on size of the LAN. 256 is suitable for most
net.ipv4.neigh.default.gc_thresh2 = 1024
# Adjust where the gc will leave arp table alone - set to 32.
net.ipv4.neigh.default.gc_thresh1 = 32
# Adjust to arp table gc to clean-up more often
net.ipv4.neigh.default.gc_interval = 30
# Increase TCP
net.ipv4.neigh.default.proxy_qlen = 96
net.ipv4.neigh.default.unres_qlen = 6
# Increase size of socket buffers
net.ipv4.tcp_rmem = 4096	98304	349520
net.ipv4.tcp_wmem = 4096	65535	262142
net.ipv4.tcp_mem = 98304	262142	393216
# Turn off sack
net.ipv4.tcp_dsack = 0
# Don&#39;t use ECN because too many sites have wacky routers that can&#39;t handle it`
net.ipv4.tcp_ecn = 0
net.ipv4.tcp_reordering = 3
# Turn off sack/fack
net.ipv4.tcp_fack = 0
# Enable bad error message Protection
net.ipv4.icmp_ignore_bogus_error_responses = 1
# Ignore broadcasts pings, could become part of a Smurf
net.ipv4.icmp_echo_ignore_broadcasts = 1
# But don&#39;t ignore directed pings
net.ipv4.icmp_echo_ignore_all = 0
# Widen local port range
net.ipv4.ip_local_port_range = 33000	60000
# Bump up TCP socket queuer to help with syn floods
net.ipv4.tcp_max_syn_backlog = 2048
# Turn syn-cookie protection on
net.ipv4.tcp_syncookies = 1
# Drop it so lack of FIN times out quicker
net.ipv4.tcp_fin_timeout = 30
# How many times to retry killing an alive TCP connection
net.ipv4.tcp_retries2 = 15
net.ipv4.tcp_retries1 = 3
# Enable a fix for RFC1337 - time-wait assassination hazards in TCP
net.ipv4.tcp_rfc1337 = 1
# Drop keep-alive time
net.ipv4.tcp_keepalive_time = 3600
# Set number of times to retry a SYN-ACK in a half-open new connections
net.ipv4.tcp_synack_retries = 5
# Set number of times to retry SYN in a new connection
net.ipv4.tcp_syn_retries = 5
# Turn off sack
net.ipv4.tcp_sack = 0
# Enable really big (&gt;65kB) TCP window scaling if we want it.
net.ipv4.tcp_window_scaling = 1
# Turn off timestamps
# Turn this back on if you&#39;re on a gigabit or very busy network
# Having it off is one less thing the IP stack needs to work on
net.ipv4.tcp_timestamps = 0
# Increase number of incoming connections backlog
net.core.somaxconn = 512
# Bump optmem_max up
net.core.optmem_max = 20480
# Increase number of incoming connections backlog
net.core.netdev_max_backlog = 1024
net.core.dev_weight = 64
# Bump up default r/wmem to max
net.core.rmem_default = 262141
net.core.wmem_default = 262141
# Bump up max r/wmem
net.core.rmem_max = 262141
net.core.wmem_max = 262141
# Increase size of file handles and inode cache
fs.file-max = 209708&lt;/pre&gt;

&lt;p class=&#34;poweredbyperformancing&#34;&gt;Powered by &lt;a href=&#34;http://scribefire.com/&#34;&gt;ScribeFire&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>空调的匹数怎么算？zz</title>
      <link>https://wdicc.com/about-air-condition/</link>
      <pubDate>Mon, 04 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-air-condition/</guid>
      <description>
&lt;a href=&#34;http://www.dapenti.com/blog/more.asp?name=agile&amp;amp;id=4332&#34;&gt;来自这里&lt;/a&gt;&lt;br /&gt;

在选购空调时，销售人员通常会在推销空调时提到空调的匹数，匹数指的是电器消耗功率，1匹=1马力=735W，匹并不指制冷量。平时所说的空调是多少匹，是根据空调消耗功率估算出空调的制冷量。一般来说，习惯用1匹等于2500W的制冷量(也就是25机型)，1.5匹约等于.3500的量(也就是35机型)。26机型约为1.1匹，27机型为1.2匹，28机型约为1.3匹，32机型为1.4匹；33机型约为1.5匹，36机型为大1.5匹。&lt;br /&gt;

一般，1匹空调适用面积10~15平方米，1.25匹适用10~19平方米，1.5匹适用16~26平方米，1.7匹适用15~30平方米，两匹适用20~37平方米，3匹适用30~58平方米。&lt;br /&gt;

买空调的人都知道，根据空调匹数的不同价格也不一样。空调匹数，原指输入功率，包括压机、风扇电机及电控部分，因不同的品牌其具体的系统及电控设计差异，其输出的制冷量不同，故其制冷量以输出功率计算。&lt;br /&gt;

一般来说，1匹的制冷量大致力2000大卡，换算成国际单位应乘以1.162，故1匹之制冷量应力2000大卡×1．162＝2324瓦，这里的瓦（w）即表示制冷量，则1．5匹的应为2000大卡×1．5×1．162＝3486（w），以此类推。根据此情况，则大致能判定空调的匹数和制冷量。一般情况下，2200（w）~2600（w）都可称为1匹，4500（w）~5100（w）可称为两匹，3200（w）~3600（w）可称为1．5匹。制冷量确定后，即可根据目己家庭之实际情况估算制冷量，选择合适的空调机。&lt;br /&gt;

家用电器要消耗制冷量的较大部分，电视、电灯、冰箱等每瓦（w）功率要消耗制冷量1（w），门窗的方向也要消耗一定的制冷量，东面窗150W／m2，西面窗280W／m2，南面窗180W／m2 ，北面窗100W／m2，如是楼顶及西晒可考虑适当增加制冷量。&lt;br /&gt;
&lt;p class=&#34;poweredbyperformancing&#34;&gt;Powered by &lt;a href=&#34;http://scribefire.com/&#34;&gt;ScribeFire&lt;/a&gt;.&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>终于把宜家的镜子装上了</title>
      <link>https://wdicc.com/mirror-produced-by-yijia/</link>
      <pubDate>Sun, 03 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/mirror-produced-by-yijia/</guid>
      <description>
&lt;p&gt;好像是年前从宜家买了一个镜子，因为没有工具，一直就没装。这几天总算借到了电钻，今天把镜子给装上了。&lt;/p&gt; &lt;p&gt;这是安装图、镜子和钉子。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070603/205944_1590532430.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo8.yupoo.com/20070603/205918_1123330944.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070603/205936_751480677.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;宜家的这个钉子设计的非常好，就算钻孔不是很到位，也同样可以装好镜子。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo8.yupoo.com/20070603/205941_874433667.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;从下面往上面装，这是装了2块的效果。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo6.yupoo.com/20070603/205931_1123408221.jpg&#34;&gt; &lt;/p&gt; &lt;p&gt;装好后的效果。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;http://photo7.yupoo.com/20070603/205937_641786367.jpg&#34;&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>装了一个live writer新版，测试看看</title>
      <link>https://wdicc.com/test-live-writer/</link>
      <pubDate>Thu, 31 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/test-live-writer/</guid>
      <description>
&lt;p&gt;测试下看看呢？&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;好像很&lt;font color=&#34;#ff0000&#34;&gt;多功能&lt;/font&gt;不错，呵呵。&lt;/p&gt; &lt;p align=&#34;center&#34;&gt;&lt;u&gt;&lt;strike&gt;居中？&lt;/strike&gt;&lt;/u&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;div align=&#34;left&#34;&gt;&lt;u&gt;&lt;strike&gt;awefsdf&lt;/strike&gt;&lt;/u&gt;&lt;/div&gt; &lt;li&gt; &lt;div align=&#34;left&#34;&gt;&lt;u&gt;&lt;strike&gt;sdfsdf&lt;/strike&gt;&lt;/u&gt;&lt;/div&gt; &lt;li&gt; &lt;div align=&#34;left&#34;&gt;&lt;u&gt;&lt;strike&gt;sdfsdfsdf&lt;/strike&gt;&lt;/u&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt; &lt;p align=&#34;left&#34;&gt;&amp;nbsp;&lt;/p&gt; &lt;blockquote&gt; &lt;p align=&#34;left&#34;&gt;新的asdfasdfasdfasdfasdfasdfa&lt;/p&gt; &lt;p align=&#34;left&#34;&gt;sdfasdf&lt;/p&gt;&lt;/blockquote&gt; &lt;p align=&#34;left&#34;&gt;下面的&lt;/p&gt; &lt;p align=&#34;left&#34;&gt;&lt;pre lang=&#34;bash&#34;&gt;grep -r xxx aaa&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>惊心动魄的流血事件</title>
      <link>https://wdicc.com/bleeding/</link>
      <pubDate>Sun, 20 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/bleeding/</guid>
      <description>
来了公司觉得鼻子里面有点难受，撕了一块纸擤鼻涕，结果纸一拿开看到上面全是血，就和电视剧里面咳嗽的时候手帕上面的血一样，好多。然后就感觉鼻血一滴一滴就出来了，赶紧撕了一块纸堵住鼻子就去卫生间了，拿开纸以后发现滴的速度很快，纸都红了。清洗了一下鼻子周围，发现根本清理不过来，滴的太快了，就用左手挡住鼻子，右手高举起来，头后仰站了一会，结果手一拿开血还是不停的滴。赶紧回来拿了一块纸塞住鼻子，继续刚才的姿势站了一会，发现血会往咽喉那里留，一会嘴里就有血腥味了。站了一会觉得没效果，纸拿开之后，血还是继续滴，速度一点都没变。换了块纸堵住鼻子，上网搜了一下，找到点资料。&lt;br /&gt;

&lt;blockquote&gt;第一步：坐下来，全身放松，用手指压着流鼻血的鼻子中部5～10分钟（利用鼻翼压迫易出血区）；&lt;br /&gt;
第二步：患者头部太保持直立位。因为头低可引起头部充血，而仰头会使血液流下咽部；&lt;br /&gt;
第三步：口中的血液应尽量吐出，以免咽下刺激胃部引起呕吐&lt;br /&gt;
第四步：指压期间用冷水袋（或湿毛巾）敷前额及后颈，可促使血管收缩，减少出血。&lt;/blockquote&gt;&lt;br /&gt;

&lt;blockquote&gt;我们知道，鼻有前鼻孔和后鼻孔，鼻出血也按部位分前鼻孔和后鼻孔出血（绝大部分是前鼻孔出血）。遇到这种情况，首先应镇定，以一手的拇指与中指或食指捏住两侧鼻翼，实行压管止血法。此时，头部位应取正位，即既不仰头也不俯首，又不歪着头。若仰头，就会出现上述病例的情况；若低头，又会加大局部血管压力而增加出血。至于用冷水拍打额部，似无必要，因为拍打本身就是一种冲击。若取冷缩血管之意，不如用冰袋敷鼻梁，但勿放松捏鼻的手指。在压迫止血的同时，若家中有麻黄素滴鼻液或鼻眼净（或滴鼻净），可滴湿棉片塞于鼻腔中再捏鼻，效果更好。&lt;/blockquote&gt;&lt;br /&gt;

看来以前的偏方都是骗人的啊，我还搜到什么捆中指啥的，能管用么？&lt;br /&gt;

按照上面，堵住鼻孔，用手捏着鼻子，没有冷水袋没办法了，捏了一会，拿开纸，发现血还在流。。。有点害怕了，不会是啥病吧，看韩剧都是突然流鼻血不止，然后诊断得了绝症。。。恐怖啊。换了一块纸，继续捏着鼻子，一边还在想各种后果。。。又捏了一会，拿开纸，发现好像好了，血没了。这不，继续换一块纸，巩固一下，不过没捏鼻子了。&lt;br /&gt;

现在感觉头有点晕晕的，眼睛发花，不知道是不是流血的结果。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>oracle 的高级复制出了点问题，记录下解决办法</title>
      <link>https://wdicc.com/rep-of-oracle/</link>
      <pubDate>Fri, 18 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rep-of-oracle/</guid>
      <description>
早上来了同事就来找我，有两台同步的服务器数据库没有同步成功，查查咋回事。&lt;br /&gt;

一台A，从B处同步。蒙了一下，果然有个dba_jobs表，呵呵。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;

在A处执行上面的命令，好像repadmin的job都在正常执行。
在B处执行上面的命令，能查到类似下面的信息

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
---------- ------------------------------ -------------------
NEXT_DATE             FAILURES B
------------------- ---------- -
47 repadmin                           2006-05-16 19:37:29
4001-01-01 00:00:00         16 Y&lt;/pre&gt;

显然是job挂了。查看了一下挂的时间，原来是联通机房机柜断电那天，A机器在联通机房，那天断电了6个小时。B机器上面的同步尝试了16次之后就挂起了。解决方法也不难，用repadmin用户登录，然后执行下面的语句，&lt;strong&gt;谁的job只能由谁来执行&lt;/strong&gt;：

&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;

47是job id，sysdate表示当前时间。等会再看吧，执行成功之后会把 failures 重新计数，B变成N。
</description>
    </item>
    
    <item>
      <title>又找到一个wp的coding插件的问题</title>
      <link>https://wdicc.com/bug-of-coding-plugin/</link>
      <pubDate>Fri, 18 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/bug-of-coding-plugin/</guid>
      <description>
在 geshi/geshi.php 里面，有个函数会将 &amp;,&gt;,&lt;,&#34; 这些替换为html字符。而同时呢，wp 的 wp-includes/formatting.php 里面也会将这些字符做处理，这样就混乱了。解决方法也很简单，把coding插件里面的相应函数注释掉就好了（目前发现注释掉&amp;和&#34;就可以）。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-php&#34;&gt;
        // init

        $aTransSpecchar = array(
//            &#39;&amp;&#39; =&gt; &#39;&amp;amp;&#39;,
//            &#39;&#34;&#39; =&gt; &#39;&amp;quot;&#39;,
            &#39;&lt;&#39; =&gt; &#39;&lt;&#39;,
            &#39;&gt;&#39; =&gt; &#39;&gt;&#39; 
            );            

        $aTransSpecchar = array();
.....
}&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>awk 数组的一个应用</title>
      <link>https://wdicc.com/awk-array/</link>
      <pubDate>Thu, 17 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awk-array/</guid>
      <description>
sed和awk这本书看了好久了，sed部分将就看完了，awk部分基本没怎么看。上次有人问起一个比较文件的问题，发现awk来解决非常的简单。&lt;br /&gt;

比较两个文件A、B，打印出包含在A中的，但是不包含在B中的所有行。&lt;br /&gt;

根据题目要求，awk的解决方法如下:&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

里面NR表示行号，FNR表示当前文件中的行号。NR==FNR的时候，表示此时正在读取B文件，以B中的$0为索引，建立一个数组，并且都赋值为1。
当NR&gt;FNR 的时候，表示此时在读取A文件，如果a[$0]为1，那么就表示这个$0是在B里面也存在的，是吧？所以，如果要B里面不存在的，那么就得是a[$0]不为1的，就是没做过赋值的。所以了，就是这个了。

进阶一下，比较两个文件A、B，打印包含在A中第一列，但是不包含在B中第二列的整行。

类似的：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

比较文件内容还可以用comm命令，还有人提出了grep命令，例如第一个问题：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>繁忙的五一</title>
      <link>https://wdicc.com/busy-may-day/</link>
      <pubDate>Wed, 09 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/busy-may-day/</guid>
      <description>
五一陪老婆回了沈阳，这次计划中就比较充实，去了沈阳的好几个景点，也幸好有车了，要不估计得累趴下。&lt;br /&gt;

1号去了怪坡。怪坡就是一段大概100多米的坡度不到1°的路，上坡的时候，自行车、汽车不需要动力就可以上去，下坡的时候反而需要。据说好多人研究了没结果，呵呵，我感觉就是一个视觉差的一个坡度，不知道了就。&lt;br /&gt;

2号去了本溪水洞。其实就是类似南方的溶洞，里面好多钟乳石一样的东西，洞还比较长，坐船好久才往回走，还没有到头。里面水温不高，不过据说全年都这个温度，现在去里面很凉快，动态可能会感觉暖和。&lt;br /&gt;

3号休息了一天，去中街逛了逛，兴隆大家庭里面玩了会。老婆玩了会旱冰。晚上去看了二人转，好几个都是赵本山的徒弟，有些演的还是挺好的。&lt;br /&gt;

4号去了极地皇家海洋世界。地方不错，就是人太多了，由于很多过道比较窄，所以很多地方都是挤着就过去了，基本没怎么仔细看。唯一的亮点就是最后的海豚表演了。最后那个世纪丛林其实也没啥意思，不如不花那个门票钱。&lt;br /&gt;

5号去姥姥家，去五爱市场逛了逛，买了些衣服，呵呵。&lt;br /&gt;

6号上午去太原街逛了逛，下午去体育大学旁边的一个游泳馆游了会，这次算是我第一次正式学游泳了，水里泡了会，还挺好玩的，呵呵。&lt;br /&gt;

晚上去了好几次市府广场，玩了两次刷刷，租鞋3块钱不限时，多便宜，呵呵。北京这边我唯一知道的就是北展广场了，可惜太远。这次真是玩累了，下次去了就逛逛中街好了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>apache 的一个启动失败的问题的解决方法</title>
      <link>https://wdicc.com/solve-apache-start-fail/</link>
      <pubDate>Wed, 18 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/solve-apache-start-fail/</guid>
      <description>
这个问题网上好多方法，记录一下方便自己以后查看。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
[Wed Apr 18 19:56:47 2007] [notice] Digest: done
[Wed Apr 18 19:56:47 2007] [warn] pid file /usr/local/apache54/logs/httpd.pid overwritten -- Unclean shutdown of previous Apache run?
[Wed Apr 18 19:56:47 2007] [emerg] (28)No space left on device: Couldn&#39;t create accept lock&lt;/pre&gt;

解决方法就是
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>复习了一下 OSI 7层模型 和 tcp/ip 4层模型</title>
      <link>https://wdicc.com/osi-and-tcp-ip/</link>
      <pubDate>Tue, 17 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/osi-and-tcp-ip/</guid>
      <description>
老是记不住这些，每次被问道只能说知道，但是说不出来名字。刚从irc里面得到一个好记得方法。&lt;br /&gt;

&lt;b&gt;All people seemes to need data processed.&lt;/b&gt;&lt;br /&gt;

这句话的字头刚好就是7层模型的字头。&lt;br /&gt;

A-&gt;Application 应用层    \&lt;br /&gt;
P-&gt;Presentation 表示层  --   应用层(HTTP、TFTP、FTP、NFS、SMTP、Telnet、SNMP、DNS)&lt;br /&gt;
S-&gt;Session 会话层        /&lt;br /&gt;
T-&gt;Transport 传输层   -----  传输层(TCP/UDP)&lt;br /&gt;
N-&gt;Network 网络层     -----  Internet 层(IP、ICMP、ARP、RARP)&lt;br /&gt;
D-&gt;Data Link 数据链路层 \&lt;br /&gt;
P-&gt;Physical 物理层      /  网络访问层 &lt;br /&gt;

这样似乎好记一点。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天又理解了nagios的两个配置</title>
      <link>https://wdicc.com/nagios-conf/</link>
      <pubDate>Mon, 16 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nagios-conf/</guid>
      <description>
&lt;b&gt;Host and Service Dependencies&lt;/b&gt;&lt;br /&gt;

当监控的host或者service之间有依赖关系的时候，可以通过定义dependence来让nagios知道应该通知什么。&lt;br /&gt;

比如我这里的服务器都在idc托管，而我的nagios却是运行在公司的一台服务器上面。这样，有时候可能就需要考虑依赖关系了。比如当公司的网络出问题的时候（事实上经常出现），比如断网，总不能让他也认为是idc托管的服务器出问题了而给你发通知吧。host dependence正好可以解决这个问题。&lt;br /&gt;

比如 A 是idc的，B 是公司的网关（或者某个应该一直在线的服务器，比如sina.com.cn）。当nagios检测到A连不上的时候，他会根据dependence来检测B，如果B也连不上了，那么就只通知你B连不上了。&lt;br /&gt;

大概的配置如下&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
        host_name                       B
        dependent_host_name             A
        notification_failure_criteria   d,u
        }&lt;/pre&gt;

&lt;b&gt;Notification Escalations&lt;/b&gt;

escalations 的意思就是扩大。整个这个的意思应该就是扩大通知范围。之前一直没理解是什么意思，今天看了才明白。其实就是定义出问题的时候，什么时候扩大通知。

比如A服务器挂了，他对应的contactgroup就会立刻得到通知。但是，如果这个组里面的人在睡觉或者在做什么事情忽略了这个通知，怎么办呢？当然nagios会通知多次，但是如果这些都忽略掉了或者没有收到怎么办？这样这个escalations就有作用了，他可以定义几次通知contatgroup之后就开始通知别的人。还有一些别的功能，就不多说了。
</description>
    </item>
    
    <item>
      <title>twitter ? 我知道你在干什么</title>
      <link>https://wdicc.com/twitter-what-are-u-doing/</link>
      <pubDate>Sat, 14 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/twitter-what-are-u-doing/</guid>
      <description>
twitter 已经流行很久了，一直没以为怎么回事。又不能和im结合，我还总去你的网站看啊，没意思。刚又看到有人说这个，去看了一下，发现这个支持rss输出，这下就爽很多了呀，弄到lilina里面不就可以了么？不错不错。。&lt;br /&gt;

我的地址是   http://twitter.com/wd ，注册了这个的给一个地址呀，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>发现了一个magpie的bug</title>
      <link>https://wdicc.com/a-bug-of-magpie/</link>
      <pubDate>Fri, 13 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-bug-of-magpie/</guid>
      <description>
在 rss_parse.inc 里面，创建xml parser的时候，针对php5，用的是xml_parser_create(&#39;&#39;)，就那个&#39;&#39;，导致了问题的出现。但是问题不是总有的，有的source可以，有的就会卡住。例如下面这个html就会卡住。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-text&#34;&gt;&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml &#34;&gt;
                &lt;head&gt;&lt;title&gt;Connect Error&lt;/title&gt;&lt;/head&gt;
                &lt;body&gt;
                        &lt;h1&gt;Connect Error&lt;/h1&gt;
                        &lt;p&gt;Could not connect to MySQL database.&lt;/p&gt;             &lt;/body&gt;
        &lt;/html&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>找到一个wp coding插件的bug</title>
      <link>https://wdicc.com/a-bug-for-coding-plugin/</link>
      <pubDate>Fri, 13 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-bug-for-coding-plugin/</guid>
      <description>
coding插件用的是geshi来加格式的。发现贴了一个html后coding不支持，找了半天bug，总算找到了。&lt;br /&gt;

在 $pattern 这个正则里面，(([^&lt;]|&lt;[^\/])*) 匹配的应该是不是&lt;或者&lt; /的字符串，而html代码里面很多都是&lt; /，这样html代码就不会匹配了。修改一下就好了。(([^&lt;]|&lt;[^\/]|&lt;\/[^pP])*)。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天仔细研究了一下lilina</title>
      <link>https://wdicc.com/study-lilina/</link>
      <pubDate>Thu, 12 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/study-lilina/</guid>
      <description>
lilina 最近总是出问题，又用不惯别的，今天花了点时间看了看。&lt;br /&gt;

lilina 的rss解析用的是 magpie ，feed文件下载用的是 Snoopy 。下载之后 magpie 用 xml_parse 来做处理。lilina 使用 magpie 的 fetch_rss() 函数来处理rss。而在 inc/magpie/rss_fetch.php 里面又用 _fetch_remote_file() 函数来获取rss文件，文件的获取用的是 Snoopy 类。获取文件内容之后，又用 magpie 的 MagpieRSS 类的 MagpieRSS 函数来处理文件，里面用到了 xml_parse() 函数。再后面就没有仔细看了。&lt;br /&gt;

我遇到的问题是 Snoopy 获取文件是没问题的，出问题的是 xml_parse ,如果获取的source不是有效的xml文件，xml_parse 会死掉，所以我就在 xml_parse 前面检查了一下 source 是不是一个正常的feed。有人推荐 tidy 来验证，那太麻烦了，我就直接match了一下feed这个关键字。。。目前看好像每问题。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>unix 进程</title>
      <link>https://wdicc.com/unix-process/</link>
      <pubDate>Wed, 11 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/unix-process/</guid>
      <description>
看了 &lt;a href=&#34;http://www-128.ibm.com/developerworks/aix/library/au-speakingunix8/?ca=dgr-lnxw01speakunix8&#34;&gt;Speaking UNIX, Part 8: UNIX processes&lt;/a&gt; 之后做一点笔记。&lt;br /&gt;

&lt;b&gt;A real multitasker&lt;/b&gt;&lt;br /&gt;

在unix、linux、freebsd、mac os x、windows等系统里面，计算任务都表现为进程。unix 看上去可以同时运行很多任务，因为每个进程都只占用一部分cpu时间。&lt;br /&gt;

进程就像一个容器，包括运行的程序，环境变量，程序的输入输出等。可以把进程想像为一个国家，有自己的边界，资源和产品。&lt;br /&gt;

每个进程也都有自己的owner（属组），owner通常是运行这个程序的人，有些系统服务的owner或许会是某个特殊的用户，或者是root。例如，为了安全，某个Apache server的owner可能是属于一个叫www的用户的，这个用户有权限来存取web服务需要的文件，这些文件别的用户是不能访问的。&lt;br /&gt;

一个进程的owner可能会改变，但是一个进程在同一个时间只能有一个owner。&lt;br /&gt;

setuid和setgid可以让一个进程获得比owner更高的权限。&lt;br /&gt;

一个setuid进程，例如top，运行的时候使用的是owner的权限。因此，当你运行top的时候，你的权限就被提升为root了。类似的，一个setgid进程，运行的时候具有的是group owner的权限。&lt;br /&gt;

例如，在Mac osx里面的wall命令（就是write all的缩写），因为他需要给每个物理或者虚拟的终端设备写信息，所以他被setgid tty。&lt;br /&gt;

&lt;b&gt;Taking inventory&lt;/b&gt;&lt;br /&gt;

类似其他系统资源，unix系统里面的进程id总数虽然多，但是是有限的（实际上，一个系统几乎从来都不会出现进程id数不够的情况）。每一个新的进程，例如运行vi或者xclock，都会立刻分配一个进程id。在unix系统里面可以用ps命令查看进程。&lt;br /&gt;

ps -a -w -x 可以显示所有进程列表。-a显示所有在tty设备上面运行的进程，-x显示所有不是在tty设备上面运行的程序，-w使用“宽”模式显示，用来查看进程一些长的项目。&lt;br /&gt;

-o 还可以指定输出信息的列表。比如 -o pid,uname,command,state,stime,time 。&lt;br /&gt;

&lt;b&gt;Daddy, where do processes come from?&lt;/b&gt;&lt;br /&gt;

 在unix系统里面，有些进程会从系统启动到关闭整个过程中一直运行。大部分进程从任务开始到结束都很快。&lt;br /&gt;

 每个新的unix进程都是从已经存在的进程产生的。另外，每个新的进程（子进程）都克隆自他的父进程。at least for an instant, until the child continues execution independently.如果每个进程都来自一个已经存在的进程，那么“第一个进程来自哪里？”，先有鸡还是先有蛋的问题。&lt;br /&gt;

第一个进程是由kernel在启动过程中产生的，叫做init。ps -l 1命令可以查看。&lt;br /&gt;
F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY        TIME CMD&lt;br /&gt;
4 S     0     1     0  0  76   0 -   376 -      ?          0:06 init [2]  &lt;br /&gt;

可以看到，init的uid是0，也就是root。不像其他进程，init的ppid（父进程id）是0。&lt;br /&gt;

图 2,3 稍微解释一下。&lt;br /&gt;
&lt;ol&gt;&lt;li&gt;进程A运行了几条指令。进程A有自己的资源、输入输出、环境变量等。&lt;/li&gt;&lt;li&gt;遇到一条fork()指令，会产生一个新的进程。进程A遇到fork之后，立刻产生一个新的进程Z。进程Z是A的克隆，有与A一行的环境变量、内存内容、程序状态、打开文件等。&lt;/li&gt;&lt;li&gt;进程Z一开始就从fork后面的指令继续执行，就是进程A剩下的部分。进程A也继续执行剩下的部分。&lt;/li&gt;&lt;li&gt;在fork指令后面的指令中，会检查当前的进程是子进程还是父进程。就是说，进程Z和进程A在后续的指令中各自分别确定自己是父进程还是子进程。区别是，fork指令会在子进程中返回0，而且父进程中返回子进程的进程id。&lt;/li&gt;&lt;li&gt;在前面的测试之后，进程A和进程Z各自使用独立的code path，就好像他们都来自一条路，后来选择了不同的岔路一样。&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;

在fork之后，进程A也许会继续运行同样的程序。然而，进程Z或许会立刻变成另外一个程序。进程Z现在完全就是一个独立于其父进程A的进程了。&lt;br /&gt;

&lt;b&gt;Forking around&lt;/b&gt;&lt;br /&gt;

可以在命令行实际体验一下fork。打开一个新的xterm，你现在应该知道xterm有自己的进程，而且，在xterm里面，shell是有xterm产生的一个单独的进程。&lt;br /&gt;

通过ps命令的输出可以看到，在ppid字段那里，就是父进程的id。 &lt;br /&gt;

使用&amp;符号可以将程序放到后台执行。执行的时候会同时输出各个进程的id。jobs命令可以查看当前运行的进程。标签1，2，3可以用来标记不同的会话。kill %N 就是结束第N个会话。fg %N 可以将一个会话放到前台。&lt;br /&gt;

&lt;b&gt;To the great process pool in the sky&lt;/b&gt;&lt;br /&gt;

有些进程是一直存在的，例如init，有些会将自己转变成其他的（例如shell）。大部分进程最终都会自然死掉，也就是程序运行完毕的时候。&lt;br /&gt;

你可以让一个进程suspended（挂起），也可以让他复苏。还有像前面说的，你也可以使用kill命令结束一个进程。&lt;br /&gt;

ctrl-Z 可以挂起一个进程。进程在前台运行的时候，ctrl+c 可以结束这个进程。在shell内部使用unix signals来对一个进程产生影响。你可以从一个进程像另一个发送signal（信号），也可以让进程自己给自己发送信号。&lt;br /&gt;

man 7 signal或者kill -L 可以看到所有的signal。使用kill命令可以发送这些signal。&lt;br /&gt;

刚针对fork测试了一下，写一个简单的c程序&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-c&#34;&gt;

main(){
        int a;
        printf(&#34;Before fork.\\n&#34;);
        a = fork();
        printf(&#34;After fork, fork returns %d\\n&#34;, a);
}&lt;/pre&gt;

保存之后用gcc编译一下，执行一个，可以看到结果。fork之后的程序会继续执行下面的指令，唯独fork的返回值不同。
</description>
    </item>
    
    <item>
      <title>后挂电话的人</title>
      <link>https://wdicc.com/off-phone/</link>
      <pubDate>Wed, 11 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/off-phone/</guid>
      <description>
这是第二次写了。唉，真郁闷。昨天写了一拖丢了。&lt;br /&gt;

前天晚上值班回家的时候老婆打电话过了问我到哪里了，聊了几句就互相挂了电话。之后就想起来这个了。&lt;br /&gt;

打电话的时候，通常都会想像对方是在面前的，会想像对方的样子。高兴、生气、撒娇，都像对着对方一样，所以说电话是一个很伟大的发明。挂电话的死后总会有先后了，不过你要说还有一起挂的那就算了，哼，不争这个。后挂电话的人在对方电话“咔嗒”一声挂上的时候是会有失落感的，就像晚上看电视突然停电一样，对方的形象突然就没了。就像风筝断了线一样，开始还能抓住对方，能知道对方的表情，可接下来一瞬间就断了。&lt;br /&gt;

如果谁有一个愿意后挂电话的人，那么这个人无疑肯定是幸福的。你有没有？&lt;br /&gt;

之前老婆还不是老婆的时候，每次电话我都会尽量做到后挂电话，现在变成老婆了，反到少了，说完事情就挂了，可能是双方太熟悉的缘故，也不需要相互表达的很清楚，对方就知道。但是这些显然都是借口了，借口的意思就是说，这个理由说出来的比不说出效果还好 :( ，以后我要改了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>呼拉圈的问题</title>
      <link>https://wdicc.com/about-hula-hoop/</link>
      <pubDate>Fri, 06 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-hula-hoop/</guid>
      <description>
感觉呼拉圈这玩意挺怪异的，为什么我就学不会呢？后来总结了一下，有以下2个可能。&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;有啤酒肚。这样，呼拉圈好像就不太能卡到腰上。所以总往下掉。&lt;/li&gt;&lt;li&gt;腰扭不起来。总不能和谐的和呼拉圈一起转，这样，扭几下之后，呼拉圈就因为没有动力掉下来了。初学者可能都有这个问题。&lt;/li&gt;&lt;/ol&gt;其实我也转起来过，偶尔能转个好几圈，那时候很有感觉，可是一高兴就掉了。然后又转不起来了。 :(&lt;br /&gt;&lt;br /&gt;呼拉圈减肥也需要运动时间足够长，可以参考国家体委会推行的”三三三”运动：每周运动三次，每次至少三十分钟，心跳达一百三十下。由于摇呼啦圈的运动强度不够，如果要增加心跳速率，就必须要加快摇动的速度。&lt;br /&gt;&lt;br /&gt;我看来是学不会这个了，玩玩别的吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>第五批 公交线路调整</title>
      <link>https://wdicc.com/adjust-of-bus/</link>
      <pubDate>Wed, 04 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/adjust-of-bus/</guid>
      <description>
虽然调整没几条，但是涉及到我们小区的，倒是有三条。&lt;br /&gt;

&lt;blockquote&gt;831 改成 675 ，通州李庄-&gt; 左家庄&lt;br /&gt;
通州李庄 上潞园小区 小潞邑北站 小潞邑 龙旺庄 焦王庄 结研所 北京物资学院 五里桥路口东 东十里堡村 常营路口东 常营路口西 黄渠村黄渠西站 白家楼桥东 亮马厂 黄杉木店 青年路口 十里堡北里 农民日报社 农民日报社北 石佛营东里 豆各庄路口南 豆各庄路口西 朝阳公园桥东朝阳公园桥西 朝阳公园 团结湖 亮马桥 燕莎桥南 燕莎桥西 新源南路西口 新源里 左家庄&lt;br /&gt;
5：30-22：00&lt;/blockquote&gt;&lt;br /&gt;


&lt;blockquote&gt;834 改成 498 ，常营民族家园-&gt;燕莎桥南&lt;br /&gt;
常营民族家园 常营西路 常营北路 常营 常营路口西 黄渠村 黄渠西站 白家楼桥东 亮马厂 黄杉木店 青年路口北 姚家园村 万杰医院 姚家园西 姚家园西口 豆各庄路口西 朝阳公园桥东 朝阳公园桥西 朝阳公园 团结湖 亮马桥 燕莎桥南&lt;br /&gt;
常营民族家园5：30-21：15  燕莎桥南6：15-22：00&lt;/blockquote&gt;&lt;br /&gt;


&lt;blockquote&gt;742 改成 506 ，常营民族家园-&gt;四惠&lt;br /&gt;
常营民族家园 常营西路 常营北路 常营 科技大学管庄校区 管庄路口北 管庄 周家井 双桥西 茶家坟 梆子井 高碑店桥东 四惠东站 四惠站&lt;br /&gt;
上林苑小区5：30—21：00  北京华侨城6：30—22：00&lt;/blockquote&gt;&lt;br /&gt;


742改的挺好，以前线路太长，四惠等车的时候半天不来。反正我也从来不到南三环，刚好，哈哈。以后四惠等车就爽了，没准还有座，嘿嘿。&lt;br /&gt;

831就不爽了，以前往北三环走多舒服，速度很快。834还好，走城里，速度慢，所以也无所谓了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>awstats 如何统计以前的日志？</title>
      <link>https://wdicc.com/awstats-log/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/awstats-log/</guid>
      <description>
突然想安装一个awstats了，参考 &lt;a href=&#34;http://www.chedong.com/tech/awstats.html&#34;&gt;车东&lt;/a&gt; 的文章，安装了一个。可是发现一个问题，设置了logfile为 access_log.%YYYY-24%MM-24%DD-24.log 之后，发现只能把昨天的日志统计进来，可是我的log下面还有好多呢，想统计以前的，怎么弄呢？幸好，awstats已经考虑到这个问题了。&lt;br /&gt;

awstats.pl 脚本支持在命令行指定logfile，这样简单了，改变这个参数就可以了。不过要注意的是，如果你的data里面已经处理新的日志，那么指定logfile也没用了，以前的没办法更新进来了。只能是删掉data里面的内容，然后重新从最早的开始生成一遍。我写了一个脚本来做这个事情。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

awstats_dir=/opt/tt2/awstats/wwwroot/cgi-bin
logfile_dir=&#34;/usr/local/apache/logs/&#34;

cd $awstats_dir

for file in `find $logfile_dir -name &#34;access_log.2*&#34; | sort`;do
        #echo &#34;$file&#34;
        ./awstats.pl －update -config=wd -LogFile=$file
done&lt;/pre&gt;

保存为 awstats.sh ，然后执行就可以了。他会查找 logfile_dir 下面所有的 access_log.2 开头的文件，作为参数来更新记录。
</description>
    </item>
    
    <item>
      <title>给apache加了一个compress模块，mod_deflate</title>
      <link>https://wdicc.com/compress-apache/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/compress-apache/</guid>
      <description>
apache 1.3 里面有个压缩模块叫做 mod_gzip ，不支持 2.x。在2.x 里面有一个 &lt;a href=&#34;http://httpd.apache.org/docs/2.0/mod/mod_deflate.html&#34;&gt;mod_deflate&lt;/a&gt; 模块，也是类似的效果。想使用的话，很简单，编译的时候加上 --enable-deflate 就可以了。之后可以用 apachectl -l  看是不是正常加载了这个模块。&lt;br /&gt;

httpd.conf 添加下面的语句&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;

对所有指定类似的文件都应用这个模块。添加之后访问看看。

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
203.86.x.x - - [02/Apr/2007:15:24:23 +0800] &#34;GET / HTTP/1.1&#34; 200 &lt;font color=&#34;#FF0000&#34;&gt;4718&lt;/font&gt; &#34;-&#34; 
&#34;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.3) 
Gecko/20070309 Firefox/2.0.0.3&#34;

203.86.x.x - - [02/Apr/2007:15:46:16 +0800] &#34;GET / HTTP/1.1&#34; 200 &lt;font color=&#34;#FF0000&#34;&gt;1684&lt;/font&gt; &#34;-&#34; 
&#34;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.3) 
Gecko/20070309 irefox/2.0.0.3&#34;&lt;/pre&gt;

好像是小了。。。

如果error.log 里面出现了下面的错误
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;

 这表示apache的那个模块没有安装正确。
</description>
    </item>
    
    <item>
      <title>对子网的一些理解</title>
      <link>https://wdicc.com/sub-network/</link>
      <pubDate>Thu, 29 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sub-network/</guid>
      <description>
每个子网的第一个ip是 &lt;font color=&#34;#3333FF&#34;&gt;网络地址&lt;/font&gt; ，最后一个ip是 &lt;font color=&#34;#3333FF&#34;&gt;广播地址&lt;/font&gt; 。&lt;br /&gt;

计算两个ip在不在一个子网的方法是，分别将ip地址和掩码取“逻辑与”，如果结果想同，那么就是一个子网的。&lt;br /&gt;

比如 192.168.1.18/255.255.255.252 这个ip，怎么计算和他一个子网的其他ip呢？很简单，252表示这个子网总共有 256-252=4 个ip，那么每遇到4的倍数，就是一个子网的 网络地址 。这样，192.168.1.18 对应的 网络地址 就是18/4取整然后乘以4，也就是16，也就是 192.168.1.16，这样同一个网段的就有 192.168.1.16 ~ 192.168.1.19 这几个ip。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>戴眼镜的小毛</title>
      <link>https://wdicc.com/glasses-and-maomao/</link>
      <pubDate>Wed, 28 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/glasses-and-maomao/</guid>
      <description>
&lt;img src=&#34;http://photo1.yupoo.com/20070328/111646_1474112226.jpg&#34; /&gt;&lt;br /&gt;&lt;img src=&#34;http://photo1.yupoo.com/20070328/111643_180303892.jpg&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>把户口本给领了</title>
      <link>https://wdicc.com/hukouben/</link>
      <pubDate>Wed, 28 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/hukouben/</guid>
      <description>
&lt;img src=&#34;http://photo1.yupoo.com/20070328/111649_1793103679.jpg&#34; /&gt;&lt;br /&gt;&lt;br /&gt;总算领上了，不用拿那个户口页到处晃了。而且，好像还省了一笔钱。恩。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>蛋炒饭</title>
      <link>https://wdicc.com/egg-and-rice/</link>
      <pubDate>Sun, 25 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/egg-and-rice/</guid>
      <description>
上周邻居过来吃饭，米饭弄多了。这两天周末吃了三顿蛋炒饭，都是我做的，呵呵。&lt;br /&gt;&lt;br /&gt;&lt;img src=&#34;http://photo1.yupoo.com/20070325/211953_1885917037.jpg&#34; /&gt;&lt;br /&gt;&lt;br /&gt;看看如何，自我感觉还不错，呵呵。不足的是差点绿色。葱也是白色的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Irssi script howto</title>
      <link>https://wdicc.com/irssi-script-howto/</link>
      <pubDate>Wed, 21 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/irssi-script-howto/</guid>
      <description>
为 irssi 写一些简单的脚本其实不是很难。我大概讲解一下如何写作。&lt;br /&gt;

&lt;b&gt;== 理解 signal ==&lt;/b&gt;&lt;br /&gt;

写过 vb 程序的都应该知道，vb 都是按照事件来触发执行程序的。例如你给某个窗体的 单击事件 写了代码，那么当这个窗体被单击的时候，就会执行你写的代码。&lt;br /&gt;

在 irssi 也是类似，不过他的不是事件，是 signal 。你所要做的就是针对不同的 signal 写不同代码即可。&lt;br /&gt;

irssi 的 signal 在这个 &lt;a href=&#34;http://irssi.org/documentation/signals&#34;&gt;文档&lt;/a&gt; 里面都写的很全了，此外安装 irssi 的时候也会安装 irssi 的一些文档，里面也有 signal 的相关文档。&lt;br /&gt;

&lt;b&gt;== 一个简单脚本 ==&lt;/b&gt;&lt;br /&gt;

脚本头部要包含一些脚本的信息，例如下面。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use vars qw($VERSION %IRSSI);
use Irssi;

$VERSION = &#39;1.00&#39;;
%IRSSI = (
    authors     =&gt; &#39;wd&#39;,
    contact     =&gt; &#39;wd#wdicc.com&#39;,
    name        =&gt; &#39;My first Script&#39;,
    description =&gt; &#39;This script notify &#39; .
                   &#39;you when recive msg.&#39;,
    license     =&gt; &#39;Public Domain&#39;,
);

sub recive_msg{
    my ($server, $msg, $nick, $address, $target) = @_;
    #do nothing 

}

Irssi::signal_add_first(&#39;message public&#39;,  &#39;recive_msg&#39;);&lt;/pre&gt;

最下面那行就是截获 irssi 的 signal 了。“message public”这个 signal 是在 irssi 接收到 public message 的时候产生，上面的脚本截获这个 signal 之后，执行后面的 revice_msg 函数 。查一下上面的 signal 文档可以找到下面的内容。

 &#34;message public&#34;, SERVER_REC, char *msg, char *nick, char *address, char *target

这表示 irssi 在产生 message public 这个 signal 之后，还会同时传递后面的那些信息。上面那个脚本里面，这些信息都传递给了 recive_msg 函数。这样 recive_msg 函数的第一行就是设置一些变量来接收这些信息。

这就是一个简单的 signal 的处理过程，当然，上面的这个脚本在截获 signal 之后其实什么都没有做。那么怎么让脚本和 irssi 交互呢？

&lt;b&gt;== 和 irssi 交互 ==&lt;/b&gt;

按照上面的例子，可以用 $server-&gt;command() 或者 $server-&gt;print() 来和 irssi 交互。

$server-&gt;command 可以在 irssi 里面执行一个 irssi 命令。例如

 $server-&gt;command(&#34;msg wd hi&#34;);

这样相当于在 irssi 里面输入 &#34;/msg wd hi&#34; 这个命令。其他命令类推一下。

$server-&gt;print 可以在 irssi 里面打印一些信息，这些信息别人是看不到的，这些信息类似于 irssi 给你的消息。例如

 $server-&gt;print(&#34;$server&#34;,&#34;a test msg&#34;);

这些信息会在1号窗口（这个不一定，看连接了几个server）里面显示。

有了 print 就可以在 irssi 里面测试 recive_msg 函数接收的信息都是什么意义了。试试看下面的命令

 $server-&gt;print(&#34;$server&#34;,&#34;$nick send you a msg : $msg&#34;);

&lt;b&gt;== 设置一些选项 ==&lt;/b&gt;

可以为脚本设置一些选项，这样也可以让脚本适合更多人使用。

 Irssi::settings_add_str(&#34;wd&#34;,&#34;test&#34;,&#34;just for test&#34;);
 Irssi::settings_add_bool(&#39;blah&#39;, &#39;blah_color&#39;, 1);;

上面这两行设置了两个变量，一个是字符串 test，初始值为 &#34;just for test&#34;，另一个是布尔变量 blah_color ，初始值是1。第一个参数是设置将变量显示在哪个段，用 /set 命令查看的时候会看到。

使用下面的命令可以获取设置。

 $a = Irssi::settings_get_str(&#34;test&#34;);
 $b = Irssi::settings_get_bool(&#39;blah_color&#39;);

这样按照上面的设置， $a 的值就是 &#34;just for test&#34; ， $b 的值就是 1。当然，用户如果用 /set 命令来设置了这些参数，那么取回的信息就不一定是这些了。

&lt;b&gt;== 参考资料 ==&lt;/b&gt;

&lt;a href=&#34;http://juerd.nl/site.plp/irssiscripttut&#34;&gt;Scripting Irssi&lt;/a&gt;
</description>
    </item>
    
    <item>
      <title>Irssi How to</title>
      <link>https://wdicc.com/irssi-how-to/</link>
      <pubDate>Tue, 20 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/irssi-how-to/</guid>
      <description>
&lt;a href=&#34;http://irssi.org&#34;&gt;irssi&lt;/a&gt; 是一款 linux 下面的 irc 聊天软件，它是基于console下面的，所以不需要 x 界面的支持，并且支持 &lt;a href=&#34;http://irssi.org/scripts&#34;&gt;plugin&lt;/a&gt; 扩展功能，在 irc 软件里面，它用起来感觉还是很不错的。&lt;br /&gt;

&lt;b&gt;== 安装 irssi ==&lt;/b&gt;&lt;br /&gt;

在 &lt;a href=&#34;http://www.archlinux.org/&#34;&gt;ArchLinux&lt;/a&gt; 下面，使用下面得命令即可安装 irssi 。如果需要使用 nicklist 插件，那么同时需要安装 screen 这个软件。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

&lt;b&gt;== 启动、退出 irssi ==&lt;/b&gt;

启动 irssi 的方法也很简单，执行下面的命令即可。启动之后会看到一些提示内容。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

如果要退出 irssi ，可以在下面的输入框输入 &#34;/quit [退出原因]&#34; 命令，其中退出原因可以不写。

&lt;b&gt;== 删除内置的一些 server 和 network 列表 ==&lt;/b&gt;

默认情况下， irssi 会给你设置一些 server 和 network 列表，可以使用下面的命令来查看。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
/server list
/channel list&lt;/pre&gt;

这些都可以先删掉，如果你想保留的话，可以跳过这一步。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
/server remove [server_name]
/channel remove [chan_name]&lt;/pre&gt;

删掉之后比较清爽，呵呵。我喜欢这样。

&lt;b&gt;== 添加自己的 server 和 network 列表 ==&lt;/b&gt;

这里以 linuxsir 的 archlinux 的 irc 频道为例来介绍一下。服务器是  irc.oftc.net ，端口是6667，频道是 #arch-cn。

先添加 network 。 oftc 可以注册用户名，方法后面再说。下面命令中的  autosendcmd 后面的内容就是和服务器验证用户名的命令，如果你没这个需求，可以直接删掉那些内容。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;/network add -autosendcmd &#34;/^msg nickserv identify passwd;wait 2000&#34;&gt;

接下来添加 server 。其中的 -auto 选项可以让 irssi 启动的时候就自动连接这个 server 。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

接下来添加自动加入的 channel 。 auto 参数同上。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

ok ，这就都添加完了，可以使用前面提到的list命令来查看添加的列表是否正确。退出 irssi 之后，重新启动， irssi 应该已经在自动连接 server ，并且连接之后还能自动加入刚才添加的频道了。

irssi 里面切换标签用的是 alt+数字 ，界面下面会提示哪个 window 是 active 的，按 alt+那个数字就可以切换过去。

&lt;b&gt;== 注册用户名 ==&lt;/b&gt;

irc 里面修改昵称的命令是 “/nick new_nick”，设置好自己的 nick 之后，还可以在 oftc 注册，这样以后别人使用你这个昵称的时候，你可以抢回来。:)

注册昵称的命令如下。 password 改成密码， e-mail 改成邮箱。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

注册之后，以后可以使用下面的命令来告诉 oftc 你是谁。可以看到这个命令在前面出现过，就是添加 network 的时候，如果按照本文提示的那样做了的话，每次启动 irssi 连接到这个 network 所属的 server 之后，会自动执行这个命令。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

其他的一些注册用户名相关的信息可以通过 &#34;/msg nickserv help&#34; 来查看。

作了上面这些操作之后， irssi 用起来已经基本很顺手了。其他的一些 irc 命令可以自己去发现，或者上 irc 问其他的用户。

&lt;b&gt;== 显示 nicklist 列表 ==&lt;/b&gt;

用一段时间会发现， irssi 里面查看当前有哪些用户在聊天不是很方便。这里需要安装一个 nicklist 插件，地址是&lt;a href=&#34;http://irssi.org/scripts/scripts/nicklist.pl&#34;&gt;这里&lt;/a&gt;，保存到 ~/.irssi/scripts 目录下面，然后在这个目录下面新建一个 autorun 目录，然后将 nicklist.pl 在那个目录下做一个链接，这么做的目的是使得 irssi 启动的时候就可以加载 nicklist.pl 这个插件。

ok ，重新启动 irssi ，然后在频道里面执行一下“/nicklist screen&#34; 命令，右边是不是出来 nicklist 了？

&lt;b&gt;== 消息通知 ==&lt;/b&gt;

使用一段时间就会发现，有时候 irc 里面有人和你说话的时候没有提示，不像即时通讯软件那样会弹出一个窗口提醒你。 irssi 通过插件可以来实现这个。

下载 &lt;a href=&#34;http://irssi.org/scripts/scripts/beep_beep.pl&#34;&gt;beep&lt;/a&gt; 插件，放到 .irssi/scripts 目录下面，然后在 irssi 中使用下面的命令加载这个插件。

 /script load beep_beep.pl

执行之后会在1号窗口看到加载成功与否的提示。加载之后 irssi 就多了两个参数可以设置， beep_flood 和 beep_cmd ，可以使用 /set 命令来设置他们。 beep_flood 的单位是毫秒，所以1000表示1秒。

设置完毕这些之后，还需要设置一下哪些情况下通知你，就是  beep_msg_level 这个参数。这个参数可以设置的内容可以用 /help levels 来查看。
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
    CRAP          - ?
    MSGS          - Match messages privately sent to you.
    PUBLIC        - Match messages sent to public channels.
    NOTICES       - Match NOTICE messages.
    SNOTES        - Match server notices.
    CTCPS         - Match CTCP messages.
    ACTIONS       - Match CTCP actions.
    JOINS         - Match join messages.
    PARTS         - Match part messages.
    QUITS         - Match quit messages.
    KICKS         - Match kick messages.
    MODES         - Match mode changes.
    TOPICS        - Match topic changes.
    WALLOPS       - Match wallops.
    INVITES       - Match invite requests.
    NICKS         - Match nickname changes.
    DCC           - DCC related messages.
    DCCMSGS       - Match DCC chat messages.
    CLIENTNOTICE  - Irssi&#39;s notices.
    CLIENTCRAP    - Miscellaneous irssi messages.
    CLIENTERROR   - Irssi&#39;s error messages.
    ALL           - All previous message levels combined.
    HILIGHT       - Match highlighted messages.
    NOHILIGHT     - Don&#39;t check a message&#39;s highlighting.
    NO_ACT        - Don&#39;t trigger channel activity.
    NEVER         - Never ignore, never log.
    LASTLOG       - Never ignore, never log.&lt;/pre&gt;

我的设置是  &#34;MSGS DCC INVITES HILIGHT&#34; 。设置好之后也可以把它放到 autorun 里面去自动加载。

如果单纯设置 beep_cmd 这种方式你不满足的话，可以自己修改那个脚本，这里有我写的一篇 irssi_script_howto。

&lt;b&gt;== 其他的一些设定 ==&lt;/b&gt;

使用&#34;/ctcp user_name version&#34;命令可以查看对方的一些信息，各个软件返回的信息不太一样，例如 xchat 自己的版本，还会返回操作系统的一些信息， chatzllia 也会返回自己的版本信息。默认情况下， irssi 也是返回自己的版本，但是我们可以自己定制一下 :)

执行 &#34;/set&#34; 命令，你会看到会返回很多信息，这些都是 irssi 的设置项，可以设置 theme 什么的，要设置 ctcp version 的返回信息，需要设置 ctcp_version_reply 这个选项， &#34;/set ctcp_version_reply :)&#34; 就可以了。对方查看的时候，只能看到:)这个返回信息。

在 irssi 里面，如果用 screen 启动的话，翻页使用的是 page down/page up 按键。

&lt;b&gt;== 参考资料 ==&lt;/b&gt;

irssi的官方网站上面的 &lt;a href=&#34;http://irssi.org/documentation&#34;&gt;文档&lt;/a&gt; 很详细，建议去看看。本文就是参考 &lt;a href=&#34;http://irssi.org/documentation/startup&#34;&gt;Startup HOWTO&lt;/a&gt; 里面的 &lt;b&gt;Server and channel automation&lt;/b&gt; 而写。
</description>
    </item>
    
    <item>
      <title>oracle 文本界面的安装</title>
      <link>https://wdicc.com/oracle-text-install/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-text-install/</guid>
      <description>
oracle 的手册里面讲的通常都是图形界面下面的安装，就是用oracle登录桌面，然后运行安装程序的方法。可实际上维护服务器的时候，大多用的还是&lt;font color=&#34;#3333ff&#34;&gt;远程&lt;/font&gt;文本界面。这样很有必要看看如何通过文本界面来安装oracle。&lt;br /&gt;

oracle本身的安装程序也提供了这个方法，就是使用 responseFile 。这个 responseFile 其实就是在图形界面安装的时候的一些选择，保存到文件之后，直接告诉安装程序从这里读取设置就好了。将oracle的安装文件 ship.db.lnx32.cpio.gz 解压：&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
cpio -idmv &lt; ship.db.cpio&lt;/pre&gt;

这样可以看到有个Disk1的文件夹，里面有个response目录，里面好多response文件，不过我还不知道这些有什么区别，里面设置项也很多，还没弄明白。我使用的不是这里的response文件。是通过下面的方法获取的rsp文件。

可以通过在记录模式中运行软件或通过手动编辑示例响应文件来创建响应文件。以下是一个基本演示：

   1. 用此命令启动 OUI 来创建响应文件：

      ./runInstaller -record -destinationFile /tmp/recorded.rsp
       
   2. 选择您需要的所有部分（源目标目录、主目录、主目录名、产品）。
   3. 当您看到 Summary 屏幕时，不要单击 Install，而是单击 Cancel。
   4. 仔细查看在 tmp/recorded.rsp 中创建的结果响应文件。如果需要，可以手动编辑该文件，只要您遵守使用规定的格式即可（请参见文档）。
   5. 现在如下执行静默安装：

      ./runInstaller -silent -responseFile /tmp/recorded.rsp

      在运行脚本时将会报告安装的进度。

如果您由于响应文件中的条目不正确而遇到安装故障，安装将失败并显示一条诊断消息。详细信息可在 oraInventory/logs 目录中找到。在每次使用响应文件运行 OUI 时，会创建具有 installActions-&lt;时间戳&gt;.log 和 silentInstall&lt;时间戳&gt;.log 格式名称的日志。

这样，只需要找台机器在图形界面下面运行一下安装程序，生成一个rsp文件，然后放到真正需要安装的服务器上面，修改一下安装路径，设置一下sys密码，就可以开始安装了。
</description>
    </item>
    
    <item>
      <title>oracle在rh里面的安装流程</title>
      <link>https://wdicc.com/install-oracle-in-rh/</link>
      <pubDate>Wed, 14 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-oracle-in-rh/</guid>
      <description>&lt;b&gt;第2部分 针对oracle配置linux&lt;/b&gt;

oracle 对系统硬件配置的一些要求。

&lt;blockquote&gt;内存 &gt; 512MB
swap &gt; 1GB
oracle软件 &gt; 2.5GB
数据文件  &gt; 1.2GB
/tmp  &gt; 400MB&lt;/blockquote&gt;

创建oracle用户和组
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
/usr/sbin/groupadd dba
/usr/sbin/useradd -m -g oinstall -G dba oracle
id oracle&lt;/pre&gt;

要记得为oracle用户设置密码。 
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

创建oracle的安装目录，要注意前面对分区的大小要求。

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
mkdir -p /u02/oradata
chown -R oracle:oinstall /u01/app/oracle /u02/oradata
chmod -R 775 /u01/app/oracle /u02/oradata&lt;/pre&gt;

配置linux内核参数

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
kernel.shmall = 2097152
kernel.shmmax = 2147483648
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
fs.file-max = 65536
net.ipv4.ip_local_port_range = 1024 65000
EOF
/sbin/sysctl -p&lt;/pre&gt;

为 oracle 用户设置 Shell 限制。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
oracle               soft    nproc   2047
oracle               hard    nproc   16384
oracle               soft    nofile  1024
oracle               hard    nofile  65536
EOF

cat &gt;&gt; /etc/pam.d/login &lt;&lt;EOF
session    required     /lib/security/pam_limits.so
EOF

cat &gt;&gt; /etc/profile &lt;&lt;EOF
if [ \$USER = &#34;oracle&#34; ]; then  
if [ \$SHELL = &#34;/bin/ksh&#34; ]; then
ulimit -p 16384
ulimit -n 65536
else
ulimit -u 16384 -n 65536
fi
umask 022
fi
EOF

cat &gt;&gt; /etc/csh.login &lt;&lt;EOF
if ( \$USER == &#34;oracle&#34; ) then
limit maxproc 16384
limit descriptors 65536
umask 022
endif
EOF&lt;/pre&gt;

设置oracle 用户的环境变量。通过修改 .bash_profile 来完成。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
ORACLE_BASE=/u01/app/oracle; export ORACLE_BASE
ORACLE_SID=demo1; export ORACLE_SID&lt;/pre&gt;

其他的变量等安装完了再设置。

&lt;b&gt;第3部分 安装 Oracle&lt;/b&gt;

使用一个修改好的rsp文件，然后执行下面的命令。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

然后就等着吧，看那些log或者看屏幕输出都可以看到安装进度。

第4部分 可能会遇到的问题

下面这些是从网上找到的，我用到的就是第1和9条，还没有遇到其他问题。

1、运行runInstaller，错误提示如下：
Checking requirements...
Checking operating system version: must be redhat-2.1,redhat-3,SuSE-9,SuSE-8,UnitedLinux-1.0
Failed&lt;&lt;&lt;&lt;
解决方法：
方法一：
在/etc下创建UnitedLinux-release文件
#cat &gt; /etc/UnitedLinux-release &lt;&lt; EOF
&gt;UnitedLinux 1.0 (i586)
&gt;VERSION=1.0
&gt;EOF
然后就可以正常启动安装程序。注意不要使用vi编辑该文件，否则可能会引起ORA-12547: TNS: lost contact的错误。

方法二：
运行runInstaller -ignoreSysPrereqs，这样会跳过检查

方法三：
修改Oracle 的/.../disk1/install/linux/oraparam.ini这个参数文件

2、安装界面或者netca界面、dbca界面显示很多&#34;口口&#34;样子的乱码

解决办法:查看locale输出
# locale
LANG=zh_CN.GB18030
LC_CTYPE=zh_CN.GB18030
LC_NUMERIC=&#34;zh_CN.GB18030&#34;
LC_TIME=&#34;zh_CN.GB18030&#34;
LC_COLLATE=&#34;zh_CN.GB18030&#34;
LC_MONETARY=&#34;zh_CN.GB18030&#34;
LC_MESSAGES=&#34;zh_CN.GB18030&#34;
LC_PAPER=&#34;zh_CN.GB18030&#34;
LC_NAME=&#34;zh_CN.GB18030&#34;
LC_ADDRESS=&#34;zh_CN.GB18030&#34;
LC_TELEPHONE=&#34;zh_CN.GB18030&#34;
LC_MEASUREMENT=&#34;zh_CN.GB18030&#34;
LC_IDENTIFICATION=&#34;zh_CN.GB18030&#34;
LC_ALL=
执行#export LANG=en_US 然后重新调用安装程序.


3、Oracle10g自动检查操作系统是否符合安装的条件。当按照上面的脚本对系统进行配置后，会有警告提示。[Retry]会看到如下提示：

Checking for openmotif-2.1.30-11; found Not found. Failed &lt;&lt;&lt;&lt;
Check complete. The overall result of this check is: Failed &lt;&lt;&lt;&lt;
Problem: Some recommended packages are missing (see above)

下载并安装openmotif-2.1.30-11软件包后，通过验证。

备注：有oracle文档说明：对于在RHELAS3上安装oracle10g，需要openmotif-2.2.2-16或更高版本；
但下载openmotif-2.2.2-16.src.rpm，在机器上编译安装，oracle自动检查仍然有警告提示。


4、安装程序在进行到74%的时，按照提示用root身份运行$ORACLE_HOME/root.sh，出现以下错误：

./root.sh: line 227: /var/opt/oracle/srvConfig.loc: 没有那个文件或目录
./root.sh: line 228: /var/opt/oracle/srvConfig.loc: 没有那个文件或目录
/bin/chown: 无法取得 ‘/var/opt/oracle/srvConfig.loc’的属性：没有那个文件或目录
/bin/chgrp: 无法取得 ‘/var/opt/oracle/srvConfig.loc’的属性：没有那个文件或目录
/bin/chmod: 无法取得 ‘/var/opt/oracle/srvConfig.loc’的属性：没有那个文件或目录
Successfully accumulated necessary OCR keys.
Creating OCR keys for user &#39;root&#39;, privgrp &#39;root&#39;..
OCR create keys failed, OCR error 26
Failed to initialize Oracle Cluster Registry for cluster

解决方法：
# mkdir /var/opt/oracle
# chown -R oracle.dba /var/opt/oracle
# ./root.sh

5、 数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ORA-00371: not enougsh shared pool memory, should be atleast 52132659 bytes.

解决方法：
这个错误并非是内核参数设置的问题，也和系统的物理内存大小无关。编辑$ORACLE_HOME/dbs/init$GID.ora文件：
shared_pool_size = 52132659


6、 数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ora-01102: cannot mount database in EXCLUSIVE mode

解决方法：
完全关闭数据库,更改$ORACLE_HOME/dbs/init.ora文件里的db_name为建库时定义的“全局数据库名”，然后再重新启动数据库

7、 数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ora-00205:error in identifying conrolfile, check alert log for more info

解决方法：
SQL&gt;show parameter control_files
SQL&gt;CREATE CONTROLFILE
将$ORACLE_BASE/admin/$GID/pfile/init$SID.ora***************拷贝到$ORACLE_HOME/dbs下，命名为init$SID.ora,即可解决。

8、数据库启动：
$sqlplus /nolog
SQL&gt;connect / as sysdba
SQL&gt;startup

ORA-01990:error opening password file &#39;$ORACLE_NAME/dbs/orapw&#39;
ORA-27037:unable to obtain file status
Linux Error:2: No such file or directory
Additional information: 3

解决方法：
将$ORACLE_HOME/dbs下的orapw$db_name文件拷贝生成一个orapw文件。


8、建库的过程中或者连接数据库的时候提示：
ORA-12547: TNS: lost contact
引起该错误的环境比较复杂，原因可能是：
1、用vi编辑的/etc/UnitedLinux-release文件
2、内核参数设置不正确
3、察看一下listener是否正常启动: lsnrct1 status
4、机器负载过大

9、 emca 的web界面的乱码

http://www.eygle.com/archives/2006/03/oracle10g_em_font_change.html

一直没怎么用10g的EM工具,今天打开来看看,发现也有相传已久的乱码问题.网上也流传着N种解决方案,仔细看一下,其实这个问题很好解决.

如果安装时,我们系统环境变量设置的是中文环境,那么就不会有这个问题.这个问题根本原因在于安装时,JDK/JRE字符集的自动选择.

在 $ORACLE_HOME/jdk/jre/lib 和 $ORACLE_HOME/jre/1.4.2/lib/ 目录下都有多种字符集字体配置文件:

[oracle@danaly ~]$ cd $ORACLE_HOME/jdk/jre/lib
[oracle@danaly lib]$ ls font*zh_CN*
font.properties.zh_CN.Redhat  font.properties.zh_CN.Redhat2.1  
font.properties.zh_CN.Sun  font.properties.zh_CN_UTF8.Sun

[oracle@danaly lib]$ cd $ORACLE_HOME/jre/1.4.2/lib/
[oracle@danaly lib]$ ls font*zh_CN*
font.properties.zh_CN.Redhat  font.properties.zh_CN.Redhat2.1  
font.properties.zh_CN.Sun  font.properties.zh_CN_UTF8.Sun 

我们只要用合适的中文字符集文件替换缺省文件即可,我选择使用font.properties.zh_CN.Redhat来替换缺省字体定义文件:

[oracle@danaly lib]$ cp font.properties.zh_CN.Redhat font.properties 

替换之后需要清理一下Cache,重启EM即可.

Cache路径通常位于:

$ORACLE_HOME/oc4j/j2ee/oc4j_applications/applications/em/em/cabo/images/cache/zhs 

清除所有gif文件即可.然后重新启动EM:

[oracle@danaly zhs]$ emctl stop dbconsole
TZ set to PRC
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0  
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.
http://danaly.hurrray.com.cn:1158/em/console/aboutApplication
Stopping Oracle Enterprise Manager 10g Database Control ... 
 ...  Stopped. 
[oracle@danaly zhs]$ emctl start dbconsole
TZ set to PRC
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0  
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.
http://danaly.hurrray.com.cn:1158/em/console/aboutApplication
Starting Oracle Enterprise Manager 10g Database Control .............. started. 
------------------------------------------------------------------
Logs are generated in directory 
/opt/oracle/product/10.2.0/danaly.hurrray.com.cn_danaly/sysman/log  

现在登陆Web页面,EM显示就可以正常显示中文了.

参考文章： &lt;a href=&#34;http://www.oracle.com/technology/global/cn/pub/articles/smiley_10gdb_install.html&#34;&gt;这里&lt;/a&gt;
</description>
    </item>
    
    <item>
      <title>我手机上面使用的软件</title>
      <link>https://wdicc.com/software-in-my-phone/</link>
      <pubDate>Fri, 09 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/software-in-my-phone/</guid>
      <description>
买N70就是为了可以装软件，可以很强的自定义功能。闲来没事讲讲里面的软件。&lt;br /&gt;

第一个就是输入法。用过A4和&lt;b&gt;国笔输入法&lt;/b&gt;，感觉国笔的设计还是不错的。这里说的国笔是国笔2006前的那个版本，2006没有那个版本好用。说几个特点&lt;br /&gt;
&lt;ol&gt;&lt;li&gt;输入汉字的状态下，可以直接输入数字。&lt;/li&gt;&lt;li&gt;输入汉字的状态下，可以直接输入字母。&lt;/li&gt;&lt;li&gt;可以同步通讯录到词组，输入人名的时候很方便。&lt;/li&gt;&lt;li&gt;别的还没想起来。不过有上面几点足够了。&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;

快捷精灵&lt;strong&gt;smart setting&lt;/strong&gt;，也是不错的软件。可以自定义你的左软键，变成一个菜单。比如我把常用的几个软件加入到了这里，这样就不用每次去我的助理里面找了，速度快很多。他还可以自定义锁键盘后的解锁键和提示信息。&lt;br /&gt;

&lt;b&gt;handy clock&lt;/b&gt;，一个时间软件。N70自带的闹钟只能设置一个，还只能天天设置。这个软件用来设置多个闹铃，同时可以定义哪天响，比如只工作日响什么的。别的功能就没多大用了。&lt;br /&gt;

&lt;b&gt;qreader&lt;/b&gt;，电子书阅读软件。1.9x版可以读umd和txt格式的，txt格式需要保存成unicode编码，否则会出现乱码。可以用convertz这个软件来批量转换，挺好用的。&lt;br /&gt;

&lt;b&gt;区号秀&lt;/b&gt;，用来显示来电或者短信的地区，这样来电的时候，能大概知道电话是哪里打来的。&lt;br /&gt;

&lt;b&gt;minute beep&lt;/b&gt;，通话提示软件。可以设置打电话的时候多长时间提醒一下。&lt;br /&gt;

&lt;b&gt;seleq&lt;/b&gt;和&lt;b&gt;fileman&lt;/b&gt;，都是文件管理软件，各有千秋，都装上了。&lt;br /&gt;

&lt;b&gt;remind me&lt;/b&gt;，未接来电和短信提醒软件。可以自定义哪个时间段内，多久开始提醒，以及提醒的次数，声音，音量等。很有用的软件。3.01好像不能设置提醒的音量。我用的3.0。&lt;br /&gt;

&lt;b&gt;eprofiles&lt;/b&gt;，增强情景模式软件。可以设置时间自动切换情景模式，比如我设置工作日的早上7点半切换为户外，因为那会我在坐车，9点切换到标准，因为到了公司后可不想用那么大声音的铃声了，会吓坏的。还有些别的设置，就不说了。&lt;br /&gt;

&lt;b&gt;sbirthday&lt;/b&gt;，可以说是通讯录的一个增强软件吧。通讯录可以设置生日，但是不会提醒。这个软件可以搜索通讯录，然后在日历里面自动设置生日提醒。&lt;br /&gt;

&lt;b&gt;名片备份&lt;/b&gt;，这个的英文名忘记了，是一个用来备份通讯录的软件，可以导出成csv格式，这样可以用excel打开编辑。编辑完记得保存成unicode格式，否则中文会乱码。&lt;br /&gt;

&lt;b&gt;resco photo viewer&lt;/b&gt;，一个看图软件，比自带的快很多。&lt;br /&gt;

别的软件就没什么我喜欢的了。上面几个中，可以说都比较依赖，感觉都挺有用的。就是手机上面装软件不要求新，要求稳定，新的不一定就好。&lt;br /&gt;

这些软件都可以从 &lt;a href=&#34;http://www1.3g365.com/forum-4-1.html&#34;&gt;3g365&lt;/a&gt; 的网站找到下载。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Prison Break人物绰号详解</title>
      <link>https://wdicc.com/people-in-prison-break/</link>
      <pubDate>Thu, 08 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/people-in-prison-break/</guid>
      <description>&lt;br /&gt;

&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;2. C-Note ： Benjamin &#34;C-Note&#34; Franklin&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&#34;C&#34; signifying the quantity of 100 in roman numerals, &#34;note&#34; signifying federal reserve note, thus &#34;cnote&#34; signifies 100 dollars.&lt;br/&gt;eg. Got change for a cnote?&lt;br/&gt;&lt;br/&gt;指百元大钞。C-Note擅长交易，其演员也在访谈中说，是因为他不管给别人买再小的东西，也要收100元，所以叫C－Note。而且，$100美元上印有 Benjamin Franklin的头像，和片中人物同名。Benjamin Franklin是18世纪美国著名的科学家和政治家，参与起草《独立宣言》。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;3. Tweener : David &#34;Tweener&#34;Apolskis&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;A young White man confused about his culture and ressembles a Black man. He is in between.. he is a Tweener.&lt;br/&gt;eg. Yo Tweener, that hoe is a quebecunt fo sho!&lt;br/&gt;&lt;br/&gt;Tweener好多意思，任何in between的东西都可以叫tweener。指他在支持白人和黑人之间徘徊. 具体参看T-BAG摸他膝盖那一集,这个名字似乎是T-BAG给的&#34;a regular tweener&#34;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;4. Linc &#34;the sink&#34; ： Lincon Burrows:&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;Lincoln is known to be a tough, hard fighter among the cons at Fox River. Usually, when someone comes at you, they give you &#34;everything but the kitchen sink&#34;. Lincoln, or &#39;Linc&#39;, gives off more of an effort than that and is referred to as the &#34;sink&#34;. Hence, &#34;Linc(k) the Sink&#34;.&lt;br/&gt;在ep1 里，讲到：在FOX RIVER的那些犯人里边，LINC属于是比较能打的壮汉。一般来说，当别人来打你的时候，你会把什么东西都拿来打他（everything but the kitchen sink是老美的SLANG），可LINC不一样，他会把这个东西也拿去砸人，加上他的名字LINC和SINK就一个音不一样，所以大家就那么叫他了。&lt;br/&gt;&lt;br/&gt;&lt;a href=&#34;http://www.24xuexi.com/Article/voa/xgyy/200412/2496.html&#34; target=&#34;_blank&#34;&gt;http://www.24xuexi.com/Article/voa/xgyy/200412/2496.html&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;Everything but the kitchen sink英文的解释&lt;br/&gt;&lt;br/&gt;Everything but the kitchen sink is what you brought with you when you included almost everything you could think to bring. Example: &#34;Wow, your suitcase is huge. What do you have in there? Everything but the kitchen sink?&#34;&lt;br/&gt;&lt;br/&gt;When we we are deciding what to bring with us, we try to take everything possible. But some things, like the kitchen sink, are just not convenient. Example: &#34;Every time we go camping my wife packs everything but the kitchen sink.&#34;&lt;br/&gt;&lt;br/&gt;Everything but the kitchen sink means that you included almost everything you could think to include. Example: &#34;My dad&#39;s new luxury car is great. It has everything but the kitchen sink.&#34;&lt;br/&gt;&lt;br/&gt;Everything but the kitchen sink的字面意思是除了厨房水池什么都有，实际意思是你能想到的东西都包括了，lincoln绰号是sink，就是说他连你想不到的都包括了，感觉上就是他是everything，或者说他无敌的意思。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;5. Cherry: Seth &#34; Cherry&#34; Hoffner&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;Something looks pretty and fresh. slang term for a woman&#39;s hymen.&lt;br/&gt;&lt;br/&gt;是上吊自杀的那个小男孩儿。本指樱桃，是他长得俊美，年纪嫩。Like a virgin.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;6. T-Bag: Theodore&#34;T-Bag&#34; Bagwell&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;When a girl is lying on her back and blowing you, you grab your cock and lift it out of the way and dip your nuts in and out of her mouth like you dipping a tea bag ..&lt;br/&gt;&lt;br/&gt;这个绰号给他还是有XXX味道的。&lt;br/&gt;&lt;br/&gt;Rob K. 在G4的访问中说，他在拍PB以前也不是特别了解，芝加哥人才都知道T－Bag是什么意思。 他说PB的编剧很聪明，给他起Bagwell这样的姓，就很顺理成章缩写成T－Bag，就可以自然而然这样叫他，而不让观众觉得&#34;太过分了&#34;。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;7. Maytag: Jason &#34;Maytag&#34; Buchanan&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;A prison term for a young inmate who performs sexual favors for a dominate top in exchange for protection.&lt;br/&gt;&lt;br/&gt;eg. I gotta get me a new Maytag...&#39;cause my boy just got sprung.&lt;br/&gt;&lt;br/&gt;T-bag 在前几集的&#34;女朋友&#34;和室友。此绰号正是这个意思。&lt;br/&gt;&lt;br/&gt;海尔曾经要收购的美国家用电器生产厂商也叫Maytag。估计本指&#34;服务的女人&#34;的意思，在监狱里被引申啦。&lt;br /&gt;
&lt;p&gt;来自 &lt;a href=&#34;http://www.newsmth.net/bbscon.php?bid=904&amp;amp;id=23771&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。最近又开始跟最新的越狱了。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>升级了一下cacti</title>
      <link>https://wdicc.com/upgrade-cacti/</link>
      <pubDate>Thu, 08 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/upgrade-cacti/</guid>
      <description>
cacti几个月前就提示我&lt;a href=&#34;http://cactiusers.org/&#34;&gt;Architecture&lt;/a&gt;插件有升级了，一直懒得弄。今天发现cacti也升级了，就去看了看，顺便升级了一下。记录一下升级需要注意点的东西。&lt;br /&gt;

debian 里面的cacti设置的比较好，log、rra、resource目录都是分开放的，不在cacti目录下面，做了一个链接过去。其他系统升级的时候注意要先备份这三个目录先。建议使用debian的这种方法，这样下次升级省事了。&lt;br /&gt;

然后就是很简单的，下载cacti，覆盖，修改config文件，浏览器连接，提示升级，按照步骤来就行了。然后再打上Architecture补丁，再修改config文件就行了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>测试一下performancing看看</title>
      <link>https://wdicc.com/test-performancing/</link>
      <pubDate>Thu, 08 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/test-performancing/</guid>
      <description>
实在受不了后台的打开速度了，试试看fx的performancing插件，这个在推荐插件列表上面好久了。而且也支持我的wp，发一个帖子看看效果如何。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
WLS=/usr/local/wls
APACHE=/usr/local/apache/bin/apachectl
URL_STATUS=0
echo -e $&#34;Starting $PROG:&#34;
        cd $WLS
        WEBCHECK_LOGIC_START &gt;/dev/null &amp;
        echo -n &#34;waiting....&#34;&lt;/pre&gt;

再看看&lt;b&gt;粗体&lt;/b&gt;什么&lt;u&gt;的，&lt;/u&gt;好像还行。还能有&lt;font color=&#34;#cc0000&#34;&gt;颜色&lt;/font&gt;？
</description>
    </item>
    
    <item>
      <title>lvm 学习笔记</title>
      <link>https://wdicc.com/lvm-note/</link>
      <pubDate>Tue, 06 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lvm-note/</guid>
      <description>&lt;br /&gt;

&lt;strong&gt;lvm的一些操作&lt;/strong&gt;&lt;br /&gt;

首先就是创建PV了，有了PV才能组建VG嘛。创建PV用 pvcreate 命令。&lt;br /&gt;

# pvcreate /dev/hda6&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;Physical volume &#34;/dev/hda6&#34;&gt;
# pvdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
PV Name               /dev/hda6
VG Name
PV Size               9.77 GB
Allocatable           NO
PE Size (KByte)       0
Total PE              0
Free PE               0
Allocated PE          0
PV UUID               jGIjyo-lukG-LdRg-tmwe-Mgxf-09ZW-loquUZ&lt;/pre&gt;
这样可以看到，创建了一个PV。同样操作可以创建多个。下面创建VG。

# vgcreate wd /dev/hda6
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;Volume group &#34;wd&#34;&gt;
# vgdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
VG Name               wd
System ID
Format                lvm2
Metadata Areas        1
Metadata Sequence No  1
VG Access             read/write
VG Status             resizable
MAX LV                0
Cur LV                0
Open LV               0
Max PV                0
Cur PV                1
Act PV                1
VG Size               9.77 GB
PE Size               4.00 MB
Total PE              2500
Alloc PE / Size       0 / 0
Free  PE / Size       2500 / 9.77 GB
VG UUID               NwUlxW-AmAi-LyqA-h39E-zS7q-YRj3-scZucL&lt;/pre&gt;
再看刚才创建的pv。

# pvdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
PV Name               /dev/hda6
VG Name               wd
PV Size               9.77 GB / not usable 0
Allocatable           yes
PE Size (KByte)       4096
Total PE              2500
Free PE               2500
Allocated PE          0
PV UUID               jGIjyo-lukG-LdRg-tmwe-Mgxf-09ZW-loquUZ&lt;/pre&gt;
可以看到多了一些信息，他已经属于叫做wd的VG了。同时可以看到PE的大小是4096K，也就是4M。下面创建真正可用的LV。

# lvcreate -L 200M -n test wd
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;Logical volume &#34;test&#34;&gt;
# lvdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
LV Name                /dev/wd/test
VG Name                wd
LV UUID                sPy1bM-Nz13-v0x7-bk0V-BKSH-Udzl-7ov5jM
LV Write Access        read/write
LV Status              available
# open                 0
LV Size                200.00 MB
Current LE             50
Segments               1
Allocation             inherit
Read ahead sectors     0
Block device           253:0&lt;/pre&gt;
可以看到，已经创建了一个叫做test的LV，也可以不使用-n参数指定LV的名称，这样系统会给取一个名字。
再来看看VG和PV的信息。

# vgdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
VG Name               wd
System ID
Format                lvm2
Metadata Areas        1
Metadata Sequence No  4
VG Access             read/write
VG Status             resizable
MAX LV                0
Cur LV                1
Open LV               0
Max PV                0
Cur PV                1
Act PV                1
VG Size               9.77 GB
PE Size               4.00 MB
Total PE              2500
Alloc PE / Size       50 / 200.00 MB
Free  PE / Size       2450 / 9.57 GB
VG UUID               NwUlxW-AmAi-LyqA-h39E-zS7q-YRj3-scZucL&lt;/pre&gt;
# pvdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
PV Name               /dev/hda6
VG Name               wd
PV Size               9.77 GB / not usable 0
Allocatable           yes
PE Size (KByte)       4096
Total PE              2500
Free PE               2450
Allocated PE          50
PV UUID               jGIjyo-lukG-LdRg-tmwe-Mgxf-09ZW-loquUZ&lt;/pre&gt;
可以看到VG已经使用了50个PE，也就是200M空间。PV上面也是，使用了50个PE。

这样LV已经有了，怎么使用他呢？其实和普通分区的使用方法一样。先格式化，创建文件系统，然后挂载。

# mkfs.ext3 /dev/wd/test
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
max_blocks 209715200, rsv_groups = 25600, rsv_gdb = 256
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
51200 inodes, 204800 blocks
10240 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=67371008
25 block groups
8192 blocks per group, 8192 fragments per group
2048 inodes per group
Superblock backups stored on blocks:
8193, 24577, 40961, 57345, 73729

Writing inode tables: done
inode.i_blocks = 3074, i_size = 67383296
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 38 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.&lt;/pre&gt;
# mount /dev/wd/test /opt
]# df -h
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
/dev/hda9             4.0G  148M  3.6G   4% /
/dev/hda1              99M  8.3M   86M   9% /boot
/dev/hda3              29G  1.1G   27G   4% /data
none                  252M     0  252M   0% /dev/shm
/dev/hda7             9.7G   55M  9.1G   1% /home
/dev/hda10            3.9G   40M  3.7G   2% /tmp
/dev/hda5             9.7G  1.9G  7.4G  20% /usr
/dev/hda8             7.7G   90M  7.3G   2% /var
/dev/mapper/wd-test   194M  5.6M  179M   4% /opt&lt;/pre&gt;
最后这行就是挂载的LV。下面调整LV的大小。先umount挂载的LV。

# umount /opt

# lvresize -L +100M /dev/wd/test
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
Logical volume test successfully resized&lt;/pre&gt;
# lvdisplay
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
LV Name                /dev/wd/test
VG Name                wd
LV UUID                sPy1bM-Nz13-v0x7-bk0V-BKSH-Udzl-7ov5jM
LV Write Access        read/write
LV Status              available
# open                 0
LV Size                300.00 MB
Current LE             75
Segments               1
Allocation             inherit
Read ahead sectors     0
Block device           253:0&lt;/pre&gt;
然后需要使用resize2fs命令调整LV分区大小。我这里用的是rh el4，没有这个命令。rh el3里面有这个命令。el4里面用ext2online命令调整，用ext2online命令调整的话，需要把要调整的分区挂载上去。

# mount /dev/wd/test /opt
# ext2online /dev/wd/test
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
# df -h
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
/dev/hda9             4.0G  148M  3.6G   4% /
/dev/hda1              99M  8.3M   86M   9% /boot
/dev/hda3              29G  1.1G   27G   4% /data
none                  252M     0  252M   0% /dev/shm
/dev/hda7             9.7G   55M  9.1G   1% /home
/dev/hda10            3.9G   40M  3.7G   2% /tmp
/dev/hda5             9.7G  1.9G  7.4G  20% /usr
/dev/hda8             7.7G   90M  7.3G   2% /var
/dev/mapper/wd-test   291M  6.1M  270M   3% /opt&lt;/pre&gt;
&lt;strong&gt;lvm的恢复&lt;/strong&gt;

姑且就叫做恢复吧，因为我其实没有实际测试过。不过是假设我的这台电脑启动不了了，然后用knoppix尝试恢复其中的数据。

# lvmdiskscan
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
/dev/wd/test [      332.00 MB]
/dev/ram1    [       97.66 MB]
/dev/hda1    [      101.94 MB]
/dev/ram2    [       97.66 MB]
/dev/hda2    [        1.95 GB]
/dev/ram3    [       97.66 MB]
/dev/hda3    [       29.29 GB]
/dev/ram4    [       97.66 MB]
/dev/ram5    [       97.66 MB]
/dev/hda5    [        9.77 GB]
/dev/ram6    [       97.66 MB]
/dev/hda6    [        9.77 GB] LVM physical volume
/dev/ram7    [       97.66 MB]
/dev/hda7    [        9.77 GB]
/dev/ram8    [       97.66 MB]
/dev/hda8    [        7.81 GB]
/dev/ram9    [       97.66 MB]
/dev/hda9    [        3.97 GB]
/dev/ram10   [       97.66 MB]
/dev/hda10   [        3.91 GB]
/dev/ram11   [       97.66 MB]
/dev/ram12   [       97.66 MB]
/dev/ram13   [       97.66 MB]
/dev/ram14   [       97.66 MB]
/dev/ram15   [       97.66 MB]
1 disk
24 partitions
0 LVM physical volume whole disks
1 LVM physical volume&lt;/pre&gt;

# vgdisplay -v
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
Finding volume group &#34;wd&#34;
--- Volume group ---
VG Name               wd
System ID
Format                lvm2
Metadata Areas        1
Metadata Sequence No  9
VG Access             read/write
VG Status             resizable
MAX LV                0
Cur LV                1
Open LV               0
Max PV                0
Cur PV                1
Act PV                1
VG Size               9.77 GB
PE Size               4.00 MB
Total PE              2500
Alloc PE / Size       83 / 332.00 MB
Free  PE / Size       2417 / 9.44 GB
VG UUID               NwUlxW-AmAi-LyqA-h39E-zS7q-YRj3-scZucL

--- Logical volume ---
LV Name                /dev/wd/test
VG Name                wd
LV UUID                sPy1bM-Nz13-v0x7-bk0V-BKSH-Udzl-7ov5jM
LV Write Access        read/write
LV Status              available
# open                 0
LV Size                332.00 MB
Current LE             83
Segments               1
Allocation             inherit
Read ahead sectors     0
Block device           254:0

--- Physical volumes ---
PV Name               /dev/hda6
PV UUID               jGIjyo-lukG-LdRg-tmwe-Mgxf-09ZW-loquUZ
PV Status             allocatable
Total PE / Free PE    2500 / 2417&lt;/pre&gt;

# vgchange -a y wd
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;1 logical volume(s) in volume group &#34;wd&#34;&gt;

这样之后就可以使用mount命令挂载/dev/wd下面的设备了。

lvm的配置在 /etc/lvm/backup 下面。
参考自 &lt;a href=&#34;http://www.linuxforum.net/books/LVM-HOWTO.html&#34;&gt;这里&lt;/a&gt;。
</description>
    </item>
    
    <item>
      <title>看样子是今年最后一场雪了吧</title>
      <link>https://wdicc.com/seems-last-snow/</link>
      <pubDate>Sun, 04 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/seems-last-snow/</guid>
      <description>
&lt;a href=&#34;http://blog.wdicc.com/wordpress/2006/12/30/286/&#34;&gt;第一场雪之后&lt;/a&gt;，今天估计应该是最后一场雪了。本来还打算这个周末去滑雪的，看样子没去还挺幸运。。。昨天下了雨，今天下了雪。。。他们去滑雪的不知道情况如何。&lt;br /&gt;

&lt;img src=&#34;http://photo1.yupoo.com/20070304/104518_1883243794.jpg&#34; height=&#34;375&#34; width=&#34;500&#34; /&gt;&lt;br /&gt;

&lt;img src=&#34;http://photo1.yupoo.com/20070304/104610_1257144738.jpg&#34; height=&#34;375&#34; width=&#34;500&#34; /&gt;&lt;br /&gt;

&lt;img src=&#34;http://photo1.yupoo.com/20070304/104520_1015849718.jpg&#34; height=&#34;375&#34; width=&#34;500&#34; /&gt;&lt;br /&gt;

&lt;a href=&#34;http://wdicc.yupoo.com/&#34;&gt;这里&lt;/a&gt;还有一些图片。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>做客服真不容易</title>
      <link>https://wdicc.com/hard-work/</link>
      <pubDate>Sat, 03 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/hard-work/</guid>
      <description>
不投机倒把的话，赚钱都不容易。给电信网通这些做客服赚钱可更不容易了。之前有一个&lt;a href=&#34;http://plod.popoever.com/archives/000590.html&#34; title=&#34;猫吃卡&#34; target=&#34;_blank&#34;&gt;动感地带的猫&lt;/a&gt;这个事件，现在又有了&lt;a href=&#34;http://bbs.e222.com/dispbbs.asp?boardID=113&amp;ID=8453&#34; target=&#34;_blank&#34;&gt;被股市大跌逼疯的人&lt;/a&gt;。前面一个还是恶搞，郁闷归郁闷，至少还没有粗话。后面这个电信mm可就可怜多了，估计一接电话的那段开场白就把mm给吓坏了，那个人骂了好长时间之后，那个mm才回过神来开始说话。客服也应该对这种情况建立一种应急预案了吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>又折腾了一下blog</title>
      <link>https://wdicc.com/study-blog/</link>
      <pubDate>Wed, 28 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/study-blog/</guid>
      <description>
下载一个全新的wp   2.1.1，然后解压，复制到web目录下面，文件夹改名为wp-new。将旧的wp修改为wp-old，新的wp-new修改为wp，打开浏览器访问admin，会提示升级。升级之后，将wp-old 里面的wp-content目录cp过来覆盖，然后登录后台去一个一个启用插件。&lt;br /&gt;

好像现在还没有遇到问题。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>过年归来</title>
      <link>https://wdicc.com/i-am-back/</link>
      <pubDate>Mon, 26 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/i-am-back/</guid>
      <description>
年很快就过完了，又老了一岁，而且发现自己快30了，天哪。现在在舅舅们面前，总觉得自己还是以前的那个小孩子，看着弟弟妹妹们也总觉得他们还是小孩子。可是一想就恐怖，都快30了。。。天那&lt;br /&gt;

过年回家基本也就吃了睡睡了玩了，亲戚家逛了好几天，天天麻将。老婆倒是打麻将打爽了，那天在我们家还打了个通宵， 不过就是没赢钱，输了几十，呵呵。说实话，她技术太差，嗯。嘿嘿&lt;br /&gt;

昨天在北京家自己包了一顿饺子，第一次的结果还不错，就是时间长点，弄了一个下午。下次弄就有经验了，应该会快。拌馅的时候都没有尝一下咸淡，到了一些酱油，倒了一些盐，结果最后出来味道刚好，哈哈，真是太牛了。面有点软，回头研究研究怎么弄。&lt;br /&gt;

blog好像有问题了，打开写日志的页面的时候速度太慢了，回头得修理修理他。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>中了二等奖</title>
      <link>https://wdicc.com/secend-price/</link>
      <pubDate>Sun, 11 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/secend-price/</guid>
      <description>
记忆中好像没中过什么奖，奖奖金最多的一次好像就是呷哺吃出来的50的免餐券了。这次中的算是一个大的了，呵呵。&lt;br /&gt;

周五公司去怀柔开年会，晚上活动抽奖，中了一个二等奖，奖品是个帐篷，呵呵，太不实用了，我一直以为是个移动硬盘，好歹我还没有这玩意，也方便来回倒腾东西。上淘宝查了一下，帐篷值400来块钱。一等奖是个ipod nano，实在是可惜了，我和一等奖的号码就差一个，唉。&lt;br /&gt;

第一次参加非国企的公司年会，感觉真的很不错。以前在出版社，每个人发的东西都是一样的，因为要保证公平嘛。另外还强迫各个部门去出节目，还和小学生似的摊派任务，这样很难调动大家的积极性。更重要的是，以前出版社里面平均年龄实在太大，都一些老头老太太，活动不起来，而且还标榜文化单位，也不屑一些看似媚俗的节目。&lt;br /&gt;

这次年会好像是委托了一个拓展公司来组织，他们出一个主持人，我们出一个。除去抽奖环节，大部分节目都是全民参与，很有意思。而就算是惩罚类的单人节目， 也是有主持人带领来做一些有趣的动作什么的，完全不会因为腼腆而冷场。第一次参加这种拓展，感觉还是挺有意思的。不过也有一些遗憾，组织不是很到位，导致大家在就餐和活动之间的等待太多，浪费了很多时间。&lt;br /&gt;

周六就是去滑雪了，早上7点多起来， 吃早点，去雪场，到穿上滑雪服装踩上雪板，已经是10点多了。这中间除去路上时间大概半个小时，就是太多的等待了。吃完早点等退房，到了雪场等买票，买了票等领滑雪用具的卡，很是磨机。本来之前说可以滑一个上午的时候，还觉得时间足够了，结果到11点半集合时间只有1个多小时了，很多时间都是站在那里看着人越来越多。&lt;br /&gt;

因为玩过轮滑 ，所以虽然第一次玩，但是上了雪场适应了一下，就能控制滑行速度了。在初级那里的坡度最小的雪道滑了一次之后，忍受不了那么多人，就去初级最陡的坡道那里去了，之后就一直在那里玩了，不过也同样到后来人很多。&lt;br /&gt;

滑雪最大的乐趣可能就是速度感了，轮滑的乐趣还有一部分是在人群里面穿梭的感觉，呵呵。刚开始滑的时候，一直努力控制着速度，慢慢到了后面，就开始享受这种速度了，张开手臂，能看到影子里面的自己的头发都立起来了。滑雪比轮滑省力气多了，呵呵，因为他是个下坡。不过看到有人在平地上面也能加速，看了半天好像类似轮滑，但是自己没琢磨出来怎么玩，平地上面走实在费力。&lt;br /&gt;

这次活动要是安排到周四开会，周五滑雪就真是完美了，周五没那么多人吧。&lt;br /&gt;

周三上午就要座汽车回家了，第一次座回家的汽车，不知道如何，但愿车还不错吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>看到一个有意思的，反映了现在的一些学习风气</title>
      <link>https://wdicc.com/a-joke-8/</link>
      <pubDate>Fri, 09 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-8/</guid>
      <description>
新手A：7+8=？&lt;br /&gt;
老鸟A：呵呵，这个问题牵扯到我们用的十进制算数加法计算，还有进位问题，另外还要注意到.....&lt;br /&gt;
新手A：Stop！我就要知道7+8=？&lt;br /&gt;
老鸟A：7+8=15&lt;br /&gt;
新手A：可是为什么7+8=15？&lt;br /&gt;
老鸟A：搜索前面贴子，刚才回答了。&lt;br /&gt;
新手A：我搜了，搜不到，是老鸟就要帮助新手！&lt;br /&gt;
老鸟A：........ man 初级数学&lt;br /&gt;
新手A：我不懂英文，全都man了要你们老鸟干吗？&lt;br /&gt;
老鸟A从此潜水&lt;br /&gt;

新手B：6+9=？&lt;br /&gt;
老鸟B：搜索前面贴子&lt;br /&gt;
新手B：搜了，没答案，只有个烂人讲7+8，这哪是人能看懂的阿，我就要知道6+9=？&lt;br /&gt;
老鸟B：看《初级数学 handbook》，看懂就会做了&lt;br /&gt;
新手B：算个6+9都这么麻烦，这什么破操作系统阿！&lt;br /&gt;
老鸟B从此潜水&lt;br /&gt;

新手C：5+10=？&lt;br /&gt;
新手C：？？&lt;br /&gt;
新手C：没人？&lt;br /&gt;
新手C发帖：《为什么不能对初学者提供春风般的温暖》？&lt;br /&gt;
老鸟ABCDE群起攻之：这年头新手大爷，怎么这么难伺候，老鸟还怎么活！潜水去了！&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>春的信息</title>
      <link>https://wdicc.com/msg-of-sprring/</link>
      <pubDate>Sun, 04 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/msg-of-sprring/</guid>
      <description>
今天去给猫买猫粮，进了市场里面，发现有几个店铺都变红色了，都是红色的挂饰和红色的对联，这才感觉到春节就要来了。回来和老婆打电话，说今天立春，我死活不信，刚才查了一下，果然是。&lt;br /&gt;

2007年 立春&lt;br /&gt;
农历 二零零六年十二月十七 丙戌 狗 &lt;br /&gt;
公历 2007年2月4日 星期日 立春&lt;br /&gt;
 &lt;br /&gt;
这么说，已经是春天啦。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给小毛拍了几张相片</title>
      <link>https://wdicc.com/photos-for-maomao/</link>
      <pubDate>Sun, 28 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/photos-for-maomao/</guid>
      <description>
可以来&lt;a href=&#34;http://wdicc.yupoo.com&#34;&gt;这里&lt;/a&gt;看看。&lt;br /&gt;

小毛在看电视&lt;br /&gt;
&lt;img src=&#34;http://photo1.yupoo.com/20070128/091856_1204741568.jpg&#34; height=&#34;375&#34; width=&#34;500&#34; /&gt;&lt;br /&gt;

小毛穿披风&lt;br /&gt;
&lt;img src=&#34;http://photo1.yupoo.com/20070128/091854_599264536.jpg&#34; height=&#34;375&#34; width=&#34;500&#34; /&gt;&lt;br /&gt;
&lt;img src=&#34;http://photo1.yupoo.com/20070128/091852_544501578.jpg&#34; /&gt;&lt;br /&gt;
&lt;img src=&#34;http://photo1.yupoo.com/20070128/091850_1593044062.jpg&#34; height=&#34;375&#34; width=&#34;500&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天真是冷呀</title>
      <link>https://wdicc.com/too-cold-today/</link>
      <pubDate>Fri, 26 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/too-cold-today/</guid>
      <description>
早上出门，寒风里面等车还真是郁闷，眼泪好像都自己出来了……，不过上车居然有个座，嘿嘿。&lt;br /&gt;

明天老婆就回沈阳了，可能要等到过年之前或者过完年才能见了。第一个结婚周年纪念日得往后推一下了，嗯。不知道我妈他们能不能买到今天的火车票，如果可以的话，明天就可以到了，这下又可以吃几天好吃的了。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>我的 .fvwm2rc 文件</title>
      <link>https://wdicc.com/my-fvwm2rc/</link>
      <pubDate>Thu, 25 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/my-fvwm2rc/</guid>
      <description>&lt;br /&gt;
#####&lt;br /&gt;
# Set the image path&lt;br /&gt;

#ImagePath +:$HOME/.fvwm/icons:&lt;br /&gt;
ImagePath $[fvwm_icon]:$[fvwm_icon];.png:$[fvwm_wallpapers]:+&lt;br /&gt;

#设置图片路径，没有指明路径的图片来这里查找。&lt;br /&gt;
#可以使用变量指定。&lt;br /&gt;
##################################&lt;br /&gt;

#####&lt;br /&gt;
# Virtual Desktops&lt;br /&gt;

DesktopSize 3x1&lt;br /&gt;
DesktopName 0 Main&lt;br /&gt;
DesktopName 1 Work&lt;br /&gt;
DesktopName 2 Games&lt;br /&gt;
EdgeThickness 1&lt;br /&gt;
EdgeScroll 0 0&lt;br /&gt;
EdgeResistance 250 100&lt;br /&gt;

#DesktopSize 设置桌面大小和数目，3x1表示三个桌面，每个桌面1页。水平方向上面切换的是桌面，竖直方向上面是一个桌面内部切换。&lt;br /&gt;
#DesktopName 设置各个桌面的名称。&lt;br /&gt;
#EdgeScroll 设置拖动窗口到桌面左右两边上时，百分之多少的桌面开始滚动切换到下一个。0表示不滚动。&lt;br /&gt;
#EdgeResistance scrolling moving 这是用来设定当滑鼠游标碰触到萤幕的边界的时候，FVWM应该要如何动作。scrolling 是告诉FVWM当滑鼠游标碰触到萤幕边界多少milliseconds之後，才会移动目前的工作桌面。moving则是设定当视窗超出画面多少像点之後，才要切换目前的工作桌面到别的桌面上。&lt;br /&gt;
#EdgeThickness 设置当 EdgeScroll 效果出现的时候，桌面的周围显示的边框线的像素。&lt;br /&gt;
################################&lt;br /&gt;

#####&lt;br /&gt;
# Mouse and Focus Behavior&lt;br /&gt;
###########&lt;br /&gt;
ClickTime 350&lt;br /&gt;
MoveThreshold 3&lt;br /&gt;
Style * SloppyFocus,MouseFocusClickRaises&lt;br /&gt;
IgnoreModifiers L25&lt;br /&gt;

#ClickTime 设置fvwm认为是单击的按下鼠标和放开鼠标的时间间隔，单位是毫秒。如果超出这个时间，就认为是“hold”。&lt;br /&gt;
#MoveThreshold 设置移动几个像素的时候，fvwm才认为你是在移动窗口。上面这些主要是后面在写函数的时候有用，那里对不同的操作响应不同的动作。&lt;br /&gt;
#style 用来给fvwm里面配置各种各样的风格，比如你想让窗口如何响应动作，窗口显示的内容、外观等。 * 是一个通配符，表示所有窗口。第三个参数是风格参数，用逗号间隔。SloppyFocus 表示当鼠标进入窗口的时候窗口就获得焦点，但是除去root window等一些特殊窗口（比如conky的窗口，你不希望他获得焦点吧）。和他同类的，比如还有ClickFocus，表示当鼠标单击窗口的时候窗口获得焦点，这些都可以查 fvwm 的man page可以看到，同类的属性一般用 / 间隔。&lt;br /&gt;
# style里面的选项很多都可以直接从字面理解其意思，关于style的其他选项的意思就去看看man page吧，后面涉及到这部分的也不多讲了。&lt;br /&gt;
################################&lt;br /&gt;

############ default Styles: ####################&lt;br /&gt;

Style * BorderWidth 1, HandleWidth 1, DepressableBorder&lt;br /&gt;
Style * MWMFunctions, MWMDecor, MWMButtons, HintOverride&lt;br /&gt;
Style * DecorateTransient, NoPPosition, SmartPlacement&lt;br /&gt;
Style * Font &#34;xft:Sans:Bold:pixelsize=12:minispace=True:encoding=iso10646-1&#34;&lt;br /&gt;
Style * HilightFore black, HilightBack gainsboro&lt;br /&gt;
Style * IconBox 0 0 200 -260, IconFill t l, StickyIcon&lt;br /&gt;
Style * WindowShadeShrinks, WindowShadeSteps 100&lt;br /&gt;

#Style &#34;beep*&#34;    Icon bmp.xpm,      MiniIcon i_bmp.xpm&lt;br /&gt;
#Style &#34;Firefox*&#34; Icon firefox.xpm,  MiniIcon i_firefox.xpm&lt;br /&gt;
#Style &#34;Gaim&#34;     Icon gaim.xpm,     MiniIcon i_gaim.xpm&lt;br /&gt;
#Style &#34;gqview&#34;   Icon gqview.xpm,   MiniIcon i_gqview.xpm&lt;br /&gt;
#Style &#34;rox&#34;      Icon rox.xpm,      MiniIcon i_rox.xpm&lt;br /&gt;
#Style &#34;stardict&#34; Icon stardict.xpm  MiniIcon i_stardict.xpm&lt;br /&gt;
#Style &#34;urxvt&#34;    Icon rxvt.xpm,     MiniIcon i_term.xpm&lt;br /&gt;
#Style &#34;gvim&#34;     Icon vim.xpm,      MiniIcon i_vim.xpm&lt;br /&gt;
#Style &#34;Xpdf&#34;     Icon xpdf.xpm,     MiniIcon i_xpdf.xpm&lt;br /&gt;

#####&lt;br /&gt;
# Basic Functions&lt;br /&gt;
#&lt;br /&gt;
#fvwm 里面的函数格式类似下面的，先用 DestroyFunc 清除掉可能已经应用的效果，然后用 AddToFunc 来创建新的。&lt;br /&gt;
#在别的地方调用函数的时候可以使用 FuncName &#34;$0&#34; &#34;$1&#34; &#34;$2&#34; &#34;$3&#34; &#34;$4&#34; ，$0-4是传递给这个函数的参数，可以在函数里面引用。&lt;br /&gt;
#&lt;br /&gt;
# DestroyFunc FuncName&lt;br /&gt;
# AddToFunc   FuncName&lt;br /&gt;
# + I (立即执行的动作)&lt;br /&gt;
# + C (鼠标单击时执行的动作)&lt;br /&gt;
# + D (鼠标双击时执行的动作)&lt;br /&gt;
# + H (鼠标 hold 时执行的动作)&lt;br /&gt;
# + M (鼠标 motion 时执行的动作)&lt;br /&gt;
#&lt;br /&gt;
###########&lt;br /&gt;
DestroyFunc FvwmDeleteOrDestroy&lt;br /&gt;
AddToFunc   FvwmDeleteOrDestroy&lt;br /&gt;
+ H Nop&lt;br /&gt;
+ M Nop&lt;br /&gt;
+ C Delete&lt;br /&gt;
+ D Destroy&lt;br /&gt;

# 在单击的时候 Delete 窗口，在双击的时候 Destroy 窗口。Nop表示不动作。&lt;br /&gt;

DestroyFunc FvwmIconifyOrShade&lt;br /&gt;
AddToFunc   FvwmIconifyOrShade&lt;br /&gt;
+ C Iconify&lt;br /&gt;
+ D WindowShade&lt;br /&gt;

DestroyFunc FvwmMaximize&lt;br /&gt;
AddToFunc   FvwmMaximize&lt;br /&gt;
+ H Nop&lt;br /&gt;
+ M Nop&lt;br /&gt;
+ C Maximize $0 $1&lt;br /&gt;

# 你可以使用类似 FvwmMaximize 100 100 这种格式来调用这个函数，这样表示在单击的时候，将窗口在水平和垂直方向都100%占用屏幕。100 0 将在水平方向100%，垂直方向保持不变。&lt;br /&gt;

DestroyFunc FvwmMoveOrIconify&lt;br /&gt;
AddToFunc   FvwmMoveOrIconify&lt;br /&gt;
+ M Move&lt;br /&gt;
+ D Iconify&lt;br /&gt;

DestroyFunc FvwmWindowShade&lt;br /&gt;
AddToFunc   FvwmWindowShade&lt;br /&gt;
+ D WindowShade $0&lt;br /&gt;

######################## Initialization Functions ############################&lt;br /&gt;
#当fvwm启动或者退出的时候，会执行下面几个函数&lt;br /&gt;
#&lt;br /&gt;
#&lt;br /&gt;

DestroyFunc StartFunction&lt;br /&gt;
AddToFunc StartFunction&lt;br /&gt;
+ I Exec exec fvwm-root $[fvwm_wallpapers]/0.png&lt;br /&gt;
+ I Exec exec conky&lt;br /&gt;

DestroyFunc InitFunction&lt;br /&gt;
AddToFunc InitFunction&lt;br /&gt;
+ I Exec exec xscreensaver -no-splash&lt;br /&gt;

DestroyFunc ExitFunction&lt;br /&gt;
AddToFunc ExitFunction&lt;br /&gt;
+ I All (conky) Close&lt;br /&gt;
+ I All (xscreensaver) Close&lt;br /&gt;

###################### Key bindings ####################&lt;br /&gt;
# 按键绑定，也就是设置快捷键。&lt;br /&gt;
# Key X Context Modifier Action&lt;br /&gt;
# Mouse X Context Modifier Action&lt;br /&gt;
# 上面两行是绑定命令的格式，X 表示是哪个按钮， Context 是指当前鼠标在屏幕或者窗口的哪个位置，这个位置可以参考这个图 http://www.zensites.net/fvwm/guide/window_layout.png。图中 R - the root window, I - Icon, F - frame corners, S - frame sides, T - title bar, W - application window 和 0-9 - buttons 。A 表示所有的地方。&lt;br /&gt;
# Modifier 是指 (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing, 或者 1-5( X Modifiers mod1-mod5 参看 xmodmap的man)。&lt;br /&gt;
#&lt;br /&gt;

Key Tab A M WindowList Root c c CurrentDesk, NoGeometry, CurrentAtEnd, NoIcons&lt;br /&gt;
Key T    A 4    Exec exec urxvtc     # win+t -&amp;gt; run terminal&lt;br /&gt;

Key W   A  4    Menu RootMenu root o0 o100    # Win+S -&amp;gt; pop main manu from left-bottom&lt;br /&gt;
Key M    W  4    Menu Window-Ops Nop        # Win+M -&amp;gt; pop win menu&lt;br /&gt;
Key M   WI M    Iconify                 # Alt+M -&amp;gt; Iconfy&lt;br /&gt;
Key F4  A  M    Close                    # Alt+F4 -&amp;gt; close window&lt;br /&gt;
Key X   W  M    Maximize 100 0            # Alt+f3 -&amp;gt; max window in H&lt;br /&gt;
Key R    W  M    Resize                    # Alt+R  -&amp;gt; resize window&lt;br /&gt;
#Key 1     A  M    GotoPage 0 0&lt;br /&gt;
#Key 2     A  M    GotoPage 0 1&lt;br /&gt;
#Key 3     A  M    GotoPage 0 2&lt;br /&gt;
#Key 4     A  M    GotoPage 0 3&lt;br /&gt;

Mouse 1    R      A   Menu RootMenu Nop&lt;br /&gt;
Mouse 1 A     M     Menu RootMenu Nop&lt;br /&gt;

Mouse 3 WI    SC    CloseOrNot&lt;br /&gt;
Mouse 3 A    S    Move&lt;br /&gt;
Mouse 3 R    N    WindowList CurrentAtEnd, NoIcons Nop&lt;br /&gt;
Mouse 3 A    M    Menu Window-Ops Nop     # Alt+RightMouse -&amp;gt; win ops&lt;br /&gt;

DestroyFunc CloseOrNot&lt;br /&gt;
AddToFunc CloseOrNot&lt;br /&gt;
+ C Silent Close&lt;br /&gt;
+ M Nop&lt;br /&gt;

DestroyFunc RaiseFocus&lt;br /&gt;
AddToFunc RaiseFocus&lt;br /&gt;
+ I Raise&lt;br /&gt;
+ I Focus&lt;br /&gt;

#   for other parts of the window/borders/icons:&lt;br /&gt;
Mouse 1    F    A    Resize-or-Raise&lt;br /&gt;
Mouse 1    TS    A    Move-or-Raise&lt;br /&gt;
Mouse 1    I    A    Move-or-Iconify&lt;br /&gt;

######################## Menus ###################&lt;br /&gt;
#&lt;br /&gt;
# Menu Style&lt;br /&gt;

Colorset 0 fg black, bg grey, Translucent #c6cbd6 90&lt;br /&gt;
Colorset 1 fg black, bg #6b83b5, hi #dcdcdc, sh #dcdcdc&lt;br /&gt;
MenuStyle * Hilight3DThin, PopupOffset 0 100, PopupDelay 300&lt;br /&gt;
MenuStyle * Font &#34;8x16&#34;&lt;br /&gt;
MenuStyle * MenuColorset 0, HilightBack, ActiveColorset 1&lt;br /&gt;
MenuStyle * BorderWidth 1, TitleUnderlines1, SeparatorsLong, &lt;br /&gt;
TrianglesSolid, Animation&lt;br /&gt;
MenuStyle * ItemFormat &#34;%.2|%.5i%.5l%.5i%2.3&amp;gt;%2|&#34;&lt;br /&gt;
MenuStyle * VerticalItemSpacing 3 4&lt;br /&gt;

CopyMenuStyle * WindowList&lt;br /&gt;
MenuStyle WindowList VerticalItemSpacing 1 2&lt;br /&gt;
ChangeMenuStyle WindowList Window-Ops&lt;br /&gt;

#####&lt;br /&gt;
# FvwmRootMenu&lt;br /&gt;
###########&lt;br /&gt;
DestroyMenu RootMenu&lt;br /&gt;
AddToMenu   RootMenu &#34;Root Menu&#34; Title&lt;br /&gt;
+ &#34;Programs%menu/programs.png%&#34;  Popup FvwmProgramsMenu&lt;br /&gt;
+ &#34;Console%menu/terminal.png%&#34;  FvwmATerm&lt;br /&gt;
+ &#34;FVWM Console%menu/terminal.png%&#34;  Module FvwmConsole&lt;br /&gt;
+ &#34;&#34; Nop&lt;br /&gt;
+ &#34;Help%menu/help.png%&#34;  Popup FvwmManPagesMenu&lt;br /&gt;
+ &#34;Restart FVWM%menu/restart.png%&#34;  Restart&lt;br /&gt;
+ &#34;Quit FVWM%menu/quit.png%&#34;  Quit&lt;br /&gt;

# 这里定义了 menu 之后还需要绑定一个按键调用这个menu才行。&lt;br /&gt;
#&lt;br /&gt;
########################&lt;br /&gt;

################ Window Decor ##################&lt;br /&gt;
# 这部分设置窗口标题栏的样式，那些 ButtonStyle n 是设置窗口标题栏那些按钮的样子。&lt;br /&gt;
# FVWM预设了10个按钮的位置。标题栏按扭的排列是 1 3 5 7 9 0 8 6 4 2 ，可以参考上面的那个图。&lt;br /&gt;
# Vector 画如何画图 google 一下吧，我理解的也不是很深刻，或者说就没去理解，呵呵。&lt;br /&gt;
#&lt;br /&gt;

DestroyDecor MyDecor&lt;br /&gt;
AddToDecor   MyDecor&lt;br /&gt;
+ TitleStyle LeftJustified Height 18&lt;br /&gt;
+ ButtonStyle 1 ActiveUp Vector 4 30x30@3 60x60@3 60x30@4 30x60@3 -- Flat&lt;br /&gt;
+ ButtonStyle 1 ActiveDown Vector 4 30x30@3 60x60@3 60x30@4 30x60@3 -- Flat&lt;br /&gt;
+ ButtonStyle 1 Inactive Vector 4 30x30@3 60x60@3 60x30@4 30x60@3 -- Flat&lt;br /&gt;
+ ButtonStyle 3 ActiveUp Vector 5 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3 -- Flat&lt;br /&gt;
+ ButtonStyle 3 ActiveDown Vector 5 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3 -- Flat&lt;br /&gt;
+ ButtonStyle 3 Inactive Vector 5 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3 -- Flat&lt;br /&gt;
+ ButtonStyle 5 ActiveUp Vector 7 30x30@3 30x60@3 60x60@3 60x30@3 30x30@3 30x35@3 60x35@3 -- Flat&lt;br /&gt;
+ ButtonStyle 5 ActiveDown Vector 7 30x30@3 30x60@3 60x60@3 60x30@3 30x30@3 30x35@3 60x35@3 -- Flat&lt;br /&gt;
+ ButtonStyle 5 Inactive Vector 7 30x30@3 30x60@3 60x60@3 60x30@3 30x30@3 30x35@3 60x35@3 -- Flat&lt;br /&gt;
+ TitleStyle -- Flat&lt;br /&gt;
+ BorderStyle Simple -- NoInset Flat&lt;br /&gt;
+ ButtonStyle All -- UseTitleStyle&lt;br /&gt;

Style &#34;*&#34; UseDecor MyDecor&lt;br /&gt;

Mouse 1 1 A FvwmDeleteOrDestroy&lt;br /&gt;
Mouse 1 3 A FvwmIconifyOrShade&lt;br /&gt;
Mouse 1 5 A FvwmMaximize 100 100&lt;br /&gt;
Mouse 2 5 A FvwmMaximize 0 100&lt;br /&gt;
Mouse 3 5 A FvwmMaximize 100 0&lt;br /&gt;

#给各个按钮绑定鼠标动作，必须绑定了动作，才会在标题栏显示。&lt;br /&gt;
#&lt;br /&gt;
#############################################&lt;br /&gt;

######################## Sample Functions ##########################&lt;br /&gt;
DestroyFunc Move-or-Raise&lt;br /&gt;
AddToFunc Move-or-Raise        I Raise&lt;br /&gt;
+                &#34;M&#34; Move&lt;br /&gt;
+                  &#34;D&#34; WindowShade&lt;br /&gt;
DestroyFunc Move-or-Raise2&lt;br /&gt;
AddToFunc Move-or-Raise2    &#34;M&#34; Raise&lt;br /&gt;
+                &#34;M&#34; Move&lt;br /&gt;
+                  &#34;D&#34; Lower&lt;br /&gt;
DestroyFunc Maximize-Func&lt;br /&gt;
AddToFunc Maximize-Func        &#34;M&#34; Maximize     0 100&lt;br /&gt;
+                &#34;C&#34; Maximize     0 80&lt;br /&gt;
+                &#34;D&#34; Maximize     100 98&lt;br /&gt;
DestroyFunc Maximize-Func2&lt;br /&gt;
AddToFunc Maximize-Func2    &#34;M&#34; Maximize     100 0&lt;br /&gt;
+                &#34;C&#34; Maximize     80 0&lt;br /&gt;
+                &#34;D&#34; Maximize     100 98&lt;br /&gt;
DestroyFunc Move-or-Iconify&lt;br /&gt;
AddToFunc Move-or-Iconify    I Raise&lt;br /&gt;
+                &#34;M&#34; Move&lt;br /&gt;
+                &#34;D&#34; Iconify&lt;br /&gt;
DestroyFunc Resize-or-Raise&lt;br /&gt;
AddToFunc Resize-or-Raise    I Raise&lt;br /&gt;
+                &#34;M&#34; Resize&lt;br /&gt;
+                &#34;D&#34; Lower&lt;br /&gt;
DestroyFunc Resize-or-Raise2&lt;br /&gt;
AddToFunc Resize-or-Raise2    &#34;M&#34; Raise&lt;br /&gt;
+                &#34;M&#34; Resize&lt;br /&gt;
+                &#34;D&#34; Lower&lt;br /&gt;
DestroyFunc Iconify-and-Raise&lt;br /&gt;
AddToFunc Iconify-and-Raise     I Iconify&lt;br /&gt;
+                               I Raise&lt;br /&gt;

##########   END   ############&lt;br /&gt;

#&lt;br /&gt;
# 到这里就都结束了，这个是基于 http://www.zensites.net/fvwm/guide/index.html 网站的介绍写的。&lt;br /&gt;
# 这个rc文件比网站介绍的还要简单，所以还可以去看看那个网站的内容。&lt;br /&gt;
# 有错误的地方，给我发邮件指出来 wd&amp;lt;at&amp;gt;wdicc.com 。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>安装了一个 Gregarius</title>
      <link>https://wdicc.com/install-gregarius/</link>
      <pubDate>Tue, 23 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-gregarius/</guid>
      <description>
lilina 的速度有点慢，就尝试换一个看看，装好了 Gregarius ，使用了下感觉还行，打开页面的时候比较慢，不知道是卡在哪里。lilina 那个以后不更新了，就使用 &lt;a href=&#34;http://rss.wdicc.com&#34;&gt;Gregarius&lt;/a&gt; 了。&lt;br /&gt;

wordpress 也更新了，到 2.1 了。好像增加了一些新功能，等会升级看看。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>又到周末了</title>
      <link>https://wdicc.com/another-weekend/</link>
      <pubDate>Sat, 13 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/another-weekend/</guid>
      <description>
7点半爬起来，到公司楼下买了四根大油条一袋豆浆，刚刚才吃完，吃撑了。&lt;br /&gt;

今天来公司值班，一路都有座位，路上花的时间还比平时少了很多， 要是每天上班都这样多好啊。公交改革之后，本来以前每天早上座742有的座的，可是现在没了……，不过还好了，比那些需要座空调车的舒服多了，那些车更加拥挤。不过地铁倒是人少了，车上没那么挤了，可以方便我看小说，呵呵。哈利波特看了两部了，正在看第三部《阿兹卡班的囚犯》，目前电视播到了第四部《火焰杯》，我得加紧了，在第五部电影拍出来之前赶紧看完。小说写的逻辑性还是更加严密一点。第一部最后的那个boss就是被伏地魔附身了，要借魔法石来复活。第二部的那个密室里面操纵大蟒蛇的瑞德其实就是伏地魔的16岁之前保留在日记里面的记忆，伏地魔其实也是那个魔法学校毕业的，是邓不利多的学生。这些好像我看了电影之后都不知道，看了小说才知道来龙去脉。第二部也讲到了，伏地魔小的时候也是拿三好奖章的学生，很聪明，不知道是怎么进入魔道的，估计后面会说吧，呵呵。&lt;br /&gt;

明天有个同学要结婚，上周已经有一个了，所以这几次的礼钱让我很吐血，好几百块钱。而且，看样子这个周末也没什么休息了。希望下周能好好休息一下。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用perl操作mysql数据库</title>
      <link>https://wdicc.com/perl-and-mysql/</link>
      <pubDate>Thu, 04 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/perl-and-mysql/</guid>
      <description>
东抄西抄拼凑的代码。关于perl dbi的文档可以查看&lt;a href=&#34;http://search.cpan.org/~timb/DBI/DBI.pm&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use DBI;
use strict;
#use Data::Dumper;

my $mobile = @ARGV[0];
my $msg = @ARGV[1];
my $db = &#34;gnokii&#34;;
my $host = &#39;localhost&#39;;
my $user = &#39;gnokii&#39;;
my $password = &#39;pwd&#39;;
my $in = &#39;inbox&#39;;
my $out = &#39;outbox&#39;;

my $dbh = DBI-&gt;connect(&#34;DBI:mysql:database=$db;host=$host&#34;,$user, $password, {RaiseError =&gt; 1});

print &#34;$msgn&#34;;
my $sql = qq{ insert into $out (number,text) values (&#34;$mobile&#34;,&#34;$msg&#34;)};

#my $sql = qq{ SELECT * from $out };
my $sth = $dbh-&gt;prepare( $sql );
$sth-&gt;execute();
#my @result;

#while (@result = $sth-&gt;fetchrow_array){
#       print &#34;$result[0],$result[1],$result[4]n&#34;;
# }

$sth-&gt;finish();
$dbh-&gt;disconnect();&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>元旦之后就是春节</title>
      <link>https://wdicc.com/spring-festival/</link>
      <pubDate>Thu, 04 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/spring-festival/</guid>
      <description>
元旦三天转眼就过完了，好像除了多睡了会觉没啥特别的感觉。元旦之后大节日就是春节了，查了一下是2月18号，也很快了。&lt;br /&gt;

元旦几个同学一起来聚了聚，吃了一顿火锅。不过那火锅好像没有期待中那么好吃了， 老大总提起以前在宿舍吃火锅的时候。那会一个小铝锅，几个固体酒精，买点肉，买点菜，一个宿舍就围着这个锅吃上了。竞争很激烈，往往锅刚开，动作慢的就没得吃了。那会好像一人能吃一斤肉……挺恐怖的一个事情。现在再也吃不出来那会的味道了，呵呵。&lt;br /&gt;

过两天一个很要好的同学就结婚了。其实已经在家里办了婚礼了，这次是请北京的同学吃个饭，去了估计能见到不少以前的同学和老乡了。98年到北京上学，到明年08年，就是整十年了，日子过的真是很快。&lt;br /&gt;

准备好怎么过春节了么？呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>让wp的tag可以显示彩色效果</title>
      <link>https://wdicc.com/colorful-tag/</link>
      <pubDate>Thu, 04 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/colorful-tag/</guid>
      <description>
wp的tag列表可以让他用彩色形式显示，不过效果不喜欢。不满意的地方不好形容，用过就知道了。我看了源代码，他是让rgb三色一起递减或者递加的，我喜欢让所有颜色都出现。&lt;br /&gt;

最后的效果看我的blog就知道了。 实现的方法是修改 ultimate-tag-warrior-core.php 文件里面的 GetColorForWeight 函数，修改如下。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-php&#34;&gt;
global $maxtagcolour, $mintagcolour;
if ($weight) {
$weight = $weight/100;

$new_color_min = hexdec($mintagcolour);
$new_color_max = hexdec($maxtagcolour);
$new_color = dechex(intval(($new_color_max - $new_color_min) * $weight + $new_color_min));
return &#34;#$new_color&#34;;
/*                      $minr = hexdec(substr($mintagcolour, 1, 2));
$ming = hexdec(substr($mintagcolour, 3, 2));
$minb = hexdec(substr($mintagcolour, 5, 2));

$maxr = hexdec(substr($maxtagcolour, 1, 2));
$maxg = hexdec(substr($maxtagcolour, 3, 2));
$maxb = hexdec(substr($maxtagcolour, 5, 2));

$r = dechex(intval((($maxr - $minr) * $weight) + $minr));
$g = dechex(intval((($maxg - $ming) * $weight) + $ming));
$b = dechex(intval((($maxb - $minb) * $weight) + $minb));

if (strlen($r) == 1) $r = &#34;0&#34; . $r;
if (strlen($g) == 1) $g = &#34;0&#34; . $g;
if (strlen($b) == 1) $b = &#34;0&#34; . $b;

return &#34;#$r$g$b&#34;;
*/
}
}&lt;/pre&gt;
很简单的一个修改，再去后台设置一下tag的颜色渐变的起始值就可以了。
</description>
    </item>
    
    <item>
      <title>下雪了</title>
      <link>https://wdicc.com/snowing-again/</link>
      <pubDate>Sat, 30 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/snowing-again/</guid>
      <description>
早上6点多醒来，看到外面变白了，意识今年冬天的第一场雪来了。&lt;br /&gt;

&lt;img align=&#34;middle&#34; src=&#34;http://photo4.yupoo.com/20061230/114634_642705975.jpg&#34; /&gt;&lt;br /&gt;

&lt;img align=&#34;middle&#34; src=&#34;http://photo4.yupoo.com/20061230/114545_688044251.jpg&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>恢复grub</title>
      <link>https://wdicc.com/recover-grub/</link>
      <pubDate>Sat, 30 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/recover-grub/</guid>
      <description>
安装双系统的时候，如果后安装的 win ，那么就会把mbr的grub信息干掉。通常的建议是先安装win后安装linux。&lt;br /&gt;

今天遇到的情况是通过 vmware  安装 suse 到物理硬盘的时候，没有将 grub 安装到 mbr，这样需要重新安装一下grub。&lt;br /&gt;

我的方法是找了一个 knoppix ，然后启动到 level 2 ，启动之后执行下面的命令先。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
mount -o proc none /mnt/hdax/proc
mount --bind /dev/ /mnt/hdax/dev&lt;/pre&gt;
这样操作之后，就可以chroot到硬盘上面的系统了。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
然后自己修改 /boot/grub/menu.1st 文件。之后执行 grub 命令。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
grub&gt; setup (hd0)&lt;/pre&gt;
我这里操作的时候遇到一个问题，suse好像往grub的map.xxx.gz里面写了关于fd0的信息，这样运行grub命令的时候会尝试去读取软驱。我在bios里面禁用了软驱才ok。
</description>
    </item>
    
    <item>
      <title>圣诞节，平安夜</title>
      <link>https://wdicc.com/marry_christmas/</link>
      <pubDate>Mon, 25 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/marry_christmas/</guid>
      <description>
昨天晚上就是传说中的平安夜了。&lt;br /&gt;

早在上周一，公司的大厦就把楼外面的干树枝上面妆点上了彩灯，远远看效果还不错，早早就感受了圣诞的节日气氛。昨天我值班，到了晚上回家的时候，又感受了一把平安夜。&lt;br /&gt;

在复兴门的时候，平时应该空荡荡的地铁站，突然间人山人海的，都是小年轻，男男女女的，坐地铁到王府井。本来平时到四惠打黑车的时候，都是20到家。可是今天不一样了，好多人下车，搞的黑车司机也飘飘然起来，25都不走，一定要拼车。有个司机本来说好一个，然后加我和我老婆就差不多一车了，那司机还不走，还想拉一个。结果那个mm人家打别的车走了，我们也去找别的车了，这下子这哥们啥都没捞着。&lt;br /&gt;

最终还是说服一个的哥不打票，25送我们回去。 下车的时候司机说我们骗他，打票得三十五，呵呵。&lt;br /&gt;

不明白洋节怎么越来越流行了。情人节，愚人节，圣诞节，象圣诞节，都不信教，还非要去什么教堂玩，唉，真是的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>一个简单问题的三种实现方法</title>
      <link>https://wdicc.com/3-solve-way/</link>
      <pubDate>Thu, 21 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/3-solve-way/</guid>
      <description>
#arch-cn irc上面rock提出了一个需求，将一行太长的文字让他自动按照要求换行。&lt;br /&gt;

刚开始拿到这个问题的时候，感觉sed或者awk好像实现不了亚，没那么智能的，可是简单分析一下，“按照要求” 我们假定要求是 “每5个字符” 就换行一次。这样这个问题就明朗了。再换句话说，需求就是 “每5个字符插入一个换行符”。&lt;br /&gt;

第一种方法，用sed：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
第二种方法，用gawk（sssslang提供）：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;cat $content | gawk --re-interval &#39;{gsub(/(.){2}/,&#34;&amp;n&#34;&gt;
第三种方法，好像有点bt，用perl：
&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
@content = `tail /var/log/postfix.log`;
foreach (@content) {
for ($i=0; $i &lt; length($_); $i+=$cut) {
                print substr(&#34;$_&#34;,$i,$cut).&#34;\n&#34;;
        }
}&lt;/pre&gt;
反斜杠\都被过滤掉了，不知道咋回事，自己看着加上。。
</description>
    </item>
    
    <item>
      <title>我的第一个perl脚本</title>
      <link>https://wdicc.com/irssi_bot/</link>
      <pubDate>Sat, 16 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/irssi_bot/</guid>
      <description>
是给irssi写的，只不过通过他和irssi接口，所有功能都是bash脚本实现的，回头看看如何转到perl。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-perl&#34;&gt;
use vars qw($VERSION %IRSSI);

use Irssi;
$VERSION = &#39;1.00&#39;;
%IRSSI = (
authors     =&gt; &#39;wd&#39;,
contact     =&gt; &#39;wd@wdicc.com&#39;,
name        =&gt; &#39;My First Script&#39;,
description =&gt; &#39;This script allows &#39; .
&#39;you to query weather and other info &#39; .
&#39;using some command.&#39;,
license     =&gt; &#39;Public Domain&#39;,
);

sub send_msg {
my ($server, $who, @result) = @_;
my $count;
$count = 1;
while ($count &lt;= @result) {
$server-&gt;command(&#34;msg $who $result[$count-1]&#34;);
$count++;
}
}

sub pre_send {
my ($server, $who) =@_;
$server-&gt;command(&#34;msg $who 0I&#39;m working,Waiting me...&#34;);
}

sub end_send {
my ($server, $who) =@_;
$server-&gt;command(&#34;msg $who 0...The end.&#34;);
}

sub msg_public {
my ($server, $msg, $nick, $address, $target) = @_;
my @result;my $who;

$who = $target;
if ($target eq &#34;&#34;) { $who = $nick; }

if ($msg =~ /^!([Dd]ict|[Ww]eather|[Gg]oogle|[Hh]elp|nslookup|rss).*$/) {
&amp;pre_send($server,$who);
$msg =~ s/!//;
if ($msg =~ /^[Hh]elp.*$/) {
@result = (&#34;Usage:&#34;,
&#34;!dict ur_word&#34;,
&#34;   eg: !dict license&#34;,
&#34;!weather location [today|tomorrow]&#34;,
&#34;   eg: !weather beijing&#34;,
&#34;!google sth.&#34;,
&#34;   eg: !google archlinux&#34;,
&#34;!nslookup domin_name&#34;,
&#34;   eg: !nslookup archlinux.org&#34;,
&#34;!rss feed_url&#34;,
&#34;   eg: !rss http://blog.wdicc.com/wordpress/feed/&#34;);
} else {
@result = `/home/stef/get $msg`;
}
#$server-&gt;print(&#34;#arch-cn&#34;, &#34;$nick, $target, $who&#34;);
&amp;send_msg($server, $who, @result);
&amp;end_send($server, $who);
}
}

Irssi::signal_add_first(&#39;message public&#39;, &#39;msg_public&#39;);
Irssi::signal_add_first(&#39;message private&#39;, &#39;msg_public&#39;);&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>继续来解决gnokii中文问题</title>
      <link>https://wdicc.com/gnokii_howto_chinese_sms/</link>
      <pubDate>Mon, 11 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gnokii_howto_chinese_sms/</guid>
      <description>
这玩意原来和 &lt;a href=&#34;http://groups.google.com/group/mailing.unix.gnokii/browse_thread/thread/a006ae68df36d863/2931523e4eafaa06%232931523e4eafaa06&#34;&gt;locale&lt;/a&gt; 有关系。一个utf8编码的文件（里面包含中文），只要执行gnokii之前设置一下正确的locale手机收到就是正常的。比如我建立了下面的一个发送短信的命令。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
LC_ALL=zh_CN.utf8
/usr/local/gnokii/bin/gnokii $@&lt;/pre&gt;
这样cat utf8_text | gnokii_utf8 --sendsms ur_phone_num发送就没问题了。看样子和smsd和mysql的版本是没有关系的。之前尝试在debian上面升级mysql虽然失败了，不过看样子也没多大影响。 :)
</description>
    </item>
    
    <item>
      <title>iptables做端口映射的一点新的心得</title>
      <link>https://wdicc.com/iptables-and-portmap/</link>
      <pubDate>Thu, 07 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/iptables-and-portmap/</guid>
      <description>
iptables做端口映射很简单的一个事情，我之前也写了&lt;a href=&#34;http://blog.wdicc.com/wordpress/2006/05/09/153/&#34;&gt;如何来实现&lt;/a&gt;这个咚咚。今天要用到的时候，遇到了问题，写写怎么解决的。&lt;br /&gt;

写好SNAT和DNAT相关语句之后，在INPUT、FORWARD和OUTPUT里面针对各个端口都开放了权限，可是就是访问不了，看tcpdump可以看到，SNAT肯定是进行了，因为有对方回来的信息。后来仔细分析了一下整个转换的过程，发现了问题所在。&lt;br /&gt;

这里总共涉及到三台电脑，假设A是我们的server，B是中转server，C是希望通过B来访问A的客户端，所以一次完整的请求如下图。&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
所以呢，以25端口为例，需要开放的端口依次是：
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
B : INPUT (目标端口25)
B : FORWARD (目标端口25)
B : OUTPUT (目标端口25)
A : INPUT (目标端口25)
---&gt;上面是请求，下面开始回应请求
A : OUTPUT (源端口25)
B : INPUT (源端口25)
B : FORWARD (源端口25)
B : OUTPUT (源端口25)
C : INPUT (源端口25)&lt;/pre&gt;
如此，一次请求发送过去的时候，所有数据包的目的端口都是25（假设B开放的转发端口也是25），源端口是1024-65535之间的某个数值，反回来所有数据包的源端口都是25，目的端口对应前面的那个端口。

我的问题就是光开放了B的FORWARD的目的端口25，源端口25没有打开，这样数据不能正确返回给C，打开就好了。
</description>
    </item>
    
    <item>
      <title>debian下面解决gnokii读取短信的bug</title>
      <link>https://wdicc.com/gnokii_cant_get_sms/</link>
      <pubDate>Wed, 06 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/gnokii_cant_get_sms/</guid>
      <description>
上一篇文章提到过gnokii读取AT模式下设备的短信的时候会有&lt;a href=&#34;http://blog.wdicc.com/wordpress/2006/12/05/277/&#34;&gt;问题&lt;/a&gt;，从xh那里看到了解决方法，自己也goolgle了&lt;a href=&#34;http://thread.gmane.org/gmane.linux.drivers.gnokii/7918/focus=7922&#34;&gt;一下&lt;/a&gt;，总结一下debian（sarge）下面解决这个问题的方法。&lt;br /&gt;

故障现象如下：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
[...]
Message sent: 0x12 / 0x0009
41 54 2b 43 50 4d 53 3f 0d                      | AT+CPMS?
write: [AT+CPMS?]
read : [AT+CPMS?+CPMS:
&#34;SM&#34;,2,30,&#34;SM&#34;,2,30OK]
Message received: 0x12 / 0x002d
02 41 54 2b 43 50 4d 53 3f 0d 0d 0a 2b 43 50 4d |  AT+CPMS?   +CPM
53 3a 20 22 53 4d 22 2c 32 2c 33 30 2c 22 53 4d | S: &#34;SM&#34;,2,30,&#34;SM
22 2c 32 2c 33 30 0d 0a 0d 0a 4f 4b 0d          | &#34;,2,30    OK
Received message type 12
GetSMS SM 1 failed! (Command failed.)
Serial device: closing device&lt;/pre&gt;
还有一个smsd的问题：
&lt;pre class=&#34;prettyprint lang-text&#34;&gt;
解决这个问题需要给gnokii打一个补丁，debian下面就需要自己来制作一个包，参考 &lt;a href=&#34;http://debian.linuxsir.org/doc/inthedebianway/debian_build_package.html&#34;&gt;构建 Debian 软件包&lt;/a&gt; 这篇文章，操作如下。

首先下载包的源代码：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
此时他会在当前目录下面下载并解压gnokii的源代码包，并且打上debian需要的patch。此时需要将下面的patch给gnokii打上，修改都是针对common/phones/atgen.c的。
&lt;pre class=&#34;prettyprint lang-diff&#34;&gt;
+++ atgen.c     2006-12-06 12:40:59.201314062 +0800
@@ -537,22 +537,15 @@
{
at_driver_instance *drvinst = AT_DRVINST(state);
gn_data data;
-       gn_sms_status sms_status;
char req[32];
gn_error ret = GN_ERR_NONE;

if (mt != drvinst-&gt;smsmemorytype) {
gn_data_clear(&amp;data);
-               data.sms_status = &amp;sms_status;
-               ret = AT_GetSMSStatus(&amp;data, state);
+               sprintf(req, &#34;AT+CPMS=\&#34;%s\&#34;r&#34;, memorynames[mt]);
+               ret = sm_message_send(13, GN_OP_Init, req, state);
if (ret != GN_ERR_NONE)
return ret;
-
-               sprintf(req, &#34;AT+CPMS=\&#34;%s\&#34;,\&#34;%s\&#34;,\&#34;%s\&#34;r&#34;, memorynames[mt], memorynames[mt],
-                       memorynames[data.sms_status-&gt;new_message_store]);
-               ret = sm_message_send(23, GN_OP_Init, req, state);
-               if (ret != GN_ERR_NONE)
-                       return GN_ERR_NOTREADY;
ret = sm_block_no_retry(GN_OP_Init, &amp;data, state);
if (ret == GN_ERR_NONE)
drvinst-&gt;smsmemorytype = mt;
@@ -1355,7 +1348,10 @@

if (sscanf(buf.line2, &#34;+CPMS: \&#34;%*c%*c\&#34;,%d,%*d,\&#34;%*c%*c\&#34;,%*d,%*d,\&#34;%c%c\&#34;,%*d,%*d&#34;,
&amp;data-&gt;sms_status-&gt;number, &amp;store[0], &amp;store[1]) != 3)
-               return GN_ERR_FAILED;
+
+               if (sscanf(buf.line2, &#34;+CPMS: \&#34;%c%c\&#34;,%d,%*d,\&#34;%*c%*c\&#34;,%*d,%*d&#34;,
+                                       &amp;store[0], &amp;store[1], &amp;data-&gt;sms_status-&gt;number) != 3)
+                       return GN_ERR_FAILED;

data-&gt;sms_status-&gt;unread = 0;
data-&gt;sms_status-&gt;changed = 0;&lt;/pre&gt;
把上面的内容保存一下，比如取名为cant_get_sms.patch，或者来&lt;a href=&#34;http://blog.wdicc.com/wordpress/download/cant_get_sms.patch&#34;&gt;这里&lt;/a&gt;下载，然后执行下面的命令：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
apt-get -b source gnokii&lt;/pre&gt;
此时会看到debian正在编译gnokii（编译之前可能需要下载编译需要的dev库，按照提示来就可以了），编译完成之后会将打包成6个deb文件，用dpkg -i命令重装一下你需要的就可以了。 此时再试试看gnokii --getsms SM 1命令，是不是没问题了？
</description>
    </item>
    
    <item>
      <title>lilina里面不能正确生成前一天的cache的问题</title>
      <link>https://wdicc.com/lilina-cache/</link>
      <pubDate>Wed, 06 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lilina-cache/</guid>
      <description>
lilina可以生成好几天的cache，可以看到上面有每天的链接可以访问，可是这两天发现，在today里面明明看到前一天晚上23:40多有rss，结果点击到前一天生成的链接却发现，没有？见鬼了。&lt;br /&gt;

仔细研究下，似乎是23:00之后的rss都不会做cache，咋回事哩，翻了一下源代码，发现问题所在了。&lt;br /&gt;

index.php里面有下面一句：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-php&#34;&gt;$saven_file = realpath(&#34;.&#34;).&#34;/&#34;.date(&#39;Ymd&#39;).&#34;.html&#34;&gt;
这是设置cache文件的名称和位置的语句，可以看到文件名里面用的是当前的日期。单独这一点不会有问题，问题在于我的cron里面是每隔一个小时的0分钟执行一次，也就是1:00，2:00……23:00，0:00，这样，23:00之后0:00之前的rss就被吞掉了。解决方法就是将cron修改为类似下面的，让他每隔整点的58分执行更新。
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
</description>
    </item>
    
    <item>
      <title>看到一篇有意思的文章-[上帝与Google，玉帝与Baidu]</title>
      <link>https://wdicc.com/a-joke-10/</link>
      <pubDate>Tue, 05 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-10/</guid>
      <description>&lt;br /&gt;

在第一天上帝搞互联网的时候，远在天界东边的玉皇大帝就从千里眼和顺风耳那里得到了线报。玉帝有点迷惑，“这哥们搞什么东东呢？”问了所有神仙，大 家都不知道，玉帝觉得这样不行，我们得与时俱进，向西方学习。玉帝说：“要有中国互联网”。于是中国也有了互联网。&lt;br /&gt;

第二天，玉帝上互联网，全是英文网站，除了图片以外，什么都看不懂，玉帝很头大。玉帝说：“要有中文网站”。于是中文网站雨后春笋般的出现了。&lt;br /&gt;

第三天，玉帝不爽了，为什么？联系不方便啊，还是要叫千里眼和顺风耳，丫的，太麻烦了，可是ICQ、MSN都是英文的啊？玉帝说：“要有中文的及时通讯。”于是有了QQ。玉帝玩上了QQ，跟王母娘娘聊的很开心。&lt;br /&gt;

第四天，中文网站也太多了，看的玉帝眼花缭乱，心情也比较烦乱，就问太白金星怎么办。太白金星这个老家伙说：“好，一得给他们分类，二得推荐些好网 站，三得经常有新东西……”玉帝觉得他很罗嗦。玉帝说，你说什么“好一二三”？然后，hao123就解决了玉帝和中国大众上网导航的问题。&lt;br /&gt;

第五天，面对几亿的中文网页，虽然有hao123，但要找某些具体的信息实在太难了。玉帝发脾气了：“要找我去年在天庭的新闻发言稿怎么那么难呢？”太白 金星凑过来说，上帝那有个Google，挺不错的，推荐你用用。于是玉帝上Google，一眼看过去，全是英文的，玉帝直接爆炸了，回头把太白金星骂了个 狗血喷头：“你这什么馊主意？让我用他们搞的东西？没听过国货当自强吗？这个玩意我们得自己搞！”玉帝转过身问文曲星该怎么办，文曲星慢条斯里的吟开场 白：“众里寻她千百度，那人却在……”，玉帝说：“千你个头啊，百度！”这一瞬间，百度中文搜索引擎诞生了！&lt;br /&gt;

玉帝很 满意百度。在百度，不但可以便捷的找到想要的信息，还可以在百度mp3搜索上找些小曲听听，更可以躲开王母偷偷的在百度图片搜索弄几张嫦娥的写真照片看 看，更绝的，是玉帝在百度贴吧开了个“玉皇大帝”吧来了解天下百姓对自己的歌功颂德——而这些是Google所没有的。时间长了，甚至在众神仙为某个事上 吵个不停的时候，玉帝就会说：“有问题，百度一下！”然后就没问题了。&lt;br /&gt;

然而众神仙不明白，为什么玉帝不喜欢同样有中文版的Google，仅仅因为百度更符合中国大众使用习惯吗？后来，玉帝终于自揭谜底：这些洋网站总说用户是上帝，用户是上帝，用户真的是上帝？在中国，用户是玉帝！”大家恍然大悟。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给nagios添加故障时短信通知</title>
      <link>https://wdicc.com/nagios-sms-alert/</link>
      <pubDate>Tue, 05 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nagios-sms-alert/</guid>
      <description>
nagios可以配置为在故障的时候发送Email，执行什么程序等。光执行程序这项可以实现的功能就太多了，没有做不到只有想不到。说说看我是怎么给nagios添加短信通知的。&lt;br /&gt;

首先需要一个能发送短信的东东，有些专门用来发送短信的猫，插上一张sim卡就可以用了，当然也可以找一个手机来做这个事情。然后用gnokii来通过sim卡发送短信，他主要是linux下面用来管理nokia手机的一个软件，当然所有支持AT指令的都可以使用。&lt;br /&gt;

debian上面安装好gnokii之后，/etc/gnokiirc是他的配置文件，主要修改两个地方：&lt;br /&gt;
model = AT&lt;br /&gt;
serial_baudrate = 9600&lt;br /&gt;
然后还需要将nagios用户（也就是启动nagios的用户）或者其他需要操作猫的用户加入dialout组，这样才有权限操作/dev/ttyS0这个设备，也就是第一个串口设备。&lt;br /&gt;
我的短信猫是通过串口连接到电脑的，如果你的是usb的或者其他类型的方式，比如蓝牙红外什么的，需要加载特定的模块，具体方法参考gnokii的网站。连接短信猫之后，可以用minicom测试一下是不是连接正确，他是类似于win下面的超级终端的一个程序。要注意连接的比特率，如果设备不支持可能不会有效果。设置好之后输入个AT，看是不是返回OK，如果返回那就连接正确了。&lt;br /&gt;

然后可以试试看执行gnokii --identify，我这里输出下面的内容：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
GNOKII Version 0.6.5
IMEI         : 500182395xxxxxx
Manufacturer : WAVECOM MODEM
Model        : MULTIBAND  900E  1800
Revision     : 533b09gg.2C2 1742344 061002 11:23&lt;/pre&gt;
这样表示我的猫被正确识别了。如果有问题，可以修改gnokiirc文件，打开debug模式，看看问题所在。发个短信试试看：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;#echo -e &#34;testntest 2&#34;&gt;
GNOKII Version 0.6.5
Send succeeded!&lt;/pre&gt;
收到短信了么？呵呵。之后修改nagios的misccommands.cfg文件，添加你的cmd：
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
command_name    host-notify-by-sms
command_line    /bin/echo -e &#34;$HOSTADDRESS$($NOTIFICATIONNUMBER$)n$HOSTSTATE$n$OUTPUT$n$SHORTDATETIME$&#34; | /usr/bin/gnokii --sendsms $CONTACTPAGER$ 2&gt;&gt;/dev/null
}

define command{
command_name    notify-by-sms
command_line    /bin/echo -e &#34;$HOSTADDRESS$($NOTIFICATIONNUMBER$)n$SERVICEDESC$-$SERVICESTATE$n$OUTPUT$n$SHORTDATETIME$&#34; | /usr/bin/gnokii --sendsms $CONTACTPAGER$ 2&gt;&gt;/dev/null
}&lt;/pre&gt;
然后修改contacts.cfg，设置service_notification_commands、host_notification_commands，并且设置pager为电话号码。cmd里面可以通知的内容参考nagios doc里面的Using Macros In Commands。

可以试试看让一台服务器down了测试一下了。

以前用猫附带的一个软件（或许也可能是我们写的，因为听说附带软件的话比较贵）发送短信，总是会重复发送，有时一条短信会发送好多次。那个软件的原理是这样的，我将需要发送的短信按照一定的格式写入数据库，然后这个软件从数据库读取没发送的进行发送，然后将其修改为已发送。我猜可能重复发送的原因是“修改为已发送 ”这个过程中出问题了，修改了很多次才成功。

现在gnokii还有个问题可能就是读取短信的时候会提示失败，据说是个bug，xh这里有&lt;a title=&#34;AT model使用gnokii来收取短消息&#34; href=&#34;http://www.grisword.com/tt/Grisword/126&#34;&gt;解决办法&lt;/a&gt;，有兴趣可以看看，我这里暂时好像还不需要读取短信。
</description>
    </item>
    
    <item>
      <title>咱也玩玩lilina</title>
      <link>https://wdicc.com/my-lilina/</link>
      <pubDate>Fri, 01 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/my-lilina/</guid>
      <description>
好像不知道从什么时候开始流行起了lilina，自己捣鼓捣鼓也装了一个，&lt;a href=&#34;http://blog.wdicc.com/lilina/index.html&#34;&gt;我的lilina&lt;/a&gt;。其实google reader挺好的，不过就是google有时候会被GFW干掉，这样reader也不能访问了。最近这种情况好像还出现很频繁，真是头痛，其实google reader挺好用的，不过现在就试试看lilina了。&lt;br /&gt;

今天也看到一些关于干掉GFW的文章&lt;a href=&#34;http://yesure.blogspot.com/2006/11/ssh-tunnelfuck-gfw.html&#34;&gt;[1]&lt;/a&gt;&lt;a href=&#34;http://blog.cathayan.org/item/1508&#34;&gt;[2]&lt;/a&gt;，但是需要国外的ssh服务器，偶没有。。不过这个ssh tunnel倒是个不错的东西，比装代理服务器简单，嗯。&lt;br /&gt;

用了lilina之后，发现sina的rss好像总是在最前面，而实际上他们更新却是以前的事情了，肯定是他们的rss输出有问题，感觉这样很无耻。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给wp的一个关键字插件做了一下修改</title>
      <link>https://wdicc.com/wp-keyword-plugin/</link>
      <pubDate>Thu, 30 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/wp-keyword-plugin/</guid>
      <description>
参考&lt;a title=&#34;访问插件主页&#34; href=&#34;http://adsense-wordpress-plugin.ayanev.com/&#34;&gt;AdSense Earnings Reports&lt;/a&gt;插件将wp的一个关键字插件&lt;a title=&#34;访问插件主页&#34; href=&#34;http://blog.tassoman.com/wordpress-plugins/tradedoubler-filter&#34;&gt;Trade Doubler Filter&lt;/a&gt;修改了一下，之前只能通过修改源代码来添加关键字，现在可以在后台添加了。&lt;br /&gt;

附件是修改之后的文件。&lt;br /&gt;

http://blog.wdicc.com/wordpress/wp-content/uploads/2006/11/keyword.jpg&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>午饭和晚饭</title>
      <link>https://wdicc.com/lunch-and-supper/</link>
      <pubDate>Wed, 29 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lunch-and-supper/</guid>
      <description>
在公司吃了半年多公司饭之后，也装模作样开始带饭了，呵呵。&lt;br /&gt;

刚开始来公司的时候，是和其他几个同事一起去附近的饭馆拼桌，要几个炒菜一起吃，然后AA。后来一个比较老的同事离职之后，我和另外一个和我差不多新的同事就没了主意，后来就开始吃大厦的食堂。后来大厦里面的有个广东餐馆竞争，也开始提供自助餐。这样，吃到现在，这些地方都吃腻了。所以开始带饭。&lt;br /&gt;

中午吃完满满一盒饭菜，就发现撑的荒，呵呵。 等到下午3，4点的时候，好像还觉得有点饱，这样晚上就完全不用吃饭了。就像今天，估计晚上又省了。。。这样也不错，还有利于减肥。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>周末在家吃火锅</title>
      <link>https://wdicc.com/chaffy-dish-weekend/</link>
      <pubDate>Mon, 27 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/chaffy-dish-weekend/</guid>
      <description>
上个周末过得比较腐败，没有了其它安排，周六下午睡到了9点，起来玩了会游戏，又继续睡，睡的头都晕了……。周日cc的同学过来，考虑到最简单的吃法，就是吃火锅了。&lt;br /&gt;

去超市没有买到小肥羊的锅底，用了一个什么重庆的，挺辣的。想起来上次去双安吃的那个重庆火锅了，吃了半天除了辣就没有别的味道了，真是很没意思。不过我们昨天吃的除了辣还有一个味道，就是咸。刚开始吃还不觉得，后来 cc 说了咸之后，大家才醒悟，开始一直注意辣了，没想到这玩意确实挺咸的。后来想想，可能是因为我们锅比较小的缘故吧。&lt;br /&gt;

四个人吃，锅底小料加菜总共花了得有100左右，想想看吧， cc 同学走了之后，就发现剩下的东西还够四个人吃两顿的……，真晕。这几天看样子还得吃一个火锅了。&lt;br /&gt;

不过这次火锅比较好的结果就是， cc 对这个的味道感觉还行，当然她一如既往吃的是鸡肉，这样的话，就不用老跑去呷哺吃了，在家解决。 :)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给blog的后台发文章添了一点功能</title>
      <link>https://wdicc.com/add-some-feature-to-blog/</link>
      <pubDate>Wed, 22 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/add-some-feature-to-blog/</guid>
      <description>吸引我的功能是那个insert table。按照其它插件的安装方法，激活之后，再看发表文章的编辑器，发现确实多了很多按钮。不过多了太多了，工具栏一行都显示不下啦，怎么分行呢？wp还是很牛的，好像就已经预料到这种问题了，直接修改&lt;font color=&#34;#ff00ff&#34;&gt;advanced-wysiwyg.php&lt;/font&gt;就可以了。例如我的：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-php&#34;&gt;
return array(
&#34;formatselect&#34;, &#34;bold&#34;, &#34;italic&#34;, &#34;underline&#34;, &#34;strikethrough&#34;, &#34;separator&#34;,
&#34;bullist&#34;, &#34;numlist&#34;, &#34;indent&#34;, &#34;outdent&#34;, &#34;separator&#34;,
&#34;justifyleft&#34;, &#34;justifycenter&#34;, &#34;justifyright&#34;, &#34;justifyfull&#34;,&#34;separator&#34;,
&#34;link&#34;, &#34;unlink&#34;, &#34;anchor&#34;, &#34;image&#34;, &#34;hr&#34;);
}function extended_editor_mce_buttons_2($buttons) {
// Add buttons on the second toolbar line
//    return $buttons;
return array(
&#34;cut&#34;, &#34;copy&#34;, &#34;paste&#34;, &#34;undo&#34;, &#34;redo&#34;, &#34;separator&#34;,
&#34;sub&#34;, &#34;sup&#34;, &#34;forecolor&#34;, &#34;backcolor&#34;, &#34;charmap&#34;, &#34;separator&#34;,
&#34;code&#34;, &#34;fullscreen&#34;, &#34;wordpress&#34;, &#34;wphelp&#34;,&#34;separator&#34;,&#34;tablecontrols&#34;);
}&lt;/pre&gt;
这样就分两行了，当然还可以编辑&lt;font color=&#34;#ff00ff&#34;&gt;extended_editor_mce_buttons_3&lt;/font&gt;函数让他出来第三行。

好了，看着是不是挺爽的？可是发现我要的insert table功能怎么没出来？再仔细看作者的网页，有个提示”需要去tinymce的网站上面下载关于table等的plugin，默认的wp 2.0版本没有包括这些“。这样去下载了，将其中的plugin里面的东西放出来，找到table和fullscreen文件夹，放到服务器的tinymce的plugin下面，再访问一下发帖页面，是不是发现工具栏都变巨丑的按钮了？呵呵。

用Firefox的话，打开错误控制台，可以看到刚加的tinymce的plugin出错了。提示是：

tinyMCE.addPlugin is not a function

找到plugin里面的js文件看看，和其它比较一下，确实是多了这么一个函数调用。删掉之后工具栏能出来了，可是还是没有这个按钮，是啥问题呢？上作者&lt;a href=&#34;http://blog.labnotes.org&#34;&gt;blog&lt;/a&gt;看了一下，原来是tinymce的版本太高了。
&lt;blockquote&gt;eduo Says: March 19th, 2006 at 5:08 pm

To all having issues with the rich editor disappearing:
Yes, the version of TinyMCE changed. I’ve been checking the versions and it’s possible to download the latest one that works with this plug-in (which in reality just extends the stock WP-included TinyMCE, itself a very good thing) from the “older versions” page of the TinyMCE SF site included as part of the 2.02 files:
&lt;a href=&#34;http://sourceforge.net/project/showfiles.php?group_id=103281&amp;package_id=11143&#34;&gt;http://sourceforge.net/project/showfiles.php?group_id=103281&amp;package_id=11143&lt;/a&gt;0

The page for direct download is: &lt;a href=&#34;http://prdownloads.sourceforge.net/tinymce/tinymce_1_45.tgz?download&#34;&gt;http://prdownloads.sourceforge.net/tinymce/tinymce_1_45.tgz?download&lt;/a&gt;

Using the “table” and “fullscreen” from this file is all that’s needed. Other plug-ins from this same package should work as well.&lt;/blockquote&gt;
除了使用上面的版本，还可以使用一个&lt;a href=&#34;http://prdownloads.sourceforge.net/tinymce/tinymce_2_0RC4.tgz&#34;&gt;2.0 RC4&lt;/a&gt;这个版本。
&lt;blockquote&gt;PS: The table controls and full screen editing rely on additional TinyMCE plugins. So if you want these two features as well, you’ll have to download TinyMCE plugins and install those separately. For WordPress 2.0.4 users, try the TinyMCE 2.0 RC4 plugins. Or check the comments to find out what works for other people.&lt;/blockquote&gt;
这个版本的table功能更加高级一点，推荐使用这个。
</description>
    </item>
    
    <item>
      <title>Filesystems (ext3, reiser, xfs, jfs) comparison on Debian Etch（翻译）</title>
      <link>https://wdicc.com/filesystems-comparison/</link>
      <pubDate>Mon, 20 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/filesystems-comparison/</guid>
      <description>&lt;strong&gt;测试设置&lt;/strong&gt;&lt;br /&gt;

* 处理器 : Intel Celeron 533&lt;br /&gt;
* 内存 : 512MB RAM PC100&lt;br /&gt;
* 主板 : ASUS P2B&lt;br /&gt;
* 硬盘 : WD Caviar SE 160GB (EIDE 100, 7200 RPM, 8MB Cache)&lt;br /&gt;
* 控制器 : ATA/133 PCI (Silicon Image)&lt;br /&gt;

* 操作系统 Debian Etch (kernel 2.6.15), distribution upgraded on April 18, 2006&lt;br /&gt;
* 其它不需要的服务都关掉了 (cron,ssh,saMBa,etc.)&lt;br /&gt;

* 文件系统 Ext3 (e2fsprogs 1.38)&lt;br /&gt;
* ReiserFS (reiserfsprogs 1.3.6.19)&lt;br /&gt;
* JFS (jfsutils 1.1.8)&lt;br /&gt;
* XFS (xfsprogs 2.7.14)&lt;br /&gt;

&lt;strong&gt;对于选择的测试的描述&lt;/strong&gt;&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;操作大文件（ISO文件，700M）&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
* 将ISO文件从第二块硬盘复制到测试硬盘上面。&lt;br /&gt;
* 在测试硬盘上面重新复制ISO文件。&lt;br /&gt;
* 删除两个复制的ISO。&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;操作一个目录树（7500个文件，900个目录，1.9G）&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
* 将目录树从第二块硬盘复制到测试硬盘上面。&lt;br /&gt;
* 在测试硬盘上面重新复制目录树。&lt;br /&gt;
* 删除两个复制的目录树。&lt;br /&gt;

&lt;strong&gt;&lt;em&gt; 在目录树中操作&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
* 用递归方式列出目录树中的所有内容，并且保存到测试硬盘上面。&lt;br /&gt;
* 在目录树中查找匹配指定通配符的文件。&lt;br /&gt;

&lt;em&gt;&lt;strong&gt;关于文件系统的操作&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;
* 创建文件系统(mkfs)(所有文件系统都使用默认设置创建)。&lt;br /&gt;
* 挂载文件系统。&lt;br /&gt;
* 卸载文件系统。&lt;br /&gt;

11项测试（从创建文件系统到卸载文件系统）的顺序是按照一个Bash脚本来运行的，总共运行三次（会报告平均时间）。每个序列大概需要7分钟。完成测试的时间，cpu占用百分比等都是通过GNU time utility（1.7版本）来计算的。&lt;br /&gt;

&lt;strong&gt;测试结果&lt;/strong&gt;&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;分区容量&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
初始的（在创建文件系统之后）和剩余的（在删除所有文件之后）分区容量是使用可使用的blocks除以整个分区的blocks计算出来的。EXT3的初始分区容量最差，其它的都几乎可以使用最大的分区容量。有趣的是，Ext3和ReiserFS剩余分区容量和初始分区容量是一样的，JFS、XFS损失了0.02%的分区容量，(建议这些文件系统可以动态增长，但是不要在删除文件之后完全恢复他们的初始状态（和大小）。)&lt;br /&gt;
&lt;table width=&#34;234&#34; border=&#34;0&#34; style=&#34;height: 118px&#34;&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;初始分区容量&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;损失&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;Ext3&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;92.77%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;ReiserFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;99.83%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;JFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;99.82%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.02%&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;XFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;&lt;font color=&#34;#990000&#34;&gt;99.95%&lt;/font&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.02%&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/table&gt;&lt;br /&gt;
结论：想要使用分区的最大容量，请选择ReiserFS、JFS、XFS。&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;文件系统的创建，挂载和卸载&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;

为20G的分区创建文件系统。&lt;br /&gt;
&lt;table width=&#34;553&#34; border=&#34;0&#34; style=&#34;height: 122px&#34;&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;创建时间&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;挂载时间&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;卸载时间&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;创建时CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;挂载时CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;卸载时CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;Ext3&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;&lt;font color=&#34;#990000&#34;&gt;14.7s&lt;/font&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;6-9%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;37%&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;ReiserFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;2.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;&lt;font color=&#34;#990000&#34;&gt;2.3s&lt;/font&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.4s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;59%(Lo)&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;14%&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;JFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;1.3s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;74%(Hi)&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;27%&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;XFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.7s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.5s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;&lt;font color=&#34;#990000&#34;&gt;0.5s&lt;/font&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;45%&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/table&gt;&lt;br /&gt;
结论：为了快速创建、挂载和卸载文件系统，请使用JFS或者XFS。&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;操作大文件（ISO文件，700M）&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;table width=&#34;599&#34; border=&#34;0&#34; style=&#34;height: 118px&#34;&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第一次复制&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第二次复制&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;删除文件&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第一次复制CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第二次复制CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;删除时CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;minor page faults&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;Ext3&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;38.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;37.3s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;2.5s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;46-51%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;38-50%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;10%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;ReiserFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;41.8s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;43.9s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;1.5s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;49%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;661&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;JFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;35.1s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;39.4s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.02s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;10%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;XFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;34.8s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;33.1s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.02s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;10%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;600&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/table&gt;&lt;br /&gt;
结论：为了快速操作大文件，请使用JFS或者XFS。如果你需要最小的cpu占用，请使用JFS。&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;操作目录树（7500个文件，900个目录，1.9G）&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;table width=&#34;607&#34; border=&#34;0&#34; style=&#34;height: 124px&#34;&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第一次复制&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第二次复制&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;删除&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第一次复制CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;第二次复制CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;删除时CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;minor page faults&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;Ext3&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;158.3s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;120s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;22s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;27-36%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;15%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;14000-1490&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;ReiserFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;172.1s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;136.9s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;8.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;45%(Hi)&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;86%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;5843&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;JFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;180.1s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;151s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;12.5s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;29%(Lo)&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;15%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;14000-1490&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;XFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;166.1s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;135.2s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;10.5s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;|&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;65%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;14000-1490&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/table&gt;&lt;br /&gt;
结论：为了快速操作大文件树，请选择Ext3或者XFS。其它作者的测试中显示，ReiserFS对于大量的小文件有优势。然而结果显示，操作包含上千的大小变化的文件（10K到5M）时建议使用Ext3或者XFS，他们或许更适合实际使用。JFS有最下的CPU占用，但是需要指出的是在操作大量文件的时候他也有值得注意的较高的延迟。&lt;br /&gt;

&lt;strong&gt;&lt;em&gt;在之前的目录树中列表目录和文件查找&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;table width=&#34;564&#34; border=&#34;0&#34; style=&#34;height: 107px&#34;&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;列表目录&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;文件查找&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;列表目录CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;文件查找CPU占用&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;minor page faults&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;Ext3&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;2.5s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;4.6s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;35%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;6%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;704-712&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;ReiserFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;1.4s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;0.8s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;71%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;36%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;1991&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;JFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;3.1s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;5.0s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;35%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;6%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;704-712&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;tr&gt;&lt;br /&gt;
&lt;td&gt;XFS&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;1.8s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;2.8s&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;70%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;10%&lt;/td&gt;&lt;br /&gt;
&lt;td&gt;704-712&lt;/td&gt;&lt;br /&gt;
&lt;/tr&gt;&lt;br /&gt;
&lt;/table&gt;&lt;br /&gt;
结论：根据这些测试，ReiserFS和XFS操作速度快，但是有比较多的CPU占用，Ext3和JFS操作速度慢，但是有较少的CPU占用。XFS似乎是最好的选择，他有相对比较快的查找速度，中等的cpu占用，以及可以接受的page faults比率。&lt;br /&gt;

&lt;strong&gt;综合结论&lt;/strong&gt;&lt;br /&gt;

这些结果重现了Piszcz(2006)关于Ext3是最少的可用分区容量的系统，ReiserFS是最长挂载时间的系统，Ext3创建时间最长的系统。此外，和这份报告中的内容一样，都发现JFS是CPU占用最少的系统。最后，这份报告是第一个显示ReiserFS在通常的文件操作中有较高的page faults。&lt;br /&gt;

认识到各个文件系统的优缺点之后，每个 分区/磁盘 只可以安装一个文件系统。基于上面的测试，XFS似乎是最适合于家用文件服务器或者小型商务服务器使用：&lt;br /&gt;

* 他可以最大限度的使用你的硬盘。&lt;br /&gt;
* 他是创建、挂载、卸载速度最快的文件系统。&lt;br /&gt;
* 他是操作大文件（&gt;500M）速度最快的文件系统。&lt;br /&gt;
* 他对于大量的中小文件和目录的操作是第二快的。&lt;br /&gt;
* 在大的目录树列表和查找操作中，他在操作时间和CPU占用间找到了很好的平衡。&lt;br /&gt;
* 他不是占用资源最少的文件系统，但是他在比较老的硬件上面的资源占用还可以接受。&lt;br /&gt;

Piszcz(2006)没有明确的推荐XFS，他总结说“个人认为，我会因为性能和可靠性而选择XFS”。我支持他的结论。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>申请了google adsense</title>
      <link>https://wdicc.com/google-adsense/</link>
      <pubDate>Mon, 20 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/google-adsense/</guid>
      <description>
以前好像申请过，不过没有通过。这次试试看又申请了一次，通过了，呵呵。尝试在网页上面添加了一下东东，不知道管用不管用，试试看了。google的那个公益广告其实有点意思，“你知道xxx吗？”我觉得挺吸引人的，我也选择了没关键字的时候显示公益广告了，可是看了半天好像也没显示公益广告。&lt;br /&gt;

前几天maillist看到有人说通过adsense一个月可以收入450$，这个吓了一跳，真不少呢。不过我只希望他能给我把域名的钱赚回来就好了，如果还有富余，就去买块国外的空间，呵呵。&lt;br /&gt;

adsense让一些小网站有了希望，至少，开一个网站不赔钱，或许应该没问题吧。现在域名加一小块空间，好像也不是很贵，所以指望adsense还是可以的。&lt;br /&gt;

adsense同时也鼓励这些小网站能作出内容来，有内容，才会有人来访问，才有可能赚点钱。其实这样挺好的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Linux下面动态调整cpu频率</title>
      <link>https://wdicc.com/cpufreq-turning/</link>
      <pubDate>Tue, 14 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cpufreq-turning/</guid>
      <description>
笔记本的cpu的频率是可调整的，一般用电池的时候，就会降频使用，延长电池使用时间。上周末忘记把笔记本的电源带回来了，用电池在linux下工作，发现降频真是个好东东，用了一个小时，电池显示还能用3个多小时，并且cpu温度从20多度才涨到40来度。为了让本本更凉一点，就看了看cpufreqd的工作原理。&lt;br /&gt;

cpufreqd采用的是打分制，每条rule的总分是100分，比如有个rule里面有4条规则，如果满足了其中3条，那么总分就是75分，以此类推 。使用分数最多的规则，如果两条规则的分数相同，使用当前正在使用的规则，或者使用位置靠前的规则。下面来说说看这个东西怎么玩。&lt;br /&gt;

比如按照我的工作情况，我有下面的需求：&lt;br /&gt;
1 如果使用了mplayer,gcc等，那么用最高频率。&lt;br /&gt;
2 如果使用了firefox，那么用中间频率。&lt;br /&gt;
3 如果没有满足上面两条，那么用最低频率。&lt;br /&gt;

这样就相当于设置了三个运行级别，你可以按照自己的需求来定义运行的程序。&lt;br /&gt;

从上面的需求可以看出来，我们设置1这种情况下分数为100，那么没有mplayer的时候，1的分数应该是50。这样其他的两个要至少在50以上才行。而且3还得是在2匹配和不匹配的分数的中间。我的设置如下：&lt;br /&gt;

[Rule]&lt;br /&gt;
name=firefox&lt;br /&gt;
ac=on&lt;br /&gt;
programs=firefox-bin&lt;br /&gt;
programs=sss&lt;br /&gt;
acpi_temperature=0-60&lt;br /&gt;
profile=Performance Low&lt;br /&gt;
[/Rule]&lt;br /&gt;

[Rule]&lt;br /&gt;
name=Movie Watcher&lt;br /&gt;
ac=on&lt;br /&gt;
programs=xine,mplayer,gmplayer,wdmplayer,gcc&lt;br /&gt;
profile=Performance High&lt;br /&gt;
[/Rule]&lt;br /&gt;

[Rule]&lt;br /&gt;
name=AC Rule&lt;br /&gt;
ac=on                    # (on/off)&lt;br /&gt;
programs=aaa&lt;br /&gt;
acpi_temperature=0-60&lt;br /&gt;
profile=On Demand Low&lt;br /&gt;
[/Rule]&lt;br /&gt;

这样，基本可以实现我上面的需求。条目是可以多次出现的，所以比如可以多加几条programs=gcc，让gcc在使用的时候和不在使用的时 候得分差很多，这样方便安排其他的情况。&lt;br /&gt;

windows下面可没这么灵活的设置亚，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>悠闲的周末</title>
      <link>https://wdicc.com/nice-weekend/</link>
      <pubDate>Mon, 13 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nice-weekend/</guid>
      <description>
自从买了鞋柜和茶几之后，要买的大件物品总算是买完了。所以，上个周末就难得的有了自己的空闲时间。周六早上去超市买了一些东西，回来和物业商讨了橱柜的事情，就等着厂家把鞋柜送过来了。送来之后发现和样品不符，这下可找着机会让我把之前的一口恶气出一下了。之后厂家把鞋柜拉走了，晚上给我们打电话，又痛骂了一次那个销售，说好2周内给我从新做一个送过来。&lt;br /&gt;

加上茶几之后，屋子里面就差不多就这样了，拍了一些相片放在了&lt;a target=&#34;_blank&#34; href=&#34;http://wdicc.yupoo.com/&#34;&gt;网上&lt;/a&gt;。&lt;br /&gt;

本来之前说一些同学周日过来一起吃饭， 可是后来都没有过来。不过来拉倒，和老婆两个人去吃了好吃的，买了羽毛球，回来打了半个多小时羽毛球，感觉还真不错，呵呵。晚上又看了会电视。看了两天电视就发现，实在没有好看的，停留时间最长的就是苏版《倚天》和那个《男才女貌》。电视实在是越做越差。&lt;br /&gt;

这个周末怎么安排呢？ 嗯。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>昨天操作了好多次oracle的备份和恢复</title>
      <link>https://wdicc.com/oracle-backup-and-recover/</link>
      <pubDate>Thu, 09 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-backup-and-recover/</guid>
      <description>
oracle的数据库文件一旦建立就会一直占用磁盘空间，表空间用尽的时候，就需要为表空间添加数据文件。可是，从表里面删除数据的时候，表空间却不会释放，所以磁盘空间占用只会越来越大。前段时间一个数据库的表空间不足了，放数据的分区也磁盘空间不足了，必须得想办法释放一下空间才行，操作说起来其实也简单，就是倒腾。&lt;br /&gt;

操作值钱咱先给现在的表空间做一个备份。然后新建一个用户，给这个用户建立表空间，按照备份的大小添加数据文件。然后将备份导入新的表空间，切换应用使用的用户。删除之前用户的表空间，删除数据文件。然后给他重新建立表空间数据文件，切换回来。然后将新的用户里面的数据导出，导入到旧的用户下面。这样就操作完了。&lt;br /&gt;

导出导入的时候可以按照exp和imp帮助里面的那个例子，row=n表示不倒数据，只导结构。这样导出似乎也会有些问题，什么seq不会倒出来，需要重新弄，不太明白这个。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Linux下面的网上邻居</title>
      <link>https://wdicc.com/network-neiborhood-in-linux/</link>
      <pubDate>Mon, 06 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/network-neiborhood-in-linux/</guid>
      <description>
linux下面有个samba可以mount网上邻居的共享到本地，然后进行访问什么的。可是这样做就需要你事先知道有谁共享了什么，或者需要自己通过一 些命令来查看有谁共享了什么。那么，有没有更加弱智一点的操作方法呢？就像windows里面，有个文件夹，打开之后里面就是网上邻居里面的一些电脑呢？ 有的。&lt;br /&gt;

首先安装smbnetfs这个包，同时他会关联fuse这个包，安装fuse之后，会提示你需要将fuse模块加入内核。&lt;br /&gt;
$sudo modprobe fuse&lt;br /&gt;

自己修改rc.conf，把他加上，每次启动会自己加载。&lt;br /&gt;

然后呢，启动smbnetfs。&lt;br /&gt;
$sudo /etc/rc.d/smbnetfs start&lt;br /&gt;

他会给你把网上邻居mount到/mnt/smbnet，去那里看看，是不是网上邻居都出来了？&lt;br /&gt;
如果进某台电脑进不去，我也不知道怎么解决，也不知道是什么问题不行就试试看fusesmb吧。&lt;br /&gt;

smbnetfs的配置文件都在/etc/smbnet/.smb下面，smb.conf可以直接cp /etc/samba/smb.conf，smbnetfs.conf是他的配置文件，里面的内容根据自己需要修改。&lt;br /&gt;

smbnetfs.auth,smbnetfs.host这俩个文件里面可能涉及到密码，所以设置合适的权限。&lt;br /&gt;

auth文件的格式类似如下：&lt;br /&gt;
auth &#34;xfs&#34; &#34;SIC.COM/wd&#34; &#34;wdddd&#34;&lt;br /&gt;
auth &#34;FS&#34; &#34;wd&#34; &#34;wwwwd&#34;&lt;br /&gt;

调试好了之后，你就可以把smbnetfs加到rc.conf的启动列表里面了，这样每次开机之后，直接访问/mnt/smbnet就是网上邻居了。&lt;br /&gt;

除了smbnetfs之外，还有fusesmb也可以实现类似功能，不过效果都差不多。fusesmb源里面没有，aur有，需要自己编译。&lt;br /&gt;

ps:经过一段时间的使用比较之后，发现fusesmb比smbnetfs效果好。smbnetfs经常出现电脑打不开的情况，还有更新不及时的问题。fusesmb就好多了。fusesmb的配置文件在~/.smb/下面，格式可以通过man来查看，配置起来感觉比smbnetfs简单。 需要更新网上邻居列表的时候，执行fusesmb.cache命令就可以。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>ip_conntrack: table full</title>
      <link>https://wdicc.com/ip_conntrack-table-full/</link>
      <pubDate>Sat, 04 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ip_conntrack-table-full/</guid>
      <description>
今天值班的时候发现网络不稳定，ping sina 50%以上的丢包率，ping 网关也差不多，所以服务器都开始报警了。一遍骂这个&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>还是cacti的问题</title>
      <link>https://wdicc.com/problem-in-cacti/</link>
      <pubDate>Sat, 04 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/problem-in-cacti/</guid>
      <description>
前面那个帖子似乎没有解决问题，查看了一下log，有些异常：&lt;br /&gt;
cactid ERROR: SNMP timeout detected [500 milliseconds]&lt;br /&gt;
搜了一下，找到一个&lt;a target=&#34;_blank&#34; href=&#34;http://forums.cacti.net/about5487.html&#34;&gt;文章&lt;/a&gt;，似乎说升级就ok了，可是那个日期是2005年的，我的应该没那么老吧。不过还是上cacti的&lt;a target=&#34;_blank&#34; href=&#34;http://cacti.net/&#34;&gt;主页&lt;/a&gt;看了看，看到cacti和cactid都升级了，就打算升级一下看看。debian上面怎么玩呢？cacti还好说，之前升级过一次，不需要编译，直接按照&lt;a target=&#34;_blank&#34; href=&#34;http://www.cacti.net/downloads/docs/html/upgrade.html&#34;&gt;文档&lt;/a&gt;升级就好，cactid可得编译，我也不打算直接覆盖安装（其实真这么装没准还简单了），还是做一个deb包吧，一直没有体验过deb如何做，刚好机会来了。&lt;br /&gt;

搜了半天，找到一个&lt;a target=&#34;_blank&#34; href=&#34;http://debian.linuxsir.org/doc/inthedebianway/debian_build_package.html&#34;&gt;文档&lt;/a&gt;，按照里面的步骤，下载了diff、dsc等文件， 解压之后修改control文件和一些depands，然后编译打包，好像没什么问题，试着装了一下，装上了，运行了一下，好像也没问题，呵呵，就这么搞定了。&lt;br /&gt;

之后按照同样的步骤搞cacti，结果安装打包的文件后，出问题了，呵呵。不过还好，东弄西弄，总算还是弄好了。按照cacti的文档手动升级了一下，也没遇到问题。不过plugin-arch也需要同时升级一下。还有poller.php和cmd.php都需要加执行权限。&lt;br /&gt;

cactid i这个版本似乎执行的时候输出没有g那么多了，很好，要不然log会搞的很大。cmd.php的输出倒是没多少内容，不过没有cactid的多线程爽亚，呵呵。执行cactid之后，会发现还有些问题:&lt;br /&gt;
Host[6] DS[46] WARNING: Result from SNMP not valid. Partial Result: ...&lt;br /&gt;

搜了一下，找到一个&lt;a href=&#34;http://forums.cacti.net/post-63188.html&#34;&gt;文章&lt;/a&gt;， 里面说到了问题的所在。我这里是因为一些有问题的data souce导致，比如这些本来就获取不到数据、或者之前的设备比如网卡现在没有了等等，都会导致cactid获取不到需要的数据，就会提示那个错误。按照里面提示的DS[46]，在http://your_ip/cacti/data_sources.php?action=ds_edit&amp;id=num这个链接的num那里直接输入数字就能知道是哪个ds出问题了，删掉或者更新就ok了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>mutt的两个问题以及解决办法</title>
      <link>https://wdicc.com/2-problems-in-mutt/</link>
      <pubDate>Wed, 01 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/2-problems-in-mutt/</guid>
      <description>
mutt&lt;a target=&#34;_blank&#34; href=&#34;http://blog.wdicc.com/wordpress/2006/09/03/242/&#34;&gt;用了一段时间&lt;/a&gt;之后发现对方发过来的附件的名字都是乱码，多次之后就觉得比较郁闷，每次都得自己修改名字，还得猜文件类型，很郁闷。google了一下，发现了&lt;a target=&#34;_blank&#34; title=&#34;gnus/mutt 邮件乱码问题&#34; href=&#34;http://learn.tsinghua.edu.cn:8080/2002315162/muttpatched.html&#34;&gt;解决办法&lt;/a&gt;，是因为mutt默认使用的是rfc2331来解码的，所以添加一个set rfc2047_parameters=yes就可以了，这样对方发过来的邮件就可以正常显示文件名称了。但是同时从那个网址得知，我发出去的附件，也是用rfc2331来编码的，这样到了对方那里，显然会乱码了。测试了一下，outlook里面提示有附件，可是打开是乱码，并且附件名称也不是实际的附件名称。foxmail里面不提示有附件，内容后面会显示几个乱码。&lt;br /&gt;

按照前面那个网址，找到了&lt;a target=&#34;_blank&#34; title=&#34;mutt的rfc2047补丁&#34; href=&#34;http://www.emaillab.org/mutt/download1510.html.en&#34;&gt;mutt的补丁&lt;/a&gt;，尝试了半天，不能在muttng上面正常使用，没办法只好不用muttng用mutt了。打上补丁之后，设置了 set create_rfc2047_parameters=yes  发出去的邮件就正常了。在mutt的&lt;a target=&#34;_blank&#34; title=&#34;mutt patch list&#34; href=&#34;http://wiki.mutt.org/index.cgi?PatchList&#34;&gt;patch list&lt;/a&gt;列表里面找到&lt;a target=&#34;_blank&#34; title=&#34;mutt的sidebar补丁&#34; href=&#34;http://lunar-linux.org/index.php?page=mutt-sidebar&#34;&gt;sidebar补丁&lt;/a&gt;，给mutt打了sidebar的补丁，用起来也还行了。同时，也把我的mutt升级到了1.5.13，比源里面的都新了。呵呵。&lt;br /&gt;

此外，还有一个问题就是如何对应不同的账号使用不同的smtp server。 本来从网上找了一个文章说到了这个操作如何实现，我也照搬了，发现似乎可以实现这个功能。可是最近才发现，我完全错了，实际上用的总是msmtp里面设置的那个default smtp server，郁闷坏啦，给头以及同事发了好多邮件了，用的都是我的gmail邮箱。&lt;br /&gt;

现在我已经解决了这个问题，用的是send-hook，如下。&lt;br /&gt;
send-hook . &#39;my_hdr from:wd@aaa.com&#39;&lt;br /&gt;
send-hook . &#39;set sendmail=&#34;/usr/bin/msmtp -a gmail&#34;&#39;&lt;br /&gt;
send-hook &#39;~t .*@bbb\.com\.cn$&#39; &#39;my_hdr from:stef@bbb.com.cn&#39;&lt;br /&gt;
send-hook &#39;~t .*@bbb\.com\.cn$&#39; &#39;set sendmail=&#34;/usr/bin/msmtp -a bbb&#34;&#39;&lt;br /&gt;

这样，针对不同的mail，使用不同的sendmail程序。&lt;br /&gt;

发现mutt发送邮件的时候使用的是我的gmail邮箱的时候，我很郁闷，再加上发现他发送的附件在别人那里居然不认，让我就更郁闷了。立刻安装了thunderbird，并且设置好了他，打算以后就用他了。但是发现我已经习惯了mutt了，所以还是回头来给mutt打了补丁，做了修改，让他按照我的习惯来了。 用thunderbird后发现，很多事情不能按照我的意思来，很郁闷。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>这周末让人高兴的两件事情</title>
      <link>https://wdicc.com/happy-weekend/</link>
      <pubDate>Sun, 29 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/happy-weekend/</guid>
      <description>
一就是有线弄好了。之前一直不清楚，昨天朝阳电视台的过来给看了看，拿他们那个仪器测了一下，结果发现经过我那个线之后，信号衰减的很厉害。然后用他们自己带的线测试了一下，发现原来不清楚的台变清楚了。这样，所有的问题都出在这根线上面了。他们那里没有线，只能自己去买。他们据说免费给了开发商好多线，结果物业20块钱一条，都给卖完了。我这里刚好有很多线，找了一根看着还不错的，自己做了一根，有线立刻清楚了。现在60多个台，只有1,2个还有问题，不过不影响了。呵呵。&lt;br /&gt;

然后就是煤气通了。入住一个多月以来，最让人郁闷的就是煤气不通了。电磁炉用起来怪怪的，不习惯。昨天终于通煤气了，不过足足花了一天事件来做这个事情。通煤气是一条竖线上面的一起通的，不能只通一户两户，所以必须全部业主到场才能通。这样，时间都花在等这些业主上面去了。不过还好，通了，不用今天再等一天了。楼下看到通知说别的楼今天还得继续等，因为昨天人没来齐。昨天晚上用煤气热的饭，感觉舒服多了，看着淡蓝色的火焰，感觉好爽。呵呵。&lt;br /&gt;

今天早上还出去刷了一圈，技术严重下降。出门有个斜坡都不敢走了，真丢人。以后要多刷刷才行。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>深夜骑车</title>
      <link>https://wdicc.com/riding-in-deep-night/</link>
      <pubDate>Fri, 27 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/riding-in-deep-night/</guid>
      <description>
昨天骑车回去的时候，还没到高碑店的时候，有条往北走的路，看着也挺宽的，就转上去了。结果最后走的是朝阳路回的家。朝阳路其实很不好走，开始还好，走了一段之后开始走辅路的时候，就发现很郁闷了。主路和辅路之间种了好多树，平时看到这些树肯定很高兴了，现在很少见绿色了（写到这里想起来了98年到北京的时候，北航东门外面的那些大树了，那会还没有北四环四呢）。晚上的时候，路灯是照在主路上面的，辅路只能透过大树才能有点光线，这样，就导致辅路上面全是树影，骑车的时候不敢骑快了。因为，报纸上面报道的掉到井里面的人也不是一个两个了，我可不想明天的报纸上面出现王某某掉井里了。。。所以呢，整个路程回家的速度就不是很快了。不过也很庆幸，路上没有遇到很怪异的路面，还算平整。&lt;br /&gt;

不过最后还是遇到险情了。都到了双桥了，路上有条沟，一颠，车把就转了一下。因为我之前把车把给改装了么，可能螺丝没有拧紧。不过幸好，当时的速度不是很快，因为刚好是一个路口。后来还后怕，要是前面在树影里面遇到这个情况，估计得摔一跤了。周末得好好弄弄这个车了。&lt;br /&gt;

一路上听的是103.9电台，我记得好像是交通台。不过很奇怪，晚上不是说交通，而是在说感情，很晕。听了不少老歌，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>想把自行车改造一下</title>
      <link>https://wdicc.com/change-bike/</link>
      <pubDate>Thu, 26 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-bike/</guid>
      <description>
今天早上骑自行车到的四惠东，总共用时30分钟。昨天晚上下班之后，换了一个车座，花了10块钱，虽然也不怎么样，不过总比以前的爽了。本来想把车把提高一点，结果弄了半天没成功。后来我回去把车把翻转了一下，这样那个弯弯就到上面来了，这下子爽了，呵呵。不过就是车闸不好捏了。&lt;br /&gt;

今天上午去水母的自行车版问了一下怎么改装车闸，结果把我给封了，说是因为讨论黑车。 之后我才想起来，那个版的都是有钱人，都是买得起上 k的新车玩的人，自然鄙视我们这种骑黑车的了。但是之所以买黑车，还不是因为怕丢么？花100块钱买一个凑合骑骑就是了，犯不着花1k,2k的买一辆天天心惊胆战的。无所谓了，反正我从来也不去那个版。。&lt;br /&gt;

今天值班，晚上下班要11点了。到了四惠东估计快 12点了，骑回家估计12点多，呵呵，看速度了。等会等研究一条回家骑车最好走的路线。京通路的辅路人多车多，要是能走朝阳北路就好了。&lt;br /&gt;

眼看又要周末了，这周还有报告听，蛮爽的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>长途跋涉</title>
      <link>https://wdicc.com/long-way/</link>
      <pubDate>Wed, 25 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/long-way/</guid>
      <description>
昨天早上6点多爬起来，赶往老大那里骑车。从他那里8点多又骑车去上班，一路快骑，好容易8:50到了公司，没有迟到。不过就这么半个小时，屁股已经开始疼了，想想晚上还要骑回去，就一阵郁闷。&lt;br /&gt;

下午下班，先骑车去菜市口打印了手机花费的发票，然后就开始一路往家走了。路线如下：&lt;br /&gt;

菜市口-&gt;西单-&gt;长安街往东-&gt;天安门-&gt;王府井-&gt;东二环-&gt;东三环-&gt;东四环-&gt;转北-&gt;朝阳北路往东-&gt;青年路口-&gt;东五环-&gt;常营路口-&gt;到家&lt;br /&gt;

到家的时候大概是8点半不到，如果除去菜市口开发票，那么应该是2个小时到家。其间推着车走了两次。幸好一路有手机收音机可听，要不铁定坚持不下来了。自行车的车座实在太硬了，不知道比赛的那种公路赛车的车座是不是也是这样的，反正我得换一个了，哪怕换一个及其老土的。&lt;br /&gt;

路上走了多少公里不知道了，不过路上还在想，如果我刷刷的话， 可能还会比骑车轻松一些吧。&lt;br /&gt;

&lt;img align=&#34;middle&#34; alt=&#34;回家路线&#34; title=&#34;回家路线&#34; src=&#34;http://static.flickr.com/115/278786104_e525d77539_o.png&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>新房入住一个多月了</title>
      <link>https://wdicc.com/1-mounth-in-new-house/</link>
      <pubDate>Sun, 22 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/1-mounth-in-new-house/</guid>
      <description>
转眼就一个多月了，这段时间房子慢慢的充实起来了，十一的时候买了床、床头柜、衣柜，这样大卧室基本上就满了。客厅的话，大学同学送了一个餐桌，加上之前买的一个沙发，十一又买了电视、电视柜，也差不多就那样了吧。等以后在买一个茶几和一个大一点的沙发就全了。这几天在弄灯，等灯都装好了，就差不多折腾完了吧。&lt;br /&gt;

等周一弄好灯，收拾完屋子，就可以拍一下照片啦。入住以来还没有拍相片呢。主要是刚开始来了空荡荡的，也没什么好拍的，呵呵。&lt;br /&gt;

入住都这么久了，煤气还没通，唉，真是没办法。物业有问题你和它急吧，可是人家不急，总说给你解决，可是实际上，能拖多久就多久。 是在没办法了。&lt;br /&gt;

现在大家一起玩的时候有两个地方玩了，xh那里或者我这里。玩晚了，也可以说上一句“大家就别走了，有地方睡觉”，哈哈。想起以前租房的时候，不是水泥地就是地板砖，地板砖算是最好的了，上面睡人也很郁闷的。现在好了，都是木地板，呵呵。岳母还给带过来好几个被子，来人也足够睡觉啦。所以了，欢迎大家来我家玩，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>jfreechart 乱码之解决</title>
      <link>https://wdicc.com/jfreechart-encoding/</link>
      <pubDate>Thu, 12 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/jfreechart-encoding/</guid>
      <description>
如果想要java程序显示中文，就会用到jre的fonts的设置，这个位于jdk/jre/lib下面，挺多font.properties文件，这些文件就是关键。&lt;br /&gt;

jdk会按照如下顺序查找相应的字体设置文件。&lt;br /&gt;
1 先看locale，例如如果设置了zh_CN，那么会查找文件名包含zh_CN的文件，如果找不到，就用font.properties文件。&lt;br /&gt;
2 然后看系统，如果是Redhat，那么找包含Redhat的，如果找不到就用，font.properties.zh_CN文件。&lt;br /&gt;
3 如果上面这些查找过之后没有合适的，那么就使用font.properties文件了。&lt;br /&gt;

所以，其实解决方法也比较简单，找一个没乱码的系统，复制相应的font.properties文件就可以了。不过也得仔细查看文件中的设置，&gt;里面提到的字体你的系统里面是不是存在。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>随便写点</title>
      <link>https://wdicc.com/seems-nonething/</link>
      <pubDate>Wed, 11 Oct 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/seems-nonething/</guid>
      <description>
刚才写了一堆，结果发表的时候丢掉了，实在没心情再写了，简单回顾一下写了什么好了。&lt;br /&gt;

十一的时候cc父母过来帮忙置办了好多东西，感谢他们了。&lt;br /&gt;

这周两个人过生日，两个报告，高兴。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用公匙密匙来登录ssh</title>
      <link>https://wdicc.com/public-key-in-ssh/</link>
      <pubDate>Tue, 26 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/public-key-in-ssh/</guid>
      <description>
ssh一种更加安全的登录方式是使用rsa/dsa方式来做验证。密码口令很可能被猜出来，但是用dsa方式验证的ssh，除非他弄到你的私匙，否则肯定是安全的。&lt;br /&gt;

ssh-keygen命令可以用来生成rsa/dsa方式的公匙密匙。&lt;br /&gt;
ssh-keygen或者ssh-keygen -t rsa生成rsa方式的密匙。ssh-keygen -d 或者 ssh-keygen -t dsa生成dsa方式的密匙。具体rsa和dsa的区别看 &lt;a href=&#34;http://www-128.ibm.com/developerworks/cn/linux/security/openssh/part1/index.html&#34;&gt;这里&lt;/a&gt; 。&lt;br /&gt;

上面的命令会在~/.ssh文件夹中生成公匙（id_*sa.pub）和密匙（id_*sa），将pub文件中的内容copy到远程服务器你的home目录下面的.ssh目录中的authorized_keys[2]这个文件中，有没有最后的那个2要看你用的是ssh1还是ssh2方式，通常都有2。&lt;br /&gt;

然后就是远程服务器的这些文件需要有正确的权限，.ssh目录是700，authorized_keys2文件是644。&lt;br /&gt;

此后再登录服务器的时候应该就不需要输入密码了。&lt;br /&gt;

有一个小tip，就是给服务器的ip设置一个好记的形式，那么多的ip记住不容易阿，而且每次还得一个一个输入。具体方法就是修改hosts文件，添加类似下面的内容就可以了，相当于自己做了一个dns，呵呵。&lt;br /&gt;
#销售server&lt;br /&gt;
218.x.2.128 s128 xs xiaoshou&lt;br /&gt;
#db server&lt;br /&gt;
218.x.23.189 s189 db oracle&lt;br /&gt;
这样，以后访问s128或者s189就可以了，当然后面的xs、xiaoshou、db、oracle也都是别名，都可以用来访问。&lt;br /&gt;

还有一个tip，是关于term的。如果用的是urxvt，访问的远程服务器的时候可能会遇到“unknow terminal : rxvt-unicode” 类似的错误，如果出现了类似错误，会导致在服务器端vim和ls都没有颜色。解决方法是在.Xdefaults文件中添加URxvt.termName: xterm，或者.bash_profile里面自己设置一下TERM类型。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>入住新房</title>
      <link>https://wdicc.com/live-in-new-house/</link>
      <pubDate>Thu, 21 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/live-in-new-house/</guid>
      <description>
不管怎么说，昨天住进去了。再也不关心房价了，再也不用和房东打交到了。&lt;br /&gt;

这几次找的搬家公司都挺便宜的，第一次从春园搬到秀园，几步路的距离吧，花了100，问别的公司可都开口150起呢。第二次从青塔到国美第一城，距离好远，从西四环外，搬到东四环外。这次花费200。第三次就是从国美第一城搬到了现在的万象新天，10几分钟车程吧，花费160。&lt;br /&gt;

昨天晚上回去买了托把，垃圾桶。粗略收拾了一下卧室，并且把冰箱、微波炉都擦干净了。现在东西还有很多没收拾，都再客厅里面，不过还好客厅够大，呵呵。&lt;br /&gt;

现在最紧要的是购买衣柜、纱窗、窗帘。昨天去小区里面的一个商家问了问，价格不便宜。纱窗三个窗口需要1200，窗帘1米78，衣柜做好了可能需要3k。纱窗那个就不用说了，实在太黑了，要价上面给打了8折还那么贵，我说我装个新的门也够了。窗帘我们问了附近的批发市场里面的，最贵的也就40一米。衣柜的话价格倒差不多，他这个是定做，样式都可以自己设计。&lt;br /&gt;

昨天晚上蚊子还真不少，翻了半天也没有翻到蚊香，不过我晚上好像没怎么被咬，不知道cc如何，呵呵。不是说高层没有蚊子么？蚊子怎么飞上来的啊？他们还真不嫌累。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>寄宿在老大家里</title>
      <link>https://wdicc.com/live-in-syms-house/</link>
      <pubDate>Mon, 18 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/live-in-syms-house/</guid>
      <description>
上周六总算看到了房子，问题还真是多啊。和老婆两个人房子里面转了2个小时，发现的问题都记在本本上了，今天老婆过去督促他们修去了。最早估计不到周末就可以搬家入住吧。现在在老大这里寄宿，和老婆两个人挤在一个小床垫上，呵呵，睡惯了我们的大床垫，还真有点不习惯，总觉得要掉下去。老大那里晚上可真安静，比我们以前路边的感觉好很多啊，呵呵，晚上一直听着他那个散热风扇在转。&lt;br /&gt;

两只猫跟着我们也是吓了一路，坐车都坐了快2个小时了。看着他们吓的发抖，真是心疼啊，不过昨天晚上他们闹腾起来，却又让人生恨，呵呵。不管怎么说，快了，就快可以住自己的家了，大的落地窗户旁边，随便他们怎么睡。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Account Locking</title>
      <link>https://wdicc.com/account-locking/</link>
      <pubDate>Thu, 14 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/account-locking/</guid>
      <description>
&lt;a href=&#34;http://download-west.oracle.com/docs/cd/B19306_01/network.102/b14266/policies.htm#i1012688&#34;&gt;这里&lt;/a&gt;&lt;br /&gt;

7.4.1 Account Locking&lt;br /&gt;

When a particular user exceeds a designated number of failed login attempts, the server automatically locks that user account. You specify the permissible number of failed login attempts using the CREATE PROFILE statement. You can also specify the amount of time accounts remain locked.&lt;br /&gt;

In the following example, the maximum number of failed login attempts for the user johndoe is four, and the amount of time the account will remain locked is 30 days. The account will unlock automatically after the passage of 30 days.&lt;br /&gt;

CREATE PROFILE prof LIMIT&lt;br /&gt;
FAILED_LOGIN_ATTEMPTS 4&lt;br /&gt;
PASSWORD_LOCK_TIME 30;&lt;br /&gt;
ALTER USER johndoe PROFILE prof;&lt;br /&gt;


If you do not specify a time interval for unlocking the account, then PASSWORD_LOCK_TIME assumes the value specified in a default profile. If you specify PASSWORD_LOCK_TIME as UNLIMITED, then the account must be explicitly unlocked using an ALTER USER statement. For example, assuming that PASSWORD_LOCK_TIME UNLIMITED is specified for johndoe, then the following statement must be used to unlock the account:&lt;br /&gt;

ALTER USER johndoe ACCOUNT UNLOCK;&lt;br /&gt;


After a user successfully logs into an account, the unsuccessful login attempt count for the user, if it exists, is reset to 0.&lt;br /&gt;

The security officer can also explicitly lock user accounts. When this occurs, the account cannot be unlocked automatically, and only the security officer should unlock the account. The CREATE USER or ALTER USER statements are used to explicitly lock or unlock user accounts. For example, the following statement locks the user account, susan:&lt;br /&gt;

ALTER USER susan ACCOUNT LOCK;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>dns劫持</title>
      <link>https://wdicc.com/hijack-dns/</link>
      <pubDate>Wed, 13 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/hijack-dns/</guid>
      <description>
这个词不知道熟悉不熟悉。听说过劫机，劫车的，劫持dns有什么用？用处大了，呵呵。之前有浏览器劫持，就是流氓插件将你访问的网址导向他自己的网站，不管你访问什么网址，都给你导过去。很流氓的做法吧，现在有些dns也在做&lt;a href=&#34;http://blog.cathayan.org/item/1440&#34;&gt;类似的事情&lt;/a&gt;。&lt;br /&gt;

我前几天就遇到了类似的问题，不过和这个又不像。工行的网站是 http://www.icbc.com.cn ，而 http://icbc.com.cn 是连接不上的，我输入了后面这个ip，就打开一个什么纠错的网址，然后一不小心多按了一个回车，就提示我安装好了中文上网插件，当时真想骂3721祖宗十八代。用ie也是没办法的事情，工行的网站只能用ie，用firefox访问那个网址的时候就提示访问不了，不会出现转向，所以我这个情况应该是和浏览器有关。&lt;br /&gt;

用了 &lt;a href=&#34;http://www.opendns.com/what/&#34;&gt;opendns&lt;/a&gt; 之后呢，再访问不存在的网址，还是会转，不过会转到一个英文的网站，没有3721了，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天的天气真是好阿</title>
      <link>https://wdicc.com/what-a-nice-day/</link>
      <pubDate>Sun, 10 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/what-a-nice-day/</guid>
      <description>
这么好的天气呆在家里实在是浪费，唉。已经很久没有刷刷了，都不知道穿上鞋还会不会走了。北航的刷刷团体看样子就这么消失了。到了新家每天得去刷几圈才行。说起来还比较渴望早点搬进去，希望10.1能搞定，到时叫同学们过去happy，呵呵。 想起来那边是地热采暖，这下两只猫肯定爽了，冬天也就趴到地上睡了，看来他们晚上不会钻被子了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用irssi上irc</title>
      <link>https://wdicc.com/login-in-irc-use-irssi/</link>
      <pubDate>Sat, 09 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/login-in-irc-use-irssi/</guid>
      <description>
/SERVER ADD -auto -network oftc irc.oftc.net 6667&lt;br /&gt;
/NETWORK ADD -autosendcmd &#34;/^msg nickserv identify pass;wait 2000&#34; OFTC&lt;br /&gt;
/CHANNEL ADD -auto #arch-cn OFTC&lt;br /&gt;

这样可以实现起动irc自动登录，并且加入频道&lt;br /&gt;

&lt;a target=&#34;_blank&#34; href=&#34;http://www.irssi.org&#34;&gt;irssi&lt;/a&gt; 的 &lt;a target=&#34;_blank&#34; href=&#34;http://www.irssi.org/documentation/manual&#34;&gt;manual&lt;/a&gt; 以及一个&lt;a target=&#34;_blank&#34; href=&#34;http://www.irssi.org/documentation/startup&#34;&gt;Howto&lt;/a&gt; 。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>fetchmail,procmail,mutt,msmtp</title>
      <link>https://wdicc.com/fetchmail-procmail-mutt-msmtp/</link>
      <pubDate>Sun, 03 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/fetchmail-procmail-mutt-msmtp/</guid>
      <description>
linux下面恐怕很多人都会推荐这种组合了。这个组合中的fetchmail负责将远方的pop,imap之类的mail收下来。然后procmail负责将这些mail投递到本地用户那里。mutt呢，就是用来管理查看这些邮件的了。msmtp用来联接远程的smtp服务器发送邮件。这&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>差不多配置好了urxvt</title>
      <link>https://wdicc.com/urxvt-conf/</link>
      <pubDate>Sun, 03 Sep 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/urxvt-conf/</guid>
      <description>
这&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>最近在追的三部美剧</title>
      <link>https://wdicc.com/3-sitcom/</link>
      <pubDate>Thu, 31 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/3-sitcom/</guid>
      <description>
韩剧看的更多的是喜剧效果，和东方美女。美剧呢，更加引人入胜一点，往往不知不觉就看完了好几集，然后就在期待下面的。韩剧一集1个多小时，看的时候往往会让人生闷，忍不住拖着看。美剧就不会了，看的时候巴不得每个镜头都不要错过，每个镜头都那么吸引人。&lt;br /&gt;

韩剧自从看了&lt;a href=&#34;http://lib.verycd.com/2005/01/10/0000034551.html&#34;&gt;《豪杰春香》&lt;/a&gt;之后，就再没有看过了，因为那之后看了&lt;a href=&#34;http://lib.verycd.com/2005/08/31/0000063290.html&#34;&gt;《越狱》&lt;/a&gt;，看了美剧之后，实在对韩剧提不起兴趣了，所以后来下载的&lt;a href=&#34;http://lib.verycd.com/2005/12/15/0000079877.html&#34;&gt;《my girl》&lt;/a&gt;没看就直接删掉了。&lt;br /&gt;

说说最近看的三部美剧。第一部就要首推&lt;a href=&#34;http://lib.verycd.com/2005/08/31/0000063290.html&#34;&gt;《越狱》&lt;/a&gt;了。第一季已经播完，总共22集。第二季正在播，今天应该可以看到第二集了。&lt;br /&gt;

&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/229701964/123_100_6fdbafa5ace0926.html&#34;&gt;&lt;img width=&#34;361&#34; height=&#34;500&#34; border=&#34;0&#34; alt=&#34;123_100_6fdbafa5ace0926&#34; src=&#34;http://static.flickr.com/69/229701964_52c4e18dd6.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

第二部就是 &lt;a href=&#34;http://lib.verycd.com/2006/06/27/0000108444.html&#34;&gt;《4400》&lt;/a&gt;了。已经播到第三季了，第一季是5集，第二季是12集，第三季目前播到了13集。&lt;br /&gt;

&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/229705692/4400.html&#34;&gt;&lt;img width=&#34;500&#34; height=&#34;375&#34; border=&#34;0&#34; alt=&#34;4400&#34; src=&#34;http://static.flickr.com/75/229705692_ef0e5772c0.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

第三部就是&lt;a href=&#34;http://lib.verycd.com/2006/02/24/0000091563.html&#34;&gt;《Lost》&lt;/a&gt;了。这个刚开始看，我第一季还没有看完，不过也不用急了，美剧总是播的很慢的。已经播完第一季，共25集。第二季也播完了好像，24集。&lt;br /&gt;

&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/229708920/lost.html&#34;&gt;&lt;img width=&#34;500&#34; height=&#34;400&#34; border=&#34;0&#34; alt=&#34;lost&#34; src=&#34;http://static.flickr.com/57/229708920_ea4154021e.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>纯 console 下用 screen 实现同屏两窗口</title>
      <link>https://wdicc.com/screen-hotkey/</link>
      <pubDate>Thu, 31 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/screen-hotkey/</guid>
      <description>
原文在 &lt;a href=&#34;http://linuxsir.org/bbs/showthread.php?t=247156&#34;&gt;这里&lt;/a&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
Ctrl-a c 
</description>
    </item>
    
    <item>
      <title>PING命令中TTL的具体含义zz</title>
      <link>https://wdicc.com/ttl-in-ping/</link>
      <pubDate>Wed, 30 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ttl-in-ping/</guid>
      <description>&lt;br /&gt;
以我公司2台机器为例&lt;br /&gt;
看如下命令&lt;br /&gt;
D:Documents and Settingshx&amp;gt;ping 61.152.93.131&lt;br /&gt;

Pinging 61.152.93.131 with 32 bytes of data:&lt;br /&gt;

Reply from 61.152.93.131: bytes=32 time=21ms TTL=118&lt;br /&gt;
Reply from 61.152.93.131: bytes=32 time=19ms TTL=118&lt;br /&gt;
Reply from 61.152.93.131: bytes=32 time=18ms TTL=118&lt;br /&gt;
Reply from 61.152.93.131: bytes=32 time=22ms TTL=118&lt;br /&gt;

Ping statistics for 61.152.93.131:&lt;br /&gt;
Packets: Sent = 4， Received = 4， Lost = 0 (0% loss&lt;br /&gt;
Approximate round trip times in milli-seconds:&lt;br /&gt;
Minimum = 18ms， Maximum = 22ms， Average = 20ms&lt;br /&gt;

D:Documents and Settingshx&amp;gt;ping 61.152.104.40&lt;br /&gt;

Pinging 61.152.104.40 with 32 bytes of data:&lt;br /&gt;

Reply from 61.152.104.40: bytes=32 time=28ms TTL=54&lt;br /&gt;
Reply from 61.152.104.40: bytes=32 time=18ms TTL=54&lt;br /&gt;
Reply from 61.152.104.40: bytes=32 time=18ms TTL=54&lt;br /&gt;
Reply from 61.152.104.40: bytes=32 time=13ms TTL=54&lt;br /&gt;

Ping statistics for 61.152.104.40:&lt;br /&gt;
Packets: Sent = 4， Received = 4， Lost = 0 (0% loss&lt;br /&gt;
Approximate round trip times in milli-seconds:&lt;br /&gt;
Minimum = 13ms， Maximum = 28ms， Average = 19ms&lt;br /&gt;
第一台TTL为118，则基本可以判断这是一台Windows机器，从我的机器到这台机器经过了10个节点，因为128-118=10。而第二台应该是台Linux，理由一样64-54=10。&lt;br /&gt;
了解了上面的东西，可能有人会有一些疑问，例如以下：&lt;br /&gt;

1，不是说包可能走很多路径吗，为什么我看到的4个包TTL都是一样的，没有出现不同？&lt;br /&gt;

这是由于包经过的路径是经过了一些最优选择算法来定下来的，在网络拓扑稳定一段时间后，包的路由路径也会相对稳定在一个最短路径上。具体怎么算出来的要去研究路由算法了，不在讨论之列。&lt;br /&gt;

2，对于上面例子第二台机器，为什么不认为它是经过了74个节点的Windows机器？因为128-74=54。&lt;br /&gt;

对于这个问题，我们要引入另外一个很好的ICMP协议工具。不过首先要声明的是，一个包经过74个节点这个有些恐怖，这样的路径还是不用为好。&lt;br /&gt;

要介绍的这个工具是tracert（*nix下为traceroute），让我们来看对上面的第二台机器用这个命令的结果&lt;br /&gt;
D:Documents and Settingshx&amp;gt;tracert 61.152.104.40&lt;br /&gt;

Tracing route to 61.152.104.40 over a maximum of 30 hops&lt;br /&gt;

1 13 ms 16 ms 9 ms 10.120.32.1&lt;br /&gt;
2 9 ms 9 ms 11 ms 219.233.244.105&lt;br /&gt;
3 12 ms 10 ms 10 ms 219.233.238.173&lt;br /&gt;
4 15 ms 15 ms 17 ms 219.233.238.13&lt;br /&gt;
5 14 ms 19 ms 19 ms 202.96.222.73&lt;br /&gt;
6 14 ms 17 ms 13 ms 202.96.222.121&lt;br /&gt;
7 14 ms 15 ms 14 ms 61.152.81.86&lt;br /&gt;
8 15 ms 14 ms 13 ms 61.152.87.162&lt;br /&gt;
9 16 ms 16 ms 28 ms 61.152.99.26&lt;br /&gt;
10 12 ms 13 ms 18 ms 61.152.99.94&lt;br /&gt;
11 14 ms 18 ms 16 ms 61.152.104.40&lt;br /&gt;

Trace complete.&lt;br /&gt;

从这个命令的结果能够看到从我的机器到服务器所走的路由，确实是11个节点（上面说10个好像是我犯了忘了算0的错误了，应该是64-54+1，嘿嘿），而不是128的TTL经过了70多个节点。&lt;br /&gt;
既然已经说到这里了，不妨顺便说说关于这两个ICMP命令的高级一点的东西。&lt;br /&gt;
首先是ping命令，其实ping有这样一个参数，可以无视操作系统默认TTL值而使用自己定义的值来发送ICMP Request包。&lt;br /&gt;
例如还是用那台Linux机器，用以下命令：&lt;br /&gt;
D:Documents and Settingshx&amp;gt;ping 61.152.104.40 -i 11&lt;br /&gt;

Pinging 61.152.104.40 with 32 bytes of data:&lt;br /&gt;

Reply from 61.152.104.40: bytes=32 time=10ms TTL=54&lt;br /&gt;
Reply from 61.152.104.40: bytes=32 time=13ms TTL=54&lt;br /&gt;
Reply from 61.152.104.40: bytes=32 time=10ms TTL=54&lt;br /&gt;
Reply from 61.152.104.40: bytes=32 time=13ms TTL=54&lt;br /&gt;

Ping statistics for 61.152.104.40:&lt;br /&gt;
Packets: Sent = 4， Received = 4， Lost = 0 (0% loss)，&lt;br /&gt;
Approximate round trip times in milli-seconds:&lt;br /&gt;
Minimum = 10ms， Maximum = 13ms， Average = 11ms&lt;br /&gt;

D:Documents and Settingshx&amp;gt;&lt;br /&gt;
这个命令我们定义了发包的TTL为11，而前面我们知道，我到这台服务器是要经过11个节点的，所以这个输出和以前没什么不同。现在再用这个试试看：&lt;br /&gt;
D:Documents and Settingshx&amp;gt;ping 61.152.104.40 -i 10&lt;br /&gt;

Pinging 61.152.104.40 with 32 bytes of data:&lt;br /&gt;

Reply from 61.152.99.94: TTL expired in transit.&lt;br /&gt;
Reply from 61.152.99.94: TTL expired in transit.&lt;br /&gt;
Reply from 61.152.99.94: TTL expired in transit.&lt;br /&gt;
Reply from 61.152.99.94: TTL expired in transit.&lt;br /&gt;

Ping statistics for 61.152.104.40:&lt;br /&gt;
Packets: Sent = 4， Received = 4， Lost = 0 (0% loss)，&lt;br /&gt;
Approximate round trip times in milli-seconds:&lt;br /&gt;
Minimum = 0ms， Maximum = 0ms， Average = 0ms&lt;br /&gt;

D:Documents and Settingshx&amp;gt;&lt;br /&gt;

可 以看到，结果不一样了，我定义了TTL为10来发包，结果是TTL expired in transit.就是说在到达服务器之前这个包的生命周期就结束了。注意看这句话前面的ip，这个ip恰好是我们前面tracert结果到服务器之前的最 后1个ip，包的TTL就是在这里减少到0了，根据我们前面的讨论，当TTL减为0时设备会丢弃包并发送一个TTL过期的ICMP反馈给源地址，这里的结 果就是最好的证明。&lt;br /&gt;
通过这里再次又证明了从我机器到服务器是经过了11个节点而不是70多个，呵呵。&lt;br /&gt;
最后再巩固一下知识，有人可能觉得tracer这个命令很神奇，可以发现一个包所经过的路由路径。其实这个命令的原理就在我们上面的讨论中。&lt;br /&gt;

想象一下，如果我给目的服务器发送一个TTL为1的包，结果会怎样？&lt;br /&gt;
根据前面的讨论，在包港出发的第一个节点，TTL就会减少为0，这时这个节点就会回应TTL失效的反馈，这个回应包含了设备本身的ip地址，这样我们就得到了路由路径的第一个节点的地址。&lt;br /&gt;
因此，我们继续发送TTL=2的包，也就受到第二个节点的TTL失效回应&lt;br /&gt;

依次类推，我们一个一个的发现，当最终返回的结果不是TTL失效而是ICMP Response的时候，我们的tracert也就结束了，就是这么简单。&lt;br /&gt;

顺便补一句ping命令还有个-n的参数指定要发包的数量，指定了这个数字就会按照你的要求来发包了而不是默认的4个包。如果使用-t参数的话，命令会一直发包直到你强行中止它。&lt;br /&gt;
&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;
&lt;!-- 分割 --&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>测试一下微软的livewrite</title>
      <link>https://wdicc.com/test-for-live-write/</link>
      <pubDate>Tue, 29 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/test-for-live-write/</guid>
      <description>
感觉好像还不错，呵呵。不过似乎没有写tag的地方。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>tomcat和apache桥接</title>
      <link>https://wdicc.com/tomcat-apache-bridge/</link>
      <pubDate>Wed, 23 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/tomcat-apache-bridge/</guid>
      <description>
1 下载，安装tomcat，jdk和mod_jk&lt;br /&gt;

下载jdk  &lt;a href=&#34;http://java.sun.com/javase/downloads/index.jsp&#34;&gt;http://java.sun.com/javase/downloads/index.jsp&lt;/a&gt;&lt;br /&gt;
tomcat 5.5 需要jre 1.5才可以。下载之后是一个bin文件&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$chmod +x xx.bin
$./xx.bin&lt;/pre&gt;

他会将jdk解压到当前目录下面，然后作一个链接
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

以后访问jdk文件夹即可，此处我们用JAVA_HOME来表示jdk文件夹的路径。

下载tomcat &lt;a href=&#34;http://tomcat.apache.org/download-55.cgi&#34;&gt;http://tomcat.apache.org/download-55.cgi&lt;/a&gt;
下载 Core 那个版本就可以，下载之后解压，选择放置地方之后，做一个链接
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

以后访问tomcat文件夹即可，此处我们用TOMCAT_HOME来表示tomcat的安装路径。

下载 mod_jk ，这个是用来完成apache和tomcat桥接的模块，&lt;a href=&#34;http://www.apache.org/dist/tomcat/tomcat-connectors/jk/&#34;&gt; http://www.apache.org/dist/tomcat/tomcat-connectors/jk/&lt;/a&gt; 。
可以下载已经编译好的模块，不过要注意要和自己的apache版本对应才行。也可以下载source自己编译，这里我们自己编译。

下载source之后，解压，进入解压后的目录，然后
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
$./configure --with-apxs=/usr/local/apache/bin/apxs #后面是apxs的目录
也可以
$./configure --with-apache=/usr/local/apache #apache的目录
$make
&lt;/pre&gt;&lt;br /&gt;
编译完成之后，复制桥接模块到apache的modules目录&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

2 配置

jdk的环境需要配置一个系统变量JAVA_HOME，可以写到/etc/profile中，或者修改tomcat的启动停止脚本来设置java环境也可以（这
</description>
    </item>
    
    <item>
      <title>上个周末happy了两天</title>
      <link>https://wdicc.com/2-days-happy/</link>
      <pubDate>Mon, 21 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/2-days-happy/</guid>
      <description>
&lt;p&gt;好爽的一个周末，两个报告，呵呵。不过我比较愿意两个报告分开两周来听，不过这样也好，下周就努力将老大的报告实现了。抱得美人归，总得意思意思，好歹给大家介绍介绍认识一下，要不都不知道该称呼啥。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;周日去唱歌又郁闷了，一定要努力学歌，去了不唱好像很亏得样子，为了不亏，一定要学会。嗯。&lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>针对nagios得两款小软件</title>
      <link>https://wdicc.com/software-for-nagios/</link>
      <pubDate>Mon, 14 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/software-for-nagios/</guid>
      <description>
&lt;a href=&#34;http://sourceforge.net/projects/ntrayc&#34;&gt;ntrayc&lt;/a&gt; 和 &lt;a href=&#34;http://sourceforge.net/projects/nagiostrayicon&#34;&gt;nagiostrayicon&lt;/a&gt;&lt;br /&gt;

都是在tray那里显示nagios是否报错得。到时会有声音或者窗口弹出来。&lt;br /&gt;

前者不需要安装，后者需要安装。界面功能来看都差不多。&lt;br /&gt;

刚装上有台服务器就down了，呵呵。比较了一下，觉得ntrayc比较好。下面是他们得设置界面。&lt;br /&gt;

ntrayc如下，两幅图，后面那个是他得console，可以同时得到服务得大概信息。不知道他哪里设置声音，下载得安装包里面没有声音文件。每次检测到问题都会弹出窗口。&lt;br /&gt;

&lt;img alt=&#34;ntrayc2.png&#34; id=&#34;image233&#34; src=&#34;http://blog.wdicc.com/wordpress/wp-content/uploads/2006/08/ntrayc2.png&#34; /&gt;&lt;br /&gt;
&lt;img alt=&#34;ntrayc.png&#34; id=&#34;image232&#34; src=&#34;http://blog.wdicc.com/wordpress/wp-content/uploads/2006/08/ntrayc.png&#34; /&gt;&lt;br /&gt;
nagios tray icon得设置界面如下，出问题得时候他不会弹出窗口，会出声叫。不过第二次检测就不叫了，icon变红色。&lt;br /&gt;
&lt;img alt=&#34;trayicon.png&#34; id=&#34;image231&#34; src=&#34;http://blog.wdicc.com/wordpress/wp-content/uploads/2006/08/trayicon.png&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>第一场秋雨？</title>
      <link>https://wdicc.com/first-rain/</link>
      <pubDate>Sun, 13 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/first-rain/</guid>
      <description>
最近一个星期以来真是闷热的恐怖啊，还好昨天晚上下了一场雨，早上起来凉爽多了。今年的天气一直就比较怪异，按照往年的情况，6，7月份北京应该已经热的不行了，可是今年却是凉爽居多，那段时间还总是下雨，都是晚上下，早上停的，倒是不影响上班。不过北京的交通实在太差了，遇上几次下班时候下雨的，出了地铁就全是人了，平时人多的公交车反而比较空，而出租车却死活打不上。那天是站在雨里等了n久才打上车，浑身上下都湿透了。&lt;br /&gt;

前几天立秋了，这在我们那里就表示早晚已经开始变凉了。北京这里却还没有变化，记得刚来北京上学的时候，是9月中吧，那会还是比较热的，我们那边早晚都得穿外套了。好像北京10.1都不凉快，唉。不过初步打算10.1回家，避暑去，嘿嘿。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>毛毛旧照</title>
      <link>https://wdicc.com/maomao-photo/</link>
      <pubDate>Tue, 08 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/maomao-photo/</guid>
      <description>
&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/210049529/IMG_0027.html&#34;&gt;&lt;img height=&#34;375&#34; alt=&#34;IMG_0027&#34; src=&#34;http://static.flickr.com/76/210049529_0c706d393e.jpg&#34; width=&#34;500&#34; border=&#34;0&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/210049445/IMG_0022.html&#34;&gt;&lt;img height=&#34;375&#34; alt=&#34;IMG_0022&#34; src=&#34;http://static.flickr.com/62/210049445_fdb84f0ae6.jpg&#34; width=&#34;500&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>美国, 香港, 中国大陆三地警察</title>
      <link>https://wdicc.com/caps-in-usa-hk-and-china/</link>
      <pubDate>Tue, 08 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/caps-in-usa-hk-and-china/</guid>
      <description>
为了测试美国, 香港, 中国大陆三地警察的实力, 联合国将三只兔子放在三个森林中, 看 三地警察谁先找出兔子.&lt;br /&gt;

任务:找出兔子&lt;br /&gt;
第一个森林前是美国警察, 他们先花整整半天时间开会制定作战计划, 严格分工, 然后派 特种部队快速进入森林进行地毯式搜索, 结果开会耽搁了时间, 兔子跑了, 任务失败!!!!&lt;br /&gt;
然后轮到香港警察, 他们派了一百多号人和几十辆警车在身临其境外一字排开, 由带头人 用喇叭喊话:&#34;兔子,兔子,你已经被包围了, 快出来投降......&#34; 半天过去了, 没动静. 飞 虎队进入森林, 搜索一遍, 没结果, 任务失败!!!!&lt;br /&gt;
最后是中国大陆警察, 只有四个, 先打了一天麻将, 黄昏时一人拿一警棍进入森林,没五分钟, 听到森林里传来一阵动物的惨叫, 中国警察一人抽着一根烟有说有笑的出来, 后面拖着一 只鼻青脸肿的熊,熊奄奄一息的说到:&#34;不要再打了, 我就是兔子.....&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>711也不保了，出现小偷</title>
      <link>https://wdicc.com/thief-in-711/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/thief-in-711/</guid>
      <description>
之前坐小九的时候，遇到过一次小偷。那家伙一上车就坐到了最后面一个坐。我站在他旁边，有两次这家伙往起一站都碰到头了。当时我没有想到是这家伙太注意目标了，所以才碰头，有人说丢手机的时候才想起来。丢手机的是个将手机跨在腰间的哥们，所以啊，一定不要用那种手机套了，太危险了，不过现在似乎很少有人用了。&lt;br /&gt;

今天坐711的时候，又有人丢东西了。开始是一个mm冲着一个男的问他干吗呢，那个男的小声的和那个mm说了句什么，后来那个mm也没说什么了，好像给110打电话了，说有个男的怎么怎么样。那个哥们也就在打电话的时候挤着下车跑了。然后就听见一个兄弟说手机丢了，他的手机似乎是放在上衣的口袋里面的。然后大家就开始议论那个小偷，之前那个mm也说了一下为什么要冲那个小偷问话，原来是小偷掏她钱包被发现了，钱包掉地上了。大家就说那你怎么不说啊，你说了那个小偷铁定不能让他下车啊，你不说大家都不知道怎么回事呢。&lt;br /&gt;

很挤的公交车上面很容易滋生小偷的，大家坐车的时候千万要注意。地铁上面似乎还没有遇到过小偷，可能对于小偷来说地铁逃起来太难吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>mysql安装</title>
      <link>https://wdicc.com/install-mysql-2/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-mysql-2/</guid>
      <description>&lt;br /&gt;
如下提示信息:&lt;br /&gt;

Installing all prepared tables&lt;br /&gt;
Fill help tables&lt;br /&gt;

To start mysqld at boot time you have to copy support-files/mysql.server&lt;br /&gt;
to the right place for your system&lt;br /&gt;

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !&lt;br /&gt;
To do so, start the server, then issue the following commands:&lt;br /&gt;
./bin/mysqladmin -u root password &#39;new-password&#39;&lt;br /&gt;
./bin/mysqladmin -u root -h czhand password &#39;new-password&#39;&lt;br /&gt;
See the manual for more instructions.&lt;br /&gt;

You can start the MySQL daemon with:&lt;br /&gt;
cd . ; ./bin/mysqld_safe &amp;&lt;br /&gt;

You can test the MySQL daemon with the benchmarks in the &#39;sql-bench&#39; directory:&lt;br /&gt;
cd sql-bench ; perl run-all-tests&lt;br /&gt;

Please report any problems with the ./bin/mysqlbug script!&lt;br /&gt;

The latest information about MySQL is available on the web at&lt;br /&gt;
http://www.mysql.com&lt;br /&gt;
Support MySQL by buying support/licenses at https://order.mysql.com&lt;br /&gt;

shell&gt; chown -R root  .&lt;br /&gt;
shell&gt; chown -R mysql data&lt;br /&gt;
shell&gt; chgrp -R mysql .&lt;br /&gt;

/home/my.cnf&lt;br /&gt;

basedir=/usr/local/mysql&lt;br /&gt;
datadir=/usr/local/mysql/data&lt;br /&gt;
socket=/usr/local/mysql/data/mysql.sock&lt;br /&gt;
#err-log=/var/log/mysqld.log&lt;br /&gt;
pid-file=/usr/local/mysql/data/mysqld.pid&lt;br /&gt;

shell&gt; bin/mysqld_safe --user=mysql &amp;&lt;br /&gt;

事实上，mysql.sock放到data目录是会出现问题的，因为data目录只有mysql用户可读，用php连接数据库的时候就会出现问题。所以，上面的最好修改一下。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Oracle10g EM乱码之快速解决</title>
      <link>https://wdicc.com/oracle-em-encoding/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-em-encoding/</guid>
      <description>&lt;br /&gt;
[oracle@danaly ~]$ cd $ORACLE_HOME/jdk/jre/lib&lt;br /&gt;
[oracle@danaly lib]$ ls font*zh_CN*&lt;br /&gt;
font.properties.zh_CN.Redhat  font.properties.zh_CN.Redhat2.1&lt;br /&gt;
font.properties.zh_CN.Sun  font.properties.zh_CN_UTF8.Sun&lt;br /&gt;

[oracle@danaly lib]$ cd $ORACLE_HOME/jre/1.4.2/lib/&lt;br /&gt;
[oracle@danaly lib]$ ls font*zh_CN*&lt;br /&gt;
font.properties.zh_CN.Redhat  font.properties.zh_CN.Redhat2.1&lt;br /&gt;
font.properties.zh_CN.Sun  font.properties.zh_CN_UTF8.Sun&lt;br /&gt;

我们只要用合适的中文字符集文件替换缺省文件即可,我选择使用font.properties.zh_CN.Redhat来替换缺省字体定义文件:&lt;br /&gt;

[oracle@danaly lib]$ cp font.properties.zh_CN.Redhat font.properties&lt;br /&gt;

替换之后需要清理一下Cache,重启EM即可.&lt;br /&gt;

Cache路径通常位于:&lt;br /&gt;

$ORACLE_HOME/oc4j/j2ee/oc4j_applications/applications/em/em/cabo/images/cache/zhs&lt;br /&gt;

清除所有gif文件即可.然后重新启动EM:&lt;br /&gt;

[oracle@danaly zhs]$ emctl stop dbconsole&lt;br /&gt;
TZ set to PRC&lt;br /&gt;
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0&lt;br /&gt;
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.&lt;br /&gt;
http://danaly.hurrray.com.cn:1158/em/console/aboutApplication&lt;br /&gt;
Stopping Oracle Enterprise Manager 10g Database Control ...&lt;br /&gt;
...  Stopped.&lt;br /&gt;
[oracle@danaly zhs]$ emctl start dbconsole&lt;br /&gt;
TZ set to PRC&lt;br /&gt;
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0&lt;br /&gt;
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.&lt;br /&gt;
http://danaly.hurrray.com.cn:1158/em/console/aboutApplication&lt;br /&gt;
Starting Oracle Enterprise Manager 10g Database Control .............. started.&lt;br /&gt;
------------------------------------------------------------------&lt;br /&gt;
Logs are generated in directory&lt;br /&gt;
/opt/oracle/product/10.2.0/danaly.hurrray.com.cn_danaly/sysman/log&lt;br /&gt;

现在登陆Web页面,EM显示就可以正常显示中文了.&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>oracle修改用户密码</title>
      <link>https://wdicc.com/change-username-in-oracle/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-username-in-oracle/</guid>
      <description>
如果用户是在服务器端使用数据库，那么可以用Oracle提供的SQLPlus进行数据库操作，假设要更改用户口令，可以这样做：&lt;br /&gt;

sqlplus user/password&lt;br /&gt;

sql&gt;alter user sys identified by new_password;&lt;br /&gt;

sql&gt;exit&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Oracle数据库日常维护手册</title>
      <link>https://wdicc.com/oracle-handbook/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-handbook/</guid>
      <description>&lt;br /&gt;
&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;    二、数据库表空间使用情况监控&lt;span lang=&#34;EN-US&#34;&gt;(&lt;/span&gt;字典管理表空间&lt;span lang=&#34;EN-US&#34;&gt;) &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;数据库运行了一段时间后，由于不断的在表空间上创建和删除对象，会在表空间上产生大量的碎片，&lt;span lang=&#34;EN-US&#34;&gt;DBA&lt;/span&gt;应该及时了解表空间的碎片和可用空间情况，以决定是否要对碎片进行整理或为表空间增加数据文件。&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;select tablespace_name, &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;count(*) chunks , &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;max(bytes/1024/1024) max_chunk &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;from dba_free_space &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;group by tablespace_name; &lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;上面的&lt;span lang=&#34;EN-US&#34;&gt;SQL&lt;/span&gt;列出了数据库中每个表空间的空闲块情况&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;其中，&lt;span lang=&#34;EN-US&#34;&gt;CHUNKS&lt;/span&gt;列表示表空间中有多少可用的空闲块&lt;span lang=&#34;EN-US&#34;&gt;(&lt;/span&gt;每个空闲块是由一些连续的&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;数据块组成&lt;span lang=&#34;EN-US&#34;&gt;)&lt;/span&gt;，如果这样的空闲块过多，比如平均到每个数据文件上超过了&lt;span lang=&#34;EN-US&#34;&gt;100&lt;/span&gt;个，那么该表空间的碎片状况就比较严重了，可以尝试用以下的&lt;span lang=&#34;EN-US&#34;&gt;SQL&lt;/span&gt;命令进行表空间相邻碎片的接合&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;alter tablespace &lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;表空间名&lt;span lang=&#34;EN-US&#34;&gt; coalesce; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;对表空间的扩充对表空间的数据文件大小进行扩展，或向表空间增加数据文件，例如：&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;alter database datafile ‘filename’ resize 2g;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;alter tablespace add datafile ‘filename’ size 2g;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;三、查看数据库的连接情况 &lt;/span&gt;&lt;/strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;DBA&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;要定时对数据库的连接情况进行检查，看与数据库建立的会话数目是不是正常，如果建立了过多的连接，会消耗数据库的资源。同时，对一些&lt;span lang=&#34;EN-US&#34;&gt;“&lt;/span&gt;挂死&lt;span lang=&#34;EN-US&#34;&gt;”&lt;/span&gt;的连接，可能会需要&lt;span lang=&#34;EN-US&#34;&gt;DBA&lt;/span&gt;手工进行清理。&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;以下的&lt;span lang=&#34;EN-US&#34;&gt;SQL&lt;/span&gt;语句列出当前数据库建立的会话情况&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;select sid,serial#,username,program,machine,status &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;from v$session;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt; &lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果&lt;span lang=&#34;EN-US&#34;&gt;DBA&lt;/span&gt;要手工断开某个会话，则执行&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;alter system kill session &#39;SID,SERIAL#&#39;; &lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;四、备份 &lt;/span&gt;&lt;/strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;控制文件的备份：&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;在数据库结构发生变化时，如增加了表空间，增加了数据文件或重做日志文件这些操作，都会造成&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;数据库控制文件的变化，&lt;span lang=&#34;EN-US&#34;&gt;DBA&lt;/span&gt;应及进行控制文件的备份，备份方法是&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;执行&lt;span lang=&#34;EN-US&#34;&gt;SQL&lt;/span&gt;语句&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;alter database &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;backup controlfile to &#39;/home/backup/control.bak&#39;; &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;或&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;alter database &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;backup controlfile to trace; &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;这样，会在&lt;span lang=&#34;EN-US&#34;&gt;USER_DUMP_DEST(&lt;/span&gt;初始化参数文件中指定&lt;span lang=&#34;EN-US&#34;&gt;)&lt;/span&gt;目录下生成创建控制文件的&lt;span lang=&#34;EN-US&#34;&gt;SQL&lt;/span&gt;命令。 &lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;数据逻辑备份：&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;导出：&lt;span lang=&#34;EN-US&#34;&gt;exp wd/******* file=***.dmp owner=wd&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;导入：&lt;span lang=&#34;EN-US&#34;&gt;imp wd/******* file=***.dmp fromuser=wd touser=wd&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;五、检查数据库文件的状态 &lt;/span&gt;&lt;/strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;DBA&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;要及时查看数据库中数据文件的状态&lt;span lang=&#34;EN-US&#34;&gt;(&lt;/span&gt;如被误删除&lt;span lang=&#34;EN-US&#34;&gt;)&lt;/span&gt;，根据实际情况决定如何进行处理，检查数据文件的状态的&lt;span lang=&#34;EN-US&#34;&gt;SQL&lt;/span&gt;如下&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;select file_name,status &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;from dba_data_files;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt; &lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果数据文件的&lt;span lang=&#34;EN-US&#34;&gt;STATUS&lt;/span&gt;列不是&lt;span lang=&#34;EN-US&#34;&gt;AVAILABLE&lt;/span&gt;，那么就要采取相应的措施，如对该数据文件进行恢复操作，或重建该数据文件所在的表空间。&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;六、检查数据库定时作业的完成情况 &lt;/span&gt;&lt;/strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果数据库使用了&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;的&lt;span lang=&#34;EN-US&#34;&gt;JOB&lt;/span&gt;来完成一些定时作业，要对这些&lt;span lang=&#34;EN-US&#34;&gt;JOB&lt;/span&gt;的运行情况进行检查&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;select job,log_user,last_date,failures &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;from dba_jobs; &lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果&lt;span lang=&#34;EN-US&#34;&gt;FAILURES&lt;/span&gt;列是一个大于&lt;span lang=&#34;EN-US&#34;&gt;0&lt;/span&gt;的数的话，说明&lt;span lang=&#34;EN-US&#34;&gt;JOB&lt;/span&gt;运行失败，要进一步的检查。&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;七、数据库坏块的处理 &lt;/span&gt;&lt;/strong&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;当&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;数据库出现坏块时，&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;会在警告日志文件&lt;span lang=&#34;EN-US&#34;&gt;(alert_SID.log)&lt;/span&gt;中记录坏块的信息&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;ORA-01578: ORACLE data block corrupted (file # 7, block # ) &lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;ORA-01110: data file : &#39;/oracle1/oradata/V920/oradata/V816/users01.dbf&#39; &lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;其中， 代表坏块所在数据文件的绝对文件号， 代表坏块是数据文件上的第几个数据块&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;出现这种情况时，应该首先检查是否是硬件及操作系统上的故障导致&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;数据库出现坏块。在排除了数据库以外的原因后，再对发生坏块的数据库对象进行处理。&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;1.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;确定发生坏块的数据库对象&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;SELECT tablespace_name, &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;segment_type, &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;owner, &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;segment_name &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;FROM dba_extents &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;WHERE file_id = &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;AND &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;between block_id AND block_id+blocks-1; &lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;2.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;决定修复方法&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果发生坏块的对象是一个索引，那么可以直接把索引&lt;span lang=&#34;EN-US&#34;&gt;DROP&lt;/span&gt;掉后，再根据表里的记录进行重建&lt;span lang=&#34;EN-US&#34;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果发生坏块的表的记录可以根据其它表的记录生成的话，那么可以直接把这个表&lt;span lang=&#34;EN-US&#34;&gt;DROP&lt;/span&gt;掉后重建&lt;span lang=&#34;EN-US&#34;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果有数据库的备份，则恢复数据库的方法来进行修复&lt;span lang=&#34;EN-US&#34;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果表里的记录没有其它办法恢复，那么坏块上的记录就丢失了，只能把表中其它数据块上的记录取出来，然后对这个表进行重建。&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;3.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;用&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;提供的&lt;span lang=&#34;EN-US&#34;&gt;DBMS_REPAIR&lt;/span&gt;包标记出坏块&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;exec DBMS_REPAIR.SKIP_CORRUPT_BLOCKS(&#39; &#39;,&#39;&#39;); &lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;4.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;使用&lt;span lang=&#34;EN-US&#34;&gt;Create table as select&lt;/span&gt;命令将表中其它块上的记录保存到另一张表上&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;create table corrupt_table_bak &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;as &lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;select * from corrupt_table; &lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;5.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;用&lt;span lang=&#34;EN-US&#34;&gt;DROP TABLE&lt;/span&gt;命令删除有坏块的表&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;drop table corrup_tatble; &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;6.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;用&lt;span lang=&#34;EN-US&#34;&gt;alter table rename&lt;/span&gt;命令恢复原来的表&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;

&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;alter table corrupt_table_bak &lt;/span&gt;&lt;/code&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 10pt; font-family: 新宋体; color: black&#34;&gt;&lt;br /&gt;
&lt;code&gt;&lt;span style=&#34;font-family: 新宋体&#34;&gt;rename to corrupt_table; &lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;7.&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;如果表上存在索引，则要重建表上的索引&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; font-family: 宋体; color: black&#34;&gt;八、操作系统相关维护 &lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;DBA&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;要注意对操作系统的监控&lt;span lang=&#34;EN-US&#34;&gt;: &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;●文件系统的空间使用情况&lt;span lang=&#34;EN-US&#34;&gt;(df -k)&lt;/span&gt;，必要时对&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;的警告日志及&lt;span lang=&#34;EN-US&#34;&gt;TRC&lt;/span&gt;文件进行清理&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;●如果&lt;span lang=&#34;EN-US&#34;&gt;Oracle&lt;/span&gt;提供网络服务，检查网络连接是否正常&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;●检查操作系统的资源使用情况是否正常&lt;span lang=&#34;EN-US&#34;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;●检查数据库服务器有没有硬件故障，如磁盘、内存报错&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;strong&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;九、数据库背景知识&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;配置文件&lt;span lang=&#34;EN-US&#34;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;spfile&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;，位于&lt;span lang=&#34;EN-US&#34;&gt;$ORACLE_HOME/dbs/spfile&lt;ORACLE_SID&gt;.ora,&lt;/span&gt;是一个二进制文件，不能直接编辑，&lt;span lang=&#34;EN-US&#34;&gt;Oracle9i&lt;/span&gt;之后默认使用&lt;span lang=&#34;EN-US&#34;&gt;spfile&lt;/span&gt;。可以通过&lt;span lang=&#34;EN-US&#34;&gt;alter system set &lt;/span&gt;×××&lt;span lang=&#34;EN-US&#34;&gt;=&lt;/span&gt;×××&lt;span lang=&#34;EN-US&#34;&gt;;&lt;/span&gt;来修改参数，大部分参数修改后不用重启数据库。可以通过执行&lt;span lang=&#34;EN-US&#34;&gt;show parameter spfile&lt;/span&gt;来查看是否使用了&lt;span lang=&#34;EN-US&#34;&gt;spfile&lt;/span&gt;，如果执行结果为空，则数据库没有使用&lt;span lang=&#34;EN-US&#34;&gt;spfile&lt;/span&gt;。执行&lt;span lang=&#34;EN-US&#34;&gt;create spfile from pfile; &lt;/span&gt;然后重启数据库就启用了&lt;span lang=&#34;EN-US&#34;&gt;spfile&lt;/span&gt;。&lt;span lang=&#34;EN-US&#34;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;pfile&lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;，位于&lt;span lang=&#34;EN-US&#34;&gt;$ORACLE_HOME/dbs/init&lt;ORACLE_SID&gt;.ora&lt;/span&gt;，是一个&lt;span lang=&#34;EN-US&#34;&gt;ASCII&lt;/span&gt;文件可以编辑，修改参数后需要重启数据库。&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;tnsnames.ora, &lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;位于&lt;span lang=&#34;EN-US&#34;&gt;$ORACLE_HOME/network/admin/tnsnames.ora, &lt;/span&gt;记录了服务明的信息。&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;listener.ora, &lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;位于&lt;span lang=&#34;EN-US&#34;&gt;$ORACLE_HOME/network/admin/listener.ora&lt;/span&gt;，记录了&lt;span lang=&#34;EN-US&#34;&gt;listener&lt;/span&gt;的信息。&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;日志文件&lt;span lang=&#34;EN-US&#34;&gt;   &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;alert, &lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;位于&lt;span lang=&#34;EN-US&#34;&gt;$ORACLE_BASE/admin/$ORACLE_SID/bdump/alert&lt;$ORACLE_SID&gt;.log, Oracle&lt;/span&gt;的报警日志，如数据库出错可以在此文件中查看。&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;redo, &lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;位于&lt;span lang=&#34;EN-US&#34;&gt;$ORACLE_BASE/oradata/redo&lt;/span&gt;××&lt;span lang=&#34;EN-US&#34;&gt;.log&lt;/span&gt;，&lt;span lang=&#34;EN-US&#34;&gt;Orale&lt;/span&gt;重做日志。&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;启动&lt;span lang=&#34;EN-US&#34;&gt;/&lt;/span&gt;停止&lt;span lang=&#34;EN-US&#34;&gt;ORACLE&lt;/span&gt;：&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;以&lt;span lang=&#34;EN-US&#34;&gt;sysdba&lt;/span&gt;权限登陆&lt;span lang=&#34;EN-US&#34;&gt;sqlplus&lt;/span&gt;，&lt;span lang=&#34;EN-US&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 42pt; line-height: 13.5pt&#34;&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;停止：&lt;span lang=&#34;EN-US&#34;&gt;shutdown immediate&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p style=&#34;text-indent: 24pt; line-height: 13.5pt&#34;&gt;&lt;span lang=&#34;EN-US&#34; style=&#34;font-size: 9pt; color: black&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;font-size: 9pt; color: black&#34;&gt;启动：&lt;span lang=&#34;EN-US&#34;&gt;startup&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Oracle维护常用SQL语句</title>
      <link>https://wdicc.com/usefull-sql/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/usefull-sql/</guid>
      <description>&lt;br /&gt;
3、查看回滚段名称及大小&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
select segment_name, tablespace_name, r.status,
(initial_extent/1024) InitialExtent,(next_extent/1024) NextExtent,
max_extents, v.curext CurExtent
From dba_rollback_segs r, v$rollstat v
Where r.segment_id = v.usn(+)
order by segment_name ;
&lt;/pre&gt;&lt;br /&gt;
4、查看控制文件&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
select name from v$controlfile;
&lt;/pre&gt;&lt;br /&gt;
5、查看日志文件&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
select member from v$logfile;
&lt;/pre&gt;&lt;br /&gt;
6、查看表空间的使用情况&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
select sum(bytes)/(1024*1024) as free_space,tablespace_name
from dba_free_space
group by tablespace_name;

SELECT A.TABLESPACE_NAME,A.BYTES TOTAL,B.BYTES USED, C.BYTES FREE,
(B.BYTES*100)/A.BYTES &#34;% USED&#34;,(C.BYTES*100)/A.BYTES &#34;% FREE&#34;
FROM SYS.SM$TS_AVAIL A,SYS.SM$TS_USED B,SYS.SM$TS_FREE C
WHERE A.TABLESPACE_NAME=B.TABLESPACE_NAME AND A.TABLESPACE_NAME=C.TABLESPACE_NAME;
&lt;/pre&gt;&lt;br /&gt;
7、查看数据库库对象&lt;br /&gt;
select owner, object_type, status, count(*) count# from all_objects group by owner, object_type, status;&lt;br /&gt;

8、查看数据库的版本&lt;br /&gt;
Select version FROM Product_component_version&lt;br /&gt;
Where SUBSTR(PRODUCT,1,6)=&#39;Oracle&#39;;&lt;br /&gt;

9、查看数据库的创建日期和归档方式&lt;br /&gt;
Select Created, Log_Mode, Log_Mode From V$Database;&lt;br /&gt;

10、捕捉运行很久的SQL&lt;br /&gt;
column username format a12&lt;br /&gt;
column opname format a16&lt;br /&gt;
column progress format a8&lt;br /&gt;
select username,sid,opname,&lt;br /&gt;
round(sofar*100 / totalwork,0) || &#39;%&#39; as progress,&lt;br /&gt;
time_remaining,sql_text&lt;br /&gt;
from v$session_longops , v$sql&lt;br /&gt;
where time_remaining &lt;&gt; 0&lt;br /&gt;
and sql_address = address&lt;br /&gt;
and sql_hash_value = hash_value&lt;br /&gt;
/&lt;br /&gt;

11、查看数据表的参数信息&lt;br /&gt;
SELECT partition_name, high_value, high_value_length, tablespace_name,&lt;br /&gt;
pct_free, pct_used, ini_trans, max_trans, initial_extent,&lt;br /&gt;
next_extent, min_extent, max_extent, pct_increase, FREELISTS,&lt;br /&gt;
freelist_groups, LOGGING, BUFFER_POOL, num_rows, blocks,&lt;br /&gt;
empty_blocks, avg_space, chain_cnt, avg_row_len, sample_size,&lt;br /&gt;
last_analyzed&lt;br /&gt;
FROM dba_tab_partitions&lt;br /&gt;
--WHERE table_name = :tname AND table_owner = :towner&lt;br /&gt;
ORDER BY partition_position&lt;br /&gt;

12、查看还没提交的事务&lt;br /&gt;
select * from v$locked_object;&lt;br /&gt;
select * from v$transaction;&lt;br /&gt;

13、查找object为哪些进程所用&lt;br /&gt;
select&lt;br /&gt;
p.spid,&lt;br /&gt;
s.sid,&lt;br /&gt;
s.serial# serial_num,&lt;br /&gt;
s.username user_name,&lt;br /&gt;
a.type object_type,&lt;br /&gt;
s.osuser os_user_name,&lt;br /&gt;
a.owner,&lt;br /&gt;
a.object object_name,&lt;br /&gt;
decode(sign(48 - command),&lt;br /&gt;
1,&lt;br /&gt;
to_char(command), &#39;Action Code #&#39; || to_char(command) ) action,&lt;br /&gt;
p.program oracle_process,&lt;br /&gt;
s.terminal terminal,&lt;br /&gt;
s.program program,&lt;br /&gt;
s.status session_status&lt;br /&gt;
from v$session s, v$access a, v$process p&lt;br /&gt;
where s.paddr = p.addr and&lt;br /&gt;
s.type = &#39;USER&#39; and&lt;br /&gt;
a.sid = s.sid and&lt;br /&gt;
a.object=&#39;SUBSCRIBER_ATTR&#39;&lt;br /&gt;
order by s.username, s.osuser&lt;br /&gt;

14、回滚段查看&lt;br /&gt;
select rownum, sys.dba_rollback_segs.segment_name Name, v$rollstat.extents&lt;br /&gt;
Extents, v$rollstat.rssize Size_in_Bytes, v$rollstat.xacts XActs,&lt;br /&gt;
v$rollstat.gets Gets, v$rollstat.waits Waits, v$rollstat.writes Writes,&lt;br /&gt;
sys.dba_rollback_segs.status status from v$rollstat, sys.dba_rollback_segs,&lt;br /&gt;
v$rollname where v$rollname.name(+) = sys.dba_rollback_segs.segment_name and&lt;br /&gt;
v$rollstat.usn (+) = v$rollname.usn order by rownum&lt;br /&gt;

15、耗资源的进程(top session)&lt;br /&gt;
select s.schemaname schema_name, decode(sign(48 - command), 1,&lt;br /&gt;
to_char(command), &#39;Action Code #&#39; || to_char(command) ) action, status&lt;br /&gt;
session_status, s.osuser os_user_name, s.sid, p.spid , s.serial# serial_num,&lt;br /&gt;
nvl(s.username, &#39;[Oracle process]&#39;) user_name, s.terminal terminal,&lt;br /&gt;
s.program program, st.value criteria_value from v$sesstat st, v$session s , v$process p&lt;br /&gt;
where st.sid = s.sid and st.statistic# = to_number(&#39;38&#39;) and (&#39;ALL&#39; = &#39;ALL&#39;&lt;br /&gt;
or s.status = &#39;ALL&#39;) and p.addr = s.paddr order by st.value desc, p.spid asc, s.username asc, s.osuser asc&lt;br /&gt;

16、查看锁(lock)情况&lt;br /&gt;
select /*+ RULE */ ls.osuser os_user_name, ls.username user_name,&lt;br /&gt;
decode(ls.type, &#39;RW&#39;, &#39;Row wait enqueue lock&#39;, &#39;TM&#39;, &#39;DML enqueue lock&#39;, &#39;TX&#39;,&lt;br /&gt;
&#39;Transaction enqueue lock&#39;, &#39;UL&#39;, &#39;User supplied lock&#39;) lock_type,&lt;br /&gt;
o.object_name object, decode(ls.lmode, 1, null, 2, &#39;Row Share&#39;, 3,&lt;br /&gt;
&#39;Row Exclusive&#39;, 4, &#39;Share&#39;, 5, &#39;Share Row Exclusive&#39;, 6, &#39;Exclusive&#39;, null)&lt;br /&gt;
lock_mode, o.owner, ls.sid, ls.serial# serial_num, ls.id1, ls.id2&lt;br /&gt;
from sys.dba_objects o, ( select s.osuser, s.username, l.type,&lt;br /&gt;
l.lmode, s.sid, s.serial#, l.id1, l.id2 from v$session s,&lt;br /&gt;
v$lock l where s.sid = l.sid ) ls where o.object_id = ls.id1 and o.owner&lt;br /&gt;
&lt;&gt; &#39;SYS&#39; order by o.owner, o.object_name&lt;br /&gt;

17、查看等待(wait)情况&lt;br /&gt;
SELECT v$waitstat.class, v$waitstat.count count, SUM(v$sysstat.value) sum_value&lt;br /&gt;
FROM v$waitstat, v$sysstat WHERE v$sysstat.name IN (&#39;db block gets&#39;,&lt;br /&gt;
&#39;consistent gets&#39;) group by v$waitstat.class, v$waitstat.count&lt;br /&gt;

18、查看sga情况&lt;br /&gt;
SELECT NAME, BYTES FROM SYS.V_$SGASTAT ORDER BY NAME ASC&lt;br /&gt;

19、查看catched object&lt;br /&gt;
SELECT owner, name, db_link, namespace,&lt;br /&gt;
type, sharable_mem, loads, executions,&lt;br /&gt;
locks, pins, kept FROM v$db_object_cache&lt;br /&gt;

20、查看V$SQLAREA&lt;br /&gt;
SELECT SQL_TEXT, SHARABLE_MEM, PERSISTENT_MEM, RUNTIME_MEM, SORTS,&lt;br /&gt;
VERSION_COUNT, LOADED_VERSIONS, OPEN_VERSIONS, USERS_OPENING, EXECUTIONS,&lt;br /&gt;
USERS_EXECUTING, LOADS, FIRST_LOAD_TIME, INVALIDATIONS, PARSE_CALLS, DISK_READS,&lt;br /&gt;
BUFFER_GETS, ROWS_PROCESSED FROM V$SQLAREA&lt;br /&gt;

21、查看object分类数量&lt;br /&gt;
select decode (o.type#,1,&#39;INDEX&#39; , 2,&#39;TABLE&#39; , 3 , &#39;CLUSTER&#39; , 4, &#39;VIEW&#39; , 5 ,&lt;br /&gt;
&#39;SYNONYM&#39; , 6 , &#39;SEQUENCE&#39; , &#39;OTHER&#39; ) object_type , count(*) quantity from&lt;br /&gt;
sys.obj$ o where o.type# &gt; 1 group by decode (o.type#,1,&#39;INDEX&#39; , 2,&#39;TABLE&#39; , 3&lt;br /&gt;
, &#39;CLUSTER&#39; , 4, &#39;VIEW&#39; , 5 , &#39;SYNONYM&#39; , 6 , &#39;SEQUENCE&#39; , &#39;OTHER&#39; ) union select&lt;br /&gt;
&#39;COLUMN&#39; , count(*) from sys.col$ union select &#39;DB LINK&#39; , count(*) from&lt;br /&gt;

22、按用户查看object种类&lt;br /&gt;
select u.name schema, sum(decode(o.type#, 1, 1, NULL)) indexes,&lt;br /&gt;
sum(decode(o.type#, 2, 1, NULL)) tables, sum(decode(o.type#, 3, 1, NULL))&lt;br /&gt;
clusters, sum(decode(o.type#, 4, 1, NULL)) views, sum(decode(o.type#, 5, 1,&lt;br /&gt;
NULL)) synonyms, sum(decode(o.type#, 6, 1, NULL)) sequences,&lt;br /&gt;
sum(decode(o.type#, 1, NULL, 2, NULL, 3, NULL, 4, NULL, 5, NULL, 6, NULL, 1))&lt;br /&gt;
others from sys.obj$ o, sys.user$ u where o.type# &gt;= 1 and u.user# =&lt;br /&gt;
o.owner# and u.name &lt;&gt; &#39;PUBLIC&#39; group by u.name order by&lt;br /&gt;
sys.link$ union select &#39;CONSTRAINT&#39; , count(*) from sys.con$&lt;br /&gt;

23、有关connection的相关信息&lt;br /&gt;

1)查看有哪些用户连接&lt;br /&gt;
select s.osuser os_user_name, decode(sign(48 - command), 1, to_char(command),&lt;br /&gt;
&#39;Action Code #&#39; || to_char(command) ) action, p.program oracle_process,&lt;br /&gt;
status session_status, s.terminal terminal, s.program program,&lt;br /&gt;
s.username user_name, s.fixed_table_sequence activity_meter, &#39;&#39; query,&lt;br /&gt;
0 memory, 0 max_memory, 0 cpu_usage, s.sid, s.serial# serial_num&lt;br /&gt;
from v$session s, v$process p where s.paddr=p.addr and s.type = &#39;USER&#39;&lt;br /&gt;
order by s.username, s.osuser&lt;br /&gt;

2)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>PAM入门介绍</title>
      <link>https://wdicc.com/about-pam/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-pam/</guid>
      <description>&lt;br /&gt;
二、PAM支持的四种管理界面：&lt;br /&gt;

1、认证管理（authentication management）&lt;br /&gt;
主要是接受用户名和密码，进而对该用户的密码进行认证，并负责设置用户的一些秘密&lt;br /&gt;
信息。&lt;br /&gt;
2、帐户管理（account management）&lt;br /&gt;
主要是检查帐户是否被允许登录系统，帐号是否已经过期，帐号的登录是否有时间段的&lt;br /&gt;
限制等等。&lt;br /&gt;
3、密码管理（password management）&lt;br /&gt;
主要是用来修改用户的密码。&lt;br /&gt;
4、会话管理（session management）&lt;br /&gt;
主要是提供对会话的管理和记账（accounting）。&lt;br /&gt;

三、PAM的文件：&lt;br /&gt;

/usr/lib/libpam.so.*                  PAM核心库&lt;br /&gt;
/etc/pam.conf或者/etc/pam.d/          PAM配置文件&lt;br /&gt;
/usr/lib/security/pam_*.so            可动态加载的PAM service module&lt;br /&gt;
对于RedHat，其目录不是/usr/lib，而是/lib。&lt;br /&gt;

四、PAM的配置：&lt;br /&gt;

PAM的配置是通过单个配置文件/etc/pam.conf。RedHat还支持另外一种配置方式，即通过配&lt;br /&gt;
置目录/etc/pam.d/，且这种的优先级要高于单 个配置文件的方式。&lt;br /&gt;

1、使用配置文件/etc/pam.conf&lt;br /&gt;

该文件是由如下的行所组成的：&lt;br /&gt;
service-name  module-type  control-flag  module-path  arguments&lt;br /&gt;

service-name 服务的名字，比如telnet、login、ftp等，服务名字“OTHER”代表所有没有&lt;br /&gt;
在该文件中明确配置的其它服务。&lt;br /&gt;
module-type  模块类型有四种：auth、account、session、password，即对应PAM所支持的&lt;br /&gt;
四种管理方式。同一个服务可以调用多个 PAM模块进行认证，这些模块构成一个stack。&lt;br /&gt;
control-flag 用来告诉PAM库该如何处理与该服务相关的PAM模块的成功或失败情况。它有四&lt;br /&gt;
种可能的 值：required，requisite，sufficient，optional。&lt;br /&gt;
required 表示本模块必须返回成功才能通过认证，但是如果该模块返回失败的话，失败&lt;br /&gt;
结果也不会立即通知用户，而是要等到同一stack 中的所有模块全部执行完毕再将失败结果&lt;br /&gt;
返回给应用程序。可以认为是一个必要条件。&lt;br /&gt;
requisite 与required类似，该模块必须返回成功才能通过认证，但是一旦该模块返回&lt;br /&gt;
失败，将不再执行同一stack内的任何模块，而是直 接将控制权返回给应用程序。是一个必&lt;br /&gt;
要条件。注：这种只有RedHat支持，Solaris不支持。&lt;br /&gt;
sufficient 表明本模块返回成功已经足以通过身份认证的要求，不必再执行同一stack&lt;br /&gt;
内的其它模块，但是如果本模块返回失败的话可以 忽略。可以认为是一个充分条件。&lt;br /&gt;
optional表明本模块是可选的，它的成功与否一般不会对身份认证起关键作用，其返回&lt;br /&gt;
值一般被忽略。&lt;br /&gt;
对于control-flag，从Linux-PAM-0.63版本起，支持一种新的语法，具体可参看Linux&lt;br /&gt;
PAM文档。&lt;br /&gt;
module-path 用来指明本模块对应的程序文件的路径名，一般采用绝对路径，如果没有给出&lt;br /&gt;
绝对路径，默认该文件在目录/usr/lib/security下 面。&lt;br /&gt;
arguments  是用来传递给该模块的参数。一般来说每个模块的参数都不相同，可以由该模块&lt;br /&gt;
的开发者自己定义，但是也有以下几个共同 的参数：&lt;br /&gt;
debug          该模块应当用syslog( )将调试信息写入到系统日志文件中。&lt;br /&gt;
no_warn        表明该模块不应把警告信息发送给应用程序。&lt;br /&gt;
use_first_pass  表明该模块不能提示用户输入密码，而应使用前一个模块从用户那里&lt;br /&gt;
得到的密码。&lt;br /&gt;
try_first_pass  表明该模块首先应当使用前一个模块从用户那里得到的密码，如果该&lt;br /&gt;
密码验证不通过，再提示用户输入新的密码。&lt;br /&gt;
use_mapped_pass 该模块不能提示用户输入密码，而是使用映射过的密码。&lt;br /&gt;
expose_account  允许该模块显示用户的帐号名等信息，一般只能在安全的环境下使用&lt;br /&gt;
，因为泄漏用户名会对安全造成一定程度的威 胁。&lt;br /&gt;

2、使用配置目录/etc/pam.d/（只适用于RedHat Linux）&lt;br /&gt;

该目录下的每个文件的名字对应服务名，例如ftp服务对应文件/etc/pam.d/ftp。如果名为x&lt;br /&gt;
xxx的服务所对应的配置文件/etc/pam.d/xxxx不存 在，则该服务将使用默认的配置文件/et&lt;br /&gt;
c/pam.d/other。每个文件由如下格式的文本行所构成：&lt;br /&gt;
module-type  control-flag  module-path  arguments&lt;br /&gt;
每个字段的含义和/etc/pam.conf中的相同。&lt;br /&gt;

3、配置的例子&lt;br /&gt;

例一：用/etc/pam.conf配置默认的认证方式。&lt;br /&gt;

下面的例子将拒绝所有没有在/etc/pam.conf中明确配置的服务。OTHER代表没有明确配置的&lt;br /&gt;
其它所有服务，pam_deny模块的作用只是简 单地拒绝通过认证。&lt;br /&gt;
OTHER  auth    required      /usr/lib/security/pam_deny.so&lt;br /&gt;
OTHER  account  required      /usr/lib/security/pam_deny.so&lt;br /&gt;
OTHER  password required      /usr/lib/security/pam_deny.so&lt;br /&gt;
OTHER  session  required      /usr/lib/security/pam_deny.so&lt;br /&gt;


例二：通过/etc/pam.d/rsh文件配置rsh服务的认证方式。&lt;br /&gt;

rsh服务认证用户时，先使用/etc/hosts.equiv和.rhosts文件的认证方式，然后再根据/etc&lt;br /&gt;
/nologin文件的存在与否来判断是否允许该用户使用 rsh，最后使用password database来认&lt;br /&gt;
证用户。&lt;br /&gt;

auth      required    /lib/security/pam_rhosts_auth.so&lt;br /&gt;
auth      required    /lib/security/pam_nologin.so&lt;br /&gt;
account    required    /lib/security/pam_pwdb.so&lt;br /&gt;
session    required    /lib/security/pam_pwdb.so&lt;br /&gt;


例三：通过/etc/pam.conf配置ftpd的认证方式。&lt;br /&gt;

下面是ftpd服务利用PAM模块进行用户认证的三个步骤。首先用pam_ftp模块检查当前用户是&lt;br /&gt;
否为匿名用户，如果是匿名用户，则 sufficient控制标志表明无需再进行后面的认证步骤，&lt;br /&gt;
直接通过认证；否则继续使用pam_unix_auth模块来进行标准的unix认证，即用/etc/ passw&lt;br /&gt;
d和/etc/shadow进行认证；通过了pam_unix_auth模块的认证之后，还要继续用pam_listfil&lt;br /&gt;
e模块来检查该用户是否出现在文件/etc/ ftpusers中，如果是则该用户被deny掉。&lt;br /&gt;
ftpd    auth    sufficient  /usr/lib/security/pam_ftp.so&lt;br /&gt;
ftpd    auth    required    /usr/lib/security/pam_unix_auth.so use_first_pass&lt;br /&gt;
ftpd    auth    required    /usr/lib/security/pam_listfile.so \&lt;br /&gt;
onerr=succeed item=user sense=deny file=/etc/ftpuser&lt;br /&gt;
s&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>weblogic乱码问题</title>
      <link>https://wdicc.com/weblogic-encoding/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/weblogic-encoding/</guid>
      <description>&lt;br /&gt;
3 下面是手册中关于国际化的一段说法，按照下面的说法，应该是不管有没有设置weblogic的字符集，他都会正确处理多字节字符，默认使用的是utf－8。&lt;br /&gt;

Often the default character sets used by WebLogic Server are adequate and you do not need to explicitly specify a character set for a Web Service. For example, if a client application specifies its preferred character set, and there is no character set specified for a Web Service, then WebLogic Server responds by using the client&#39;s preferred character set. Also, non-internationalized WebLogic Server instances use the US-ASCII character set by default, and internationalized WebLogic Server instances use the UTF-8 character set by default, and both of these character sets are compatible when one WebLogic Server instance is communicating with the other. This also means that a Web Service running on a non-internationalized WebLogic Server instance can handle multi-byte characters correctly.&lt;br /&gt;

具体修改的方法可以参看这里：http://e-docs.bea.com/wls/docs81/webserv/i18n.html。&lt;br /&gt;
生效的顺序如下：&lt;br /&gt;

Order of Precedence of Character Set Configuration Used By WebLogic Server&lt;br /&gt;

The following list shows the order by which WebLogic Server determines the character set of a WebLogic Web Service when it is creating the SOAP response to an invoke of one of its operations:&lt;br /&gt;

1. The value of the charset attribute in the corresponding &lt;web-service&gt; element of the web-services.xml deployment descriptor.&lt;br /&gt;

If this is not set, then WebLogic Server looks at the following:&lt;br /&gt;

2. The character set preferred by the client application that invoked the Web Service operation. If your client application uses the WebLogic Web Services client APIS, the character set is specified using the weblogic.webservice.binding.BindingInfo.setAcceptCharset() method.&lt;br /&gt;

If this is not set, then WebLogic Server looks at the following:&lt;br /&gt;

3. The value of the WebLogic Server system property weblogic.webservice.i18n.charset.&lt;br /&gt;

If this is not set, then WebLogic Server looks at the following:&lt;br /&gt;

4. The character set specified for the JVM. Specifically, if the JVM property user.language is set to en, then WebLogic Web Services use the US-ASCII character set. If the user.language property is set to anything else, WebLogic Web Services use the UTF-8 character set.&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>weblogic安装</title>
      <link>https://wdicc.com/install-weblogic/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-weblogic/</guid>
      <description>&lt;br /&gt;
Extracting 0%....................................................................................................100%&lt;br /&gt;
&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Welcome:&lt;br /&gt;
--------&lt;br /&gt;
This installer will guide you through the installation of WebLogic Server 8.1 SP3. Type &#34;Next&#34; or enter to proceed to the next prompt.  If you want to change data entered previously, type &#34;Previous&#34;.  You may quit the installer at any time by typing &#34;Exit&#34;.&lt;br /&gt;
Enter [Exit][Next]&gt;Next&lt;br /&gt;

直接按回车。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
BEA Systems License Agreement:&lt;br /&gt;
------------------------------&lt;br /&gt;
BEA SYSTEMS, INC. SOFTWARE LICENSE AGREEMENT&lt;br /&gt;
USE OF SOFTWARE ORDERED FROM BEA SYSTEMS, INC. (&#34;BEA&#34;) IS PROVIDED ONLY UNDER LICENSE FROM BEA. PLEASE&lt;br /&gt;
READ THE FOLLOWING LICENSE CAREFULLY AND INDICATE YOUR ACCEPTANCE BY CLICKING THE ACCEPTANCE BOX. CERTAIN&lt;br /&gt;
CAPITALIZED TERMS ARE DEFINED IN SECTION  11.&lt;br /&gt;
1.      LICENSE TERMS&lt;br /&gt;
a.      Workshop Free Use.  The terms of this Section 1(a) are applicable to you if you have registered as a Workshop Free customer. Subject to the terms of this Agreement, BEA grants to you a non-exclusive,&lt;br /&gt;
non-transferable, royalty-free license to use Workshop Free solely for Development Use and Scale-Limited&lt;br /&gt;
Personal Use for the number of users and/or developers and the number of CPU&#39;s, Servers and/or at the&lt;br /&gt;
Sites, as specified at the time of registration. Third party software products or modules supplied by BEA, if any, may be used solely with the Software. All rights not specifically granted to you herein are&lt;br /&gt;
retained by BEA.&lt;br /&gt;
b.      Workshop Pro Use.  The terms of this Section 1(b) are applicable to you if you have registered as&lt;br /&gt;
a Workshop Pro customer. Subject to the terms of this Agreement, BEA grants to you a non-exclusive,&lt;br /&gt;
non-transferable, fee-bearing license to use Workshop Pro solely for Development Use and Scale-Limited&lt;br /&gt;
Commercial Use for the number of users and/or developers and the number of CPU&#39;s, Servers and/or at the&lt;br /&gt;
Sites, as specified on BEA&#39;s invoice. Third party software products or modules supplied by BEA, if any,&lt;br /&gt;
may be used solely with the Software. All rights not specifically granted to you herein are retained by&lt;br /&gt;
Select Option:&lt;br /&gt;
1 - Yes, I agree with the terms of the license&lt;br /&gt;
2 - No, I do not agree with the terms of the license&lt;br /&gt;
Enter option number to select OR [Down][Exit][Previous]&gt;1&lt;br /&gt;

这里问是否同意weblogic的协议，输入1回车。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose BEA Home Directory:&lt;br /&gt;
--------------------------&lt;br /&gt;
*BEA home choice&lt;br /&gt;
1|Create a new BEA Home [/root/bea]&lt;br /&gt;
-&gt;2|Use an existing BEA Home [/usr/local/bea]&lt;br /&gt;
Enter index number to select OR [Exit][Previous][Next]&gt;1&lt;br /&gt;

让选择一个bea的目录，这里我们要设置为/usr/local/wls813/bea。先选1，会出来下面的界面。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose BEA Home Directory:&lt;br /&gt;
--------------------------&lt;br /&gt;
&#34;BEA Home&#34; = [/root/bea]&lt;br /&gt;
Input new BEA Home OR [Exit][Previous][Next]&gt; /usr/local/wls813/bea&lt;br /&gt;

输入bea的目录，也就是/usr/local/wls813/bea。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose BEA Home Directory:&lt;br /&gt;
--------------------------&lt;br /&gt;
*BEA home choice&lt;br /&gt;
-&gt;1|Yes, Use this BEA home directory [/usr/local/wls813/bea]&lt;br /&gt;
2|No, return to BEA home directory selection&lt;br /&gt;
Enter index number to select OR [Exit][Previous][Next]&gt; 1&lt;br /&gt;

让确认一下。选1确认。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose Install Type:&lt;br /&gt;
--------------------&lt;br /&gt;
-&gt;1|Complete&lt;br /&gt;
|Install the complete BEA WebLogic Platform.&lt;br /&gt;
2|Custom Installation&lt;br /&gt;
|Choose software components to install and perform optional configuration.&lt;br /&gt;
Enter index number to select OR [Exit][Previous][Next]&gt; 2&lt;br /&gt;

选择安装类型，我们选择2，自定义安装。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose Components to install:&lt;br /&gt;
-----------------------------&lt;br /&gt;
Release 8.1.3.0&lt;br /&gt;
|_____WebLogic Server [1]&lt;br /&gt;
|    |_____Server [1.1]&lt;br /&gt;
|    |_____Server Examples [1.2]&lt;br /&gt;
|_____WebLogic Workshop [2]&lt;br /&gt;
|_____Workshop Runtime Framework [2.1]&lt;br /&gt;
|_____WebLogic Workshop Application Developer Edition [2.2]&lt;br /&gt;
|_____Workshop Samples [2.3]&lt;br /&gt;
Enter number exactly as it appears in brackets to toggle selection OR [Exit][Previous][Next]&gt; 1&lt;br /&gt;

选择要安装的组件，选1，只安装weblogic server。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose Components to install:&lt;br /&gt;
-----------------------------&lt;br /&gt;
Release 8.1.3.0&lt;br /&gt;
|_____WebLogic Server [1] x&lt;br /&gt;
|    |_____Server [1.1] x&lt;br /&gt;
|    |_____Server Examples [1.2] x&lt;br /&gt;
|_____WebLogic Workshop [2]&lt;br /&gt;
|_____Workshop Runtime Framework [2.1]&lt;br /&gt;
|_____WebLogic Workshop Application Developer Edition [2.2]&lt;br /&gt;
|_____Workshop Samples [2.3]&lt;br /&gt;
Enter number exactly as it appears in brackets to toggle selection OR [Exit][Previous][Next]&gt; Next&lt;br /&gt;

选好之后按回车继续&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose Components to install:&lt;br /&gt;
-----------------------------&lt;br /&gt;
-&gt;1|Yes, use these component selections&lt;br /&gt;
2|No, return to component selection&lt;br /&gt;
Enter index number to select OR [Exit][Next]&gt; 1&lt;br /&gt;

选1确认组件选择。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Choose Product Directory:&lt;br /&gt;
-------------------------&lt;br /&gt;
&#34;Product Installation Directory&#34; = [/usr/local/wls813/weblogic81]&lt;br /&gt;
Input new Product Installation Directory OR [Exit][Previous][Next]&gt;/usr/local/wls813&lt;br /&gt;

选择安装路径，这里要输入/usr/local/wls813。此后还有一个确认。&lt;br /&gt;

&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Installing files..&lt;br /&gt;
0%          25%          50%          75%          100%&lt;br /&gt;
[------------|------------|------------|------------]&lt;br /&gt;
[***************************************************]&lt;br /&gt;
&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;
Installing JDK....&lt;br /&gt;
0%          25%          50%          75%          100%&lt;br /&gt;
[------------|------------|------------|------------]&lt;br /&gt;
[***************************************************]&lt;br /&gt;
&lt;-------------------------------- BEA Installer - WebLogic Server 8.1 SP3 -------------------------------&gt;&lt;br /&gt;

开始安装，此时会出现一个模拟的进度条，耐心等待，直到100%。&lt;br /&gt;

Installation Complete&lt;br /&gt;
Congratulations! WebLogic Server 8.1 SP3 has been successfully installed to /usr/local/wls813.&lt;br /&gt;
Press any key to continue OR [Exit]&gt;&lt;br /&gt;

至此，Weblogic8.1 sp3已成功安装到目录/usr/local/wls813下。&lt;br /&gt;

安装完之后，还需要新建一个域。新建域的方法是使用/usr/local/wls813/common/bin/config.sh命令。&lt;br /&gt;

-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Create or Extend a Configuration:&lt;br /&gt;
---------------------------------&lt;br /&gt;

Choose between creating and extending a configuration. Based on your selection, the Configuration Wizard guides you through&lt;br /&gt;
the steps to generate a new or extend an existing configuration.&lt;br /&gt;

-&gt;1|Create a new WebLogic configuration&lt;br /&gt;
|    Start here to create a WebLogic configuration in your projects directory.&lt;br /&gt;

2|Extend an existing WebLogic configuration&lt;br /&gt;
|    Start here to extend an existing WebLogic configuration.  Use this option to add applications and services,&lt;br /&gt;
|including Database access (JDBC) and Messaging (JMS). This option also enables you to extend functionality by enabling&lt;br /&gt;
|WebLogic Workshop.&lt;br /&gt;

Enter index number to select OR [Exit][Next]&gt;&lt;br /&gt;

选1，新建一个域。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Select a Domain Template:&lt;br /&gt;
-------------------------&lt;br /&gt;

Please select a template from the list or select another directory of templates.&lt;br /&gt;

* [/usr/local/wls813/common/templates/domains]&lt;br /&gt;

-&gt;1|Basic WebLogic Server Domain 8.1.3.0&lt;br /&gt;
|  BEA Systems, Inc.&lt;br /&gt;
|  Create a basic WebLogic Server domain without installing sample applications.&lt;br /&gt;

2|WebLogic Server Examples Domain 8.1.3.0&lt;br /&gt;
|  BEA Systems, Inc.&lt;br /&gt;
|  Create the WebLogic Server Examples domain in a directory outside of the installed kit.  The Examples domain contains     |a collection of examples to show best practices for coding individual J2EE APIs.&lt;br /&gt;

3|Avitek Medical Records Sample Domain 8.1.3.0&lt;br /&gt;
|  BEA Systems, Inc.&lt;br /&gt;
|  Create the Avitek Medical Records domain in a directory outside of the installed kit.  The Avitek Medical Records is&lt;br /&gt;
|a WebLogic Server sample application suite that concisely demonstrates all aspects of the J2EE platform.&lt;br /&gt;

4|Select another directory location&lt;br /&gt;

Enter index number to select OR [Exit][Previous][Next]&gt;&lt;br /&gt;

选1，基本的wls域。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Choose Configuration Option:&lt;br /&gt;
----------------------------&lt;br /&gt;

*Do you want to run the wizard in express mode?&lt;br /&gt;

-&gt;1|Yes&lt;br /&gt;

2|No&lt;br /&gt;

Enter index number to select OR [Exit][Previous][Next]&gt;&lt;br /&gt;

选1。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Configure Administrative Username and Password:&lt;br /&gt;
-----------------------------------------------&lt;br /&gt;

Create a user automatically assigned to the Administrative Role. This user is the default administrator used to start&lt;br /&gt;
development mode servers.&lt;br /&gt;

|          Name           |              Value              |&lt;br /&gt;
_|_________________________|_________________________________|&lt;br /&gt;
1|       *User name:       |            weblogic             |&lt;br /&gt;
2|     *User password:     |                                 |&lt;br /&gt;
3| *Confirm user password: |                                 |&lt;br /&gt;
4|      Description:       | The default administration user |&lt;br /&gt;

Select Option:&lt;br /&gt;
1 - Modify &#34;User name&#34;&lt;br /&gt;
2 - Modify &#34;User password&#34;&lt;br /&gt;
3 - Modify &#34;Confirm user password&#34;&lt;br /&gt;
4 - Modify &#34;Description&#34;&lt;br /&gt;

Enter option number to select OR [Exit][Previous][Next]&gt;&lt;br /&gt;

在这个界面设置user name为system，并设置密码。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Configure Administrative Username and Password:&lt;br /&gt;
-----------------------------------------------&lt;br /&gt;

Create a user automatically assigned to the Administrative Role. This user is the default administrator used to start&lt;br /&gt;
development mode servers.&lt;br /&gt;

|          Name           |              Value              |&lt;br /&gt;
_|_________________________|_________________________________|&lt;br /&gt;
1|       *User name:       |             system              |&lt;br /&gt;
2|     *User password:     |            ********             |&lt;br /&gt;
3| *Confirm user password: |            ********             |&lt;br /&gt;
4|      Description:       | The default administration user |&lt;br /&gt;

Select Option:&lt;br /&gt;
1 - Modify &#34;User name&#34;&lt;br /&gt;
2 - Modify &#34;User password&#34;&lt;br /&gt;
3 - Modify &#34;Confirm user password&#34;&lt;br /&gt;
4 - Modify &#34;Description&#34;&lt;br /&gt;
5 - Discard Changes&lt;br /&gt;

Enter option number to select OR [Exit][Previous][Next]&gt;&lt;br /&gt;

都设置好之后，回车继续。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Domain Mode Configuration:&lt;br /&gt;
--------------------------&lt;br /&gt;

Enable Development or Production Mode for this domain.&lt;br /&gt;

-&gt;1|Development Mode&lt;br /&gt;

2|Production Mode&lt;br /&gt;

Enter index number to select OR [Exit][Previous][Next]&gt;&lt;br /&gt;

这里选择1，使用开发模式。因为我们经常需要重新启动weblogic，而使用产品模式的话，停止weblogic的时候是需要输入用户名密码的。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Java SDK Selection:&lt;br /&gt;
-------------------&lt;br /&gt;

-&gt;1|JRockit SDK 1.4.2_04-8130 @ /usr/local/wls813/bea/jrockit81sp3_142_04&lt;br /&gt;
2|Sun SDK 1.4.2_04 @ /usr/local/wls813/bea/jdk142_04&lt;br /&gt;
3|Other Java SDK&lt;br /&gt;

Enter index number to select OR [Exit][Previous][Next]&gt;&lt;br /&gt;

根据应用需要选择sdk，通常选择1。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Select the target domain directory for this configuration:&lt;br /&gt;
----------------------------------------------------------&lt;br /&gt;

&#34;Target Location&#34; = [/usr/local/wls813/user_projects/domains]&lt;br /&gt;

Input new Target Location OR [Exit][Previous][Next]&gt;&lt;br /&gt;

选择域的安装位置，这里我们选择/usr/local/wls813/。&lt;br /&gt;

&lt;-------------------------------------------- BEA WebLogic Configuration Wizard -------------------------------------------&gt;&lt;br /&gt;

Edit Domain Information:&lt;br /&gt;
------------------------&lt;br /&gt;

|  Name  |  Value   |&lt;br /&gt;
_|________|__________|&lt;br /&gt;
1| *Name: | mydomain |&lt;br /&gt;

Enter value for &#34;Name&#34; OR [Exit][Previous][Next]&gt;&lt;br /&gt;

设置域名，，具体是anymusic还是xstyle，看需要。在下一步确认。然后就会出现安装的进度条，等待片刻即可安装完毕。&lt;br /&gt;

域安装完毕之后，要为域做一个链接&lt;br /&gt;
ln -s /usr/local/wls813/anymusic /usr/local/wls&lt;br /&gt;

这样，以后访问/usr/local/wls就可以访问到域目录。&lt;br /&gt;

接下来还需要给安装的weblogic添加license，否则只能接收3个ip的连接。fs上面有相关文件，解压之后将weblogic_sp.jar放到/usr/local/wls813/server/lib/下面，将license.bea放到/usr/local/wls813/bea下面。&lt;br /&gt;

启动weblogic的命令为&lt;br /&gt;
/usr/local/wls/startWebLogic.sh&lt;br /&gt;
第一次启动可能需要用户名密码。启动时看到&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Weblogic服务器性能调优</title>
      <link>https://wdicc.com/weblogic-turning/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/weblogic-turning/</guid>
      <description>&lt;br /&gt;
2) 开发模式 vs. 产品模式；&lt;br /&gt;

开发模式和产品模式的一些参数的默认值不同，可能会对性能造成影响，下面是对性能有影响的参数列表：&lt;br /&gt;

参数&lt;br /&gt;

开发模式默认值&lt;br /&gt;

产品模式默认值&lt;br /&gt;

Execute Queue: Thread Count&lt;br /&gt;

15 threads&lt;br /&gt;

25 threads&lt;br /&gt;

JDBC Connection Pool: MaxCapacity&lt;br /&gt;

15 connnections&lt;br /&gt;

25 connections&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 配置 &gt; 常规选择产品模式。&lt;br /&gt;

3) 尽量开启本地I/O；&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; 配置 &gt; 调整选择启用本地I/O。&lt;br /&gt;

注：此值也可通过手动的修改config.xml配置文件。&lt;br /&gt;

4) 调优执行队列线程；&lt;br /&gt;

a) 修改默认执行线程数&lt;br /&gt;

在这里，执行队列的线程数表示执行队列能够同时执行的操作的数量。但此值不是设的越大越好，应该恰到好处的去设置它，太小了，执行队列中将会积累很多待处理的任务，太大了，则会消耗大量的系统资源从而影响整体的性能。在产品模式下默认为25个执行线程。&lt;br /&gt;

为了设置理想的执行队列的线程数，我们可以启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; 监视 &gt; 性能中监控最大负载时执行队列的吞吐量和队列中的等待请求数，据此确定理想的数值。&lt;br /&gt;

理想的默认执行线程数是由多方面的因素决定的，比如机器CPU性能、总体体系架构、I/O、操作系统的进程调度机制、JVM的线程调度机制。随着CPU个数的增加，WebLogic可以近乎线性地提高线程数。线程数越多，花费在线程切换的时间也就越多；线程数越小，CPU可能无法得到充分的利用。为获取一个理想的线程数，需要经过反复的测试。在测试中，可以以25*CPU个数为基准进行调整。当空闲线程较少，CPU利用率较低时，可以适当增加线程数的大小（每五个递增）。对于PC Server和Windows 2000，则最好每个CPU小于50个线程，以CPU利用率为90%左右为最佳。&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; Execute Queue &gt; weblogic.kernel.Defalt &gt; 配置中修改线程计数。&lt;br /&gt;

b) 设定执行队列的溢出条件；&lt;br /&gt;

Weblogic Server提供给默认的执行队列或用户自定义的执行队列自定义溢出条件的功能，当满足此溢出条件时，服务器改变其状态为“警告”状态，并且额外的再分配一些线程去处理在队列中的请求，而达到降低队列长度的目的。&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt; Execute Queue &gt; weblogic.kernel.Defalt &gt; 配置下面几项：&lt;br /&gt;

l         队列长度：此值表示执行队列中可容纳的最大请求数，默认值是65536，最后不要手动改变此值。&lt;br /&gt;

l         队列长度阈值百分比：此值表示溢出条件，在此服务器指出队列溢出之前可以达到的队列长度大小的百分比。&lt;br /&gt;

l         线程数增加：当检测到溢出条件时，将增加到执行队列中的线程数量。如果CPU和内存不是足够的高，尽量不要改变默认值“0”。因为Weblogic一旦增加后不会自动缩减，虽然最终可能确实起到了降低请求的作用，但在将来的运行中将影响程序的性能。&lt;br /&gt;

l         最大线程数：为了防止创建过多的线程数量，可以通过设定最大的线程数进行控制。&lt;br /&gt;

在实际的应用场景中，应根据具体情况适当的调整以上参数。&lt;br /&gt;

c) 设定执行队列监测行为&lt;br /&gt;

Weblogic Server 能够自动监测到当一个执行线程变为“阻塞”。变为“阻塞”状态的执行线程将无法完成当前的工作，也无法再执行新请求。如果执行队列中的所有执行线程都变为 “阻塞”状态，Weblogic server可能改变状态为“警告”或“严重”状态。如果Weblogic server变为“严重”状态，可以通过 Node Manager来自动关闭此服务器并重新启动它。具体请参考：Node Manager Capabilities文档。&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt;配置 &gt; 调整下可配置下面几项：&lt;br /&gt;

l         阻塞线程最长时间：在此服务器将线程诊断为阻塞线程之前，线程必须连续工作的时间长度(秒)。默认情况下，WebLogic Server 认为线程在连续工作 600 秒后成为阻塞线程。&lt;br /&gt;

l         阻塞线程计时器间隔：WebLogic Server 定期扫描线程以查看它们是否已经连续工作了 &#34;阻塞线程最长时间&#34; 字段中指定的时间长度的间隔时间(秒)。默认情况下，WebLogic Server 将此时间间隔设置为 600 秒。&lt;br /&gt;

5) 调优TCP连接缓存数；&lt;br /&gt;

WebLogic Server 用Accept Backlog参数规定服务器向操作系统请求的队列大小，默认值为50。当系统重载负荷时,这个值可能过小,日志中报 Connection Refused,导致有效连接请求遭到拒绝,此时可以提高Accept Backlog 25%直到连接拒绝错误消失。对于 Portal类型的应用,默认值往往是不够的。Login Timeout和SSL Login Timeout参数表示普通连接和SSL连接的超时时间,如果客户连接被服务器中断或者SSL容量大,可以尝试增加该值。&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt;配置 &gt; 调整下可配置“接受预备连接”。&lt;br /&gt;

6) 改变Java编译器；&lt;br /&gt;

标准的Java编译器是javac，但编译JSP servlets速度太慢，为了提高编译速度，可以使用sj或jikes编译器取代javac编译器。下面说说更改Java编译器：&lt;br /&gt;

通过启动管理控制台，在域（如：mydomain）&gt; 服务器 &gt; server实例（如：myserver）&gt;配置 &gt; 常规下改变Java 编译器，默认为javac。输入完整路径，如：c:\visualcafe31\bin\sj.exe。然后打开高级选项，在预规划到类路径填写编译 Java 代码时为 Java 编译器类路径预规划的选项，如：BEA_HOME\jdk141_02\jre\lib\rt.jar。&lt;br /&gt;

7) 使用Webogic Server集群提高性能；&lt;br /&gt;

具体关于如何配置Weblogic集群，我就不细说了。详情可参考：Introduction to WebLogic Server Clustering。&lt;br /&gt;

8) Weblogic EJB调优&lt;br /&gt;

由于EJB2.0已经很少项目在用了，EJB3.0再成熟一点，我再补充这一部分吧！&lt;br /&gt;

9) JDBC应用调优&lt;br /&gt;

JDBC Connection Pool 的调优受制于WebLogic Server线程数的设置和数据库进程数,游标的大小。通常我们在一个线程中使用一个连接,所以连接数并不是越多越好,为避免两边的资源消耗，建议设置连接池的最大值等于或者略小于线程数。同时为了减少新建连接的开销,将最小值和最大值设为一致。&lt;br /&gt;

增加 Statement Cache Size对于大量使用PreparedStatement对象的应用程序很有帮助,WebLogic能够为每一个连接缓存这些对象,此值默认为10。在保证数据库游标大小足够的前提下,可以根据需要提高Statement Cache Size。比如当你设置连接数为 25,Cache Size为10时,数据库可能需要打开25*10=250个游标。不幸的是,当遇到与PreparedStatement Cache 有关的应用程序错误时,你需要将Cache Size设置为0。&lt;br /&gt;

尽管JDBC Connection Pool提供了很多高级参数,在开发模式下比较有用,但大部分在生产环境下不需调整。这里建议最好不要设置测试表, 同时Test Reserved Connections和 Test Released Connections也无需勾上。 当然如果你的数据库不稳定,时断时续,你就可能需要上述的参数打开。&lt;br /&gt;

最后提一下驱动程序类型的选择,以Oracle为例,Oracle提供thin驱动和oci驱动,从性能上来讲,oci驱动强于thin驱动,特别是大数据量的操作。但在简单的数据库操作中,性能相差不大,随着thin驱动的不断改进,这一弱势将得到弥补。而thin驱动的移植性明显强于oci驱动。所以在通常情况下建议使用thin驱动。而最新驱动器由于WebLogic server/bin目录下的类包可能不是最新的,请以Oracle网站为准: http://www.oracle.com/technology/software ... jdbc/htdocs/jdbc9201.html。&lt;br /&gt;

10) JSP调优&lt;br /&gt;

设置jsp-param pageCheckSeconds=-1；&lt;br /&gt;

设置serlet-reload-check=-1或ServletReloadCheckSecs=-1；&lt;br /&gt;

设置jsp-param precompile=true，关闭JSP预编译选项。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>几道有趣的数学题</title>
      <link>https://wdicc.com/funny-math/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/funny-math/</guid>
      <description>
&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/207144582/%EF%BF%BD%EF%BF%BD%EF%BF%BD_2.html&#34;&gt;&lt;img width=&#34;240&#34; height=&#34;172&#34; border=&#34;0&#34; alt=&#34;æ�°å­¦é¢�_2&#34; src=&#34;http://static.flickr.com/73/207144582_bfa3cf060e_m.jpg&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/207144580/%EF%BF%BD%EF%BF%BD%EF%BF%BD_1.html&#34;&gt;&lt;img width=&#34;240&#34; height=&#34;220&#34; border=&#34;0&#34; alt=&#34;æ�°å­¦é¢�_1&#34; src=&#34;http://static.flickr.com/60/207144580_12b95f5196_m.jpg&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/207144582/%EF%BF%BD%EF%BF%BD%EF%BF%BD_2.html&#34; /&gt;&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/207144583/%EF%BF%BD%EF%BF%BD%EF%BF%BD_3.html&#34; /&gt;&lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/207144583/%EF%BF%BD%EF%BF%BD%EF%BF%BD_3.html&#34;&gt;&lt;img width=&#34;194&#34; height=&#34;240&#34; border=&#34;0&#34; alt=&#34;æ�°å­¦é¢�_3&#34; src=&#34;http://static.flickr.com/97/207144583_f46da70ce6_m.jpg&#34; /&gt;&lt;/a&gt;   &lt;a class=&#34;tt-flickr&#34; href=&#34;http://blog.wdicc.com/wordpress/Photos/photo/207144584/%EF%BF%BD%EF%BF%BD%EF%BF%BD_4.html&#34;&gt;&lt;img width=&#34;240&#34; height=&#34;176&#34; border=&#34;0&#34; alt=&#34;æ�°å­¦é¢�_4&#34; src=&#34;http://static.flickr.com/88/207144584_2d591c805e_m.jpg&#34; /&gt;&lt;/a&gt; &lt;img id=&#34;image225&#34; alt=&#34;6465.gif&#34; src=&#34;http://blog.wdicc.com/wordpress/wp-content/uploads/2006/08/6465.gif&#34; /&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>可以关闭的linux系统服务</title>
      <link>https://wdicc.com/service-can-stop/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/service-can-stop/</guid>
      <description>
转自车东的blog&lt;br /&gt;

sudo /sbin/chkconfig --list| grep 3:on | awk &#39;{print &#34;/sbin/chkconfig &#34;$1&#34; off&#34;}&#39;&lt;br /&gt;
/sbin/chkconfig acpid off&lt;br /&gt;
/sbin/chkconfig anacron off&lt;br /&gt;
/sbin/chkconfig apmd off&lt;br /&gt;
/sbin/chkconfig auditd off&lt;br /&gt;
/sbin/chkconfig autofs off&lt;br /&gt;
/sbin/chkconfig bluetooth off&lt;br /&gt;
/sbin/chkconfig cpuspeed off&lt;br /&gt;
/sbin/chkconfig cups off&lt;br /&gt;
/sbin/chkconfig gpm off&lt;br /&gt;
/sbin/chkconfig haldaemon off&lt;br /&gt;
/sbin/chkconfig iptables off&lt;br /&gt;
/sbin/chkconfig isdn off&lt;br /&gt;
/sbin/chkconfig kudzu off&lt;br /&gt;
/sbin/chkconfig mDNSResponder off&lt;br /&gt;
/sbin/chkconfig mdmonitor off&lt;br /&gt;
/sbin/chkconfig messagebus off&lt;br /&gt;
/sbin/chkconfig netfs off&lt;br /&gt;
/sbin/chkconfig nfslock off&lt;br /&gt;
/sbin/chkconfig nifd off&lt;br /&gt;
/sbin/chkconfig pcmcia off&lt;br /&gt;
/sbin/chkconfig portmap off&lt;br /&gt;
/sbin/chkconfig rhnsd off&lt;br /&gt;
/sbin/chkconfig rpcgssd off&lt;br /&gt;
/sbin/chkconfig rpcidmapd off&lt;br /&gt;
/sbin/chkconfig sendmail off&lt;br /&gt;
/sbin/chkconfig xfs off&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>在linux重新启动下如何设置oracle服务自动开启</title>
      <link>https://wdicc.com/auto-start-of-oracle/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/auto-start-of-oracle/</guid>
      <description>&lt;br /&gt;

2.  修改文件/etc/rc.local添加一下两行&lt;br /&gt;
su  -  oracle  -c  &#39;dbstart&#39;&lt;br /&gt;
su  -  oracle  -c  &#39;lsnrctl  start&#39;&lt;br /&gt;
---------------------------------------------------------------&lt;br /&gt;

以下是10G在Linux下oracle自启动的官方表述，可以参考一下，9i应该也有这方面的表述，可以去www.oracle.com找9i的文档看看：&lt;br /&gt;


1.Log  in  as  the  root  user.&lt;br /&gt;

2.Edit  the  oratab  file  for  your  platform.&lt;br /&gt;

To  open  the  file,  use  one  of  the  following  commands:&lt;br /&gt;

On  Solaris:&lt;br /&gt;

#  vi  /var/opt/oracle/oratab&lt;br /&gt;

On  AIX,  HP-UX,  Linux,  and  Tru64  UNIX:&lt;br /&gt;

#  vi  /etc/oratab&lt;br /&gt;

Database  entries  in  the  oratab  file  are  displayed  in  the  following  format:&lt;br /&gt;

SID:ORACLE_HOME:{Y  &amp;brvbarN  &amp;brvbarW}&lt;br /&gt;

In  this  example,  the  values  Y  and  N  specify  whether  you  want  the  scripts  to  start  up  or  shut  down  the  database,  respectively.  For  each  database  for  which  you  want  to  automate  shutdown  and  startup,  first  determine  the  instance  identifier  (SID)  for  that  database,  which  is  identified  by  the  SID  in  the  first  field.  Then,  change  the  last  field  for  each  to  Y.&lt;br /&gt;

You  can  set  dbstart  to  auto-start  a  single-instance  database  that  uses  an  Automatic  Storage  Management  installation  that  is  auto-started  by  Oracle  Clusterware.  This  is  the  default  behavior  for  an  Automatic  Storage  Management  cluster.  If  you  want  to  do  this,  then  you  must  change  the  oratab  entry  of  the  database  and  the  Automatic  Storage  Management  installation  to  use  a  third  field  with  the  value  W  and  N,  respectively.  These  values  specify  that  dbstart  auto-starts  the  database  only  after  the  Automatic  Storage  Management  instance  is  started.&lt;br /&gt;


Note:&lt;br /&gt;

If  you  add  new  database  instances  to  the  system  and  if  you  want  to  automate  startup  for  them,  then  you  must  edit  the  entries  for  those  instances  in  the  oratab  file.&lt;br /&gt;


3.Change  directory  to  one  of  the  following  depending  on  your  operating  system:&lt;br /&gt;

Platform  Initialization  File  Directory&lt;br /&gt;
AIX  /etc&lt;br /&gt;
Linux  and  Solaris  /etc/init.d&lt;br /&gt;
HP-UX  and  Tru64  UNIX  /sbin/init.d&lt;br /&gt;


4.Create  a  file  called  dbora,  and  copy  the  following  lines  into  this  file:&lt;br /&gt;


Note:&lt;br /&gt;

Change  the  value  of  the  ORACLE_HOME  environment  variable  to  an  Oracle  home  directory  for  the  installation.  Change  the  value  of  the  ORACLE  environment  variable  to  the  user  name  of  the  owner  of  the  database  installed  in  the  Oracle  home  directory  (typically,  oracle).&lt;br /&gt;


#!  /bin/sh    -x&lt;br /&gt;
#&lt;br /&gt;
#  Change  the  value  of  ORACLE_HOME  to  specify  the  correct  Oracle  home&lt;br /&gt;
#  directory  for  your  installation.&lt;br /&gt;

ORACLE_HOME=/u01/app/oracle/product/10.2.0/db_1&lt;br /&gt;
#&lt;br /&gt;
#  Change  the  value  of  ORACLE  to  the  login  name  of  the&lt;br /&gt;
#  oracle  owner  at  your  site.&lt;br /&gt;
#&lt;br /&gt;
ORACLE=oracle&lt;br /&gt;

PATH=${PATH}:$ORACLE_HOME/bin&lt;br /&gt;
HOST=`hostname`&lt;br /&gt;
PLATFORM=`uname`&lt;br /&gt;
export  ORACLE_HOME  PATH&lt;br /&gt;
#&lt;br /&gt;
if  [  !  &#34;$2&#34;  =  &#34;ORA_DB&#34;  ]  ;  then&lt;br /&gt;
if  [  &#34;$PLATFORM&#34;  =  &#34;HP-UX&#34;  ]  ;  then&lt;br /&gt;
remsh  $HOST  -l  $ORACLE  -n  &#34;$0  $1  ORA_DB&#34;&lt;br /&gt;
exit&lt;br /&gt;
else&lt;br /&gt;
rsh  $HOST  -l  $ORACLE    $0  $1  ORA_DB&lt;br /&gt;
exit&lt;br /&gt;
fi&lt;br /&gt;
fi&lt;br /&gt;
#&lt;br /&gt;
case  $1  in&lt;br /&gt;
&#39;start&#39;)&lt;br /&gt;
$ORACLE_HOME/bin/dbstart  $ORACLE_HOME  &amp;&lt;br /&gt;
;;&lt;br /&gt;
&#39;stop&#39;)&lt;br /&gt;
$ORACLE_HOME/bin/dbshut  $ORACLE_HOME  &amp;&lt;br /&gt;
;;&lt;br /&gt;
*)&lt;br /&gt;
echo  &#34;usage:  $0  {start  &amp;brvbarstop}&#34;&lt;br /&gt;
exit&lt;br /&gt;
;;&lt;br /&gt;
esac&lt;br /&gt;
#&lt;br /&gt;
exit&lt;br /&gt;


Note:&lt;br /&gt;

This  script  can  only  stop  Oracle  Net  listener  for  which  a  password  has  not  been  set.  In  addition,  if  the  listener  name  is  not  the  default  name,  LISTENER,  then  you  must  specify  the  listener  name  in  the  stop  and  start  commands:&lt;br /&gt;
$ORACLE_HOME/bin/lsnrctl  {start  &amp;brvbarstop}  listener_name&lt;br /&gt;



5.Change  the  group  of  the  dbora  file  to  the  OSDBA  group  (typically  dba),  and  set  the  permissions  to  750:&lt;br /&gt;

#  chgrp  dba  dbora&lt;br /&gt;
#  chmod  750  dbora&lt;br /&gt;

6.Create  symbolic  links  to  the  dbora  script  in  the  appropriate  run-level  script  directories  as  follows:&lt;br /&gt;

Platform  Symbolic  Links  Commands&lt;br /&gt;

Linux  #  ln  -s  /etc/init.d/dbora  /etc/rc.d/rc3.d/K01dbora&lt;br /&gt;
#  ln  -s  /etc/init.d/dbora  /etc/rc.d/rc3.d/S99dbora&lt;br /&gt;
#  ln  -s  /etc/init.d/dbora  /etc/rc.d/rc5.d/K01dbora&lt;br /&gt;
#  ln  -s  /etc/init.d/dbora  /etc/rc.d/rc5.d/S99dbora&lt;br /&gt;
---------------------------------------------------------------&lt;br /&gt;

Oracle在linux下的自动启动脚本&lt;br /&gt;

环境是redhat  9+oracle  9.2.0.4&lt;br /&gt;

1、在/etc/rc.d/init.d下创建脚本，名字就取为oracle，内容如下。假设oracle的安装用户是ora9。&lt;br /&gt;
case  &#34;$1&#34;  in&lt;br /&gt;
start)&lt;br /&gt;
echo  &#34;Starting  Oracle  Databases  ...  &#34;&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
date  +&#34;  %T  %a  %D  :  Starting  Oracle  Databasee  as  part  of  system  up.&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
su  -  ora9  -c  &#34;dbstart&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;Done.&#34;&lt;br /&gt;
echo  &#34;Starting  Oracle  Listeners  ...  &#34;&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
date  +&#34;  %T  %a  %D  :  Starting  Oracle  Listeners  as  part  of  system  up.&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
su  -  ora9  -c  &#34;lsnrctl  start&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;Done.&#34;&lt;br /&gt;
echo  &#34;&#34;&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
date  +&#34;  %T  %a  %D  :  Finished.&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
touch  /var/lock/subsys/oracle&lt;br /&gt;

;;&lt;br /&gt;
stop)&lt;br /&gt;
echo  &#34;Stoping  Oracle  Listeners  ...  &#34;&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
date  +&#34;  %T  %a  %D  :  Stoping  Oracle  Listener  as  part  of  system  down.&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
su  -  ora9  -c  &#34;lsnrctl  stop&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;Done.&#34;&lt;br /&gt;
rm  -f  /var/lock/subsys/oracle&lt;br /&gt;
echo  &#34;Stoping  Oracle  Databases  ...  &#34;&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
date  +&#34;  %T  %a  %D  :  Stoping  Oracle  Databases  as  part  of  system  down.&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
su  -  ora9  -c  &#34;dbshut&#34;  &gt;&gt;/var/log/oracle&lt;br /&gt;
echo  &#34;Done.&#34;&lt;br /&gt;
echo  &#34;&#34;&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
date  +&#34;  %T  %a  %D  :  Finished.&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;
echo  &#34;-------------------------------------------------&#34;  &gt;&gt;  /var/log/oracle&lt;br /&gt;

;;&lt;br /&gt;
restart)&lt;br /&gt;
$0  stop&lt;br /&gt;
$0  start&lt;br /&gt;

;;&lt;br /&gt;
*)&lt;br /&gt;
echo  &#34;Usage:  oracle  {start  &amp;brvbarstop  &amp;brvbarrestart}&#34;&lt;br /&gt;
exit  1&lt;br /&gt;
esac&lt;br /&gt;

2、修改/etc/rc.d/init.d/oracle的属性为755。&lt;br /&gt;

3、创建不同级别的link文件。&lt;br /&gt;
$  ln  -s  /etc/rc.d/init.d/oracle  /etc/rc.d/rc5.d/S99oracle&lt;br /&gt;
$  ln  -s  /etc/rc.d/init.d/oracle  /etc/rc.d/rc0.d/K01oracle&lt;br /&gt;
$  ln  -s  /etc/rc.d/init.d/oracle  /etc/rc.d/rc1.d/K01oracle&lt;br /&gt;

4、编辑/etc/oratab文件，设置需要自动启动的数据库实例。&lt;br /&gt;

5、在$ORACLE_HOME/dbs下，创建符号连接文件init$ORACLE_SID&lt;br /&gt;
cd  $ORACLE_HOME/dbs&lt;br /&gt;
ln  -s  spfile$ORACLE_SID.ora  init$ORACLE_SID.ora&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>数据恢复步骤</title>
      <link>https://wdicc.com/recover-date/</link>
      <pubDate>Sat, 05 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/recover-date/</guid>
      <description>
&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
切换到oracle用户
sqlplus
conn / as sysdba
drop user &lt;USER&gt; cascade;
create user &lt;USER&gt; identified by &lt;PASSWORD&gt; default tablespace &lt;TABLESPACE&gt;;
exit
imp &lt;USER&gt;/&lt;PASSWORD&gt; file=&lt;FILE_NAME&gt; fromuser=&lt;USER&gt; touser=&lt;USER&gt;
&lt;/pre&gt;&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
*&lt;USER&gt;为要恢复的用户，&lt;PASSWORD&gt;为其密
</description>
    </item>
    
    <item>
      <title>老婆去山西了</title>
      <link>https://wdicc.com/cc-goto-shanxi/</link>
      <pubDate>Fri, 04 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cc-goto-shanxi/</guid>
      <description>
周二就去了，没有去送，带着新买的psp，去happy去了。周三晚上老大送小猫过来一起吃的成都小吃，昨天晚上自己炒了一锅菜，炒的比较失败，可能因为很久没有炒过了。今天晚上继续吃昨天炒的菜。&lt;br /&gt;

明天又轮到值班了，老婆说周日回来，有个同事想和我换周日的我没有换，周日得去接老婆了，不过还不知道她几点到。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我家的毛毛和妞妞的大头照</title>
      <link>https://wdicc.com/my-cats-photos/</link>
      <pubDate>Thu, 03 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/my-cats-photos/</guid>
      <description>
&lt;a class=&#34;tt-flickr&#34; href=&#34;http://www.flickr.com/photos/wd_afei/193982060&#34;&gt;&lt;img width=&#34;75&#34; height=&#34;75&#34; alt=&#34;20060717080&#34; class=&#34;tt-flickr&#34; src=&#34;http://static.flickr.com/72/193982060_4b3c019a68_s.jpg&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://www.flickr.com/photos/wd_afei/193982096&#34;&gt;&lt;img width=&#34;75&#34; height=&#34;75&#34; alt=&#34;20060717076&#34; class=&#34;tt-flickr&#34; src=&#34;http://static.flickr.com/77/193982096_bf2b870d82_s.jpg&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://www.flickr.com/photos/wd_afei/193982119&#34;&gt;&lt;img width=&#34;75&#34; height=&#34;75&#34; alt=&#34;20060717077&#34; class=&#34;tt-flickr&#34; src=&#34;http://static.flickr.com/64/193982119_332814b358_s.jpg&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://www.flickr.com/photos/wd_afei/193982148&#34;&gt;&lt;img width=&#34;75&#34; height=&#34;75&#34; alt=&#34;20060717078&#34; class=&#34;tt-flickr&#34; src=&#34;http://static.flickr.com/53/193982148_6072c07b7f_s.jpg&#34; /&gt;&lt;/a&gt; &lt;a class=&#34;tt-flickr&#34; href=&#34;http://www.flickr.com/photos/wd_afei/193982205&#34;&gt;&lt;img width=&#34;75&#34; height=&#34;75&#34; alt=&#34;20060717079&#34; class=&#34;tt-flickr&#34; src=&#34;http://static.flickr.com/46/193982205_a2872f7544_s.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;

用n70前面的摄像头拍的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>把tt转成了wordpress</title>
      <link>https://wdicc.com/change-tt-to-wordpress/</link>
      <pubDate>Thu, 03 Aug 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/change-tt-to-wordpress/</guid>
      <description>
用了一个兄弟的&lt;a href=&#34;http://dbfox.idv.tw/blog/?p=110&#34; target=&#34;_blank&#34;&gt;转化程序&lt;/a&gt; ,效果非常不错。&lt;br /&gt;

 现在还有点问题，明天好好修理一下，呵呵。&lt;br /&gt;

&lt;pre class=&#34;prettyprint lang-mysql&#34;&gt;
UPDATE wp_posts SET post_content = replace( post_content, &#34;[/CODE]&#34;, &#34;[/ coolcode]&#34; ) WHERE `post_content` LIKE &#39;%[/CODE]%&#39;
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>死在了fsck手里</title>
      <link>https://wdicc.com/die-in-fsck/</link>
      <pubDate>Fri, 28 Jul 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/die-in-fsck/</guid>
      <description>&lt;br /&gt;

指令：fsck&lt;br /&gt;
使用权限 : 超级使用者&lt;br /&gt;
使用方式 : fsck [-sACVRP] [-t fstype] [--] [fsck-options] filesys [...]&lt;br /&gt;
说明 ： 检查与修复 Linux 档案系统，可以同时检查一个或多个 Linux 档案系统&lt;br /&gt;

参数 ：&lt;br /&gt;
filesys ： device 名称(eg./dev/sda1)，mount 点 (eg. / 或 /usr)&lt;br /&gt;
-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数&lt;br /&gt;
-s : 依序一个一个地执行 fsck 的指令来检查&lt;br /&gt;
-A : 对/etc/fstab 中所有列出来的 partition 做检查&lt;br /&gt;
-C : 显示完整的检查进度&lt;br /&gt;
-d : 列印 e2fsck 的 debug 结果&lt;br /&gt;
-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行&lt;br /&gt;
-R : 同时有 -A 条件时，省略 / 不检查&lt;br /&gt;
-V : 详细显示模式&lt;br /&gt;

-a : 如果检查有错则自动修复&lt;br /&gt;
-r : 如果检查有错则由使用者回答是否修复&lt;br /&gt;

例子 :&lt;br /&gt;
检查 msdos 档案系统的 /dev/hda5 是否正常，如果有异常便自动修复 :&lt;br /&gt;
fsck -t msdos -a /dev/hda5&lt;br /&gt;

注意 :&lt;br /&gt;

此指令可与 /etc/fstab 相互参考操作来加以了解。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>远程安装oracle</title>
      <link>https://wdicc.com/oracle-remote-install/</link>
      <pubDate>Tue, 11 Jul 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/oracle-remote-install/</guid>
      <description>&lt;br /&gt;

主要是下面这段&lt;br /&gt;

&lt;span class=&#34;parahead1&#34; /&gt;&lt;span style=&#34;padding: 3px 1px 0px; color: #202020; background-color: #e4e4e4&#34;&gt;&lt;span class=&#34;parahead1&#34;&gt;使 Oracle 安装自动化&lt;/span&gt;Oracle Universal Installer 拥有很多自动化过程中可以利用的特性。它采用一个基于 XML的中央信息库，允许第三方应用程序识别安装了那些产品。除了简单安装之外，它还允许将现有 Oracle主目录复制到新的位置。有关该产品的更多信息，请参见 &lt;a class=&#34;bodylink&#34; href=&#34;http://download.oracle.com/docs/cd/B14117_01/em.101/b12140/toc.htm&#34;&gt;&lt;em&gt;Oracle Universal Installer 概念指南&lt;/em&gt;&lt;/a&gt;。Oracle 关于软件安装和配置甚至数据库本身的自动化解决方案涉及到一个&lt;em&gt;响应文件&lt;/em&gt; 的使用。该文件的用途与 RedHat 的 kickstart 文件相似。用户不是对交互式对话所提出的问题进行交互式回答，而是将回答存储在一个文本文件中，随后 OracleUniversal Installer (OUI) 在运行安装程序时使用该文件。这样的安装称为“静默安装”。OUI用于安装各种应用程序，因此响应文件不限于安装数据库。&lt;br /&gt;

可以通过在记录模式中运行软件或通过手动编辑示例响应文件来创建响应文件。以下是一个基本演示：&lt;br /&gt;
&lt;ol&gt;&lt;br /&gt;
&lt;li class=&#34;bodycopy&#34;&gt;用此命令启动 OUI 来创建响应文件：&lt;/li&gt;&lt;br /&gt;
&lt;pre class=&#34;prettyprint&#34;&gt;
&lt;li class=&#34;bodycopy&#34;&gt;选择您需要的所有部分（源目标目录、主目录、主目录名、产品）。&lt;/li&gt;
&lt;li class=&#34;bodycopy&#34;&gt;当您看到 Summary 屏幕时，不要单击 &lt;strong&gt;Install&lt;/strong&gt;，而是单击 &lt;strong&gt;Cancel&lt;/strong&gt;。&lt;/li&gt;
&lt;li class=&#34;bodycopy&#34;&gt;仔细查看在 tmp/recorded.rsp 中创建的结果响应文件。如果需要，可以手动编辑该文件，只要您遵守使用规定的格式即可（请参见&lt;a class=&#34;bodylink&#34; href=&#34;http://download.oracle.com/docs/cd/B14117_01/em.101/b12140/4_oui_response_files.htm#sthref131&#34;&gt;文档&lt;/a&gt;）。&lt;/li&gt;
&lt;li class=&#34;bodycopy&#34;&gt;现在如下执行静默安装：
&lt;pre class=&#34;prettyprint&#34;&gt;
在运行脚本时将会报告安装的进度。&lt;/li&gt;
&lt;/ol&gt;
如果您由于响应文件中的条目不正确而遇到安装故障，安装将失败并显示一条诊断消息。详细信息可在 oraInventory/logs目录中找到。在每次使用响应文件运行 OUI 时，会创建具有 installActions-&lt;时间戳&gt;.log 和silentInstall&lt;时间戳&gt;.log 格式名称的日志。

&lt;/span&gt;

还有关于runinstaller的使用参数

&lt;span style=&#34;padding: 3px 1px 0px; color: #202020; background-color: #e4e4e4&#34;&gt;Usage:
runInstaller  [-options] [(&lt;CommandLineVariable=Value&gt;)*]&lt;/span&gt;

Where options include:
-clusterware oracle.crs,&lt;crs version&gt;
Version of Cluster ready services installed.

-crsLocation &lt;Path&gt;
Used only for cluster installs, specifies the path to the crs home location. Specifying this overrides CRS information obtained from central inventory.

-invPtrLoc &lt;full path of oraInst.loc&gt;
Unix only. To point to a different inventory location. The orainst.loc file contains:
inventory_loc=&lt;location of central inventory&gt;
inst_group=&lt;&gt;

-jreLoc &lt;location&gt;
Path where Java Runtime Environment is installed. OUI cannot be run without it.

-logLevel &lt;level&gt;
To filter log messages that have a lesser priority level than &lt;level&gt;. Valid options are: severe, warning, info, config, fine, finer, finest, basic, general, detailed, trace. The use of basic, general, detailed, trace is deprecated.

-paramFile &lt;location of file&gt;
Specify location of oraparam.ini file to be used by OUI.

-responseFile &lt;Path&gt;
Specifies the response file and path to use.

-sourceLoc  &lt;location of products.xml&gt;
To specify the shiphome location.

-addLangs
To add new languages to an already installed product.

-addNode
For adding node(s) to the installation.

-attachHome
For attaching homes to the OUI inventory.

-cfs
Indicates that the Oracle home specified is on cluster file system (shared). This is mandatory when &#39;-local&#39; is specified so that Oracle Universal Installer can register the home appropriately into the inventory.

-clone
For making an Oracle Home copy match its current environment.

-debug
For getting the debug information from OUI.

-deinstall
For deinstall operations.

-detachHome
For detaching homes from the OUI inventory without deleting inventory directory inside Oracle home.

-enableRollingUpgrade
Used in cluster environment, to enable upgrade of a product on a subset of nodes (on which the product was installed).

-executeSysPrereqs
Execute system pre-requisite checks and exit.

-force
Allowing silent mode installation into a non-empty directory.

-help
Displays above usage.

-ignorePatchConflicts
Ignore all conflicts with existing interim patches during an upgrade. The conflicting interim patches are removed from the home.

-ignoreSysPrereqs
For ignoring the results of the system pre-requisite checks.

-local
Performs the operation on the local node irrespective of the cluster nodes specified.

-printdiskusage
Log debug information for disk usage.

-printmemory
Log debug information for memory usage.

-printtime
Log debug information for time usage.

-record -destinationFile &lt;Path&gt;
For record mode operation, information is recorded in the destination file path.

-removeallfiles
For removing the home directory after deinstallation of all the components.

-removeAllPatches
Remove all interim patches from the home

-silent
For silent mode operations, the inputs can be a response file or a list of command line variable value pairs.

-updateNodeList
For updating node list for this home in the OUI inventory.

-waitforcompletion
For windows. setup.exe will wait for completion instead of spawning the java engine and exiting.

-nobackground
Do not show background image

-noclusterEnabled
No cluster nodes specified.

-noconsole
For suppressing display of messages to console. Console is not allocated.

-nowarningonremovefiles
To disable the warning message before removal of home directory.

-nowait
For windows. Do not wait for user to hit Enter on the console after the task (install etc.) is complete.

-formCluster
To install the Oracle clusterware in order to form the cluster.

-remotecp &lt;Path&gt;
Unix specific option. Used only for cluster installs, specifies the path to the remote copy program on the local cluster node.

-remoteshell &lt;Path&gt;
Unix specific option. Used only for cluster installs, specifies the path to the remote shell program on the local cluster node.

Command Line Variables Usage
Command line variables are specified using &lt;name=value&gt;; for example:
[ session: | compName: | compName:version: ]variableName=&#34; valueOfVariable&#34;]

Session/Installer variables are specified using:
[session:]varName=value
Ex 1: session:ORACLE_HOME_NAME=&#34;OraHome&#34;
Ex 2: ORACLE_HOME_NAME=&#34;OraHome&#34;
The lookup order is session:varName then just varName. The session prefix is used to avoid ambiguity.

Component variables are specified using:
[compInternalName:[Version:]]varName
Ex 1: oracle.comp1:1.0.1:varName=&#34;VarValue&#34;
Ex 2: oracle.comp1:varName=&#34;VarValue&#34;
The lookup order is compInternalName:Version:varName, then compInternalName:varName, then just varName.
</description>
    </item>
    
    <item>
      <title>最近的几件事情</title>
      <link>https://wdicc.com/something-lately/</link>
      <pubDate>Mon, 10 Jul 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/something-lately/</guid>
      <description>
上周六入手一个N70，银色的，亚太版，发现亚太版和港行确实没有什么区别，只能由卖家提供一年保修。盒子上面的IMEI和手机以及主板的不一样，不过也无所谓了，水货还能怎么要求。一直信赖Nokia的品质，相信应该不会有问题的。&lt;br /&gt;

周六晚上KTV给老婆过生日，现在大家都忙了，居然只有四个人吃饭。不过还好晚上唱歌的时候人多了一些，要不生日也太平静了，希望老婆玩的高兴。至于我，第一次在KTV看球，感觉还是不错的，呵呵，其实重要的是人多一起看才好，唯一的遗憾是没有啤酒 :)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>重置weblogic密码</title>
      <link>https://wdicc.com/reset-weblogic-password/</link>
      <pubDate>Fri, 07 Jul 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/reset-weblogic-password/</guid>
      <description>
参考网址：&lt;a href=&#34;http://support.bea.com/application_content/product_portlets/support_patterns/wls/startWLSPattern.html&#34;&gt;这里&lt;/a&gt;&lt;br /&gt;

weblogic得密码忘记了怎么办呢？总算让我找到除了重建域之外得方法了。&lt;br /&gt;

首先假设你得weblogic是在运行中，并且boot.properties中已经保存了加密得用户名密码。这样你除了不能登录控制台外，启动停止weblogic是没问题得。&lt;br /&gt;
&lt;ol&gt;&lt;li&gt;备份boot.properties文件和DefaultAuthenticatorInit.ldift文件。后面操作不能实现得时候，还可以恢复。&lt;/li&gt;&lt;li&gt;停止weblogic。&lt;/li&gt;&lt;li&gt;切换到你得域目录（就是域得启动停止脚本所在得目录）。&lt;/li&gt;&lt;li&gt;java -cp &lt;BEA_HOME&gt;\server\lib\weblogic.jar weblogic.security.utils.AdminAccount adminuser weblogic .（要注意最后有个点）&lt;/li&gt;&lt;li&gt;rm myserver/ldap/DefaultAuthenticatormyrealmInit.initialized&lt;/li&gt;&lt;li&gt;rm boot.properties&lt;/li&gt;&lt;li&gt;启动weblogic，记得不要在后台启动，因为你需要输入用来启动得用户名密码，用户名是adminuser，密码是weblogic，应该是可以启动得。&lt;/li&gt;&lt;li&gt;上面这步没问题得话，你就可以用adminuser登录控制台修改原来用户得密码了。&lt;/li&gt;&lt;li&gt;改好之后，新建一个boot.properties，写上你原来得用户名和新得密码。重启一下weblogic试试看。&lt;/li&gt;&lt;/ol&gt;除去上面得假设，如果你得服务器因为没有密码已经起不来了，或许你也可以试试看从2开始能不能设置一个新得密码。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天是老婆阴历生日</title>
      <link>https://wdicc.com/happy-birthday-to-cc/</link>
      <pubDate>Thu, 29 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/happy-birthday-to-cc/</guid>
      <description>
老婆生日了，老婆生日快乐 :)&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1042458668.jpg&#34; width=&#34;128&#34; height=&#34;128&#34; alt=&#34;&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为什么喝酒有的人会脸红，有的人会脸发白？</title>
      <link>https://wdicc.com/different-behave-after-drinking/</link>
      <pubDate>Tue, 27 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/different-behave-after-drinking/</guid>
      <description>
&lt;a target=&#34;_blank&#34; href=&#34;http://zhidao.baidu.com/question/89581.html&#34;&gt;http://zhidao.baidu.com/question/89581.html&lt;/a&gt;&lt;br /&gt;

让我们从脸红的原因说起吧。很多人以为是酒精导致的，其实不然，是乙醛引起的。乙醛具有让毛细血管扩张的功能，而脸部毛细血管的扩张才是脸红的原因。所以喝酒脸红的人意味着能迅速将乙醇转化成乙醛，也就是说有他们有高效的乙醇脱氢酶 (alcohol dehydrogenase)。不过我们不能忘了还有一种酶，乙醛脱氢酶(aldehydedehydrogenase)。喝酒脸红的人是只有前一个酶没有后一个酶，所以体内迅速累积乙醛而迟迟不能代谢，因此会长时间涨红了脸。不过大家都有经验，当1－2个小时后红色就会渐渐腿去，这是靠肝脏里的P450慢慢将乙醛转化成乙酸，然后进入TCA循环而被代谢。&lt;br /&gt;
 &lt;br /&gt;
那么喝酒比较厉害的人是怎么回事呢？这些人往往越喝脸越白，到一个点突然不行了，烂醉如泥。那是因为这样的人高活性的乙醇脱氢酶和乙醛脱氢酶均没有，主要靠肝脏里的P450慢慢氧化（因为P450是特异性比较低的一群氧化酶）。那么，这样的人为什么会给人很能喝酒的感觉呢？那时因为他们靠体液来稀释酒精，个头越大感觉越能喝酒。在正常情况下，酒精浓度要超过0.1%他们才会昏迷，对大多数南方人来说是半斤白酒，而北方人由于体型大，可以喝到8两到一斤白酒。但不管什么人，如果他是脸越喝越白型的，最好不要超过半斤，不然有急性酒精中毒的可能性。 &lt;br /&gt;

如果一个人即有高活性的乙醇脱氢酶又有高活性的乙醛脱氢酶会怎样呢？他/她就是传说中的酒篓子。如何判断他/她是不是酒篓子呢？看是不是大量出汗。因为如果两个酶都高活性，酒精迅速变成乙酸进入TCA循环而发热，所以大量发热而出汗。碰到这样的人你只能自认倒霉，就是十个八个正常人也斗不过他。好在这样的人不多，大概10万分之一左右吧。 &lt;br /&gt;

有一点要提醒大家，喝酒脸红的人其实不容易伤肝脏，而和酒脸白的人特别容易伤肝脏。红脸的人大家一般少劝酒，因此喝得少，酒后发困，睡上15－30分钟就又精神抖擞了。而白脸的则往往不知自己的地线，在高度兴奋中饮酒过量，直到烂醉。他们体内的酒精由于没有高活性的酶处理而发生积累，导致肝脏损伤。酒精性肝损伤一般只发生在这些人身上。红脸的人可以连续几餐即便喝吐了也喝酒，而白脸的人需要更多时间的休息，因为酒精的代谢需要一两天的时间。 &lt;br /&gt;

顺便提一下，根据有关研究江浙两省的人（古代吴国和越国的后代）似乎是红脸基因的起源地，也就是说这些人多数带有高活性的乙醇脱氢酶。而北方人多数是白脸型的。那么如果你是北方出生的，又是红脸型的，说明什么呢？答案是明显的，因为红脸基因是显性基因。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>linux系统密码忘记的几种恢复方法</title>
      <link>https://wdicc.com/recover-password-in-linux/</link>
      <pubDate>Tue, 20 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/recover-password-in-linux/</guid>
      <description>
root密码忘记的话，是需要到机器旁边来做恢复的。&lt;br /&gt;

1 single模式&lt;br /&gt;
single模式进入系统是不需要密码的，进入系统后就是root权限，直接修改root密码即可。&lt;br /&gt;

1）grub&lt;br /&gt;
grub选择系统的画面出来之后，找到需要恢复密码的系统，按e，然后找到kernel行，按e，然后在最后加上single，按回车，然后按b就可以启动了。&lt;br /&gt;

2）lilo&lt;br /&gt;
似乎在lilo命令行输入linux single就可以。&lt;br /&gt;

如果lilo或者grub设置了等待时间为0的话，这个方法就行不通了，另外grub还可以设置修改密码，密码不知道的话也没有办法恢复。&lt;br /&gt;

2 用livecd启动&lt;br /&gt;
找一个livecd，比如ubuntu的或者knoppix之类，启动之后将硬盘上面的分区挂载上，然后修改/etc/shadow文件，或者chroot过去用passwd命令修改。&lt;br /&gt;

好了，有上面两种方法，特别是第二种，基本上就没有问题了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>关于css布局的一片文章</title>
      <link>https://wdicc.com/an-article-about-css/</link>
      <pubDate>Tue, 20 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/an-article-about-css/</guid>
      <description>
http://www.barelyfitz.com/screencast/html-training/css/positioning/&lt;br /&gt;

具体内容就不转了，有示范的，转过来就不好看了&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给blog加了一个验证图片</title>
      <link>https://wdicc.com/spam-for-blog/</link>
      <pubDate>Sun, 18 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/spam-for-blog/</guid>
      <description>
插件地址在 &lt;a href=&#34;http://www.tattertools.com/bbs/view.php?id=plugin&amp;amp;page=1&amp;amp;sn1=&amp;amp;divpage=1&amp;amp;sn=off&amp;amp;ss=on&amp;amp;sc=on&amp;amp;select_arrange=headnum&amp;amp;desc=asc&amp;amp;no=203&#34;&gt;这里&lt;/a&gt;&lt;br /&gt;

下载插件后，把插件解压放到plugins目录中，然后往plugins/comment-validator这里传一个字体，英文的就好，比如我传的是comic.ttf，然后修改这个文件夹里面的index.php，把第6行的 $font = 指向刚才传的font地址。比如我的&lt;br /&gt;

&lt;span style=&#34;color: rgb(155, 24, 193)&#34;&gt;$font = &#34;/data/web/tt2/plugins/comment-validator/comic.ttf&#34;;&lt;/span&gt;&lt;br /&gt;

然后修改这个文件第32行的return地址，默认的那个似乎是针对单用户模式的，我这里多用户模式不好用，我把它修改成了下面的&lt;br /&gt;

&lt;span style=&#34;color: rgb(255, 118, 53)&#34;&gt;return &#34;http://blog.wdicc.com/attach/temp.png&#34;;&lt;/span&gt;&lt;br /&gt;

修改你的skin的skin.html，找到comment相关部分的password输入段，修改成类似下面的&lt;br /&gt;
&lt;br style=&#34;color: rgb(153, 204, 102)&#34; /&gt;&lt;span style=&#34;color: rgb(153, 204, 102)&#34;&gt;&amp;lt;div class=&#34;comment_item&#34;&amp;gt;&amp;lt;label for=&#34;[##_rp_input_password_##]&#34;&amp;gt;&amp;amp;nbsp;&amp;amp;nbsp;Validate Code : &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;lt;/label&amp;gt;&amp;lt;input type=&#34;text&#34; maxlength=&#34;8&#34; id=&#34;[##_rp_input_password_##]&#34; value=&#34;[##_rp_admin_check_##]&#34; class=&#34;comment_box&#34; size=&#34;30&#34; maxlength=&#34;20&#34; /&amp;gt;&amp;lt;img src=&#34;[##_comment_validater_##]&#34; border=&#34;0&#34; /&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br /&gt;

将其中的input的type修改为text，这样用户输入验证码的时候能看见输入的是啥。在后面加上关于验证码图片的显示部分。然后就可以了。&lt;br /&gt;

这样原来的password功能就没有了。谁有功夫自己研究研究怎么避免这个问题把。我是觉得那个功能实在没用。&lt;br /&gt;

此外还可以给验证输入那里加上有没有输入验证码的部分。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>魔羯女情感世界的背后zz</title>
      <link>https://wdicc.com/horoscope-girl/</link>
      <pubDate>Sun, 18 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/horoscope-girl/</guid>
      <description>1.魔羯女为什么慢热？ &lt;br /&gt;

魔羯女难追是众所周知，也就是她们自己常说的慢热。其他十一个星座的女孩在涉足感情的时候，她们和对方的感情交流是相互的，是一个互动的过程，在交流和相互理解中就能比较快的进入恋爱状态。而魔羯女的在感情上极度自私的，她们的感情世界是封闭的，她们只顾及自己的感受，从来不想，不愿意，也懒得去顾及对方的感受。她们不存在和对方的感情交流，一切的感情流动都是单向的。对方传递过来的感情，追求她们时的性格表现，她们永远都是闷着头被动的接受，然后象鉴别通行密码一样在心里盘算着对方传递过来的信号能和自己的固有感情世界有百分之几的呼应，和自己的内在性格有多少的互补等等，如果这一契合累计值能达到她们内心设立的接受底线的话，她们就会接受这个人，如果达不到这个底线的话，无论那个人怎么努力都无法被魔羯女接受。因此，魔羯女最合适的恋爱对象并不是一个真正爱她们并且愿意为她们真心付出的人（虽然他们能给魔羯女带来一生真正的幸福），而是一个她们所痴心暗恋的人。但是魔羯女又是极端现实的，即使她们痴心暗恋一个人，她们也有一个前提，那就是那个人也必须喜欢她们。从这个角度而言，魔羯女在恋爱上是个典型的完美主义者。 &lt;br /&gt;

2，魔羯女一旦接受一个人，她们的爱情和婚姻为什么相对稳定的多？ &lt;br /&gt;

一般而言，魔羯女在接受一个人以后，其爱情与婚姻与其他星座的女孩相比要稳定的多，但如果认为这就是因为魔羯女比其他星座的女孩更加爱自己的爱人，从而爱情和婚姻才比其他星座的女孩要更加稳定的话，那就错了。如果说其他十一个星座的女孩如果能够专一地对待自己的爱人和感情，那是因为她们在爱情和婚姻中所持有的是一种相互付出和相互理解和包容的态度，她们愿意付出，也希望对方付出，达到了这种状态，爱情和婚姻就是稳定的，一旦这种状态被破坏，两人无法相处，那么感情就将解体,而感情本来就是个唯心性比重很大的东西，因此基于感情互动的婚姻虽然更契合于爱情的本质，但外观看起来却似乎要脆弱多变的多。而魔羯女则不然，她们在接受一个人后的感情和婚姻的稳定不是基于她们和对方的相互付出和相互理解，而是完全建立在她们自己的需要之上，仍然是自私的产物。换言之，魔羯女极度缺乏安全感，安全感和稳定的归宿感是她们感情的终极目的。因此，与其说魔羯女对感情专一稳定是因为她全心全力的爱对方，不如说她处于怕感情解体之后自己还要暴露于缺乏安全感的恐惧之下。在这种心态下，魔羯女一旦接受一份感情，就会把它当作自己需要的载体，当作一件物质化的实实在在的东西而不是情感交融的载体，从而以更大的包容性来对待它，不到万不得已不会放弃。但即使在这时她们和对方相处的过程当中，魔羯女与对方的感情交流仍然是单向的，在感情上她们仍然吝于付出，她们仍然象鉴别密码一样来衡量对方传递过来的感情信号是否让自己感到舒适和安全，她们仍然有一个维持和不维持的底线，不过这个底线要低的多，那是因为这个底线已经最大化的包含了她们自己的需要。任何人在对待自己的需要的时候总是能最大程度的包容和付出。 &lt;br /&gt;

3，魔羯女一旦决定分手，为什么绝情冷峻和固执到几乎无法挽回的地步？ &lt;br /&gt;

其他任何十一个星座的女孩的分手都没有绝情冷峻和固执到魔羯女那样的地步，她们的分手总有挽回的余地，而且很多挽回的感情都在以后的岁月中被证明是良缘佳偶。之所以如此，还是因为如前所说，魔羯女在感情上极度自私的，她们永远都只在乎自己的感受，从来不会顾及对方的感受。谈恋爱时她们觉得对方传递过来的感情信号可以达到她们的接受底线因而会接纳对方，当她们不爱对方或者基于对双方未来的不确定性而打算分手的时候，她们的决定也是基于自己的感情需要。这时候魔羯女和对方的感情交流仍然是单向的，她们的感情世界就象一个巨大的宇宙黑洞，无论对方怎么解释怎么认错怎么晓之以情怎么动之以理，所传递过来的感情信号到了魔羯女那里就犹如光被投射进了那个无边的巨大的宇宙黑洞，而别想得到一丝一毫的反馈和感动（至于那个宇宙黑洞里是怎么运行的，那只有她们自己知道了），只能让人叹息她们的绝情如斯。 &lt;br /&gt;

在这里可能又有人不服气，会说魔羯女不会轻易分手，一旦分手都是经过深思熟虑的。因此深思熟虑的东西是考虑周详后的产物，一旦决定决不回头。那么我要问，深思熟虑后的决定，就一定是对的吗？还是如前所说，魔羯女的情感特征是极度自私，从而在和对方的感情交流上永远是单向的，既然是单向的，就谈不到真正的理解对方。而且，说实话，魔羯女很聪明，但她们的聪明是体现在她们对这个靠不住的现实世界的透彻理解上，她们更独立，更脚踏实地，更注重现实基础给她们带来幸福的可能，从这个角度而言，她们是聪明和理智的，这是大智慧。但另一方面，她们又是一群标准的笨蛋，她们的脑子反应总比别人慢半拍，典型的反应迟钝，她们要么不说话，说出话来都是直来直去。她们表面上世故现实，骨子里就是一群长不大的孩子。她们只会凭别人的表面表现来对对方做出判断，稍微拐一个弯她们就弄不懂对方的真实感受从而导致误解。在这种情况下，她们会觉得摸不透对方从而觉得很累，最终选择分手。但她们恰恰忘了，她们需要别人对她们敞开真实的心扉，而她们却何曾向对方敞开过自己的心扉？更何况魔羯女本身就是一个连自己都和自己纠缠不清的感情世界的矛盾体？在这种情况下，只有傻子才会对她们完全袒露心扉，而且魔羯女并不会爱上傻子！ &lt;br /&gt;

4,从魔羯女孩怕受伤害说起。。。 &lt;br /&gt;

魔羯女很善良，因此怕被伤害，她们保护自己最主要的方式就是封闭自己的感情世界，而她们也总以此做为封闭自己感情世界的合理性理由。说魔羯女孩在情感上自私并不是否定她们害怕受伤害因而加以自我保护的合理性，事实上，因为太怕受伤害了反而强化了她们情感自私的本性。当被别人指责她们在情感上自私的时候，她们自己可能会觉得挺委屈，她们会说，我是因为怕受伤害才封闭自己的感情的呀。但是反过来说，与其他十一个星座的女孩相比，魔羯女光知道自己怕受伤害，却从来没想过别的星座的女孩也不是刀枪不入的铁打金刚，也同样怕受伤害。都是同样怕受伤害，别的星座的女孩就能勇于交流感受勇于付出感情勇于回头接纳，但魔羯女却不能，这在情感上如果不正好说明了她们比其他十一个星座的女孩更加自私那么又说明了什么呢？在此我不妨回答一个众多喜欢魔羯女但又对魔羯女不了解的GG们常遇到的一个问题：魔羯女对他们为什么冷热不均？答案很简单：还是自私！当魔羯MM需要你的时候，在她们看来你就应该马上出现在她们的身边，这时候的她们就显的温情的多，而当她们有事情比较忙或者不需要你陪伴的时候，即使你需要她们，那么你也应该知趣的躲到一边不要烦她。这些想法和行为在魔羯女看来是理所应当和根本不需要给对方什么解释的，但在GG们看来，这就是所谓的冷热不均，一个误会就此发生。 &lt;br /&gt;

5，魔羯女总是被选择的吗？ &lt;br /&gt;


在此我要顺便提到一个我感觉很有意思的问题，我原来浏览论坛的时候不止一次的看到有魔羯女孩自己感叹说魔羯女孩是善良和容易受伤害的，因为她们总是被选择。但我对此的看法却截然相反，是的，魔羯女总是被看中她们的别的男人追求，而鲜有主动去追求自己喜欢的男人，因此从形式上看，她们是被选择的。但实质上，假如一个男人想追求一个女孩，如果那个女孩是别的星座的还好说，起码感情流动是双向的，哪怕这个男人还没有被这个女孩接受，他的感情的付出大多能得到程度不同的反馈和安慰，即使被拒绝也知道个为什么，从而也不至于伤的太重。而遇到魔羯女孩则不然，在被魔羯女接受之前，你别想得到一丝一毫的反馈和感动，她们就象藏在人事部办公室大门后那个苛刻的招聘主管，不露声色的观察着一个个忐忑不安的应聘者，同时心里面拨动着自己的小算盘决定自己的取舍，让那些被刷掉的应聘者死都不知道怎么死的。魔羯女即使暗恋某个人，也除非那个人也喜欢她们，乖乖的主动来到她招聘办公室来请她们定夺才可。从这个角度来说，谁才是真正的主宰者和选择者呢？西方有句人际关系交往法则名言：较少关心人际关系者掌握最大主动权。那么这句话在魔羯女这里是否可以改成“较少付出感情者掌握最大主动权”呢？显然，魔羯女孩在这方面都是天才，而她们还在感叹她们是被选择者！ &lt;br /&gt;

有的女孩在论坛上反驳我说“你光知道魔羯女孩不轻易付出，那是因为她们慎重，她们知道感情不是儿戏，而一旦付出你知道是什么概念吗？”好！那我就以此为索引，展开我的下一个看法： &lt;br /&gt;

6，魔羯女为什么总觉得她们一旦接受一份感情后对对方的付出总是最大的？ &lt;br /&gt;

魔羯女的观点之一就是，别看她们不好追，但一旦她们接受一份感情的话，那一定是最大的忘我的付出。乍一看，似乎有道理，但实在经不起推敲。首先我要说，不光她们，其余任何十一个星座的女孩在接受一份感情的时候，都是做了最大的付出的，因为就目前社会发展状况来说，决定一个女人一生幸福的还是她们的爱情和婚姻，事业倒在其次（有的魔羯女孩可能不同意我这句话，但事实上确实如此！），没有一个星座可以例外。既然爱情和婚姻在最大程度上决定了女性一生的幸福，那么绝大多数女孩子在接受一份感情后都是认真对待和最大程度上全力付出的，这并不是魔羯女孩的专利。所以现在面临的一个问题就是：魔羯女为什么总是觉得她们对于感情的付出是最大的？在这里我不妨做一个抽象而简单的说明。假如人类的感情在没有丝毫付出时的值是0，一般交流时的值是3，全力付出时的值是10，而接受的临界点是6。那么，当别的星座的女孩在被追求时，她们和对方的感情是互动升温的，那么没完全接受这份感情时的值为3（因为存在互动，是一般交流），一旦接受了这份感情，她们对对方的感情付出值为10，10—3=7。而魔羯女孩在被追求时，她们和对方之间的感情是单向交流的，她们只判断不付出，这时她们对对方的感情付出值是0甚至是负数比如说-2，她们一旦接受了这份感情，她们对对方的付出值为10，10—0=10，或者10—（-2）=12，然后她们就认为，我付出的绝对值为10或者12，而别的星座的女孩子为对方付出的感情绝对值才是7呢。因此她们得出结论是她们一旦接受一份感情后她们的付出是最大的，并进而认为她们是最无私和最勇于付出的，但事实上别的星座的女孩的付出和她们一样，都是10。 &lt;br /&gt;

更进一步讲，魔羯女一旦接受一份感情，就把它当作自己需要的载体，在形式上比如家庭生活方面等等的确是在付出，在她们看来这就是对承载自己幸福的物质载体的付出，这和别的星座的女孩没有什么两样，但在和对方的感情交流上依然是单方向的，她们的感情依然是吝于付出的，即使对对方觉得有不合适的地方也是闷在心里。其实爱的本质就是相互包容和适应，但在魔羯女这里，包容变成了忍耐（这是两个完全不同的概念，包容是因为爱对方而最大程度的容纳对方，而忍耐是基于自己的需要而观察对方有没有突破自己需要的底线，虽然这个底线可能放的非常低），适应更谈不上，她心里会要求对方能摸透她们的心思从而自己调整来适应她们，包括适应她们的需要，而她们却从来没有想过既然已经接受对方，那么自己如果真爱对方的话也应该有所调整来适应对方，哪怕这种调整只有一点点。因此，经常有对方在促不及防还没有一点预兆和心理准备的情况下就遇到了魔羯女的分手通牒（虽然这个决定也是在她们考虑，不，忍耐好久以后做出的），但因为她们和对方的感情交流是单向的，因此很难避免一定程度的误解，建立在误解上的分手是最令人遗憾和痛心的，而她们提出分手常常又是那么促不及防，令人难以接受，从这个角度而言，魔羯女最伤人处正在于此。 &lt;br /&gt;

7，魔羯女孩的性格特征和合适的择偶模式是什么？ &lt;br /&gt;

如果说魔羯女孩的情感特征是极度自私的话，那么她们的性格特征也可以用简单的两个字来概括：矛盾！具体说来，就是外表的冷漠与内心的火热并存，极度的自恋与心底的自卑或不自信并存，对这个无情而冷漠的现实世界的天生的洞察与却容易被日常生活中事物或人的最拙劣的表象所迷惑并存，表面上的世故城府与骨子里就是个天真的孩子的本质并存，感情上的细腻敏感与大脑思维模式的僵化迟钝并存，疑神疑鬼的天生疑心病与却对什么事情都容易当真的轻信并存。甚至她们的行为都打上了矛盾的烙印，她们讨厌一个人但她们的行为却可能给那个人以相反的误导，她们喜欢一个人却因为一些别人所不理解而她们自以为是的原因而掉头走掉，她们很善良，却往往给人冷酷无情的印象，她们不愿意伤害别人，但往往把她们最不愿意伤害的人伤的体无完肤。她们就象一群行走在黑暗中的懵懂的孩童，真心爱她们的男人就如同她们手中给她们照亮道路的灯笼，她们失手打翻了手里的灯笼，只怪烫了自己的手，却没有注意手里的灯笼已经因为她们而燃烧并化成了灰烬。而她们会咬咬牙闷着头继续往前走。 &lt;br /&gt;

魔羯女看似冷漠现实，内心实则浪漫细腻，她们外表理智冷静，不动声色，但她们的内心却犹如几千度的岩浆在翻滚涌动，她们外表沉闷无趣但内心却渴望着能有一个疯狂放纵的机会（所以虽然在现实上她们需要一种稳定而平和的婚姻，但感情上她们最理想的爱人却是一个能够开启她们的心扉让她们内心的岩浆崩涌而出的男人，这，又是一个矛盾）。她们又是现实的，能让她们接受的男人必须要有一定的社会地位或成就，或者至少也要有一个可以预见到的有发展潜力的未来，但遗憾的是如果绕开这点不谈，单从情感角度来分析的话，适合魔羯女孩的情感模式却是可叹的。魔羯女不适合一个全心全意的爱着她的，不仅想要和她的人，而且想要和她的心融合在一起的聪明而真诚的男人。她们适合一个要么很有心机善于揣测女人的心理但并不真心对她的男人，要么适合一个真心对她但忠厚本分，面对她复杂的感情需要一窍不通从而以不变应万变来傻呵呵对待她们的男人。一个聪明而真心爱她们的男人不适合她们，因为这个男人聪明，所以他会观察她的一切细节进行判断，因为这个男人真心爱她，所以他想要走进魔羯女的内心情感世界并和她完全融合在一起，但是由于魔羯女的言行充满了太多的矛盾，所以这个男人越聪明，对魔羯女观察的越细越弄不明白她，同时由于魔羯女在情感上太自私了从而也太封闭了，所以这个男人因为弄不明白她的矛盾之处从而想走进她的内心世界去了解她的时候，却是越往里走越是走不进去，而在这样的男人看来，没有感情交融的爱情是不能叫做爱情的，所以一个聪明而真诚的男人和魔羯女是很难有结果的。但如果换做一个很有心计善于揣测女人的心理但并不真心对她的男人则恰好相反，因为这个男人对她不真心，所以他并不想去了解她的内心世界，这样一来就无形中去掉了和魔羯女交往的最大交流障碍，魔羯女的善良单纯轻信的本性一览无余地暴露出来，他可以从容不迫地以一个掠食者的眼光来打量面前这个善良而单纯的女孩，迎合她的想法以达到自己的目的。而这样的男人大多心术不正，这个时候受伤的只能是魔羯女。她们对真心爱她们者淡漠，但往往对抱着游戏态度者疯狂，因为真心爱她们者拙于表达，抱着游戏态度者花样百出，而魔羯女是典型的表面现象判断者。关于第三种男人，因为这个男人爱魔羯女，所以会真心对她，因为这个男人忠厚老实，所以可以包容魔羯女的一切复杂而矛盾的言行，他知道他不够聪明无法理解魔羯女的情感世界，因此也不想深入魔羯女的内心世界去探索，这时候，如果魔羯女能宽容地接受这样的男人的话，那么相比第二种男人的情况，这种选择对于魔羯女来说可称的上幸运的选择了，但问题是，魔羯女是否会喜欢这样的男人呢？而更多的魔羯女就在这种自我封闭，被人不理解，或者与对方的相互误解，对现实感情的失望，悲观，继而更加封闭情感的这样一种无奈的循环中，深深地体会到了“纱窗日落渐黄昏，金屋无人现泪痕，寂寞空庭春欲晚，梨花满地不开门”的孤独。。。。。 &lt;br /&gt;

8，我的用意是否是赞成魔羯女走向与现在的相反面：勇于交流，敞开心扉 呢？ &lt;br /&gt;

答案恰恰相反，我不赞成魔羯女去象别的星座的女孩那样去对外界敞开心扉勇于交流。假如要魔羯女孩子在日常生活中就和人敞开心扉多沟通的话，这不是一个好办法，因为魔羯女孩子除了情感上的自私外，还非常单纯善良和被动，而且是典型的只凭表象去判别对方的一个群体，反倒容易被那些居心不良的人所害。而魔羯女的淡漠和自我封闭无形中却是一种对她们的一层保护色。所以我不赞成魔羯女孩子在日常生活中去和别人敞开心扉交流沟通，那样反而更害了自己。魔羯女孩子是一个需要被爱护的群体。 &lt;br /&gt;

所以，唯一的办法，照我看来，日常生活中对待不相干的人该怎么样就怎么样。在感情接受上也不妨照旧慢热，但是一旦接受一个男人的话，就要在情感上尽量和他多沟通，对这个特定的人把心扉敞开（但至于魔羯女怎样才能摆脱表面现象的束缚而能从本质上去判断一个人的好坏，我实在想不出什么好招来，星象上说魔羯大器晚成，估计就是要等摔足了跟斗就什么都明白了吧。不过，有些跟斗，摔一跤可能一辈子都爬不起来了）。万一双方有什么误会，也要以尽可能的耐心和包容给对方一个解释的机会，如果解释的理由可以接受的话，那就重新接纳对方，千万不要因为仅仅是心理上的固执而不愿回头，这样做应该可以最大程度上改善魔羯女的处境。毕竟，虽然魔羯女的事业心很强，但无论如何，决定女人一生幸福的最重要的因素仍然是爱情和婚姻。魔羯女也不能例外。 &lt;br /&gt;


在塔罗牌的解释中，魔羯被定义为：UTILIZE（利用）。这对魔羯的男女而言都适用，也是自私的另一种表示法。但“利用”这个词在她们的世界里含义和一般的理解还不一样。一般的理解中，“利用”含有心怀叵测损人利己的意思，而魔羯对人的利用几乎是一种本能的反应。而且魔羯女通常都很善良，她们不会心怀叵测损人利己，她们对人，对感情的利用也几乎是一种本能的反应。与其说是她们利用人，不如说是她们始终都在努力地使自己的现实利益最大化，她们对周围人和物的利用是如此的本能，以至于她们把别人的心已伤到极点她们自己还茫然不觉，直到别人直白地告诉她们她们才会突然明白过来：喔，怎么会这样！我本来不是这个意思啊。&lt;br /&gt;

有个朋友对魔羯女的评价很中肯，她们没有谈爱情的资本，只有谈生活的资本,对爱情有幻想，有激情的爱情理想主义者千万不要找魔羯女，而已经找到魔羯女的人也不要埋怨，因为那是万物构造的不同，是天注定的。魔羯女是如此的现实固执，在情感上又是如此的自私，这和男女之间在感情上的唯心性及相互付出相互交流的固有本质发生了很大的冲突。因此在感情上魔羯女很少有幸福的。但她们一旦在碰得头破血流历经坎坷后走进了某桩婚姻，她们的婚姻在物质上和稳定性上看起来却“似乎”让人羡慕。但是只有她们自己的心里，才会在岁月流淌的某一天，默默的告诉自己，她们当年曾经因为误解和固执而错过了可以真正让她们一生幸福的那一个人。。。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>apache的rewrite一点配置心得</title>
      <link>https://wdicc.com/apache-rewrite/</link>
      <pubDate>Wed, 14 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-rewrite/</guid>
      <description>这样看来，这个请求应该是不正确的，“get /www/x.jsp HTTP/1.1”才对。这个请求被转发给weblogic之后，weblogic会处理不了，因为他会去找“http://abc.com.cn/http://abc.com.cn/www/x.jsp”这个文件，显然是找不到的。&lt;br /&gt;

不过幸好，weblogic有个PathTrim设置，将请求路径种的“http://abc.com.cn”给他去掉就可以了。&lt;br /&gt;

&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;&amp;lt;IfModule mod_weblogic.c&amp;gt;&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;WebLogicHost 192.168.0.252&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;WebLogicPort 7050&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;PathTrim http://abc.com.cn&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;MatchExpression *.jsp&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;&lt;br /&gt;

问题似乎解决了。不过此后又发现我们的域名不止这一个，还有def.com.cn和dfg.com.cn，解决方法似乎也很简单，多添加几个PathTrim呗，但是此后你就会发现，weblogic似乎比较弱智，只有最后一个PathTrim设置会生效……，查看了weblogic的文档也没有找到解决方法，他那里也没有说可以写几个。&lt;br /&gt;

这样就需要从apache这里解决，幸好apache这里还有虚拟主机。针对各个域名分别配置几个虚拟主机，建立基于域名的虚拟主机。文档可以参考&lt;a href=&#34;http://www.douzhe.com/apm/ApacheManual/zh-cn/vhosts/name-based.html&#34;&gt;这里&lt;/a&gt;&amp;nbsp; 。&lt;br /&gt;

需要注意的是，基于域名的虚拟主机配置好之后，如果用虚拟主机里面没有的域名访问的时候，他会去匹配第一个虚拟主机，同样，用ip访问也会如此。&lt;br /&gt;

当一个请求到达的时候，服务器会首先检查它是否使用了一个能和 NameVirtualHost相匹配的IP地址。如果能够匹配， 它就会查找每个与这个IP地址相对应的&amp;lt;VirtualHost&amp;gt;配置段， 并尝试找出一个ServerName或ServerAlias配置项与请求的主机名相同的。 如果找到了，它就会使用这个服务器的配置。 否则，将使用符合这个IP地址的第一个列出的虚拟主机。&lt;br /&gt;

配置好虚拟主机之后，上面的问题就解决了。接着就发现有些终端不能正常访问业务了。查看全局的配置，有些rewrite rule的配置，想当然认为虚拟主机会继承全局设置。其实不是这样的，全局的对虚拟主机的没有任何影响。还需要在虚拟主机中单独设置。&lt;br /&gt;

&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteEngine on&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteLog /usr/local/apache/apache_rewrite_log.log&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteLogLevel 2&lt;/span&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;br style=&#34;color: rgb(0, 0, 255)&#34; /&gt;&lt;span style=&#34;color: rgb(0, 0, 255)&#34;&gt;RewriteRule&amp;nbsp; xx&lt;/span&gt;&lt;br /&gt;

建议加上log的设置，这样可以很好的检查rewrite有没有起作用。此外，也一定要加上RewriteEngine on，否则任何rewrite rule都不会起作用。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>bash中的数组变量zz</title>
      <link>https://wdicc.com/var-in-bash/</link>
      <pubDate>Wed, 14 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/var-in-bash/</guid>
      <description>
&lt;h3 class=&#34;title&#34;&gt;http://xiaowang.net/bgb-cn/ch10s02.html&lt;br /&gt;
&lt;/h3&gt;&lt;h3 class=&#34;title&#34;&gt;10.2.1. 建立数组                     &lt;/h3&gt;                                                         &lt;p&gt;数组是一个包含多个值的变量。任何变量都可以在数组中使用。数组的尺寸没有最大限制，也不要求成员变量连续索引或者赋值。数组是基于0的：第一个元素的下标以0开始。&lt;/p&gt;            &lt;p&gt;间接的声明使用以下的语法来声明一个变量：&lt;/p&gt;            &lt;div class=&#34;cmdsynopsis&#34;&gt;               &lt;p&gt;&lt;code class=&#34;command&#34;&gt;&lt;code class=&#34;varname&#34;&gt;ARRAY[INDEXNR]&lt;/code&gt;=value&lt;/code&gt;                &lt;/p&gt;            &lt;/div&gt;            &lt;p&gt; &lt;span class=&#34;emphasis&#34;&gt;&lt;em&gt;INDEXNR&lt;/em&gt;&lt;/span&gt; 需要使用一个值为正数的数学表达式。            &lt;/p&gt;            &lt;p&gt;一个数组的外部声明使用内建命令 &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;declare&lt;/strong&gt;&lt;/span&gt; 来完成：            &lt;/p&gt;            &lt;div class=&#34;cmdsynopsis&#34;&gt;               &lt;p&gt;&lt;code class=&#34;command&#34;&gt;declare &lt;code class=&#34;option&#34;&gt;-a&lt;/code&gt; &lt;code class=&#34;varname&#34;&gt;ARRAYNAME&lt;/code&gt;&lt;/code&gt;                &lt;/p&gt;            &lt;/div&gt;            &lt;p&gt;一个带有索引值的声明也是可以接受的，但是索引值将被忽略。对数组的指定属性可以通过使用内建命令 &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;declare&lt;/strong&gt;&lt;/span&gt; 和 &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;readonly&lt;/strong&gt;&lt;/span&gt;。属性对数组中的所有变量起作用；你不能使用混合数组。            &lt;/p&gt;            &lt;p&gt;数组变量也可以使用这种格式的复合赋值来建立：&lt;/p&gt;            &lt;div class=&#34;cmdsynopsis&#34;&gt;               &lt;p&gt;&lt;code class=&#34;command&#34;&gt;&lt;code class=&#34;varname&#34;&gt;ARRAY&lt;/code&gt;=(value1 value2 ... valueN)&lt;/code&gt;                &lt;/p&gt;            &lt;/div&gt;            &lt;p&gt;每个值将以这种形式 &lt;span class=&#34;emphasis&#34;&gt;&lt;em&gt;[indexnumber=]string&lt;/em&gt;&lt;/span&gt; 排列。索引号是可选的。如果提供，索引号就赋给它；otherwise the index of the element assigned is the number of the last index that was assigned, plus               one.  这样的格式 &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;declare&lt;/strong&gt;&lt;/span&gt; 也可以接受。如果不提供索引值，那索引自动从零开始。            &lt;/p&gt;            &lt;p&gt;在数组中加入缺少或者额外的成员使用以下语法：&lt;/p&gt;            &lt;div class=&#34;cmdsynopsis&#34;&gt;               &lt;p&gt;&lt;code class=&#34;command&#34;&gt;&lt;code class=&#34;varname&#34;&gt;ARRAYNAME[indexnumber]&lt;/code&gt;=value&lt;/code&gt;                &lt;/p&gt;            &lt;/div&gt;            &lt;p&gt;记住 &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;read&lt;/strong&gt;&lt;/span&gt; 内建命令提供 &lt;code class=&#34;option&#34;&gt;-a&lt;/code&gt; 选项，来允许对一个数组的成员变量进行读取和赋值。            &lt;/p&gt;                  &lt;div class=&#34;sect2&#34; lang=&#34;zh-cn&#34;&gt;            &lt;div class=&#34;titlepage&#34;&gt;               &lt;div&gt;                  &lt;div&gt;                     &lt;h3 class=&#34;title&#34;&gt;&lt;a name=&#34;sect_10_02_02&#34;&gt;&lt;/a&gt;10.2.2. 对数组的变量解引用                     &lt;/h3&gt;                  &lt;/div&gt;               &lt;/div&gt;            &lt;/div&gt;            &lt;p&gt;为了指明在一个数组中的项目的内容，为了指向一个数组中的一个项目的内容，使用{}。这样是必须的，正如你可以从下面的例子看出，来绕过扩展操作符的shell解释。如果索引的数字是 &lt;span class=&#34;emphasis&#34;&gt;&lt;em&gt;@&lt;/em&gt;&lt;/span&gt; 或者 &lt;span class=&#34;emphasis&#34;&gt;&lt;em&gt;*&lt;/em&gt;&lt;/span&gt;，一个数组的所有的成员都将被引用。            &lt;/p&gt;&lt;pre class=&#34;screen&#34;&gt;&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;&lt;code class=&#34;varname&#34;&gt;ARRAY&lt;/code&gt;=&lt;em class=&#34;parameter&#34;&gt;&lt;code&gt;(one two three)&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;echo &lt;code class=&#34;varname&#34;&gt;${ARRAY[*]}&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
one two three&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;echo &lt;code class=&#34;varname&#34;&gt;$ARRAY[*]&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
one[*]&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;echo &lt;code class=&#34;varname&#34;&gt;${ARRAY[2]}&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
three&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;&lt;code class=&#34;varname&#34;&gt;ARRAY[3]&lt;/code&gt;=&lt;em class=&#34;parameter&#34;&gt;&lt;code&gt;four&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;echo &lt;code class=&#34;varname&#34;&gt;${ARRAY[*]}&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
one two three four&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;不提供索引号码来指向某个数组的一个数字变量的内容和指向第一个元素的内容是一样的。&lt;/p&gt;         &lt;/div&gt;         &lt;div class=&#34;sect2&#34; lang=&#34;zh-cn&#34;&gt;            &lt;div class=&#34;titlepage&#34;&gt;               &lt;div&gt;                  &lt;div&gt;                     &lt;h3 class=&#34;title&#34;&gt;&lt;a name=&#34;sect_10_02_03&#34;&gt;&lt;/a&gt;10.2.3. 删除数组变量                     &lt;/h3&gt;                  &lt;/div&gt;               &lt;/div&gt;            &lt;/div&gt;            &lt;p&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;unset&lt;/strong&gt;&lt;/span&gt; 内建命令用来删除数组或者数组成员：            &lt;/p&gt;&lt;pre class=&#34;screen&#34;&gt;&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;unset &lt;code class=&#34;varname&#34;&gt;ARRAY[1]&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;echo &lt;code class=&#34;varname&#34;&gt;${ARRAY[*]}&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
one three four&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;unset &lt;code class=&#34;varname&#34;&gt;ARRAY&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;

&lt;code class=&#34;prompt&#34;&gt;[bob in ~]&lt;/code&gt; &lt;span&gt;&lt;strong class=&#34;command&#34;&gt;echo &lt;code class=&#34;varname&#34;&gt;${ARRAY[*]}&lt;/code&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
&amp;lt;--no output--&amp;gt;&lt;br /&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>IP负载均衡技术zz</title>
      <link>https://wdicc.com/ip-blance/</link>
      <pubDate>Tue, 13 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ip-blance/</guid>
      <description>
http://zh.linuxvirtualserver.org/node/25&lt;br /&gt;

&lt;div class=&#34;tree&#34;&gt;&lt;div class=&#34;menu&#34;&gt;&lt;ul&gt;&lt;li class=&#34;leaf&#34;&gt;&lt;a href=&#34;http://zh.linuxvirtualserver.org/node/26&#34;&gt;通过NAT实现虚拟服务器（VS/NAT）&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;leaf&#34;&gt;&lt;a href=&#34;http://zh.linuxvirtualserver.org/node/27&#34;&gt;通过IP隧道实现虚拟服务器（VS/TUN）&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;leaf&#34;&gt;&lt;a href=&#34;http://zh.linuxvirtualserver.org/node/28&#34;&gt;通过直接路由实现虚拟服务器（VS/DR）&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;collapsed&#34;&gt;&lt;a href=&#34;http://zh.linuxvirtualserver.org/node/29&#34;&gt;三种方法的优缺点比较&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;leaf&#34;&gt;&lt;a href=&#34;http://zh.linuxvirtualserver.org/node/33&#34;&gt;小结&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;下面是三种方法的框图。&lt;br /&gt;
[##_Gallery|1242465348.jpg||1053977827.jpg||1329637443.jpg||width=&#34;400&#34; height=&#34;300&#34;_##]&lt;br /&gt;
&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>豆角焖面zz</title>
      <link>https://wdicc.com/i-love-it/</link>
      <pubDate>Fri, 09 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/i-love-it/</guid>
      <description>
http://www.newsmth.net/bbscon.php?bid=44&amp;amp;id=717203963&lt;br /&gt;

1. 肉切片炒好盛出（稍微比正常口味咸一点）；&lt;br /&gt;
2. 豆角洗净去筋掰成2cm的小段，油烧热爆葱花然后丢豆角进去，炒一会儿放盐，酱油少 水，再炒至8成熟，将豆角汁盛出80%，即锅里汤汁的量刚好在豆角间起伏，肉倒入；&lt;br /&gt;
3. 和面，湿布将面团盖住醒15分钟，面团擀成圆形，均匀撒面粉在面片上，用擀面杖从圆&amp;nbsp; 形的不同扇形边将面片一层层裹在上面，反复几次面片就很薄了，最后一次裹好后别展&amp;nbsp; 开，用刀从擀面杖的左边滑向右边将面片切开，这时候的面片近似矩形，从右边的短边&amp;nbsp; 开始切，切细一点，然后撒点面粉把面条丝抖开。均匀一层层铺在锅中的豆角肉上，盖&amp;nbsp; 锅盖，中火；&lt;br /&gt;
4. 两个人吃的面条量10分钟就可以关火，闷两分钟后把刚才盛出的豆角汤汁均匀撒在面条&amp;nbsp; 上，吃！&lt;br /&gt;

 &amp;nbsp; 第一次做，还算是成功。&lt;br /&gt;

tip: 比较不好掌握的是闷的这十分钟里，汤汁多的话会把面条泡了少的话会糊，推荐开始汤汁留少不留多，中间可以揭开锅看看，少的话将盛出的汤汁沿锅边浇一点进去，注意别� 接浇在面条上。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1277507719.jpg&#34; width=&#34;540&#34; height=&#34;0&#34; alt=&#34;&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Installing and Configuring SNMP Service on Windows 2000</title>
      <link>https://wdicc.com/installing-and-configuring-snmp-service-on-windows-2000/</link>
      <pubDate>Tue, 06 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/installing-and-configuring-snmp-service-on-windows-2000/</guid>
      <description>
再win2k启用snmp服务&lt;br /&gt;

http://resource.intel.com/telecom/support/releases/winnt/sr511/docs/htmlfiles/userguide/getting4.htm#1001777&lt;br /&gt;

&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;This section describeshow to install and configure SNMP for Windows 2000. For instructions oninstalling and configuring SNMP for Windows NT, see &lt;a href=&#34;http://resource.intel.com/telecom/support/releases/winnt/sr511/docs/htmlfiles/userguide/getting3.htm#1001729&#34;&gt;&lt;em&gt;Section3.1.1, Installing and Configuring SNMP Service on Windows NT&lt;/em&gt;&lt;/a&gt;.&lt;/font&gt;&lt;h4&gt;  &lt;a name=&#34;1001779&#34;&gt; &lt;/a&gt;&lt;font color=&#34;#000000&#34; face=&#34;Times New Roman, Times, serif&#34;&gt;Installing SNMP for Windows 2000&lt;/font&gt;&lt;/h4&gt;&lt;p&gt;  &lt;a name=&#34;1001780&#34;&gt; &lt;/a&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;The following steps describe how to install the SNMP service on a Windows 2000 machine:&lt;/font&gt;&lt;/p&gt;&lt;ol type=&#34;1&#34;&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;1&#34;&gt;&lt;a name=&#34;1001781&#34;&gt; &lt;/a&gt;Invoke the &lt;strong&gt;Windows 2000 Control Panel&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;2&#34;&gt;&lt;a name=&#34;1001782&#34;&gt; &lt;/a&gt;Double click the &lt;strong&gt;Add/Remove Programs&lt;/strong&gt; icon.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;3&#34;&gt;&lt;a name=&#34;1001783&#34;&gt; &lt;/a&gt;Select &lt;strong&gt;Add/Remove Windows Components&lt;/strong&gt;. The Windows Component Wizard is displayed.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;4&#34;&gt;&lt;a name=&#34;1001785&#34;&gt; &lt;/a&gt;Check the Management and Monitoring Tools box.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;5&#34;&gt;&lt;a name=&#34;1001786&#34;&gt; &lt;/a&gt;Click the &lt;strong&gt;Details&lt;/strong&gt; button.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;6&#34;&gt;&lt;a name=&#34;1001787&#34;&gt; &lt;/a&gt;Check the Simple Network Management Protocol box and click &lt;strong&gt;OK&lt;/strong&gt;. The Windows Component Wizard is redisplayed.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;7&#34;&gt;&lt;a name=&#34;1001788&#34;&gt; &lt;/a&gt;Click &lt;strong&gt;Next&lt;/strong&gt; to proceed through the Windows Component Wizard until it has finished.&lt;/li&gt;&lt;/font&gt;&lt;/ol&gt;&lt;h4&gt;  &lt;a name=&#34;1001789&#34;&gt; &lt;/a&gt;&lt;font color=&#34;#000000&#34; face=&#34;Times New Roman, Times, serif&#34;&gt;Configuring SNMP Service for Windows 2000&lt;/font&gt;&lt;/h4&gt;&lt;p&gt;  &lt;a name=&#34;1001790&#34;&gt; &lt;/a&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;Follow the steps below to configure SNMP Service on a Windows 2000 machine:&lt;/font&gt;&lt;/p&gt;&lt;ol type=&#34;1&#34;&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;1&#34;&gt;&lt;a name=&#34;1001791&#34;&gt; &lt;/a&gt;Invoke the &lt;strong&gt;Windows 2000 Control Panel&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;2&#34;&gt;&lt;a name=&#34;1001792&#34;&gt; &lt;/a&gt;Double click the &lt;strong&gt;Administrative Tools &lt;/strong&gt;icon.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;3&#34;&gt;&lt;a name=&#34;1001793&#34;&gt; &lt;/a&gt;Double click the &lt;strong&gt;Services&lt;/strong&gt; icon.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;4&#34;&gt;&lt;a name=&#34;1001794&#34;&gt; &lt;/a&gt;Select &lt;strong&gt;SNMP Service&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;5&#34;&gt;&lt;a name=&#34;1001795&#34;&gt; &lt;/a&gt;Choose the &lt;strong&gt;Agent&lt;/strong&gt; tab.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;6&#34;&gt;&lt;a name=&#34;1001796&#34;&gt; &lt;/a&gt;Enter &lt;strong&gt;Contact&lt;/strong&gt; and &lt;strong&gt;Location&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;7&#34;&gt;&lt;a name=&#34;1001797&#34;&gt; &lt;/a&gt;Choose the &lt;strong&gt;Traps&lt;/strong&gt; tab.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;8&#34;&gt;&lt;a name=&#34;1001798&#34;&gt; &lt;/a&gt;Enter &lt;strong&gt;Community Name:&lt;/strong&gt; &lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;public&lt;/font&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;9&#34;&gt;&lt;a name=&#34;1001799&#34;&gt; &lt;/a&gt;Click &lt;strong&gt;Add to List&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;10&#34;&gt;&lt;a name=&#34;1001800&#34;&gt; &lt;/a&gt;Under &lt;strong&gt;Trap Destinations&lt;/strong&gt;, click &lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;strong&gt;Add&lt;/strong&gt;&lt;/font&gt; and enter the &lt;strong&gt;IP address&lt;/strong&gt; for each management node to receive trap notifications from this managed node. &lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;11&#34;&gt;&lt;a name=&#34;1001801&#34;&gt; &lt;/a&gt;Click &lt;strong&gt;OK&lt;/strong&gt; when done.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;12&#34;&gt;&lt;a name=&#34;1001802&#34;&gt; &lt;/a&gt;Choose the &lt;strong&gt;Security&lt;/strong&gt; tab.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;13&#34;&gt;&lt;a name=&#34;1001803&#34;&gt; &lt;/a&gt;Highlight&lt;strong&gt; public &lt;/strong&gt;and click &lt;strong&gt;Edit&lt;/strong&gt;. Change &lt;strong&gt;Community Rights&lt;/strong&gt; to READ CREATE.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;14&#34;&gt;&lt;a name=&#34;1001804&#34;&gt; &lt;/a&gt;Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;15&#34;&gt;&lt;a name=&#34;1002870&#34;&gt; &lt;/a&gt;Stop &lt;strong&gt;SNMP Service&lt;/strong&gt; (if started) and restart.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;16&#34;&gt;&lt;a name=&#34;1002889&#34;&gt; &lt;/a&gt;Double click &lt;strong&gt;SNMP Trap Service&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;17&#34;&gt;&lt;a name=&#34;1002890&#34;&gt; &lt;/a&gt;Set &lt;strong&gt;Startup Type&lt;/strong&gt; to &#39;Automatic&#39;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;18&#34;&gt;&lt;a name=&#34;1002891&#34;&gt; &lt;/a&gt;Click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/li&gt;&lt;/font&gt;&lt;font face=&#34;Times New Roman, Times, serif&#34;&gt;&lt;li value=&#34;19&#34;&gt;&lt;a name=&#34;1002892&#34;&gt; &lt;/a&gt;Stop &lt;strong&gt;SNMP Trap Service&lt;/strong&gt; (if started) and restart.&lt;/li&gt;&lt;/font&gt;&lt;/ol&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>博士和小工的区别zz</title>
      <link>https://wdicc.com/a-joke-7/</link>
      <pubDate>Thu, 01 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-7/</guid>
      <description>
话说联合利华新换了一批自动香皂包装机以后，经常出现香皂盒子是空的没有香皂的情况，而在装配线一头用人工检查因为效率问题不太可能而且不保险，这不，一个由自动化，机械，机电一体化等专业的博士组成的Solution队伍来解决这个问题，没多久他们在装配线的头上开发了全自动的X光透射检查线，透射检查所有的装配线尽头等待装箱的香皂盒，如果由空的就用机械臂取走。&lt;br /&gt;

不巧，中国一乡镇企业生产香皂也遇到类似问题，老板吩咐线上小工务必想出对策解决之，小工拿了一个电风扇放在装配线的头上，对着最后的成品吹之，空盒子被吹走问题解决之.&lt;br /&gt;

这跟美国人花大血本发明太空笔和苏联人用铅笔异曲同工啊&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>weblogic的“Too many open files”错和apache的“CONNECTION_REFUSED”错</title>
      <link>https://wdicc.com/too-many-open-files/</link>
      <pubDate>Tue, 30 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/too-many-open-files/</guid>
      <description>这时访问apache会提示和weblogic的桥出了问题。&lt;br /&gt;

这个问题已经遇到很多次了，但通常都是夜间，第二天查看日志的时候，会发现那个时候确实访问量比较大。查看当时的连接情况可以看到，apache和java连接都700多。看了网上的说明，调整了系统参数、调整了weblogic的设置等，都不见效。&lt;br /&gt;
http://www.bea.com.cn/support_pattern/Too_Many_Open_Files_Pattern.html&lt;br /&gt;
http://e-docs.bea.com/wls/docs81/perform/index.html&lt;br /&gt;

今天又出现这个情况了，不过是白天，和web应用的作者一起对weblogic的情况进行了观察。&lt;br /&gt;

通过weblogic控制台，可以看到&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_ServicedRequestTotalCount_label&#34;&gt;Throughput这里大都是在处理1左右的访问，&lt;/span&gt;&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_PendingRequestCurrentCount_label&#34;&gt;Queue Length这里却在不停的涨，开始就对&lt;/span&gt;&lt;a href=&#34;http://218.206.70.193:7001/console/actions/mbean/ListMBeansAction?wl_sort_domain_ExecuteQueueTable_config=0300&amp;reloadNav=false&amp;tab=config&amp;MBeanClassName=weblogic.management.configuration.ExecuteQueueMBean&amp;MBeanClass=weblogic.management.configuration.ExecuteQueueMBean&amp;scopeMBean=anymusic%3AName%3Dmyserver%2CType%3DServer&#34;&gt;&lt;span class=&#34;column-header&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;text-decoration: underline&#34;&gt;T&lt;/span&gt;hread  count做了修改，从50调整到了400，但是还是可以看到Thread会用完，一会&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_PendingRequestCurrentCount_label&#34;&gt;Queue Length就又涨起来了。&lt;br /&gt;

分析一下就可以知道，情况应该是Queue的线程对访问的处理速度太慢，导致需要处理的队列越来越多。需要处理队列的增长速度比队列的处理速度慢，这样不管有多少线程，肯定最后都会导致不够用。&lt;br /&gt;

现在大家就开始考虑问题是不是出在应用这里了，应用执行速度慢，weblogic线程就会一直占着，就会导致线程用尽。而实际上确实是应用这里的问题。&lt;br /&gt;

应用对访问的处理速度很快，有访问进来就先放到队列，而队列的处理速度却是500ms处理一下，这样一秒也就处理2个。这样问题的原因就很明确了，1s内外部访问应用可能有10来次，而应用才处理2个，所以自然会将线程占满了。&lt;br /&gt;

调整队列处理速度之后问题就解决了，空闲线程一直是400。&lt;/span&gt;&lt;span class=&#34;dialog-label&#34; id=&#34;wl_control_weblogic_management_configuration_ServerMBean_lookupServerRuntime_ExecuteQueueRuntime_PendingRequestCurrentCount_label&#34;&gt;&lt;/span&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为什么硬盘总是从c盘开始</title>
      <link>https://wdicc.com/a-joke-6/</link>
      <pubDate>Mon, 29 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-6/</guid>
      <description>
&amp;nbsp;&amp;nbsp; &amp;nbsp;现代铁路的铁轨间距是4英尺8点5英寸，铁轨间距采用了电车轮距的标准，而电车轮距的标准则沿袭了马车的轮距标准。 &lt;br /&gt;
 &amp;nbsp; &amp;nbsp;马车的轮距为何是4英尺8点5英寸？原来，英国的马路辙迹的宽度是4英尺8点5英寸。如果马车改用其他尺寸的轮距，轮子很快就会在英国的老马路上撞坏。 &lt;br /&gt;
 &amp;nbsp; &amp;nbsp;英国马路的辙迹宽度又从何而来？这可以上溯到古罗马时期。整个欧洲(包括英国)的老路都是罗马人为其军队铺设的，4英尺8点5英寸正是罗马战车的宽度。 &lt;br /&gt;
 &amp;nbsp; &amp;nbsp;罗马战车的宽度又是怎么来的？答案很简单，它是牵引一辆战车的两匹马的屁股的总宽度。 &lt;br /&gt;
 &amp;nbsp; &amp;nbsp;段子到这里还没有结束。美国航天飞机的火箭助推器也摆脱不了马屁股的纠缠———火箭助推器造好之后要经过铁路运送，而铁路上必然有一些隧道，隧道的宽度又是根据铁轨的宽度而来。代表着尖端科技的火箭助推器的宽度，竟然被两匹马的屁股的总宽度决定了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>miranda im中文社区正式上线</title>
      <link>https://wdicc.com/miranda-im-in-china/</link>
      <pubDate>Sun, 28 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/miranda-im-in-china/</guid>
      <description>
http://www.qiqiao.5gigs.com/?2006/5/22/4&lt;br /&gt;
&lt;p&gt;在国内，对MIM的介绍可以说少而又少，虽然有几篇介绍，但是主要以blog为住，相对来说不集中，因此导致国内学习MIM的新手苦于求助无门而放弃。&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;http://miranda.lifevine.org/&#34; target=&#34;_self&#34;&gt;miranda im中文社区&lt;/a&gt;，是由国内最早的miranda imQQ讨论群内的成员共同维护组建，由于近来学习MIM者居多，QQ群限制的人数已经不足以满足那么多的学习求助者，因此大家才建立这个社区，以方便使用MIM的网友在这里交流学习，&lt;/p&gt;&lt;p&gt;目前，也是国内唯一一个miranda im的中文社区，欢迎大家到那里交流学习！ &lt;br /&gt;
&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>ps 命令的小tip</title>
      <link>https://wdicc.com/tips-for-ps/</link>
      <pubDate>Tue, 23 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/tips-for-ps/</guid>
      <description>
显示httpd进程的pid&lt;br /&gt;
#ps -C httpd -o pid=&lt;br /&gt;

杀死所有httpd进程&lt;br /&gt;
#for pid in $(ps -C httpd -o pid=);do kill -9 $pid;done&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Tuning Hardware, Operating System, and Network Performance</title>
      <link>https://wdicc.com/tuning-hardware-operating-system-and-network-performance/</link>
      <pubDate>Tue, 23 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/tuning-hardware-operating-system-and-network-performance/</guid>
      <description>
http://e-docs.bea.com/wls/docs81/perform/HWTuning.html&lt;br /&gt;

http://www.bea.com.cn/support_pattern/Too_Many_Open_Files_Pattern.html&lt;br /&gt;

&lt;h2 class=&#34;head2&#34;&gt;Linux Tunin&lt;a name=&#34;Linux_tuning&#34;&gt;&lt;/a&gt;g Parameters&lt;/h2&gt;&lt;p&gt;&lt;a name=&#34;1121229&#34;&gt;&lt;/a&gt;For Linux operating systems, the following settings are recommended for optimal performance.&lt;/p&gt;&lt;p&gt;&lt;a name=&#34;1121263&#34;&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class=&#34;tblmargin&#34;&gt;&lt;p class=&#34;tabletitle&#34;&gt;&lt;a name=&#34;1121232&#34;&gt;&lt;/a&gt;Table 2-5   Suggested Linux Values&lt;/p&gt;	&lt;table bordercolorlight=&#34;#FFFFFF&#34; bordercolordark=&#34;#000000&#34; border=&#34;1&#34; cellpadding=&#34;3&#34; cellspacing=&#34;0&#34;&gt;&lt;tbody&gt;&lt;tr bgcolor=&#34;#cccccc&#34;&gt;		&lt;th scope=&#34;col&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;cellheading&#34;&gt;&lt;a name=&#34;1121236&#34;&gt;&lt;/a&gt;Parameter&lt;/p&gt;		&lt;/th&gt;		&lt;th scope=&#34;col&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;cellheading&#34;&gt;&lt;a name=&#34;1121238&#34;&gt;&lt;/a&gt;Suggested Value&lt;/p&gt;		&lt;/th&gt;	&lt;/tr&gt;	&lt;tr&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121240&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;/sbin/ifconfig lo mtu&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121242&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;1500&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121244&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;kernel.msgmni&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121246&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;1024&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121248&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;kernel.sem&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121250&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;1000 32000 32 512&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121252&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;fs.file-max&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121254&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;65535&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121256&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;kernel.shmmax&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121258&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;2147483648&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121260&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;net.ipv4.tcp_max_syn_backlog&lt;/code&gt;&lt;/p&gt;		&lt;/td&gt;		&lt;td scope=&#34;row&#34; align=&#34;left&#34; valign=&#34;top&#34;&gt;			&lt;p class=&#34;table&#34;&gt;&lt;a name=&#34;1121262&#34;&gt;&lt;/a&gt;&lt;code style=&#34;font-family: courier&#34;&gt;8192&lt;/code&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Apache &#43; weblogic 桥接的Connection_Refused错误</title>
      <link>https://wdicc.com/apache-weblogic-error/</link>
      <pubDate>Mon, 22 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-weblogic-error/</guid>
      <description>
http://edocs.bea.com/wls/docs81/plugins/apache.html#113649&lt;br /&gt;

主要是调整&lt;code style=&#34;font-family: courier&#34;&gt;weblogic的AcceptBackLog参数。&lt;/code&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>weblogic apache 桥接指南</title>
      <link>https://wdicc.com/weblogic-apache-bridge/</link>
      <pubDate>Mon, 22 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/weblogic-apache-bridge/</guid>
      <description>
Using Web Server Plug-Ins with WebLogic Server&lt;br /&gt;

http://edocs.bea.com/wls/docs90/plugins/apache.html&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>用split分割备份文件，和用cat恢复备份</title>
      <link>https://wdicc.com/split-and-cat/</link>
      <pubDate>Mon, 22 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/split-and-cat/</guid>
      <description>
split命令的使用格式如下：&lt;br /&gt;
$split --help&lt;br /&gt;
Usage: split [OPTION] [INPUT [PREFIX]]&lt;br /&gt;
Output fixed-size pieces of INPUT to PREFIXaa, PREFIXab, ...; default&lt;br /&gt;
PREFIX is `x&#39;.&amp;nbsp; With no INPUT, or when INPUT is -, read standard input.&lt;br /&gt;

Mandatory arguments to long options are mandatory for short options too.&lt;br /&gt;
&amp;nbsp; -a, --suffix-length=N &amp;nbsp; use suffixes of length N (default 2)&lt;br /&gt;
&amp;nbsp; -b, --bytes=SIZE &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put SIZE bytes per output file&lt;br /&gt;
&amp;nbsp; -C, --line-bytes=SIZE &amp;nbsp; put at most SIZE bytes of lines per output file&lt;br /&gt;
&amp;nbsp; -d, --numeric-suffixes&amp;nbsp; use numeric suffixes instead of alphabetic&lt;br /&gt;
&amp;nbsp; -l, --lines=NUMBER &amp;nbsp; &amp;nbsp;&amp;nbsp; put NUMBER lines per output file&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; --verbose &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print a diagnostic to standard error just&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; before each output file is opened&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; --help &amp;nbsp; &amp;nbsp; display this help and exit&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; --version&amp;nbsp; output version information and exit&lt;br /&gt;

SIZE may have a multiplier suffix: b for 512, k for 1K, m for 1 Meg.&lt;br /&gt;


通常使用的都是-b参数指定分割之后的文件的大小。&lt;br /&gt;

我们先建立一个测试文件。&lt;br /&gt;
#dd if=/dev/zero of=./test bs=1M count=512&lt;br /&gt;
就是以1M为单位，重复512次，也就是建立一个512M的文件。&lt;br /&gt;

$split -b 200m test test_back&lt;br /&gt;
执行这个命令之后，等执行完毕会看到目录下面多了几个文件&lt;br /&gt;
$ls&lt;br /&gt;
test test_backaa test_backab test_backac&lt;br /&gt;

这样就完成了文件的分割。如果对于文本文件，还可以使用split的-l参数针对行数进行分割。&lt;br /&gt;

这样分割传输之后，还需要重新合并才能使用，可以使用cat命令来完成。&lt;br /&gt;
$cat test_backa* &amp;gt; test_back&lt;br /&gt;

执行完毕之后，可以看一下恢复的test_back文件和test文件的md5。&lt;br /&gt;
$md5sum test test_back&lt;br /&gt;
返回值应该是一样的。&lt;br /&gt;

使用tar备份的时候有时也需要对大的备份文件进行分割。&lt;br /&gt;
$tar czvf - /data | split -b 1024m - data&lt;br /&gt;

</description>
    </item>
    
    <item>
      <title>使用cacti获取snmp发送的自定义信息</title>
      <link>https://wdicc.com/cacti-snmp/</link>
      <pubDate>Fri, 19 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cacti-snmp/</guid>
      <description>★ 解决方法&lt;br /&gt;

snmp提供了发送自定义信息的功能。查看snmpd.conf会看到有一个小节是关于外部脚本的，Executables/scripts。这个小节里面也举了例子，告诉你怎么通过snmp发送信息。我的做法如下（下面假定你已经配置好了snmp，通过cacti已经能采集到信息了）。&lt;br /&gt;

在任意位置添加一行：&lt;br /&gt;
exec .1.3.6.1.4.1.2021.51 wlsapache /root/wlsapache status&lt;br /&gt;
其中wlsapache是命令的名称，后面是命令以及参数。命令的名称可以随便起。脚本执行的结果类似下面：&lt;br /&gt;
# ./wlsapache status&lt;br /&gt;
3&lt;br /&gt;
ALL ok.&lt;br /&gt;
我这个脚本的“ALL ok”其实是副产品，对于采集数据没有用。&lt;br /&gt;

重启snmpd，然后远程通过snmpwalk接收一下数据看看：&lt;br /&gt;
# snmpwalk -v 1 192.168.1.201 -c public .1.3.6.1.4.1.2021.51 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.1.1 = INTEGER: 1&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.2.1 = STRING: &#34;wlsapache&#34;&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.3.1 = STRING: &#34;/root/wlsapache status&#34;&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.100.1 = INTEGER: 0&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.101.1 = STRING: &#34;3&#34;&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.101.2 = STRING: &#34;ALL ok.&#34;&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.102.1 = INTEGER: 0&lt;br /&gt;

其中我们需要的是UCD-SNMP-MIB::ucdavis.51.101.1 = STRING: &#34;3&#34;这一行：&lt;br /&gt;
# snmpwalk -v 1 192.168.1.201 -c public .1.3.6.1.4.1.2021.51.101.1&lt;br /&gt;
UCD-SNMP-MIB::ucdavis.51.101.1 = STRING: &#34;3&#34;&lt;br /&gt;

能采集到数据之后，就可以配置cacti来接收了。在cacti界面中console-&amp;gt;Templates-&amp;gt;Data Templates，然后点击右上角的Add，Data Templates中的name是给这个数据模板的命名，Data Source中的name将来显示在Data Sources中，我这里添加“|host_description| - Network - wlsapache”，选get snmp data，Internal Data Source Name也可以随便添，这个用来给rrd文件命名。设置完后就可以save了，save之后会发现下面多了一些选项，在最下面那个添上我们需要的数据的OID“.1.3.6.1.4.1.2021.51.101.1”，可以保存了。&lt;br /&gt;

此后需要创建一个Graph Templates，好让cacti生成图片。在cacti界面中console-&amp;gt;Templates-&amp;gt;Graph Templates，然后点击右上角的Add，Templates中的name是给这个数据模板的命名，Graph Template中的name是将来显示在图片上面中间的内容，我这里添加“|host_description| - wlsapache status”，其他保持默认，保存之后上面会出来一些选项。&lt;br /&gt;

在Graph Template Items中添加一个item，Data Source选之前添加的，color选择一个图片的颜色，Graph Item Type选AREA，也就是区域，也可以选其他的线条，Text Format设置说明。然后再添加一个，Graph Item Type选GPRINT，Consolidation Function选LAST，也就是当前的值，Text Format输入current。你还可以添加一些Graph Item Type为COMMENT的注释说明等。&lt;br /&gt;
现在只要为host添加这个画图模板就可以看到画出来的图了。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1320809656.png&#34; width=&#34;576&#34; height=&#34;212&#34; alt=&#34;&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>root用户无法修改的一个文件</title>
      <link>https://wdicc.com/a-file-root-cant-modify/</link>
      <pubDate>Mon, 15 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-file-root-cant-modify/</guid>
      <description>
# ls -al xx&lt;br /&gt;
-rwxr-xr-x &amp;nbsp; &amp;nbsp;1 root &amp;nbsp; &amp;nbsp; root &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2647 Dec &amp;nbsp;8 16:47 xx&lt;br /&gt;

# stat -c %a startWebLogic.sh&lt;br /&gt;
755&lt;br /&gt;

# mv xx xx.ss&lt;br /&gt;
mv: cannot move `xx&#39; to `xx.ss&#39;: Operation not permitted&lt;br /&gt;

这是怎么回事呢？上bbs问了一下才知道。&lt;br /&gt;

# lsattr xx&lt;br /&gt;
----i-------- xx&lt;br /&gt;

只需要执行如下命令即可&lt;br /&gt;
#chattr -i xx&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>ldap samba实现windows域管理</title>
      <link>https://wdicc.com/ldap-samba/</link>
      <pubDate>Sun, 14 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ldap-samba/</guid>
      <description>2 安装Openldap和phpldapadmin&lt;br /&gt;

debian里面的openldap的名字是slapd。ldap-utils包里包括了一些ldap有用的命令（都是以ldap开头的）。phpldapadmin是ldap的一个web管理界面。de4.2-util是Berkeley V4.2 数据库工具包，ldap需要用到。&lt;br /&gt;

#apt-get install slapd ldap-utils phpldapadmin db4.2-util&lt;br /&gt;

下载完毕包之后，开始安装之前，会出来一些设置界面（请注意这里出现问题的数目和安装系统时的某个设置有关系）。&lt;br /&gt;

slapd的设置&lt;br /&gt;
1) DNS domain nam填写你的服务器的域名，此后会作为基准DN。例如我输入abc.com，此后的基准DN就是dc=abc,dc=com。&lt;br /&gt;
2) Name of your organization填写你的组织的名称，或者公司的名称。我输入test-org。&lt;br /&gt;
3) Admin password填写管理员的密码，这个用户是ldap最高权限的拥有者。&lt;br /&gt;
4) 确认密码。&lt;br /&gt;
5) Allow LDAPv2 protocol询问你是否允许LDAPv2协议。如果是新装选否就可以了。如果需要兼容以前的系统，选是。&lt;br /&gt;

phpldapadmin的设置&lt;br /&gt;
1) LDAP服务器的ip或者主机名。因为是管理本机的LDAP服务器，所以默认的127.0.0.1就可以。&lt;br /&gt;
2) 是否启用TLS，也就是是否使用加密协议。加密的话可能需要apache2也做配置支持。这里选择否。&lt;br /&gt;
3) 基准DN。根据你的情况输入，这里我输入dc=abc,dc=com。&lt;br /&gt;
4) 这一步选择phpldapadmin的认证方式，安装过phpmysqladmin的应该会比较熟悉。选择session是最保险的方式。&lt;br /&gt;
5) 输入登陆服务器的dn，默认即可。这里还要注意，默认的行字也就是最后登陆phpldapadmin的管理员的用户名，比较长。&lt;br /&gt;
6) 需要配置的服务器，这里只需要选择apache2就可以了。&lt;br /&gt;
7) 选择是，重启apache。&lt;br /&gt;

此后即开始安装。slapd的配置文件都在/etc/ldap。phpldapadmin的配置文件在/etc/phpldapadmin。用浏览器打开 http://abc.com/phpldapadmin ，会看到phpldapadmin的界面，使用cn=admin,dc=abc,dc=com登陆。&lt;br /&gt;

###如果是etch，phpldapadmin 0.8.8.1，登陆的时候会提示用户名或密码错误，不知道是不是phpldapadmin 0.9.8.1版本的bug。此版本还有一个问题就是登陆之后，不能新建entry。0.9.8.2版本就没有这个问题了。所以如果你也是0.9.8.1版本的话，最好还是去http://phpldapadmin.sf.net下载一个新的版本，然后把其中的phpldapadmin/htdocs/template_engine.php覆盖 /usr/share/phpldapadmin/htdocs/template_engine.php 即可，或者也可以直接全部覆盖，要注意保留config/config.php。&lt;br /&gt;

如果提示用户名密码错误，不用担心，还可以修改/etc/ldap/slapd.conf文件，在index后面添加两行&lt;br /&gt;

rootdn &#34;cn=admin,dc=abc,dc=com&#34;&lt;br /&gt;
rootpw pw&lt;br /&gt;

之后重启slapd（/etc/init.d/slapd restart）之后即可用密码pw登陆，登陆之后可以修改密码，修改之后可以去掉上面添加的两行（当然，不删也可以）。&lt;br /&gt;

debian中的admin的密码是存储在数据库里面的，而不是/etc/ldap/slapd.conf文件中，所以可以不需要rootdn和rootpw的设置。&lt;br /&gt;

使用下面的命令可以查看ldap中所有的条目&lt;br /&gt;

#ldapsearch -x -b &#39;dc=abc,dc=com&#39; &#39;(objectclass=*)&#39;&lt;br /&gt;

修改/etc/syslog.conf，增加下面一行。&lt;br /&gt;

local4.* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /var/log/ldap.log&lt;br /&gt;

这样ldap生成的日志就会在/var/log/ldap.log里面出现。此外还需要设置/etc/ldap/slapd.conf的loglevel。&lt;br /&gt;

3 安装samba&lt;br /&gt;

samba-doc包含了和ldap一起工作的samba schema，这个是我们需要的。&lt;br /&gt;

#apt-get install samba samba-doc&lt;br /&gt;

samba的设置&lt;br /&gt;
1) Workgroup/Domain Name这里输入工作组名称或者域名称。我这里输入test-domain。&lt;br /&gt;
2) 是否使用加密密码。windows默认都是这个。选是。&lt;br /&gt;
3) 修改smb.conf使用DHCP设置的WINS。选否。&lt;br /&gt;
4) 选daemons。&lt;br /&gt;
5) 是否建立samba密码数据库，选是。&lt;br /&gt;

复制ldap需要的samba的schema。&lt;br /&gt;

#cp /usr/share/doc/samba-doc/examples/LDAP/samba.schema.gz /etc/ldap/schema&lt;br /&gt;
#cd /etc/ldap/schema/&lt;br /&gt;
#gzip -d samba.schema.gz&lt;br /&gt;

修改/etc/ldap/slapd.conf，在include后面加上一行。&lt;br /&gt;

include &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /etc/ldap/schema/samba.schema&lt;br /&gt;

重启slapd。配置samba使用ldap来验证。修改/etc/samba/smb.conf文件。&lt;br /&gt;

找到passdb backend = tdbsam，将其替换为下面内容。&lt;br /&gt;

passdb backend = ldapsam:ldap://127.0.0.1&lt;br /&gt;
ldap suffix = dc=abc,dc=com&lt;br /&gt;
ldap machine suffix = ou=machines&lt;br /&gt;
ldap user suffix = ou=users&lt;br /&gt;
ldap group suffix = ou=groups&lt;br /&gt;
ldap admin dn = cn=admin,dc=abc,dc=com&lt;br /&gt;
ldap delete dn = no&lt;br /&gt;

# 服务器配置为主域控制器&lt;br /&gt;
domain logons = yes&lt;br /&gt;

# allow user privileges&lt;br /&gt;
enable privileges = yes&lt;br /&gt;


设置之后可以使用testparm命令测试。&lt;br /&gt;

为samba提供LDAP rootdn的密码。&lt;br /&gt;

# smbpasswd -w your_passwd&lt;br /&gt;
Setting stored password for &#34;cn=admin,dc=abc,dc=com&#34; in secrets.tdb&lt;br /&gt;

重启samba。打开phpldapadmin看看，可以看到dc=abc,dc=com下面已经多出来一个entry。我这里是sambaDomainName=TEST-DOMAIN。查看其属性，可以看到最下面的sambaSID，这个后面的操作会用到。也可以使用net getlocalsid命令得到。&lt;br /&gt;


4 安装smbldap-tools&lt;br /&gt;

perl脚本，用来更加方便管理用户。主要使用他来初始化LDAP中samba中的部分。&lt;br /&gt;

#apt-get install smbldap-tools&lt;br /&gt;

配置smbldap-tools。&lt;br /&gt;

#cd /etc/smbldap-tools&lt;br /&gt;
#cp /usr/share/doc/smbldap-tools/examples/smbldap{.conf.gz,_bind.conf} ./&lt;br /&gt;
#gzip -d smbldap.conf.gz&lt;br /&gt;

之后修改下面几个文件以符合你的情况。&lt;br /&gt;

/etc/smbldap-tools/smbldap.conf&lt;br /&gt;

SID=&#34;S-1-5-21-3248317815-3353503310-553435137&#34; &lt;br /&gt;
suffix=&#34;dc=abc,dc=com&#34; &lt;br /&gt;
usersdn=&#34;ou=users,${suffix}&#34; &lt;br /&gt;
computersdn=&#34;ou=machines,${suffix}&#34; &lt;br /&gt;
groupsdn=&#34;ou=groups,${suffix}&#34; &lt;br /&gt;
sambaUnixIdPooldn=&#34;sambaDomainName=TEST-DOMAIN,${suffix}&#34; &lt;br /&gt;
hash_encrypt=&#34;MD5&#34;&lt;br /&gt;

/etc/smbldap-tools/smbldap_bind.conf:&lt;br /&gt;

slaveDN=&#34;cn=admin,dc=abc,dc=com&#34; &lt;br /&gt;
slavePw=&#34;password&#34; &lt;br /&gt;
masterDN=&#34;cn=admin,dc=abc,dc=com&#34; &lt;br /&gt;
masterPw=&#34;password&#34;&lt;br /&gt;

要注意这个文件里面的密码要添明文，所以最好为这个文件设置合适的权限。&lt;br /&gt;

执行smbldap-populate命令&lt;br /&gt;

# smbldap-populate&lt;br /&gt;
Using workgroup name from sambaUnixIdPooldn (smbldap.conf): sambaDomainName=TEST-DOMAIN&lt;br /&gt;
Using builtin directory structure&lt;br /&gt;
entry dc=abc,dc=com already exist.&lt;br /&gt;
adding new entry: ou=Users,dc=abc,dc=com&lt;br /&gt;
adding new entry: ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: ou=Computers,dc=abc,dc=com&lt;br /&gt;
adding new entry: ou=Idmap,dc=abc,dc=com&lt;br /&gt;
entry sambaDomainName=TEST-DOMAIN,dc=abc,dc=com already exist. Updating it...&lt;br /&gt;
adding new entry: uid=Administrator,ou=Users,dc=abc,dc=com&lt;br /&gt;
adding new entry: uid=nobody,ou=Users,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Domain Admins,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Domain Users,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Domain Guests,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Domain Computers,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Administrators,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Print Operators,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Backup Operators,ou=Groups,dc=abc,dc=com&lt;br /&gt;
adding new entry: cn=Replicators,ou=Groups,dc=abc,dc=com&lt;br /&gt;

此后，可以查看一下phpldapadmin，已经新加了几个entry。&lt;br /&gt;

5 安装mkntpwd&lt;br /&gt;

phpldapadmin需要使用这个程序来生成samba的加密密码。debian没有这个包，需要自己编译，编译之前可能需要安装make，gcc和libc-dev包。&lt;br /&gt;

#apt-get install make gcc libc-dev&lt;br /&gt;
#wget http://www.nomis52.net/data/mkntpwd.tar.gz &lt;br /&gt;
#tar -zxf mkntpwd.tar.gz&lt;br /&gt;
#cd mkntpwd&lt;br /&gt;
#make&lt;br /&gt;
#cp mkntpwd /usr/local/bin &lt;br /&gt;

修改/usr/share/phpldapadmin/templates/template_config.php文件。&lt;br /&gt;

查找&lt;br /&gt;

// uncomment to set the base dn of posix groups&lt;br /&gt;
// default is set to the base dn of the server&lt;br /&gt;
//$base_posix_groups=&#34;ou=People,dc=example,dc=com&#34;;&lt;br /&gt;

$samba3_domains[] =&lt;br /&gt;
array(&amp;nbsp; &#39;name&#39; &amp;nbsp; =&amp;gt; &#39;My Samba domain Name&#39;,&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &#39;sid&#39; =&amp;gt; &#39;S-1-5-21-4147564533-719371898-3834029857&#39; );&lt;br /&gt;

// The base dn of samba group. (CUSTOMIZE)&lt;br /&gt;
//$samba_base_groups = &#34;ou=Groups,ou=samba,dc=example,dc=org&#34;;&lt;br /&gt;

修改为&lt;br /&gt;

// uncomment to set the base dn of posix groups&lt;br /&gt;
// default is set to the base dn of the server&lt;br /&gt;
$base_posix_groups=&#34;ou=groups,dc=nomis52,dc=net&#34;;&lt;br /&gt;

$samba3_domains[] =&lt;br /&gt;
array(&amp;nbsp; &#39;name&#39; &amp;nbsp; =&amp;gt; &#39;TEST-DOMAIN&#39;,&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &#39;sid&#39; =&amp;gt; &#39;S-1-5-21-3248317815-3353503310-553435137&#39; );&lt;br /&gt;

// The base dn of samba group. (CUSTOMIZE)&lt;br /&gt;
$samba_base_groups = &#34;ou=groups,dc=abc,dc=com&#34;&lt;br /&gt;

6 安装libnss-ldap&lt;br /&gt;

用来做linux验证。使得LDAP用户就像普通linux帐号一样。&lt;br /&gt;

#apt-get install libnss-ldap&lt;br /&gt;

libnss-ldap设置&lt;br /&gt;
1) 默认。&lt;br /&gt;
2) 查找基准。输入dc=abc,dc=com。&lt;br /&gt;
3) 选3。&lt;br /&gt;
4) 选否。&lt;br /&gt;
5) 选是。&lt;br /&gt;
6) 确定。&lt;br /&gt;

修改/etc/nsswitch.conf。&lt;br /&gt;

passwd: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; compat ldap&lt;br /&gt;
group: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; compat ldap&lt;br /&gt;
shadow: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; compat ldap&lt;br /&gt;

这样验证密码的时候会先搜索/etc/passwd，然后才是ldap。&lt;br /&gt;

使用getent命令查看一下计算机上面的用户组，在最后会看到ldap的。&lt;br /&gt;

#getent group&lt;br /&gt;
.....&lt;br /&gt;
Domain Admins:x:512:Administrator&lt;br /&gt;
Domain Users:x:513:&lt;br /&gt;
Domain Guests:x:514:&lt;br /&gt;
Domain Computers:x:515:&lt;br /&gt;
Administrators:x:544:&lt;br /&gt;
Print Operators:x:550:&lt;br /&gt;
Backup Operators:x:551:&lt;br /&gt;
Replicators:x:552:&lt;br /&gt;

7 安装libpam-ldap&lt;br /&gt;

#apt-get install libpam-ldap&lt;br /&gt;

libpam-ldap设置&lt;br /&gt;
1) 使root成为数据库的管理员？选是。&lt;br /&gt;
2) 选否。&lt;br /&gt;
3) 输入admin的dn，cm=admin,dc=abc,dc=com。&lt;br /&gt;
4) 输入root使用的密码，留空使用原来的root密码。&lt;br /&gt;
5) 选md5。&lt;br /&gt;

修改 /etc/pam-ldap.conf。&lt;br /&gt;

pam_filter !(uidNumber=0)&lt;br /&gt;

设置不允许root通过ldap登陆linux。&lt;br /&gt;

修改下面文件使得pam使用ldap。&lt;br /&gt;

/etc/pam.d/common-account&lt;br /&gt;

# 注释掉这行 &lt;br /&gt;
#account &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; required &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; pam_unix.so&lt;br /&gt;

# 添加下面两行&lt;br /&gt;
account &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sufficient &amp;nbsp; &amp;nbsp;&amp;nbsp; pam_ldap.so&lt;br /&gt;
account &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; required &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; pam_unix.so try_first_pass&lt;br /&gt;

/etc/pam.d/common-auth&lt;br /&gt;

# 注释掉这行 &lt;br /&gt;
#auth &amp;nbsp; required &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; pam_unix.so nullok_secure&lt;br /&gt;

# 添加下面两行&lt;br /&gt;
auth &amp;nbsp;&amp;nbsp; sufficient &amp;nbsp; &amp;nbsp;&amp;nbsp; pam_ldap.so&lt;br /&gt;
auth &amp;nbsp;&amp;nbsp; required &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; pam_unix.so nullok_secure use_first_pass&lt;br /&gt;

/etc/pam.d/common-password&lt;br /&gt;

# 注释掉这行&lt;br /&gt;
#password &amp;nbsp; required &amp;nbsp; pam_unix.so nullok obscure min=4 max=8 md5&lt;br /&gt;

# 添加下面两行&lt;br /&gt;
password &amp;nbsp; sufficient pam_ldap.so&lt;br /&gt;
password &amp;nbsp; required &amp;nbsp; pam_unix.so nullok obscure min=4 max=8 md5 use_first_pass&lt;br /&gt;

重启ssh和samba。&lt;br /&gt;

安装nscd。&lt;br /&gt;

#apt-get install nscd&lt;br /&gt;

8 添加用户&lt;br /&gt;

smbldap-useradd : to add an user account (by default a posixAccount. Using &#39;-a&#39; option for a sambaSAMAccount, &#39;-w&#39; option for a machine sambaAccount), &lt;br /&gt;
smbldap-userdel : to delete an existing user account &lt;br /&gt;
smbldap-usermod : to modify an user account. &lt;br /&gt;
smbldap-userinfo : to allow users to modify some informations themselves&lt;br /&gt;

修改/etc/samba/smb.conf。&lt;br /&gt;

guest account = nobody&lt;br /&gt;
add user script = /usr/sbin/smbldap-useradd -m &#34;%u&#34;&lt;br /&gt;
#delete user script = /usr/sbin/smbldap-userdel &#34;%u&#34;&lt;br /&gt;
add machine script = /usr/sbin/smbldap-useradd -w &#34;%u&#34;&lt;br /&gt;
add group script = /usr/sbin/smbldap-groupadd -p &#34;%g&#34;&lt;br /&gt;
#delete group script = /usr/sbin/smbldap-groupdel &#34;%g&#34;&lt;br /&gt;
add user to group script = /usr/sbin/smbldap-groupmod -m &#34;%u&#34; &#34;%g&#34;&lt;br /&gt;
delete user from group script = /usr/sbin/smbldap-groupmod -x &#34;%u&#34; &#34;%g&#34;&lt;br /&gt;
set primary group script = /usr/sbin/smbldap-usermod -g &#34;%g&#34; &#34;%u&#34;&lt;br /&gt;
ldap passwd sync = yes&lt;br /&gt;


添加一个测试用户。&lt;br /&gt;

#smbldap-useradd -a -m testuser&lt;br /&gt;
#smbldap-passwd testuser&lt;br /&gt;
#smbldap-passwd Administrator&lt;br /&gt;

重启一下电脑，然后使用下面的命令。&lt;br /&gt;

#net rpc -U Administrator rights grant testuser SeMachineAccountPrivilege&lt;br /&gt;

然后使用这个用户登陆一下域看看。&lt;br /&gt;



$ smbcontrol smbd reload-config&lt;br /&gt;

and grant the necessary rights to Administrator:&lt;br /&gt;

$ net -U Administrator rpc rights list&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; SeMachineAccountPrivilege&amp;nbsp; Add machines to domain&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; SePrintOperatorPrivilege&amp;nbsp; Manage printers&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SeAddUsersPrivilege&amp;nbsp; Add users and groups to the domain&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; SeRemoteShutdownPrivilege&amp;nbsp; Force shutdown from a remote system&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; SeDiskOperatorPrivilege&amp;nbsp; Manage disk shares&lt;br /&gt;

$ net -U Administrator rpc rights list Administrator&lt;br /&gt;

$ net -U Administrator rpc rights grant Administrator SeMachineAccountPrivilege&lt;br /&gt;
Successfully granted rights.&lt;br /&gt;




9 登陆脚本&lt;br /&gt;

创建网络共享&lt;br /&gt;
# mkdir -p /data/samba/netlogon&lt;br /&gt;
# chgrp &#34;Domain Admins&#34; /data/samba/netlogon&lt;br /&gt;

修改/etc/samba/smb.conf&lt;br /&gt;

# put this in the main section&lt;br /&gt;
logon script = logon.bat&lt;br /&gt;

# share for the logon scripts&lt;br /&gt;
[netlogon]&lt;br /&gt;
 comment = Network logon service&lt;br /&gt;
 path = /data/samba/netlogon&lt;br /&gt;
 write list = &#34;@Domain Admins&#34;&lt;br /&gt;
 guest ok = Yes&lt;br /&gt;
 &lt;br /&gt;
 下载KiXtart，解压到/data/samba/netlogon。&lt;br /&gt;
 &lt;br /&gt;
 #cd /data/samba/netlogon&lt;br /&gt;
 #wget &#34;http://www.adminscripteditor.com/downloads.asp?act=v&amp;amp;id=39&#34;&lt;br /&gt;
 #apt-get install unzip&lt;br /&gt;
 #unzip KiX2010_451.zip&lt;br /&gt;
 #cp ./KiX2010.451/{KIX32.EXE,KX32.dll} ./&lt;br /&gt;
 &lt;br /&gt;
 创建logon.bat。&lt;br /&gt;
 &lt;br /&gt;
 \\debian\netlogon\kix32 \\debian\netlogon\logon.kix /f&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>find命令查找删除30天之前的文件</title>
      <link>https://wdicc.com/del-30-day-old-file/</link>
      <pubDate>Tue, 09 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/del-30-day-old-file/</guid>
      <description>
find /data -name &#34;xxx.*&#34; -follow -ctime +30 -exec rm -rf {} \;&lt;br /&gt;

删除30天之前的文件。&lt;br /&gt;
-follow表示跟随链接。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>mysql 安装</title>
      <link>https://wdicc.com/install-mysql/</link>
      <pubDate>Tue, 09 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-mysql/</guid>
      <description>
下面的内容大部分来自mysql的readme&lt;br /&gt;

1 download mysql5.0&lt;br /&gt;
2&lt;br /&gt;
shell&amp;gt; groupadd mysql&lt;br /&gt;
shell&amp;gt; useradd -g mysql mysql&lt;br /&gt;
shell&amp;gt; cd /usr/local&lt;br /&gt;
shell&amp;gt; gunzip &amp;lt; /PATH/TO/MYSQL-VERSION-OS.tar.gz | tar xvf -&lt;br /&gt;
shell&amp;gt; ln -s FULL-PATH-TO-MYSQL-VERSION-OS mysql&lt;br /&gt;
shell&amp;gt; cd mysql&lt;br /&gt;
shell&amp;gt; scripts/mysql_install_db --user=mysql&lt;br /&gt;

如下提示信息:&lt;br /&gt;

Installing all prepared tables&lt;br /&gt;
Fill help tables&lt;br /&gt;

To start mysqld at boot time you have to copy support-files/mysql.server&lt;br /&gt;
to the right place for your system&lt;br /&gt;

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !&lt;br /&gt;
To do so, start the server, then issue the following commands:&lt;br /&gt;
./bin/mysqladmin -u root password &#39;new-password&#39;&lt;br /&gt;
./bin/mysqladmin -u root -h czhand password &#39;new-password&#39;&lt;br /&gt;
See the manual for more instructions.&lt;br /&gt;

You can start the MySQL daemon with:&lt;br /&gt;
cd . ; ./bin/mysqld_safe &amp;amp;&lt;br /&gt;

You can test the MySQL daemon with the benchmarks in the &#39;sql-bench&#39; directory:&lt;br /&gt;
cd sql-bench ; perl run-all-tests&lt;br /&gt;

Please report any problems with the ./bin/mysqlbug script!&lt;br /&gt;

The latest information about MySQL is available on the web at&lt;br /&gt;
http://www.mysql.com&lt;br /&gt;
Support MySQL by buying support/licenses at https://order.mysql.com&lt;br /&gt;

shell&amp;gt; chown -R root  .&lt;br /&gt;
shell&amp;gt; chown -R mysql data&lt;br /&gt;
shell&amp;gt; chgrp -R mysql .&lt;br /&gt;

/home/my.cnf&lt;br /&gt;

basedir=/usr/local/mysql&lt;br /&gt;
datadir=/usr/local/mysql/data&lt;br /&gt;
socket=/usr/local/mysql/data/mysql.sock&lt;br /&gt;
#err-log=/var/log/mysqld.log&lt;br /&gt;
pid-file=/usr/local/mysql/data/mysqld.pid&lt;br /&gt;

shell&amp;gt; bin/mysqld_safe --user=mysql &amp;amp;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>rsync脚本的一个例子</title>
      <link>https://wdicc.com/rsync-script/</link>
      <pubDate>Tue, 09 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/rsync-script/</guid>
      <description>
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;

SYNCLOGFILE=&#34;/var/log/rsync-201.log&#34;
SYNCLOCKFILE=&#34;/var/lock/rsync-201.lock&#34;

if [[ -f $SYNCLOCKFILE ]]; then
  # lock file already present, bail
  exit 1
fi

echo -n &#34;&gt;&gt;&gt; Sync log for &#34; &gt;&gt; $SYNCLOGFILE
date &gt;&gt; $SYNCLOGFILE

touch $SYNCLOCKFILE
rsync -vzrtopg  --delete 192.168.0.201::www /backup  &gt;&gt; $SYNCLOGFILE 2&gt;&amp;1
rm -f $SYNCLOCKFILE
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>启动停止weblogic和apache的脚本</title>
      <link>https://wdicc.com/stop-and-start-script-for-apache-and-weblogic/</link>
      <pubDate>Tue, 09 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/stop-and-start-script-for-apache-and-weblogic/</guid>
      <description>
apache和weblogic做桥接之后，启动的时候要先启动weblogic，后启动apache，停止的时候要先停止apache，后停止weblogic，这&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>端口映射</title>
      <link>https://wdicc.com/portmap/</link>
      <pubDate>Tue, 09 May 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/portmap/</guid>
      <description>★ 解决方法&lt;br /&gt;

1 共享上网&lt;br /&gt;

1) 按照下图连接电脑。&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;isp&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;gw(用来做网关的电脑，双网卡)&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;hub(or switch)&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;---------------------------&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp;&amp;nbsp; | ........ | &amp;nbsp; &amp;nbsp; &amp;nbsp; |&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;pc1 &amp;nbsp; pc2 ......&amp;nbsp; pcx &amp;nbsp;&amp;nbsp; pcy&lt;br /&gt;

gw一个网卡接isp，ip设置为isp告诉你的。另外一个网卡接hub，ip设置为一个内网ip，例如192.168.0.1。&lt;br /&gt;

2) 在gw上面执行如下脚本。&lt;br /&gt;
#------------script start--------&lt;br /&gt;
#!/bin/sh&lt;br /&gt;

IPT=&#34;/sbin/iptables&#34;&lt;br /&gt;

# Internet Interface&lt;br /&gt;
INET_IFACE=&#34;ethx&#34;&lt;br /&gt;
INET_ADDRESS=&#34;x.x.x.x&#34;&lt;br /&gt;

# Local Interface Information&lt;br /&gt;
LOCAL_IFACE=&#34;ethy&#34;&lt;br /&gt;
LOCAL_IP=&#34;192.168.0.1&#34;&lt;br /&gt;
LOCAL_NET=&#34;192.168.0.0/24&#34;&lt;br /&gt;
LOCAL_BCAST=&#34;192.168.0.255&#34;&lt;br /&gt;

#修改从外网网卡出去的包的源地址，好让外网返回的包能正确回来。&lt;br /&gt;
$IPT -t nat -A POSTROUTING -o $INET_IFACE -j SNAT --to-source $INET_ADDRESS&lt;br /&gt;

#打开系统的转发功能&lt;br /&gt;
echo &#34;1&#34; &amp;gt; /proc/sys/net/ipv4/ip_forward&lt;br /&gt;

#----------script end----------&lt;br /&gt;

这样内网的电脑做如下设置后就应该可以上网了。&lt;br /&gt;

ip：&amp;nbsp; 192.168.0.x&lt;br /&gt;
网关: 192.168.0.1&lt;br /&gt;
dns:&amp;nbsp; 和gw的设置一样&lt;br /&gt;

这时的服务器已经具备一个网关的功能，不过内网的电脑想要上网，都必须手动设置ip，想做到自动获取，可以&lt;br /&gt;

2 端口映射&lt;br /&gt;

端口映射需要做的其实就是修改对方发过来包的目的地址和端口，然后帮忙转发一下，并且转发的同时修改一下源地址，好让被转发的电脑认为是gw发的包，处理完毕之后好能正常返回gw，然后由gw在负责转发给外网的ip。端口转发需要用到iptables的nat表，上面这些操作是在PREROUTING和POSTROUTING链之间完成的。&lt;br /&gt;

1) 映射到外网ip&lt;br /&gt;
整个过程可以参考下图。&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;eth0(外网网卡) &amp;nbsp; &amp;nbsp;&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;________________________&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; gw的80端口 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 修改目标地址(DNAT) &amp;nbsp; &amp;nbsp; &amp;nbsp; 修改源地址(SNAT)&lt;br /&gt;
外网ip----------&amp;gt;PREROUTING------------&amp;gt;POSTROUTING------------&amp;gt;外网ip&lt;br /&gt;

所以，例如我们要将对gw 80端口的访问都转发到外网的202.202.202.202这台电脑上面，只需要在上面的脚本中添加下面的语句即可。&lt;br /&gt;

# 修改从外网进来的对80端口访问的数据包的目的地址&lt;br /&gt;
$IPT -t nat -A PREROUTING -p tcp -i $INET_IFACE --destination-port 80 \&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; -j DNAT --to-destination 202.202.202.202&lt;br /&gt;

那么，你可能要问，按照上面的说法，这样只修改了目的地址，还要修改源地址啊，这样包才能正确返回到gw。问的好，不过其实我们已经做了这个设置了，聪明的你可能已经想到了，就是上面让内网ip可以上网的那个脚本里的一句语句已经实现了这个功能。&lt;br /&gt;

#修改从外网网卡出去的包的源地址，好让外网返回的包能正确回来。&lt;br /&gt;
$IPT -t nat -A POSTROUTING -o $INET_IFACE -j SNAT --to-source $INET_ADDRESS&lt;br /&gt;

就是上面这句，他把所有从外网网卡出去的包的源地址都修改了，当然也包括去往202.202.202.202的80端口的包。&lt;br /&gt;

2) 映射到内网ip&lt;br /&gt;
整个过程可以参考下图。&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;eth0(外网网卡) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;eth0(内网网卡)&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;________________________ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;_______________________&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; |&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; gw的80端口 &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 修改目标地址(DNAT) &amp;nbsp; &amp;nbsp; &amp;nbsp; 修改源地址(SNAT) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 修改源地址(SNAT)&lt;br /&gt;
外网ip----------&amp;gt;PREROUTING------------&amp;gt;POSTROUTING------------&amp;gt;PREROUTING-----------&amp;gt;POSTROUTING-----------&amp;gt;内网ip&lt;br /&gt;

所以，例如我们要映射80端口到内网的192.168.1.80这台电脑上面，只需要在上面的脚本中添加下面的语句即可。&lt;br /&gt;

# 修改从外网进来的对80端口访问的数据包的目的地址&lt;br /&gt;
$IPT -t nat -A PREROUTING -p tcp -i $INET_IFACE --destination-port 80 \&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; -j DNAT --to-destination 192.168.1.80&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &lt;br /&gt;
# 修改从内网网卡出去的所有数据包源地址&lt;br /&gt;
$IPT -t nat -A POSTROUTING -o $LOCAL_IFACE \&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; -j SNAT --to-source $LOCAL_IP&lt;br /&gt;

这个比上面多了一句，意思相信你已经明白了吧。因为访问内网ip的时候走了内网网卡，所以还需要对从内网网卡出去的包修改一下源地址。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>178事故</title>
      <link>https://wdicc.com/178-accident/</link>
      <pubDate>Sun, 30 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/178-accident/</guid>
      <description>★ 解决问题&lt;br /&gt;

修改ip是比较简单的，rh下面/etc/sysconfig/network-scripts下面几个文件修改了就好，虽然是修改内网ip，我还是对旧的配置文件做了备份，修改之后，重启了一下网络。&lt;br /&gt;

#service network restart&lt;br /&gt;

这里也有个小问题，不知道ssh怎么做到重启网络居然可以不掉线的。&lt;br /&gt;

重启网络之后，查看了一下ip，已经修改过来了，然后重新查看监控，发现192.168网段的网卡也有流量了，说明修改好了。再次尝试从B执行rsync从A同步数据，发现仍然连不上，A上的tcpdump仍然没有数据，B上面的仍然有回应，rsync的出错提示依然没变。这个问题太奇怪了，无意中发现在B上面监听的时候发现返回数据的主机名似乎不是A的，查看之后发现确实不是，再看同机房的服务器，发现有一台的内网ip和A的192网段的ip一样，B访问的其实是那台电脑的，那台没有开rsyc服务，所以连不上了。至此B访问A有回应的问题知道原因，那么就尝试修改一下A的192网段的ip看看。修改到另外一个ip之后，连接B，发现仍然连不上，从B也连不到A，都提示no route，可是查看route表，似乎没问题啊。到底怎么回事呢？此时突然想起来一个问题，他们不会不在一个机房吧。。。赶紧查看服务器托管信息，确定他们确实不在一起，所以访问不通是正常的。这样问题算找到原因了。&lt;br /&gt;

★ 新的问题&lt;br /&gt;

上面问题解决大概也没用多少时间，10多分钟的样子吧。正准备休息一下的时候，其他技术人员过来抱怨，说有客户反映A服务器连不上了。我看了一下我的监控，没发现问题。通过沟通之后才知道，客户访问的时候是通过内网ip来访问的，也就是10网段的ip（我的监控只能监控外网ip）。而我因为不知道情况不是刚刚修改了ip么，这也简单，改回去不就行了，况且我修改之前还做了备份呢，这里还庆幸了一下我自己想的周到。&lt;br /&gt;

覆盖回去，重启了一下网络，然后让他去测试一下。测试发现依然连不上，我开始觉得有点奇怪了，不是都改回去了么，想起来之前还修改过防火墙，就去恢复了防火墙设置，发现还是不行。用tcpdump监控发现似乎有10网段的ip过来访问，但是似乎没有反馈回去的数据，检查apache的日志发现没有相关的记录。而apache用公网ip访问没有任何问题。&lt;br /&gt;

此时就陷入了一个困境，因为我没有办法测试内网是不是还通了。其实这是我经验不足造成的，tcpdump既然能看到10网段过来的ip，那么就说明外面的内网ip连接我们这里是没问题的，那也就说明是我们服务器的问题，不会是网络的问题。&lt;br /&gt;

此后将防火墙清空也没有效果，tcpdump监控也一直是只有进来的，没有出去的。其实多次强调只有进来的没有出去的，我也在怀疑是不是服务器拒绝连接了？但是我手里只有这一台服务器，没有办法测试使用内网ip通过别的服务器是否能正常登陆，通过本地访问外网ip是一切正常的，可以看到apache中的日志。&lt;br /&gt;

这个时候老大在火车上了，有人已经打电话统治他出问题了。老大给我打电话建议我重启一下服务器。其实他这个建议没有任何意义，重启服务器也就是将重启一下网络，而我已经做过这个操作了。重启还要担一定的风险，如果起不来，还得去机房，那服务就不是停几个小时的问题了。不过没有办法中的办法，而我之前也重启一个测试服务器，没有遇到问题，所以就给服务器重启了，这样我也是争取一点时间，好想想到底哪里的问题。&lt;br /&gt;

此时各个小头都已经过来站在我后面了，我都能感觉手都有一点抖了。因为这台服务器是我们的主要业务之一，停几分钟就会损失不少钱，而到现在已经一个小时左右了。&lt;br /&gt;

重启没有遇到问题，连接上去之后就是启动服务器上面的一些服务，启动服务之后再次测试，发现问题依然，这也是意料之中的。&lt;br /&gt;

头脑发热中，发现来访问我们服务器的内网10网段的ip是10.0.0.0/8网段的，而我们服务器设置的是10.x.x.0/24，难道是这里的问题？修改了一下ip设置，重启了一下网络，然后用tcpdump查看，发现现在我们的服务器对10网段的ip访问有了回应了。一阵兴奋，让技术人员测试一下，发现他依然连不上。查看apache日志，似乎已经有10网段的访问记录了。那还是哪里的问题呢？&lt;br /&gt;

其实修改内网网段的时候就想到了，是不是路由的设置问题？这时老大提示了一下，看看之前管理服务器的技术人员留下的文档，我也突然想起来，我之前刚好对这台服务器的设置做过仔细检查，并做了备份，包括ifconfig信息，route信息，dns信息等，查看了一下，发现确实是路由表出问题了，新旧路由表不同。&lt;br /&gt;

★ 解决新的问题&lt;br /&gt;

发现问题所在就好了，接下来就是修改路由表。先修改内网ip的网段，改回10.x.x.0/24，然后修改10.0.0.0/8网段的ip的路由。修改的时候出现了对route命令不熟悉的问题，route add default gw添加了默认路由，发现不行，改来改去，手一抖，在只剩一条默认路由的情况下，执行了route del default gw命令，这样把服务器的网络给废掉了。。。&lt;br /&gt;

赶紧打电话联系深圳机房，花了十几二十分钟，最终联系到了机房的工作人员，可是新的问题又来了，我这里的信息没有机架位置，服务器编号等，只有ip又不能确定是哪台，还好工作人员比较好，根据我提供的服务器牌子等一些信息，找到了一台服务器。接上显示器之后，他说没有任何显示。然后说给重启了吧。其实这里他也要担一定的风险，如果这台不是我们的，他也得等着被别人投诉（不过他倒是可以有推脱的理由，可以说对方服务器莫名重启）。启动的过程很让人焦心，现在离已经过去快2个小时了，如果还不能尽快解决，恐怕我留在这个公司的时间也不多了，呵呵。&lt;br /&gt;

启动还算顺利，我能登陆服务器了。先启动各服务，测试发现依然连不上。然后我就查看路由，添加了255.0.0.0/8的默认路由，然后tcpdump查看，收发包正常，查看apache日志，记录也正常。让技术人员测试，也正常了。&lt;br /&gt;

至此，问题总算解决了。时间已经过去2个多小时了，才发现自己口干舌噪。&lt;br /&gt;

★ 总结一下&lt;br /&gt;

1) 各服务器配置情况比较混乱，一些特殊设置没有写明，这是导致服务器问题的一个原因。&lt;br /&gt;
2) 管理员应该及时对各服务器配置情况做备份，这样即使服务器挂了，也可以参考备份立刻恢复之前的情况。&lt;br /&gt;
3) 要相信系统。比如从B服务器rsync连接A服务器的时候，提示连接被拒绝。“被拒绝”说明B服务器的rsync和目的服务器进行了交流，对方不允许你连接，和连接没有响应等是有区别的。而从A服务器的tcpdump中也可以看到根本就没有对方过来的数据包，你也不要怀疑是不是被防火墙挡住了，防火墙挡住tcpdump也可以查看的。&lt;br /&gt;
4) 管理员应该对一些常用的命令的所有参数都比较熟悉。比如route，tcpdump，ls，tar，find等等，真正出问题的时候，你觉得还有时间让你去看man来查看某个命令是否能实现某个功能呢？你也不想当着一堆人的面现看吧。&lt;br /&gt;
5) 做某个操作前最好先确认一下会不会有问题，尤其是网络和防火墙相关的命令。因为要是设置出了问题，远程控制不了了，你哭都没地哭。但是工作总得做，不能因为怕出问题就不作吧，呵呵，我之前写了一篇如何给系统加防火墙的帖子，可以参考下里面的想法。&lt;br /&gt;
6) 压力肯定是有的，就看你怎么面对了，呵呵。平时多花些功夫，出问题了就不会手忙脚乱了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用ssh的rsa和dsa验证登陆linux</title>
      <link>https://wdicc.com/use-rsa-and-dsa/</link>
      <pubDate>Mon, 24 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-rsa-and-dsa/</guid>
      <description>
参考地址：http://www.5ilinux.com/ssh01.html&lt;br /&gt;

按照文档中的方法，使用SecureCRT生成公匙密匙，然后上传公匙，没问题。&lt;br /&gt;

用putty使用这个密匙的时候就出问题了，验证不了。&lt;br /&gt;

然后用putty生成公匙密匙，上传公匙，验证不了。&lt;br /&gt;

后来用openssh自带的ssh-keygen生成了公匙密匙，然后用putty的keygen转换了一下，用putty登陆就可以了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>限制ssh访问的ip</title>
      <link>https://wdicc.com/limite-ssh-access-ip/</link>
      <pubDate>Mon, 24 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/limite-ssh-access-ip/</guid>
      <description>★ 解决方案&lt;br /&gt;

1) 通过修改/etc/ssh/sshd_config文件，让sshd只监听内网ip。这样只有内网ip才能登陆ssh。但是这样的话就不能远程维护服务器了，有点得不偿失得感觉。&lt;br /&gt;

2) 通过修改/etc/hosts.allow和/etc/hosts.deny来限制某个ip的登陆。这个方式其实和上面得类似，你也不知道hacker会从哪个ip登陆，所以你没办法deny他得ip，deny他得时候可能连你自己也deny了。&lt;br /&gt;

3) 可以通过/etc/ssh/sshd_config文件来实现。&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; AllowUsers&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; This keyword can be followed by a list of user name patterns,&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; separated by spaces.&amp;nbsp; If specified, login is allowed only for us-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; er names that match one of the patterns.&amp;nbsp; Only user names are&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; valid; a numerical user ID is not recognized.&amp;nbsp; By default, login&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; is allowed for all users.&amp;nbsp; If the pattern takes the form US-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ER@HOST then USER and HOST are separately checked, restricting&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logins to particular users from particular hosts.&amp;nbsp; The allow/deny&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; directives are processed in the following order: DenyUsers,&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AllowUsers, DenyGroups, and finally AllowGroups.&lt;br /&gt;

PATTERNS&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; A pattern consists of zero or more non-whitespace characters, `*&#39; (a&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; wildcard that matches zero or more characters), or `?&#39; (a wildcard that&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; matches exactly one character).&amp;nbsp; For example, to specify a set of decla-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; rations for any host in the ``.co.uk&#39;&#39; set of domains, the following pat-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; tern could be used:&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Host *.co.uk&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; The following pattern would match any host in the 192.168.0.[0-9] network&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; range:&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Host 192.168.0.?&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; A pattern-list is a comma-separated list of patterns.&amp;nbsp; Patterns within&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; pattern-lists may be negated by preceding them with an exclamation mark&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; (`!&#39;).&amp;nbsp; For example, to allow a key to be used from anywhere within an&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; organisation except from the ``dialup&#39;&#39; pool, the following entry (in au-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; thorized_keys) could be used:&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; from=&#34;!*.dialup.example.com,*.example.com&#34;&lt;br /&gt;

比如不允许test用户从192.168.0.x登陆，那么可以添加一行&lt;br /&gt;

denyusers test@192.168.0.&lt;br /&gt;

按照上面的PATTERNS说明，似乎可以加叹号来排除某个ip，但是尝试过没有成功，不知道什么原因了。&lt;br /&gt;

按照文档，deny是级别最高的，而设置了allow之后，就只能allow的用户访问了，所以如果想限制某个用户只能从某个ip段登陆，用这个似乎实现不了。&lt;br /&gt;

4) 使用ssh得RSA/DSA key。&lt;br /&gt;

参考地址:http://www.5ilinux.com/ssh01.html &lt;br /&gt;

用ssh-keygen命令生成一对公匙密匙，然后把密匙给用户，并且限制ssh只能通过RSA方式认证。这样会导致所有ssh用户都得用这种方式登陆了，会更加郁闷。&lt;br /&gt;

这种方式可以在用户得authorized_keys2文件中，加入from=&#34;!192.168.1.158,*&#34;来让用户只能通过158登陆。（这个没有做过验证）&lt;br /&gt;


PATTERNS&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; A pattern consists of zero or more non-whitespace characters, `*&#39; (a&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; wildcard that matches zero or more characters), or `?&#39; (a wildcard that&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; matches exactly one character).&amp;nbsp; For example, to specify a set of decla-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; rations for any host in the ``.co.uk&#39;&#39; set of domains, the following pat-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; tern could be used:&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Host *.co.uk&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; The following pattern would match any host in the 192.168.0.[0-9] network&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; range:&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Host 192.168.0.?&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; A pattern-list is a comma-separated list of patterns.&amp;nbsp; Patterns within&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; pattern-lists may be negated by preceding them with an exclamation mark&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; (`!&#39;).&amp;nbsp; For example, to allow a key to be used from anywhere within an&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; organisation except from the ``dialup&#39;&#39; pool, the following entry (in au-&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; thorized_keys) could be used:&lt;br /&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; from=&#34;!*.dialup.example.com,*.example.com&#34;&lt;br /&gt;



5) 用pam。&lt;br /&gt;

参考地址:http://www.linuxmine.com/1078.html &lt;br /&gt;

看看/etc/pam.d/login文件，有没有pam_access.so的设置。我的debian系统中，ssh相关的都在/etc/pam.d/ssh文件中设置。加入一行&lt;br /&gt;

account&amp;nbsp; required &amp;nbsp; &amp;nbsp; &amp;nbsp; pam_access.so&lt;br /&gt;

然后修改他的配置文件/etc/security/access.conf文件。加入一行&lt;br /&gt;

-:wd:192.168.1. EXCEPT 192.168.1.158&lt;br /&gt;

这样，wd用户从192.168.1.x（192.168.1.158除外）的登陆权限被去掉了。也就是说，wd这个用户就只能从158这个ip以及外网ip登陆了。&lt;br /&gt;

大功告成。 :)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为远程服务器设置防火墙</title>
      <link>https://wdicc.com/iptables-on-remote-server/</link>
      <pubDate>Thu, 20 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/iptables-on-remote-server/</guid>
      <description>
如果服务器不在本地，又需要对防火墙做设置的时候，操作一定要注意，&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>debian中man不能翻页的解决方法</title>
      <link>https://wdicc.com/man-in-debian/</link>
      <pubDate>Tue, 18 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/man-in-debian/</guid>
      <description>
安装debian基本系统之后会发现man的时候往下翻页可以用ctrl＋F，可是怎么都翻不上去。包括方向键也都不起作用。&lt;br /&gt;

解决方法其实非常简单，只要安装less就可以了。呵呵。&lt;br /&gt;
#apt-get install less&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>VIM查找替换归纳总结zz</title>
      <link>https://wdicc.com/search-in-vim/</link>
      <pubDate>Tue, 18 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/search-in-vim/</guid>
      <description>&lt;p&gt;&#34;%&#34; 范围前缀表示在所有行中执行替换。最后的 &#34;g&#34; 标记表示替换行中的所有匹配点。如果仅仅对当前行进行操作，那么只要去掉%即可&lt;/p&gt;&lt;p&gt;&amp;nbsp; 如果你有一个象 &#34;thirtyfour&#34; 这样的单词，上面的命令会出错。这种情况下，这个单词会被替换成&#34;thirty4&#34;。要解决这个问题，用 &#34;\&amp;lt;&#34; 来指定匹配单词开头：&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; :%s/\&amp;lt;four/4/g&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;显然，这样在处理 &#34;fourty&#34; 的时候还是会出错。用 &#34;\&amp;gt;&#34; 来解决这个问题：&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; :%s/\&amp;lt;four\&amp;gt;/4/g&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;如果你在编码，你可能只想替换注释中的 &#34;four&#34;，而保留代码中的。由于这很难指定，可以在替换命令中加一个 &#34;c&#34; 标记，这样，Vim 会在每次替换前提示你：&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; :%s/\&amp;lt;four\&amp;gt;/4/gc&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;2，删除多余的空格&lt;/p&gt;&lt;p&gt;要删除这些每行后面多余的空格，可以执行如下命令：&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; :%s/\s\+$//&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;命令前面指明范围是 &#34;%&#34;，所以这会作用于整个文件。&#34;substitute&#34; 命令的匹配模式是&lt;/p&gt;&lt;p&gt;&#34;\s\+$&#34;。这表示行末（$）前的一个或者多个（\+）空格（\s）。替换命令的 &#34;to&#34; 部分是空的：&#34;//&#34;。这样就会删除那些匹配的空白字符。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;3，匹配重复性模式&lt;/p&gt;&lt;p&gt;星号项 &#34;*&#34; 规定在它前面的项可以重复任意次。因此:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /a*&lt;/p&gt;&lt;p&gt;匹配 &#34;a&#34;，&#34;aa&#34;，&#34;aaa&#34;，等等。但也匹配 &#34;&#34; (空字串)，因为零次也包含在内。星号 &#34;*&#34; 仅仅应用于那个紧邻在它前面的项。因此 &#34;ab*&#34; 匹配 &#34;a&#34;，&#34;ab&#34;，&#34;abb&#34;,&#34;abbb&#34;，等等。如要多次重复整个字符串，那么该字符串必须被组成一个项。组成一项的方法就是在它前面加 &#34;\(&#34;，后面加 &#34;\)&#34;。因此这个命令:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /\(ab\)*&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;匹配: &#34;ab&#34;，&#34;abab&#34;，&#34;ababab&#34;，等等。而且也匹配 &#34;&#34;。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;要避免匹配空字串，使用 &#34;\+&#34;。这表示前面一项可以被匹配一次或多次。&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /ab\+&lt;/p&gt;&lt;p&gt;匹配 &#34;ab&#34;，&#34;abb&#34;，&#34;abbb&#34;，等等。它不匹配 后面没有跟随 &#34;b&#34; 的 &#34;a&#34;。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;要匹配一个可选项，用 &#34;\=&#34;。 例如:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /folders\=&lt;/p&gt;&lt;p&gt;匹配 &#34;folder&#34; 和 &#34;folders&#34;。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;4，指定重复次数&lt;/p&gt;&lt;p&gt;要匹配某一项的特定次数重复，使用 &#34;\{n,m}&#34; 这样的形式。其中 &#34;n&#34; 和 &#34;m&#34; 都是数字。在它前面的那个项将被重复 &#34;n&#34; 到 &#34;m&#34; 次 (|inclusive| 包含 &#34;n&#34; 和 &#34;m&#34;)。例如:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /ab\{3,5}&lt;/p&gt;&lt;p&gt;匹配 &#34;abbb&#34;，&#34;abbbb&#34; 以及 &#34;abbbbb&#34;。&lt;/p&gt;&lt;p&gt;&amp;nbsp; 当 &#34;n&#34; 省略时，被默认为零。当 &#34;m&#34; 省略时，被默认为无限大。当 &#34;,m&#34; 省略时，就表示重复正好 &#34;n&#34; 次。例如:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 模式 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 匹配次数 &lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; \{,4} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0，1，2，3 或 4&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; \{3,} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3，4，5，等等&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; \{0,1} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 0 或 1，同 \=&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; \{0,} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0 或 更多，同 *&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; \{1,} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1 或 更多，同 \+&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; \{3} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; 3&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;5，多选一匹配&lt;/p&gt;&lt;p&gt;在一个查找模式中，&#34;或&#34; 运算符是 &#34;\|&#34;。例如:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /foo\|bar&lt;/p&gt;&lt;p&gt;这个命令匹配了 &#34;foo&#34; 或 &#34;bar&#34;。更多的抉择可以连在后面:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /one\|two\|three&lt;/p&gt;&lt;p&gt;匹配 &#34;one&#34;，&#34;two&#34; 或 &#34;three&#34;。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&amp;nbsp; 如要匹配其多次重复，那么整个抉择结构须置于 &#34;\(&#34; 和 &#34;\)&#34; 之间:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /\(foo\|bar\)\+&lt;/p&gt;&lt;p&gt;这个命令匹配 &#34;foo&#34;，&#34;foobar&#34;，&#34;foofoo&#34;，&#34;barfoobar&#34;，等等。&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&amp;nbsp; 再举个例子:&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /end\(if\|while\|for\)&lt;/p&gt;&lt;p&gt;这个命令匹配 &#34;endif&#34;，&#34;endwhile&#34; 和 &#34;endfor&#34;。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>debian下面的防火墙设置</title>
      <link>https://wdicc.com/iptables-in-debian/</link>
      <pubDate>Mon, 17 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/iptables-in-debian/</guid>
      <description>
&lt;p&gt;rh下面的防火墙设置是保存在/etc/sysconfig/iptables文件中的，这样每次重启都会恢复防火墙设置。&lt;br /&gt;

debian木有这个文件，但是他提供了更加灵活的方式。&lt;br /&gt;
&lt;a href=&#34;http://www.debian.org/doc/manuals/securing-debian-howto/ch-sec-services.en.html#s-firewall-setup&#34;&gt;http://www.debian.org/doc/manuals/securing-debian-howto/ch-sec-services.en.html#s-firewall-setup&lt;/a&gt;&lt;br /&gt;

看了下，似乎比较简单的就是设置interfaces文件了。&lt;br /&gt;

5.14.3.3 Configuring firewall rules through ifup&lt;br /&gt;
You can use also the network configuration in /etc/network/interfaces to setup your firewall rules. For this you will need to: &lt;/p&gt;&lt;p&gt;Create your firewalling ruleset for when the interface is active. &lt;br /&gt;
Save your ruleset with iptables-save to a file in /etc, for example /etc/iptables.up.rules &lt;br /&gt;
Configure etc/network/interfaces to use the configured ruleset: &lt;br /&gt;
 &amp;nbsp; &amp;nbsp; iface eth0 inet static&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; address x.x.x.x&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [.. interface configuration ..]&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pre-up iptables-restore &amp;lt; /etc/iptables.up.rules&lt;br /&gt;
You can optionally also setup a set of rules to be applied when the network interface is down creating a set of rules, saving it in /etc/iptables.down.rules and adding this directive to the interface configuration: &lt;/p&gt;&lt;p&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; post-down iptables-restore &amp;lt; /etc/iptables.down.rules&lt;br /&gt;
For more advanced firewall configuration scripts through ifupdown you can use the hooks available to each interface as in the *.d/ directories called with run-parts (see run-parts(8)). &lt;/p&gt;&lt;p&gt;可以去&lt;a href=&#34;http://easyfwgen.morizot.net/gen/&#34;&gt;http://easyfwgen.morizot.net/gen/&lt;/a&gt; 在线生成一个防火墙脚本，然后pre-up指定一下。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>添加删除路由</title>
      <link>https://wdicc.com/manage-route/</link>
      <pubDate>Mon, 17 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/manage-route/</guid>
      <description>
#route add -net 192.168.0.0/24&lt;br /&gt;
#route add -host 192.168.0.23&lt;br /&gt;
#route del -net 192.168.0.0/24&lt;br /&gt;

#route add default gw 192.168.0.1&lt;br /&gt;
#route del default gw 192.168.0.1&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天坐地铁遇到两起吵架</title>
      <link>https://wdicc.com/affray-in-subway/</link>
      <pubDate>Thu, 06 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/affray-in-subway/</guid>
      <description>
地铁实在是恐怖，人挤人都要被挤死的时候，地铁广播还在说请大家不要拥挤，实在是有点搞笑了。&lt;br /&gt;

今天到了五颗松，上来两个人，突然就吵起来了，一个男的一个女的，都得有40多了吧。那个女的说那个男的不是男人，那个男的说我不是又怎么了，那个女的似乎很郁闷，呵呵。起因好像是上车的时候，两个人相互推挤了一下。&lt;br /&gt;

到了复兴门，我上车后看见过来一堆人，推推搡搡的，那个年纪大点的一直要扑着过去打那个年纪轻的，有个女的一直拉着，呵呵。&lt;br /&gt;

以前地铁可能也就上下班时间人多，现在的地铁是啥时候人都多，没有办法，这是最快捷的交通方式了。不知道新的地铁线开通之后能不能缓解一下，不过可能也难，像一些换其他线比较方便的线路，肯定人会更多。&lt;br /&gt;

bless北京的交通。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>nagios，监控多组服务器的利器</title>
      <link>https://wdicc.com/about-nagios/</link>
      <pubDate>Mon, 03 Apr 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-nagios/</guid>
      <description>
面试的时候被有时会被问道的问题就是，如果让你去管理100台服务器，你打算怎么做？&lt;br /&gt;

老实说偶只弄过1台服务器，没事上去看看，还是可以的，100台，一台看一眼那就是多长时间啊。1台的时候可以用logwatch每天生成一份日志，每天看一眼日志。或者每天看看awstatus分析后的web日志。可是100台的时候基本不适用了，每天早上看100封mail会疯掉的，况且这个还不实时。。。&lt;br /&gt;

听xh介绍之后，看了一下nagios，才知道有人早就想到这些问题了。其实我之前遇到第一个人问我的时候就应该去了解一下的。&lt;br /&gt;

nagios是通过nagios进程管理下，定时运行某些检测程序，然后通过web方式来显示检测结果的，比如说ping、pop3、smtp、http，还有switch、router等等，甚至本机登陆用户、运行进程、磁盘空间等，还可以设置服务器的主从关系，比如哪个http服务器是位于某个router下面等，这样提示的时候会一并告诉你（这个还没有测试，不过是看到配置文件有这项设置）。&lt;br /&gt;

nagios的安装和配置 &lt;a href=&#34;http://www.totkat.org/pages/nagios.shtml&#34;&gt;http://www.totkat.org/pages/nagios.shtml&lt;/a&gt;&lt;br /&gt;

类似nagios的还有cacti，这个似乎是用来检测本机的，本机的磁盘空间、流量、负载等，还没有弄太清楚。&lt;br /&gt;

Splunk是个商业的日志分析软件，运行于Unix环境，可以支持任何服务器产生的日志，并对日志进行高效索引，以便管理员可以对日志中的各种情况进行搜索，并可以通过图形化方式表现，虽然是商业软件，但是它提供了可以自由使用的splunk server，只是如果需要更多的LiveSplunks，Splunk Sync等功能才需要购买授权。&lt;br /&gt;

下面这个地址是Nagios和Splunk的联合使用介绍&lt;p&gt; &lt;a href=&#34;http://www.nagios.org/products/enterprisesolutions/splunk/&#34; target=&#34;_blank&#34; class=&#34;liexternal&#34;&gt;http://www.nagios.org/products/enterprisesolutions/splunk/&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Qmail邮件队列工作原理zz</title>
      <link>https://wdicc.com/qmail-queue/</link>
      <pubDate>Thu, 30 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/qmail-queue/</guid>
      <description>
http://www.gbunix.com/htmldata/2005_06/15/25/article_1223_1.html&lt;br /&gt;

以下是qmail的数据流简图&lt;br /&gt;

 qmail-smtpd --- &amp;gt;&amp;gt;qmail-queue ---&amp;gt;&amp;gt; qmail-send &amp;lt;&amp;lt;--- qmail-rspawn &amp;lt;&amp;lt;--- qmail-remote&lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; / &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; | &lt;br /&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; qmail-inject _/ qmail-clean \_ qmail-lspawn &amp;lt;&amp;lt;--- qmail-local&lt;br /&gt;

 &amp;nbsp; &amp;nbsp;qmail中，每一条消息都发送到中央队列等待发送，由qmail-queue进程控制。它在以下情况被调用：&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;1、当产生本地消息时，qmail-inject进程调用qmail-queue。&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;2、qmail-smtpd准备SMTP协议下的投递邮件任务时调用它。&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;3、向前（forwarded）发送邮件时，qmail－local调用它。&lt;br /&gt;
 &amp;nbsp; &amp;nbsp;4、退回邮件时，qmail－send调用它。&lt;br /&gt;

 &amp;nbsp; &amp;nbsp;每封邮件接着由qmail-lspawn 和qmail-rspawn协助qmail－sned进程完成投递，最后由qmail－clean清除邮件队列。这四个进程是系统由始至终都在运行的，十分重要。&lt;br /&gt;

由smtpd从域外接受邮件之后，会交给queue处理（也就是2），之后转到qmal-send，然后看是域内还是域外，域内用qmail-lspawn，域外用qmail-rspawn。域内邮件调用qmail-local处理，如果遇到.qmail文件转发邮件（也就是上面的3），还会交给queue处理，如果没有，就直接投递给用户（？）。域外邮件调用qmail-remote处理，如果对方拒收邮件，他就会产生一个新的邮件（bounce），交给qmail-send，然后交给queue（也就是4？）。&lt;br /&gt;

本地用户发送mail的时候调用qmail-inject，然后交给queue（也就是1）。&lt;br /&gt;

有几个问题。&lt;br /&gt;
1&amp;nbsp; 收到域外邮件之后，判断本机是否有这个用户后才接受邮件呢，还是先接受进来放到queue里等qmail-local处理的时候再说？&lt;br /&gt;

2&amp;nbsp; qmail-clean这个程序是怎么工作的？实时扫描queue的文件夹？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>邮件如何从A点到达B点zz</title>
      <link>https://wdicc.com/how-mail-from-a-to-b/</link>
      <pubDate>Thu, 30 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/how-mail-from-a-to-b/</guid>
      <description>
&lt;p&gt;当一个主机上的用户想要发送一个邮件给另一个主机上的用户时, 许多事情发生了, 这个场景后面的东西很多是不必要知道的那么确切的. &lt;/p&gt;  &lt;p&gt;假设一个用户 Alice, alice@alpha.example.com 想要发送一个邮件给 Bob, bob@beta.example.com,     下面是发送接收过程: &lt;/p&gt;  &lt;p&gt;1. Alice 用她的邮件用户代理(MUA)编写邮件, 比如使用 mutt 或者 pine. 她在 To 这一栏指定接收者, Subject 这一栏填写邮件主题,     加上邮件本身的文本部分. 整个邮件看起来是下面这样的: &lt;/p&gt;&lt;pre&gt;    To: bob@beta&lt;br /&gt;
    Subject: lunch&lt;br /&gt;

    How about pizza?&lt;br /&gt;
&lt;/pre&gt;  &lt;p&gt;2. 当她觉得这封邮件已经满意之后, 她指派 MUA 发送邮件. &lt;/p&gt;  &lt;p&gt;3. 这时候, MUA 会加上附加的邮件头部分, 比如日期 Date 和邮件ID(Message-Id) 并且修改Alice输入的值(例如, 将 bob@beta     替换为&#34;Bob &amp;lt;bob@beta.example.com&amp;gt;&#34;) 下一步, MUA 将邮件注入邮件系统. 有两种方式进行注入:     MUA 运行一个由邮件系统提供的为注入邮件为目的的程序; 或者使用SMTP协议和本地或者远程邮件服务器建立连接, 举个例子, 我们假定 MUA 使用本地注入程序将邮件传送给     MTA, 对于不同的MTA, 注入细节都是不同的, 不过对于UNIX系统, 使用sendmail 程序注入已经成了事实上的标准. 使用这种方式, MUA     可以将邮件头和邮件主体放置在一个文件内, 由空行分隔, 然后传递这个文件到 sendmail 程序. &lt;/p&gt;  &lt;p&gt;4. 如果注入成功--邮件句法正确, 并且 sendmail 调用适当--那么现在邮件已经在 MTA 的职责内了. 不同的 MTA 细节是完全不同的,     通常MTA首先检查邮件头决定邮件将发往何处. 然后建立一个到主机beta的SMTP连接, 转发邮件给 beta 系统上的MTA. SMTP对话要求邮件被分成两部分发送:     信封, 这个部分确定了接收者的地址(bob@beta.example.com)和返回地址(alice@alpha.example.com), 以及邮件本身,     包括邮件头和邮件主体. &lt;/p&gt;  &lt;p&gt;5. 如果beta主机的MTA拒绝这个邮件, 可能原因是在beta系统上没有这个bob用户, 在alpha 上的MTA发送一个反弹邮件给返回地址, 也就是     alice@alpha, 通知她邮件发送出现了问题. &lt;/p&gt;  &lt;p&gt;6. 如果 beta主机上的 MTA接收了邮件, 它查看接收者地址, 决定是发送给本地local 还是远程 remote系统的邮件. 这个例子里面,     接收者是本地用户, 然后MTA或者传送邮件给 mail delivery agent (MDA), 比如 /bin/mail或者传送给 procmail.   &lt;/p&gt;  &lt;p&gt;7. 如果传输失败了, 可能是Bob的邮箱超过了使用限额, beta 主机上的 MTA 将发送一个反弹信息给信封上的返回地址, 即 alice@alpha.   &lt;/p&gt;  &lt;p&gt;8. 如果传输成功, 邮件将在Bob的邮箱中等待, 直到他使用MUA来阅读和显示邮件. &lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>AWK：Linux 管理员的智能工具包zz</title>
      <link>https://wdicc.com/about-awk/</link>
      <pubDate>Mon, 27 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-awk/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;AWK 是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;最简单地说，AWK 是一种用于处理文本的编程语言工具。AWK 实用工具的语言在很多方面类似于shell 编程语言，尽管 AWK 具有完全属于其本身的语法。在最初创造 AWK时，其目的是用于文本处理，并且这种语言的基础是，只要在输入数据中有模式匹配，就执行一系列指令。该实用工具扫描文件中的每一行，查找与命令行中所给定内容相匹配的模式。如果发现匹配内容，则进行下一个编程步骤。如果找不到匹配内容，则继续处理下一行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;尽管操作可能会很复杂，但命令的语法始终是：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;awk &#39;{pattern + action}&#39; {filenames} &lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;其中 &lt;/span&gt;&lt;tt&gt;pattern&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号 ({}) 不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。&lt;/span&gt;&lt;/p&gt;&lt;p&gt; &lt;span class=&#34;parahead1&#34;&gt;了解字段&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;实用工具将每个输入行分为记录和字段。&lt;/span&gt;&lt;span class=&#34;italicbodycopy&#34;&gt;记录&lt;/span&gt;&lt;span class=&#34;bodycopy&#34;&gt;是单行的输入，而每条记录包含若干字段。默认的字段分隔符是空格或制表符，而记录的分隔符是换行。虽然在默认情况下将制表符和空格都看作字段分隔符（多个空格仍然作为一个分隔符），但是可以将分隔符从空格改为任何其它字符。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;为了进行演示，请查看以下保存为 emp_names 的员工列表文件：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;46012   DULANEY     EVAN        MOBILE   AL&lt;br /&gt;
46013   DURHAM      JEFF        MOBILE   AL&lt;br /&gt;
46015   STEEN       BILL        MOBILE   AL&lt;br /&gt;
46017   FELDMAN     EVAN        MOBILE   AL&lt;br /&gt;
46018   SWIM        STEVE       UNKNOWN  AL&lt;br /&gt;
46019   BOGUE       ROBERT      PHOENIX  AZ&lt;br /&gt;
46021   JUNE        MICAH       PHOENIX  AZ&lt;br /&gt;
46022   KANE        SHERYL      UNKNOWN  AR&lt;br /&gt;
46024   WOOD        WILLIAM     MUNCIE   IN&lt;br /&gt;
46026   FERGUS      SARAH       MUNCIE   IN&lt;br /&gt;
46027   BUCK        SARAH       MUNCIE   IN&lt;br /&gt;
46029   TUTTLE      BOB         MUNCIE   IN&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;当 AWK 读取输入内容时，整条记录被分配给变量 &lt;/span&gt;&lt;tt&gt;$0&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;。每个字段以字段分隔符分开，被分配给变量 &lt;/span&gt;&lt;tt&gt;$1、$2、$3&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 等等。一行在本质上可以包含无数个字段，通过字段号来访问每个字段。因此，命令&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;awk &#39;{print $1,$2,$3,$4,$5}&#39; names&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;将会产生的打印输出是&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;46012 DULANEY EVAN MOBILE AL&lt;br /&gt;
46013 DURHAM JEFF MOBILE AL&lt;br /&gt;
46015 STEEN BILL MOBILE AL&lt;br /&gt;
46017 FELDMAN EVAN MOBILE AL&lt;br /&gt;
46018 SWIM STEVE UNKNOWN AL&lt;br /&gt;
46019 BOGUE ROBERT PHOENIX AZ&lt;br /&gt;
46021 JUNE MICAH PHOENIX AZ&lt;br /&gt;
46022 KANE SHERYL UNKNOWN AR&lt;br /&gt;
46024 WOOD WILLIAM MUNCIE IN&lt;br /&gt;
46026 FERGUS SARAH MUNCIE IN&lt;br /&gt;
46027 BUCK SARAH MUNCIE IN&lt;br /&gt;
46029 TUTTLE BOB MUNCIE IN&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;值得注意的一项重要内容是，AWK 解释由空格分隔的五个字段，但当它打印显示内容时，在每个字段间只有一个空格。利用为每个字段指定了唯一号码的功能，您可以选择只打印特定的字段。例如，只打印每条记录的姓名时，只需选择第二个和第三个字段进行打印：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print $2,$3}&#39; emp_names&lt;br /&gt;
DULANEY EVAN&lt;br /&gt;
DURHAM JEFF&lt;br /&gt;
STEEN BILL&lt;br /&gt;
FELDMAN EVAN&lt;br /&gt;
SWIM STEVE&lt;br /&gt;
BOGUE ROBERT&lt;br /&gt;
JUNE MICAH&lt;br /&gt;
KANE SHERYL&lt;br /&gt;
WOOD WILLIAM&lt;br /&gt;
FERGUS SARAH&lt;br /&gt;
BUCK SARAH&lt;br /&gt;
TUTTLE BOB&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;您还可以指定按任何顺序打印字段，而无论它们在记录中是如何存在的。因此，只需要显示姓名字段，并且使其顺序颠倒，先显示名字再显示姓氏：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print $3,$2}&#39; emp_names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
JEFF DURHAM&lt;br /&gt;
BILL STEEN&lt;br /&gt;
EVAN FELDMAN&lt;br /&gt;
STEVE SWIM&lt;br /&gt;
ROBERT BOGUE&lt;br /&gt;
MICAH JUNE&lt;br /&gt;
SHERYL KANE&lt;br /&gt;
WILLIAM WOOD&lt;br /&gt;
SARAH FERGUS&lt;br /&gt;
SARAH BUCK&lt;br /&gt;
BOB TUTTLE&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;使用模式&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;通过包含一个必须匹配的模式，您可以选择只对特定的记录而不是所有的记录进行操作。模式匹配的最简单形式是搜索，其中要匹配的项目被包含在斜线 (&lt;/span&gt;&lt;tt&gt;/pattern/&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 中。例如，只对那些居住在阿拉巴马州的员工执行前面的操作：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AL/ {print $3,$2}&#39; emp_names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
JEFF DURHAM&lt;br /&gt;
BILL STEEN&lt;br /&gt;
EVAN FELDMAN&lt;br /&gt;
STEVE SWIM&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;如果您不指定要打印的字段，则会打印整个匹配的条目：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AL/&#39; emp_names&lt;br /&gt;
46012   DULANEY     EVAN     MOBILE     AL&lt;br /&gt;
46013   DURHAM      JEFF     MOBILE     AL&lt;br /&gt;
46015   STEEN       BILL     MOBILE     AL&lt;br /&gt;
46017   FELDMAN     EVAN     MOBILE     AL&lt;br /&gt;
46018   SWIM        STEVE    UNKNOWN    AL&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;对同一数据集的多个命令可以用分号 (&lt;/span&gt;&lt;tt&gt;;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 分隔开。例如，在一行中打印姓名，而在另一行中打印城市和州名：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AL/ {print $3,$2 ; print $4,$5}&#39; emp_names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
MOBILE AL&lt;br /&gt;
JEFF DURHAM&lt;br /&gt;
MOBILE AL&lt;br /&gt;
BILL STEEN&lt;br /&gt;
MOBILE AL&lt;br /&gt;
EVAN FELDMAN&lt;br /&gt;
MOBILE AL&lt;br /&gt;
STEVE SWIM&lt;br /&gt;
UNKNOWN AL&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;如果没有使用分号 (&lt;/span&gt;&lt;tt&gt;print $3,$2,$4,$5&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;)，则会在同一行中显示所有内容。另一方面，如果分别给出两个打印语句，则会产生完全不同的结果：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AL/ {print $3,$2} {print $4,$5}&#39; emp_names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
MOBILE AL&lt;br /&gt;
JEFF DURHAM&lt;br /&gt;
MOBILE AL&lt;br /&gt;
BILL STEEN&lt;br /&gt;
MOBILE AL&lt;br /&gt;
EVAN FELDMAN&lt;br /&gt;
MOBILE AL&lt;br /&gt;
STEVE SWIM&lt;br /&gt;
UNKNOWN AL&lt;br /&gt;
PHOENIX AZ&lt;br /&gt;
PHOENIX AZ&lt;br /&gt;
UNKNOWN AR&lt;br /&gt;
MUNCIE IN&lt;br /&gt;
MUNCIE IN&lt;br /&gt;
MUNCIE IN&lt;br /&gt;
MUNCIE IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;只有在列表中找到 &lt;/span&gt;&lt;tt&gt;AL&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 时才会给出字段三和字段二。但是，字段四和字段五是无条件的，始终打印它们。只有第一组花括号中的命令对前面紧邻的命令 (&lt;/span&gt;&lt;tt&gt;/AL/&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 起作用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;结果非常不便于阅读，可以使其稍微更清晰一些。首先，在城市与州之间插入一个空格和逗号。然后，在每两行显示之后放置一个空行：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AL/ {print $3,$2 ; print $4&#34;, &#34;$5&#34;\n&#34;}&#39; emp_names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
MOBILE, AL&lt;br /&gt;

JEFF DURHAM&lt;br /&gt;
MOBILE, AL&lt;br /&gt;

BILL STEEN&lt;br /&gt;
MOBILE, AL&lt;br /&gt;

EVAN FELDMAN&lt;br /&gt;
MOBILE, AL&lt;br /&gt;

STEVE SWIM&lt;br /&gt;
UNKNOWN, AL&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在第四和第五个字段之间，添加一个逗号和一个空格（在引号之间），在第五个字段后面，打印一个换行符 (&lt;/span&gt;&lt;tt&gt;\n&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;)。在 AWK 打印语句中还可以使用那些可在 &lt;/span&gt;&lt;tt&gt;echo&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令中使用的所有特殊字符，包括：&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;tt&gt;\n&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;（换行）&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;tt&gt;\t&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;（制表）&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;tt&gt;\b&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;（退格）&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;tt&gt;\f&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;（进纸）&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;tt&gt;\r&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;（回车）&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;因此，要读取全部五个最初由制表符分隔开的字段，并且也利用制表符打印它们，您可以编程如下&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print $1&#34;\t&#34;$2&#34;\t&#34;$3&#34;\t&#34;$4&#34;\t&#34;$5}&#39; emp_names&lt;br /&gt;
46012   DULANEY     EVAN     MOBILE    AL&lt;br /&gt;
46013   DURHAM      JEFF     MOBILE    AL&lt;br /&gt;
46015   STEEN       BILL     MOBILE    AL&lt;br /&gt;
46017   FELDMAN     EVAN     MOBILE    AL&lt;br /&gt;
46018   SWIM        STEVE    UNKNOWN   AL&lt;br /&gt;
46019   BOGUE       ROBERT   PHOENIX   AZ&lt;br /&gt;
46021   JUNE        MICAH    PHOENIX   AZ&lt;br /&gt;
46022   KANE        SHERYL   UNKNOWN   AR&lt;br /&gt;
46024   WOOD        WILLIAM  MUNCIE    IN&lt;br /&gt;
46026   FERGUS      SARAH    MUNCIE    IN&lt;br /&gt;
46027   BUCK        SARAH    MUNCIE    IN&lt;br /&gt;
46029   TUTTLE      BOB      MUNCIE    IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;通过连续设置多项标准并用管道 (&lt;/span&gt;&lt;tt&gt;|&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 符号将其分隔开，您可以一次搜索多个模式匹配：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AL|IN/&#39; emp_names&lt;br /&gt;
46012   DULANEY     EVAN     MOBILE    AL&lt;br /&gt;
46013   DURHAM      JEFF     MOBILE    AL&lt;br /&gt;
46015   STEEN       BILL     MOBILE    AL&lt;br /&gt;
46017   FELDMAN     EVAN     MOBILE    AL&lt;br /&gt;
46018   SWIM        STEVE    UNKNOWN   AL&lt;br /&gt;
46024   WOOD        WILLIAM  MUNCIE    IN&lt;br /&gt;
46026   FERGUS      SARAH    MUNCIE    IN&lt;br /&gt;
46027   BUCK        SARAH    MUNCIE    IN&lt;br /&gt;
46029   TUTTLE      BOB      MUNCIE    IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;这样可找到每个阿拉巴马州和印第安那州居民的匹配记录。但是在试图找出居住在亚利桑那州的人时，出现了一个问题：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;/AR/&#39; emp_names&lt;br /&gt;
46019   BOGUE       ROBERT   PHOENIX   AZ&lt;br /&gt;
46021   JUNE        MICAH    PHOENIX   AZ&lt;br /&gt;
46022   KANE        SHERYL   UNKNOWN   AZ&lt;br /&gt;
46026   FERGUS      SARAH    MUNCIE    IN&lt;br /&gt;
46027   BUCK        SARAH    MUNCIE    IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;员工 46026 和 46027 没有住在亚利桑那州；但是他们的名字中包含所搜索的字符序列。切记，当在 AWK 中进行模式匹配时，例如 &lt;/span&gt;&lt;tt&gt;grep、sed&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 或者大部分其他 Linux/Unix 命令，将在记录（行）中的任何位置查找匹配，除非指定进行其他操作。为解决这一问题，必须将搜索与特定字段联系起来。通过利用代字号 (˜) 以及对特定字段的说明，可以达到这一目的，如下例所示：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;$5 ˜ /AR/&#39; emp_names&lt;br /&gt;
46019   BOGUE       ROBERT   PHOENIX   AZ&lt;br /&gt;
46021   JUNE        MICAH    PHOENIX   AZ&lt;br /&gt;
46022   KANE        SHERYL   UNKNOWN   AZ&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;代字号（表示匹配）的对应符号是一个前面带有感叹号的代字号 (!˜)。这些字符通知程序，如果搜索序列没有出现在指定字段中，则找出与搜索序列相匹配的所有行：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;$5 !˜ /AR/&#39; names&lt;br /&gt;
46012   DULANEY     EVAN     MOBILE    AL&lt;br /&gt;
46013   DURHAM      JEFF     MOBILE    AL&lt;br /&gt;
46015   STEEN       BILL     MOBILE    AL&lt;br /&gt;
46017   FELDMAN     EVAN     MOBILE    AL&lt;br /&gt;
46018   SWIM        STEVE    UNKNOWN   AL&lt;br /&gt;
46024   WOOD        WILLIAM  MUNCIE    IN&lt;br /&gt;
46026   FERGUS      SARAH    MUNCIE    IN&lt;br /&gt;
46027   BUCK        SARAH    MUNCIE    IN&lt;br /&gt;
46029   TUTTLE      BOB      MUNCIE    IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在这种情况下，将显示第五个字段中没有 AR 的所有行 — 包括两个 Sarah 条目，这两个条目确实包含 AR，但却是在第三个字段而不是第五个字段中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;花括号和字段分隔符&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;括号字符在 AWK 命令中起着很重要的作用。出现在括号之间的操作指出将要发生什么以及何时发生。当只使用一对括号时：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;{print $3,$2}&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;括号间的所有操作同时发生。当使用多于一对的括号时：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;{print $3}{print $2}&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;执行第一组命令，在该命令完成后执行第二组命令。注意以下两列清单的区别：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print $3,$2}&#39; names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
JEFF DURHAM&lt;br /&gt;
BILL STEEN&lt;br /&gt;
EVAN FELDMAN&lt;br /&gt;
STEVE SWIM&lt;br /&gt;
ROBERT BOGUE&lt;br /&gt;
MICAH JUNE&lt;br /&gt;
SHERYL KANE&lt;br /&gt;
WILLIAM WOOD&lt;br /&gt;
SARAH FERGUS&lt;br /&gt;
SARAH BUCK&lt;br /&gt;
BOB TUTTLE&lt;br /&gt;
$&lt;br /&gt;

$ awk &#39;{print $3}{print $2}&#39; names&lt;br /&gt;
EVAN&lt;br /&gt;
DULANEY&lt;br /&gt;
JEFF&lt;br /&gt;
DURHAM&lt;br /&gt;
BILL&lt;br /&gt;
STEEN&lt;br /&gt;
EVAN&lt;br /&gt;
FELDMAN&lt;br /&gt;
STEVE&lt;br /&gt;
SWIM&lt;br /&gt;
ROBERT&lt;br /&gt;
BOGUE&lt;br /&gt;
MICAH&lt;br /&gt;
JUNE&lt;br /&gt;
SHERYL&lt;br /&gt;
KANE&lt;br /&gt;
WILLIAM&lt;br /&gt;
WOOD&lt;br /&gt;
SARAH&lt;br /&gt;
FERGUS&lt;br /&gt;
SARAH&lt;br /&gt;
BUCK&lt;br /&gt;
BOB&lt;br /&gt;
TUTTLE&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;要利用多组括号进行重复查找，执行第一组中的命令直到完成为止；然后处理第二组命令。如果有第三组命令，则在第二组命令完成后执行它，以此类推。在所生成的打印输出中，有两个分隔的打印命令，因此先执行第一个命令，随后执行第二个命令，这样导致每个条目显示在两行而不是一行中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;区分两个字段的字段分隔符不一定始终是空格；它可以是任何可识别的字符。为进行演示，假定 &lt;/span&gt;&lt;tt&gt;emp_names&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 文件利用冒号而不是制表符来分隔字段：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ cat emp_names&lt;br /&gt;
46012:DULANEY:EVAN:MOBILE:AL&lt;br /&gt;
46013:DURHAM:JEFF:MOBILE:AL&lt;br /&gt;
46015:STEEN:BILL:MOBILE:AL&lt;br /&gt;
46017:FELDMAN:EVAN:MOBILE:AL&lt;br /&gt;
46018:SWIM:STEVE:UNKNOWN:AL&lt;br /&gt;
46019:BOGUE:ROBERT:PHOENIX:AZ&lt;br /&gt;
46021:JUNE:MICAH:PHOENIX:AZ&lt;br /&gt;
46022:KANE:SHERYL:UNKNOWN:AR&lt;br /&gt;
46024:WOOD:WILLIAM:MUNCIE:IN&lt;br /&gt;
46026:FERGUS:SARAH:MUNCIE:IN&lt;br /&gt;
46027:BUCK:SARAH:MUNCIE:IN&lt;br /&gt;
46029:TUTTLE:BOB:MUNCIE:IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;如果试图通过指定所需要的第二个字段来打印姓氏&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print $2}&#39; emp_names&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;您最后会得到十二个空行。因为文件中没有空格，除了第一个字段之外没有可认别的字段。为解决这一问题，必须通知 AWK 是空格之外的另一个字符作为分隔符，有两种方法可通知 AWK 使用新的字段分隔符：使用命令行参数 &lt;/span&gt;&lt;tt&gt;-F&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;，或在程序中指定变量 FS。两种方法的效果相同，只有一种例外情况，如下例所示：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{FS=&#34;:&#34;}{print $2}&#39; emp_names&lt;br /&gt;

DURHAM&lt;br /&gt;
STEEN&lt;br /&gt;
FELDMAN&lt;br /&gt;
SWIM&lt;br /&gt;
BOGUE&lt;br /&gt;
JUNE&lt;br /&gt;
KANE&lt;br /&gt;
WOOD&lt;br /&gt;
FERGUS&lt;br /&gt;
BUCK&lt;br /&gt;
TUTTLE&lt;br /&gt;
$&lt;br /&gt;

$ awk -F: &#39;{print $2}&#39; emp_names&lt;br /&gt;
DULANEY&lt;br /&gt;
DURHAM&lt;br /&gt;
STEEN&lt;br /&gt;
FELDMAN&lt;br /&gt;
SWIM&lt;br /&gt;
BOGUE&lt;br /&gt;
JUNE&lt;br /&gt;
KANE&lt;br /&gt;
WOOD&lt;br /&gt;
FERGUS&lt;br /&gt;
BUCK&lt;br /&gt;
TUTTLE&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在第一个命令中，头一条记录返回不正确的空行，而其他结果正确。直到读取第二条记录时，才识别字段分隔符并正确地执行。通过使用 &lt;/span&gt;&lt;tt&gt;BEGIN&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 语句可以纠正这一缺点（在后文详述）。&lt;/span&gt;&lt;tt&gt;-F&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 的功能非常类似于 &lt;/span&gt;&lt;tt&gt;BEGIN&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;，能够正确地读取第一条记录并按要求执行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在本文开始处我曾提到，默认的显示/输出字段分隔符是空格。通过使用输出字段分隔符 (&lt;/span&gt;&lt;tt&gt;OFS&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 变量，可以在程序中更改此特性。例如，要读取文件（由冒号分隔）并以短划线显示，则命令是&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk -F&#34;:&#34; &#39;{OFS=&#34;-&#34;}{print $1,$2,$3,$4,$5}&#39; emp_names&lt;br /&gt;
46012-DULANEY-EVAN-MOBILE-AL&lt;br /&gt;
46013-DURHAM-JEFF-MOBILE-AL&lt;br /&gt;
46015-STEEN-BILL-MOBILE-AL&lt;br /&gt;
46017-FELDMAN-EVAN-MOBILE-AL&lt;br /&gt;
46018-SWIM-STEVE-UNKNOWN-AL&lt;br /&gt;
46019-BOGUE-ROBERT-PHOENIX-AZ&lt;br /&gt;
46021-JUNE-MICAH-PHOENIX-AZ&lt;br /&gt;
46022-KANE-SHERYL-UNKNOWN-AR&lt;br /&gt;
46024-WOOD-WILLIAM-MUNCIE-IN&lt;br /&gt;
46026-FERGUS-SARAH-MUNCIE-IN&lt;br /&gt;
46027-BUCK-SARAH-MUNCIE-IN&lt;br /&gt;
46029-TUTTLE-BOB-MUNCIE-IN&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;tt&gt;FS &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 和 &lt;/span&gt;&lt;tt&gt;OFS&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 是（输入）字段分隔符和输出字段分隔符，它们只是一对可以在 AWK 实用工具中使用的变量。例如，要在打印时为每行编号，可以采用以下方式使用 &lt;/span&gt;&lt;tt&gt;NR&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 变量：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk -F&#34;:&#34; &#39;{print NR,$1,$2,$3}&#39; emp_names&lt;br /&gt;
1 46012 DULANEY EVAN&lt;br /&gt;
2 46013 DURHAM JEFF&lt;br /&gt;
3 46015 STEEN BILL&lt;br /&gt;
4 46017 FELDMAN EVAN&lt;br /&gt;
5 46018 SWIM STEVE&lt;br /&gt;
6 46019 BOGUE ROBERT&lt;br /&gt;
7 46021 JUNE MICAH&lt;br /&gt;
8 46022 KANE SHERYL&lt;br /&gt;
9 46024 WOOD WILLIAM&lt;br /&gt;
10 46026 FERGUS SARAH&lt;br /&gt;
11 46027 BUCK SARAH&lt;br /&gt;
12 46029 TUTTLE BOB&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;找出员工号码处于 46012 和 46015 之间的所有行：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk -F&#34;:&#34; &#39;/4601[2-5]/&#39; emp_names&lt;br /&gt;
46012   DULANEY EVAN  MOBILE AL&lt;br /&gt;
46013   DURHAM  JEFF  MOBILE AL&lt;br /&gt;
46015   STEEN   BILL  MOBILE AL&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;添加文本&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;可以按照添加控制序列或其他字符的相同方式将文本添加到显示中。例如，要将分隔符从空格改为冒号，则命令是&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;awk &#39;{print $1&#34;:&#34;$2&#34;:&#34;$3&#34;:&#34;$4&#34;:&#34;$5}&#39; emp_names &amp;gt; new_emp_names&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在这种情况下，字符 (&lt;/span&gt;&lt;tt&gt;:&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 包含在引号 (&lt;/span&gt;&lt;tt&gt;&#34;/&#34;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;) 中，它被添加到每个字段之间。在引号之间的值可以是任何内容。例如，创建一个关于居住在阿拉巴马州的员工的外观类似数据库的显示：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;$5 ~ /AL/ {print &#34;NAME: &#34;$2&#34;, &#34;$3&#34;\nCITY-STATE:&lt;br /&gt;
  &#34;$4&#34;, &#34;$5&#34;\n&#34;}&#39; emp_names&lt;br /&gt;

NAME: DULANEY, EVAN&lt;br /&gt;
CITY-STATE: MOBILE, AL&lt;br /&gt;

NAME: DURHAM, JEFF&lt;br /&gt;
CITY-STATE: MOBILE, AL&lt;br /&gt;

NAME: STEEN, BILL&lt;br /&gt;
CITY-STATE: MOBILE, AL&lt;br /&gt;

NAME: FELDMAN, EVAN&lt;br /&gt;
CITY-STATE: MOBILE, AL&lt;br /&gt;

NAME: SWIM, STEVE&lt;br /&gt;
CITY-STATE: UNKNOWN, AL&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;数学操作&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;AWK 除了提供文本功能，还提供全部范围的算术操作符，包括以下符号：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;tt&gt;+    &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;将数字相加&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;-    &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;减&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;*    &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;乘&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;/    &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;除&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;^    &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;执行指数运算&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;%    &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;提供模&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;++   &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;将变量值加一&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;+=   &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;将其他操作的结果分配给变量&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;— &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;将变量减一&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;-=   &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;将减法操作的结果分配给变量&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;*=   &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;分配乘法操作的结果&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;/=   &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;分配除法操作的结果&lt;/span&gt;&lt;br /&gt;
 &lt;tt&gt;%=   &lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;分配求模操作的结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;例如，假定您的机器上存在以下的文件，详细地列出硬件商店中的物品：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ cat inventory&lt;br /&gt;
hammers 5       7.99&lt;br /&gt;
drills  2      29.99&lt;br /&gt;
punches 7       3.59&lt;br /&gt;
drifts  2       4.09&lt;br /&gt;
bits   55       1.19&lt;br /&gt;
saws  123      14.99&lt;br /&gt;
nails 800        .19&lt;br /&gt;
screws 80        .29&lt;br /&gt;
brads 100        .24&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;第一项业务定单是通过将第二个字段（数量）的值乘以第三个字段（价格）的值，计算每种物品的库存价值：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print $1,&#34;QTY: &#34;$2,&#34;PRICE: &#34;$3,&#34;TOTAL: &#34;$2*$3}&#39; inventory&lt;br /&gt;
hammers QTY: 5 PRICE: 7.99 TOTAL: 39.95&lt;br /&gt;
drills QTY: 2 PRICE: 29.99 TOTAL: 59.98&lt;br /&gt;
punches QTY: 7 PRICE: 3.59 TOTAL: 25.13&lt;br /&gt;
drifts QTY: 2 PRICE: 4.09 TOTAL: 8.18&lt;br /&gt;
bits QTY: 55 PRICE: 1.19 TOTAL: 65.45&lt;br /&gt;
saws QTY: 123 PRICE: 14.99 TOTAL: 1843.77&lt;br /&gt;
nails QTY: 800 PRICE: .19 TOTAL: 152&lt;br /&gt;
screws QTY: 80 PRICE: .29 TOTAL: 23.2&lt;br /&gt;
brads QTY: 100 PRICE: .24 TOTAL: 24&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;如果这些行本身并不重要，您只是希望确定商店中有多少件物品，则可以分配一个普通变量，按照每条记录中的物品数量增加：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{x=x+$2} {print x}&#39; inventory&lt;br /&gt;
5&lt;br /&gt;
7&lt;br /&gt;
14&lt;br /&gt;
16&lt;br /&gt;
71&lt;br /&gt;
194&lt;br /&gt;
994&lt;br /&gt;
1074&lt;br /&gt;
1174&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;根据这一数据，商店中有 1174 件物品。第一次执行时，变量 x 没有值，因此它采用第一行第二个字段的值。第二次执行时，它保留了第一行的值并加上第二行的值，以此类推，直到达到累计的总合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;可以应用相同的过程来确定现有库存的总价值：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{x=x+($2*$3)} {print x}&#39; inventory&lt;br /&gt;
39.95&lt;br /&gt;
99.93&lt;br /&gt;
125.06&lt;br /&gt;
133.24&lt;br /&gt;
198.69&lt;br /&gt;
2042.46&lt;br /&gt;
2194.46&lt;br /&gt;
2217.66&lt;br /&gt;
2241.66&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;因此，1174 件物品的价值是 $2,241.66。虽然这一过程可以获得总计值，但它的外观很差，需要加工成实际的报表。利用一些附加项，很容易使显示变得更整洁：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{x=x+($2*$3)}{print $1,&#34;QTY: &#34;$2,&#34;PRICE: &#34;$3,&#34;TOTAL: &#34;$2*$3,&#34;BAL: &#34;x}&#39; inventory&lt;br /&gt;
hammers QTY: 5 PRICE: 7.99 TOTAL: 39.95 BAL: 39.95&lt;br /&gt;
drills QTY: 2 PRICE: 29.99 TOTAL: 59.98 BAL: 99.93&lt;br /&gt;
punches QTY: 7 PRICE: 3.59 TOTAL: 25.13 BAL: 125.06&lt;br /&gt;
drifts QTY: 2 PRICE: 4.09 TOTAL: 8.18 BAL: 133.24&lt;br /&gt;
bits QTY: 55 PRICE: 1.19 TOTAL: 65.45 BAL: 198.69&lt;br /&gt;
saws QTY: 123 PRICE: 14.99 TOTAL: 1843.77 BAL: 2042.46&lt;br /&gt;
nails QTY: 800 PRICE: .19 TOTAL: 152 BAL: 2194.46&lt;br /&gt;
screws QTY: 80 PRICE: .29 TOTAL: 23.2 BAL: 2217.66&lt;br /&gt;
brads QTY: 100 PRICE: .24 TOTAL: 24 BAL: 2241.66&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;该过程提供了每条记录的清单，同时将总价值分配给库存值，并保持商店资产的运作平衡。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;tt&gt;&lt;strong&gt;BEGIN&lt;/strong&gt;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 和 &lt;/span&gt;&lt;tt&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/tt&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;使用 &lt;/span&gt;&lt;tt&gt;BEGIN&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 和 &lt;/span&gt;&lt;tt&gt;END&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 语句可以分别指定在处理实际开始之前或者完成之后进行操作。&lt;/span&gt;&lt;tt&gt;BEGIN&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 语句最常用于建立变量或显示标题。另一方面，&lt;/span&gt;&lt;tt&gt;END&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 语句可用于在程序结束后继续进行处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在前面的示例中，利用以下例程生成了物品的总价值：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;awk &#39;{x=x+($2*$3)} {print x}&#39; inventory&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;该例程在运行总计累加时显示了文件中的每一行。没有其他方法可以指定它，而不让在每一行进行打印也导致它始终不打印出来。但是，利用 &lt;/span&gt;&lt;tt&gt;END&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 语句可以避免这一问题：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{x=x+($2*$3)} END {print &#34;Total Value of Inventory:&#34;x}&#39; inventory&lt;br /&gt;
Total Value of Inventory: 2241.66&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;定义了变量 &lt;/span&gt;&lt;tt&gt;&lt;em&gt;x&lt;/em&gt;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;，它对每一行进行处理；但是，在所有处理完成之前不会生成显示。尽管可以作为独立例程使用，它也可以置入到先前的代码列表，添加更多信息并生成更完整的报表：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{x=x+($2*$3)} {print $1,&#34;QTY: &#34;$2,&#34;PRICE: &lt;br /&gt;
    &#34;$3,&#34;TOTAL: &#34;$2*$3} END {print &#34;Total Value of Inventory: &#34; x}&#39; inventory&lt;br /&gt;

hammers QTY: 5 PRICE: 7.99 TOTAL: 39.95&lt;br /&gt;
drills QTY: 2 PRICE: 29.99 TOTAL: 59.98&lt;br /&gt;
punches QTY: 7 PRICE: 3.59 TOTAL: 25.13&lt;br /&gt;
drifts QTY: 2 PRICE: 4.09 TOTAL: 8.18&lt;br /&gt;
bits QTY: 55 PRICE: 1.19 TOTAL: 65.45&lt;br /&gt;
saws QTY: 123 PRICE: 14.99 TOTAL: 1843.77&lt;br /&gt;
nails QTY: 800 PRICE: .19 TOTAL: 152&lt;br /&gt;
screws QTY: 80 PRICE: .29 TOTAL: 23.2&lt;br /&gt;
brads QTY: 100 PRICE: .24 TOTAL: 24&lt;br /&gt;
Total Value of Inventory: 2241.66&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;&lt;/span&gt;&lt;tt&gt;BEGIN&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令与 &lt;/span&gt;&lt;tt&gt;END&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 的工作方式相同，但它建立了那些需要在完成其他工作之前所做的项目。该过程最常见的目的是创建报表的标题。此例程的语法类似于&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;BEGIN {print &#34;ITEM   QUANTITY   PRICE   TOTAL&#34;}&#39;&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;输入、输出和源文件&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;AWK 工具可以从文件中读取其输入，正如在此之前所有示例所做的那样，它也可以从其他命令的输出中获取输入。例如：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ sort emp_names | awk &#39;{print $3,$2}&#39;&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;&lt;/span&gt;&lt;tt&gt;awk&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令的输入是排序操作的输出。除了 &lt;/span&gt;&lt;tt&gt;sort&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;，还可以使用任何其他的 Linux 命令 — 例如 &lt;/span&gt;&lt;tt&gt;grep&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;。该过程允许您在离开所选定字段前对文件执行其他操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;类似于解释程序，AWK 使用输出改向操作符 &lt;/span&gt;&lt;tt&gt;&amp;gt;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 和 &lt;/span&gt;&lt;tt&gt;&amp;gt;&amp;gt;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 将其输出放入文件中而不是标准输出设备。这些符号的作用类似于它们在解释程序中的对应符号，因此 &lt;/span&gt;&lt;tt&gt;&amp;gt;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 在不存在文件时创建文件，而 &lt;/span&gt;&lt;tt&gt;&amp;gt;&amp;gt;&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 追加到现有文件的尾部。请看以下的示例：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{print NR, $1 ) &amp;gt; &#34;/tmp/filez&#34; }&#39; emp_names&lt;br /&gt;
$ cat /tmp/filez&lt;br /&gt;
1	46012&lt;br /&gt;
2	46013&lt;br /&gt;
3	46015&lt;br /&gt;
4	46017&lt;br /&gt;
5	46018&lt;br /&gt;
6	46019&lt;br /&gt;
7	46021&lt;br /&gt;
8	46022&lt;br /&gt;
9	46024&lt;br /&gt;
10	46026&lt;br /&gt;
11	46027&lt;br /&gt;
12	46029&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;检查该语句的语法，您会看到输出改向是在打印语句完成后进行的。必须将文件名包含在引号中，否则它只是一个未初始化的 AWK 变量，而将指令联接起来会在 AWK 中产生错误。（如果不正确地使用改向符号，则 AWK无法了解该符号意味着“改向”还是一个关系操作符。）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;在 AWK 中输出到管道也类似于解释程序中所实现的相同操作。要将打印命令的输出发送到管道中，可以在打印命令后附加管道符号以及命令的名称，如下所示：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ awk &#39;{ print $2 | &#34;sort&#34; }&#39; emp_names&lt;br /&gt;
BOGUE&lt;br /&gt;
BUCK&lt;br /&gt;
DULANEY&lt;br /&gt;
DURHAM&lt;br /&gt;
FELDMAN&lt;br /&gt;
FERGUS&lt;br /&gt;
JUNE&lt;br /&gt;
KANE&lt;br /&gt;
STEEN&lt;br /&gt;
SWIM&lt;br /&gt;
TUTTLE&lt;br /&gt;
WOOD&lt;br /&gt;
$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;这是输出改向的情况，必须将命令包含在引号中，而管道的名称是被执行命令的名称。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;AWK 所使用的命令可以来自两个地方。首先，可以在命令行中指定它们，如示例中所示。其次，它们可以由源文件提供。如果是这种情况，通过 &lt;/span&gt;&lt;tt&gt;-f&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 选项将这种情况向 AWK 发出警告。演示如下：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;$ cat awklist&lt;br /&gt;
{print $3,$2}&lt;br /&gt;
{print $4,$5,&#34;\n&#34;}&lt;br /&gt;
$&lt;br /&gt;

$ awk -f awklist emp_names&lt;br /&gt;
EVAN DULANEY&lt;br /&gt;
MOBILE AL&lt;br /&gt;

JEFF DURHAM&lt;br /&gt;
MOBILE AL&lt;br /&gt;

BILL STEEN&lt;br /&gt;
MOBILE AL&lt;br /&gt;

EVAN FELDMAN&lt;br /&gt;
MOBILE AL&lt;br /&gt;

STEVE SWIM&lt;br /&gt;
UNKNOWN AL&lt;br /&gt;

ROBERT BOGUE&lt;br /&gt;
PHOENIX AZ&lt;br /&gt;

MICAH JUNE&lt;br /&gt;
PHOENIX AZ&lt;br /&gt;

SHERYL KANE&lt;br /&gt;
UNKNOWN AR&lt;br /&gt;

WILLIAM WOOD&lt;br /&gt;
MUNCIE IN&lt;br /&gt;

SARAH FERGUS&lt;br /&gt;
MUNCIE IN&lt;br /&gt;

SARAH BUCK&lt;br /&gt;
MUNCIE IN&lt;br /&gt;

BOB TUTTLE&lt;br /&gt;
MUNCIE IN&lt;br /&gt;

$&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;注意，在源文件中的任何地方或者在命令行中调用它时，不使用单引号。单引号只用于区别命令行中的命令与文件名称。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;如果简单的输出不能处理您的程序中所需要的复杂信息，则可以尝试由 &lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令获得的更加复杂的输出，其语法是&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;printf( format, value, value ...)&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;该语法类似于 C 语言中的 &lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令，而格式的规格是相同的。通过插入一项定义如何打印数值的规格，可以定义该格式。格式规格包含一个跟有字母的 %。类似于打印命令，&lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 不必包含在圆括号中，但是可以认为使用圆括号是一种良好的习惯。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;下表列出 &lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令提供的各种规格。&lt;/span&gt;&lt;/p&gt;&lt;table align=&#34;left&#34; bgcolor=&#34;#ffffff&#34; border=&#34;0&#34; cellpadding=&#34;5&#34; hspace=&#34;5&#34; vspace=&#34;5&#34; width=&#34;100%&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width=&#34;15%&#34;&gt;&lt;span class=&#34;boldbodycopy&#34;&gt;规格&lt;/span&gt;&lt;/td&gt;&lt;td width=&#34;85%&#34;&gt;&lt;span class=&#34;boldbodycopy&#34;&gt;说明&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%c&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印单个 ASCII 字符&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%d&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印十进制数&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%e&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印数字的科学计数表示&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;		                                                             &lt;tr&gt;&lt;td&gt;&lt;tt&gt;%f&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印浮点表示&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%g&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印 %e 或 %f；两种方式都更简短&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%o&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印无符号的八进制数&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;s&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印 ASCII 字符串&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%x&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印无符号的十六进制数&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;%%&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;打印百分号；不执行转换&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;
&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;可以在 % 与字符之间提供某些附加的格式化参数。这些参数进一步改进数值的打印方式：&lt;/span&gt;&lt;/p&gt;&lt;table align=&#34;left&#34; bgcolor=&#34;#ffffff&#34; border=&#34;0&#34; cellpadding=&#34;5&#34; hspace=&#34;5&#34; vspace=&#34;5&#34; width=&#34;100%&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width=&#34;25%&#34;&gt;&lt;span class=&#34;boldbodycopy&#34;&gt;参数&lt;/span&gt;&lt;/td&gt;&lt;td width=&#34;75%&#34;&gt;&lt;span class=&#34;boldbodycopy&#34;&gt;说明&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;-&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;将字段中的表达式向左对齐&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;,width&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;根据需要将字段补齐到指定宽度（前导零使用零将字段补齐） &lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;tt&gt;.prec&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;span class=&#34;bodycopy&#34;&gt;小数点右面数字的最大字符串宽度或最大数量&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;&lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 命令能够控制并将数值从一种格式转换为另一种格式。当需要打印变量的值时，只需提供一种规格，指示 &lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 如何打印信息（通常包含在双引号中）即可。必须为每个传递到 &lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 的变量包含一个规格参数；如果包含过少的参数，则 &lt;/span&gt;&lt;tt&gt;printf&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt; 不会打印所有的数值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;处理错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;AWK 工具报告所发生错误的方式很令人恼火。一个错误会阻碍任何操作的进行，所提供的错误信息非常含混不清：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;awk: syntax error near line 2&lt;br /&gt;
awk: bailing out near line 2&lt;br /&gt;
&lt;/pre&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;您可能会花几小时的时间查看第 2 行，试图找出它为什么阻碍程序运行；这就是支持使用源文件的一个有力论据。&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;切记有两条规则可以帮助您避免出现语法错误：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;1. 确保命令位于括号中，而括号位于单引号中。没有使用这些字符之一必然导致程序无法运行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;2. 搜索命令需要位于斜线之间。要找出住在印第安那州的员工，您必须使用“&lt;/span&gt;&lt;tt&gt;/IN/&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;”而不是“&lt;/span&gt;&lt;tt&gt;IN&lt;/tt&gt;&lt;span class=&#34;bodycopy&#34;&gt;”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;parahead1&#34;&gt;结论&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;bodycopy&#34;&gt;尽管 AWK 完全代表另外的含意，但它应该是管理员智能工具包的首字母缩写。连同 SED一起，AWK 实用工具是 Linux管理员所拥有的功能最强大和灵活的工具之一。通过了解其语言的一些特性，您可以开辟出能够简化任务的领域，否则这些任务将会是非常费时和困难的。 &lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>TCP三次握手及原理 zz</title>
      <link>https://wdicc.com/about-tcp-ip/</link>
      <pubDate>Mon, 27 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-tcp-ip/</guid>
      <description>&lt;p&gt;　　在这里我们讨论的时TCP会话劫持的问题。 &lt;/p&gt;&lt;p&gt;　　先让我们明白TCP建立连接的基本简单的过程。为了建设一个小型的模仿环境我们假设有3台接入互联网的机器。A为攻击者操纵的攻击机。B为中介跳板机器（受信任的服务器）。C为受害者使用的机器（多是服务器），这里把C机器锁定为目标机器。A机器向B机器发送SYN包，请求建立连接，这时已经响应请求的B机器会向A机器回应SYN/ACK表明同意建立连接，当A机器接受到B机器发送的SYN/ACK回应时，发送应答ACK建立A机器与B机器的网络连接。这样一个两台机器之间的TCP通话信道就建立成功了。 &lt;/p&gt;&lt;p&gt;　　B终端受信任的服务器向C机器发起TCP连接，A机器对服务器发起SYN信息，使C机器不能响应B机器。在同时A机器也向B机器发送虚假的C机器回应的SYN数据包，接收到SYN数据包的B机器（被C机器信任）开始发送应答连接建立的SYN/ACK数据包，这时C机器正在忙于响应以前发送的SYN数据而无暇回应B机器，而A机器的攻击者预测出B机器包的序列号（现在的TCP序列号预测难度有所加大）假冒C机器向B机器发送应答ACK这时攻击者骗取B机器的信任，假冒C机器与B机器建立起TCP协议的对话连接。这个时候的C机器还是在响应攻击者A机器发送的SYN数据。 &lt;/p&gt;&lt;p&gt;　　TCP协议栈的弱点：TCP连接的资源消耗，其中包括：数据包信息、条件状态、序列号等。通过故意不完成建立连接所需要的三次握手过程，造成连接一方的资源耗尽。 &lt;/p&gt;&lt;p&gt;　　通过攻击者有意的不完成建立连接所需要的三次握手的全过程，从而造成了C机器的资源耗尽。序列号的可预测性，目标主机应答连接请求时返回的SYN/ACK的序列号时可预测的。（早期TCP协议栈，具体的可以参见1981年出的关于TCP雏形的RFC793文档） &lt;/p&gt;&lt;p&gt;　　TCP头结构 &lt;/p&gt;&lt;p&gt;　　TCP协议头最少20个字节，包括以下的区域（由于翻译不禁相同，文章中给出相应的英文单词）： &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;TCP源端口(Source Port)&lt;/strong&gt;：16位的源端口其中包含初始化通信的端口。源端口和源IP地址的作用是标示报问的返回地址。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;TCP目的端口(Destination port)&lt;/strong&gt;：16位的目的端口域定义传输的目的。这个端口指明报文接收计算机上的应用程序地址接口。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;TCP序列号（序列码,Sequence Number）&lt;/strong&gt;：32位的序列号由接收端计算机使用，重新分段的报文成最初形式。当SYN出现，序列码实际上是初始序列码（ISN），而第一个数据字节是ISN+1。这个序列号（序列码）是可以补偿传输中的 不一致。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;TCP应答号(Acknowledgment Number)&lt;/strong&gt;：32位的序列号由接收端计算机使用，重组分段的报文成最初形式。，如果设置了ACK控制位，这个值表示一个准备接收的包的序列码。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;数据偏移量(HLEN)&lt;/strong&gt;：4位包括TCP头大小，指示何处数据开始。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;保留(Reserved)&lt;/strong&gt;：6位值域，这些位必须是0。为了将来定义新的用途所保留。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;标志(Code Bits)&lt;/strong&gt;：6位标志域。表示为：紧急标志、有意义的应答标志、推、重置连接标志、同步序列号标志、完成发送数据标志。按照顺序排列是：URG、ACK、PSH、RST、SYN、FIN。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;窗口(Window)&lt;/strong&gt;：16位，用来表示想收到的每个TCP数据段的大小。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;校验位(Checksum)&lt;/strong&gt;：16位TCP头。源机器基于数据内容计算一个数值，收信息机要与源机器数值 结果完全一样，从而证明数据的有效性。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;优先指针（紧急,Urgent Pointer）&lt;/strong&gt;：16位，指向后面是优先数据的字节，在URG标志设置了时才有效。如果URG标志没有被设置，紧急域作为填充。加快处理标示为紧急的数据段。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;选项(Option)&lt;/strong&gt;：长度不定，但长度必须以字节。如果 没有 选项就表示这个一字节的域等于0。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;填充&lt;/strong&gt;：不定长，填充的内容必须为0，它是为了数学目的而存在。目的是确保空间的可预测性。保证包头的结合和数据的开始处偏移量能够被32整除，一般额外的零以保证TCP头是32位的整数倍。 标志控制功能 &lt;/p&gt;&lt;p&gt;　&lt;strong&gt;　URG&lt;/strong&gt;：紧急标志 &lt;br /&gt;

　　紧急(The urgent pointer) 标志有效。紧急标志置位， &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;ACK&lt;/strong&gt;：确认标志 &lt;br /&gt;

　　确认编号(Acknowledgement Number)栏有效。大多数情况下该标志位是置位的。TCP报头内的确认编号栏内包含的确认编号(w+1，Figure：1)为下一个预期的序列编号，同时提示远端系统已经成功接收所有数据。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;PSH&lt;/strong&gt;：推标志 &lt;/p&gt;&lt;p&gt;　　该标志置位时，接收端不将该数据进行队列处理，而是尽可能快将数据转由应用处理。在处理 telnet 或 rlogin 等交互模式的连接时，该标志总是置位的。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;RST&lt;/strong&gt;：复位标志 &lt;/p&gt;&lt;p&gt;　　复位标志有效。用于复位相应的TCP连接。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;SYN&lt;/strong&gt;：同步标志 &lt;/p&gt;&lt;p&gt;　　同步序列编号(Synchronize SequenceNumbers)栏有效。该标志仅在三次握手建立TCP连接时有效。它提示TCP连接的服务端检查序列编号，该序列编号为TCP连接初始端(一般是客户端)的初始序列编号。在这里，可以把TCP序列编号看作是一个范围从0到4，294，967，295的32位计数器。通过TCP连接交换的数据中每一个字节都经过序列编号。在TCP报头中的序列编号栏包括了TCP分段中第一个字节的序列编号。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;FIN&lt;/strong&gt;：结束标志 &lt;/p&gt;&lt;p&gt;　　带有该标志置位的数据包用来结束一个TCP回话，但对应端口仍处于开放状态，准备接收后续数据。 &lt;/p&gt;&lt;p&gt;　　服务端处于监听状态，客户端用于建立连接请求的数据包(IP packet)按照TCP/IP协议堆栈组合成为TCP处理的分段(segment)。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;分析报头信息&lt;/strong&gt;： TCP层接收到相应的TCP和IP报头，将这些信息存储到内存中。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;检查TCP校验和(checksum)&lt;/strong&gt;：标准的校验和位于分段之中(Figure：2)。如果检验失败，不返回确认，该分段丢弃，并等待客户端进行重传。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;查找协议控制块(PCB{})&lt;/strong&gt;：TCP查找与该连接相关联的协议控制块。如果没有找到，TCP将该分段丢弃并返回RST。(这就是TCP处理没有端口监听情况下的机制)如果该协议控制块存在，但状态为关闭，服务端不调用connect()或listen()。该分段丢弃，但不返回RST。客户端会尝试重新建立连接请求。&lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;建立新的socket&lt;/strong&gt;：当处于监听状态的socket收到该分段时，会建立一个子socket，同时还有socket{}，tcpcb{}和pub{}建立。这时如果有错误发生，会通过标志位来拆除相应的socket和释放内存，TCP连接失败。如果缓存队列处于填满状态，TCP认为有错误发生，所有的后续连接请求会被拒绝。这里可以看出SYN Flood攻击是如何起作用的。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;丢弃&lt;/strong&gt;：如果该分段中的标志为RST或ACK，或者没有SYN标志，则该分段丢弃。并释放相应的内存。 &lt;/p&gt;&lt;p&gt;　　发送序列变量 &lt;/p&gt;&lt;p&gt;　　SND.UNA ： 发送未确认 &lt;/p&gt;&lt;p&gt;　　SND.NXT ： 发送下一个 &lt;/p&gt;&lt;p&gt;　　SND.WND ： 发送窗口 &lt;/p&gt;&lt;p&gt;　　SND.UP ： 发送优先指针 &lt;/p&gt;&lt;p&gt;　　SND.WL1 ： 用于最后窗口更新的段序列号 &lt;/p&gt;&lt;p&gt;　　SND.WL2 ： 用于最后窗口更新的段确认号 &lt;/p&gt;&lt;p&gt;　　ISS ： 初始发送序列号 &lt;/p&gt;&lt;p&gt;　　接收序列号 &lt;/p&gt;&lt;p&gt;　　RCV.NXT ： 接收下一个 &lt;/p&gt;&lt;p&gt;　　RCV.WND ： 接收下一个 &lt;/p&gt;&lt;p&gt;　　RCV.UP ： 接收优先指针 &lt;/p&gt;&lt;p&gt;　　IRS ： 初始接收序列号 &lt;/p&gt;&lt;p&gt;当前段变量 &lt;/p&gt;&lt;p&gt;　　SEG.SEQ ： 段序列号 &lt;/p&gt;&lt;p&gt;　　SEG.ACK ： 段确认标记 &lt;/p&gt;&lt;p&gt;　　SEG.LEN ： 段长 &lt;/p&gt;&lt;p&gt;　　SEG.WND ： 段窗口 &lt;/p&gt;&lt;p&gt;　　SEG.UP ： 段紧急指针 &lt;/p&gt;&lt;p&gt;　　SEG.PRC ： 段优先级 &lt;/p&gt;&lt;p&gt;　　CLOSED表示没有连接，各个状态的意义如下： &lt;/p&gt;&lt;p&gt;　　LISTEN ： 监听来自远方TCP端口的连接请求。 &lt;/p&gt;&lt;p&gt;　　SYN-SENT ： 在发送连接请求后等待匹配的连接请求。 &lt;/p&gt;&lt;p&gt;　　SYN-RECEIVED ： 在收到和发送一个连接请求后等待对连接请求的确认。 &lt;/p&gt;&lt;p&gt;　　ESTABLISHED ： 代表一个打开的连接，数据可以传送给用户。 &lt;/p&gt;&lt;p&gt;　　FIN-WAIT-1 ： 等待远程TCP的连接中断请求，或先前的连接中断请求的确认。 &lt;/p&gt;&lt;p&gt;　　FIN-WAIT-2 ： 从远程TCP等待连接中断请求。 &lt;/p&gt;&lt;p&gt;　　CLOSE-WAIT ： 等待从本地用户发来的连接中断请求。 &lt;/p&gt;&lt;p&gt;　　CLOSING ： 等待远程TCP对连接中断的确认。 &lt;/p&gt;&lt;p&gt;　　LAST-ACK ： 等待原来发向远程TCP的连接中断请求的确认。 &lt;/p&gt;&lt;p&gt;　　TIME-WAIT ： 等待足够的时间以确保远程TCP接收到连接中断请求的确认。 &lt;/p&gt;&lt;p&gt;　　CLOSED ： 没有任何连接状态。 &lt;/p&gt;&lt;p&gt;　　TCP连接过程是状态的转换，促使发生状态转换的是用户调用：OPEN，SEND，RECEIVE，CLOSE，ABORT和STATUS。传送过来的数据段，特别那些包括以下标记的数据段SYN，ACK，RST和FIN。还有超时，上面所说的都会时TCP状态发生变化。 &lt;/p&gt;&lt;p&gt;　　序列号 &lt;/p&gt;&lt;p&gt;　　请注意，我们在TCP连接中发送的字节都有一个序列号。因为编了号，所以可以确认它们的收到。对序列号的确认是累积性的。TCP必须进行的序列号比较操作种类包括以下几种： &lt;/p&gt;&lt;p&gt;　　①决定一些发送了的但未确认的序列号。 &lt;/p&gt;&lt;p&gt;　　②决定所有的序列号都已经收到了。 &lt;/p&gt;&lt;p&gt;　　③决定下一个段中应该包括的序列号。 &lt;/p&gt;&lt;p&gt;　　对于发送的数据TCP要接收确认，确认时必须进行的： &lt;/p&gt;&lt;p&gt;　　SND.UNA = 最老的确认了的序列号。 &lt;/p&gt;&lt;p&gt;　　SND.NXT = 下一个要发送的序列号。 &lt;/p&gt;&lt;p&gt;　　SEG.ACK = 接收TCP的确认，接收TCP期待的下一个序列号。 &lt;/p&gt;&lt;p&gt;　　SEG.SEQ = 一个数据段的第一个序列号。 &lt;/p&gt;&lt;p&gt;　　SEG.LEN = 数据段中包括的字节数。 &lt;/p&gt;&lt;p&gt;　　SEG.SEQ+SEG.LEN-1 = 数据段的最后一个序列号。 &lt;/p&gt;&lt;p&gt;　　如果一个数据段的序列号小于等于确认号的值，那么整个数据段就被确认了。而在接收数据时下面的比较操作是必须的： &lt;/p&gt;&lt;p&gt;　　RCV.NXT = 期待的序列号和接收窗口的最低沿。 &lt;/p&gt;&lt;p&gt;　　RCV.NXT+RCV.WND：1 = 最后一个序列号和接收窗口的最高沿。 &lt;/p&gt;&lt;p&gt;　　SEG.SEQ = 接收到的第一个序列号。 &lt;/p&gt;&lt;p&gt;　　SEG.SEQ+SEG.LEN：1 = 接收到的最后一个序列号.&lt;/p&gt;&lt;/span&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>LNS防火墙中级使用指南zz</title>
      <link>https://wdicc.com/lns-firewall/</link>
      <pubDate>Sun, 26 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/lns-firewall/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;1.应用程序过滤----专门对程序进行设定，决定应用程序行为的控制。&lt;br /&gt;
&lt;img style=&#34;width: 591px; height: 443px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96947.jpg&#34; rel=&#34;lightbox&#34;/&gt;&lt;br /&gt;
先看看红色编号1区，这个区显示是正连接在网络上或者曾经连接过网络目前还没有关闭的软件清单。 &lt;br /&gt;

重点是看绝色编号2区，这个区才是重点，有N多的门道在里面。这个区猛一看是已允许的相信的程序，仔细看看，偶已经列出了11种属性，当然也是可能的全部属性了。 &lt;br /&gt;

现在按此区的“列”来开讲^_^，之前必需选中黑色编号13“应用程序过滤已启用”，否则所做的任何设置都不起作用，嘿嘿。 &lt;br /&gt;

第一列只有此二种属性，简而言之就是启用或者禁用该规则，单击实现二种属性之间的切换。见黑色编号1，黑色编号2。 &lt;br /&gt;

黑色编号1，是指启用为它所在行的那个程序制定的规则，也就是说让该程序按既定的规则运行，此所谓的应用程序过滤。如果你不想为这个程序设置的规则起作用的话，那么点击一下，就会变成黑色编号2所指的样子。 &lt;br /&gt;

第二列有三种属性，分别是允许（黑色编号5）、禁止（黑色编号4）、自定义（黑色编号3）。单击则在允许与禁止之间切换，如果有自定义属性，则在三者之间进行切换。 &lt;br /&gt;
黑色编号3：黄色圆饼标志。当你为此程序制定了特殊规则，如指定程序只能连接远程的哪些端口、或者不允许连接哪些端口；允许连接哪些地址、禁止连接哪些地址时，则出现黄色的圆。（功能强大，设置之灵活让人唏嘘。）具体看看如下： &lt;br /&gt;

双击某个程序（当然也可以通过点击点击黑色编号12来实现），就会出现如图二所示的“选择端口和IP地址”窗口，此时你可以设置具体的内容了。 &lt;br /&gt;
&lt;img src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96948.jpg&#34; if(this.width=&#34;&#34; alt=&#34;&#34;/&gt;&lt;br /&gt;
比如，偶的TW，偶只允许它连接远程的80端口，不允许连接其它端口，那么就按上面的设置；此时对IP地址没有限制。如果你想让他只连接远程的某个IP地址，那么就在IP地址栏输入。当然没有人会这么对待浏览器。 &lt;br /&gt;

这个自定义功能不会只是如此简单吧？当然不是，其实重要的不是允许去什么地方，而是禁止它去什么去什么地方。比如，你的CuteFTP一启动就想去它的主站验证一下它的合法性，那么你就可以在这里设置一下了，而又不影响其它程序（如IE）访问CuteFTP的主站（目前偶还没有发现哪个防火墙能这样设置的，嘿嘿，如果有恕偶无知）。 &lt;br /&gt;

说了半天，允许和禁止在这里是看不出区别的，该怎么办？其它很简单，允许访问的端口或者IP，则直接输入在上面就行。如果你要禁止某个端口或者地址，呵呵，只要在端口前面加上一个感叹号“！”就行了，是不是真的简单？对了，如果是多个IP或者端口，不要忘记在它们之间加上一个半角的分号“；”哦。 &lt;br /&gt;

黑色编号4：红色禁止标志。此标志表示禁止该程序连接网络。 &lt;br /&gt;

黑色编号5：绿色允许标志。此标志表示允许该程序连接网络。 &lt;br /&gt;

现在来看第三列，此列只有二种属性，单击则实现二种属性之间的切换。见黑色编号7、黑色编号9。这一列是强大功能的一个体现，作用是允许或者禁止此程序调用另一个程序并且使用被调用的这个程序连接网络，也就是说：A程序启动了B程序，B程序有连网企图，此属性就是对这种情况进行控制的。必须打开“高级选项”中的“高级模式”才会出现此列。 &lt;br /&gt;

黑色编号7：双箭头标志。当为此标志时则意味着允许当前程序去调用另外一个要使其连接网络的程序。如果发生这种情况，则出现提示窗。 &lt;br /&gt;

黑色编号9：红色禁止标志。当为此标志时不允许当前程序去调用另外一个要使其连接网络的程序，当然如果被调用的程序没有连接网络的企图，则防火墙是不出现提示的。 &lt;br /&gt;

第四列，此列有三种属性，其中二种属性与第一列的属性配合才能看到效果。黑色编号6、黑色编号10、黑色编号11。 &lt;br /&gt;

黑色编号11：如果是这个标志，则什么也不发生。相当于此属性被禁用。 &lt;br /&gt;

黑色编号10：单感叹号标志。此标志表示在日志中记录该应用程序的连网“企图”，此时要与第一列配合使用，第一列的属性必须是禁止标志才起作用。这个功能的好处太多了，比如：一个被你禁止了的程序，可能也已经关闭了，但频频试图连网，估计它也不是什么好东西，木马常常这么干！ &lt;br /&gt;

黑色编号6： 双感叹号标志。此标志表示无论该程序是禁止还是允许连网，都在日志中记录。 &lt;br /&gt;

好了，应用程序过滤篇到此完毕。可以看出，LNS对程序的控制非常灵活且强大，10个属性有36种不同组合。仅一个页面可以实现允许禁止、记录与否、单程序访问控制、进程调用四种功能的控制。&lt;br /&gt;
&lt;span id=&#34;text2&#34; style=&#34;font-size: 12px&#34;&gt;2.互联网过滤----专门对防火墙规则进行设定，也有少量设定涉及到程序。决定网络连接及数据包行为的控制。 &lt;br /&gt;

图三是互联网过滤，继续按“列”进行讲解。此页面部分功能与“选项”时的“消息框”、“声音”、“日志”配合使用。&lt;br /&gt;

&lt;img src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96949.jpg&#34; if(this.width=&#34;&#34; alt=&#34;&#34;/&gt;&lt;br /&gt;
第一列，有三种属性。自定义的启动该规则属性、默认的启用该规则属性、不启用该规则属性，分别对应黑色编号3、黑色编号1和黑色编号2。三种属性之间点击进行切换，但如果没有进行自定义，则只在二种属性间切换。 &lt;br /&gt;

黑色编号1：绿色带勾标志。此标志表示启用该规则，且该规则没有进行特别的自定义。 &lt;br /&gt;

黑色编号2：灰色小圆点标志。此标示表示不使用该规则，也就是说防火墙对网络连接请进行检查时不与该规则进行匹配操作。相当于这条规则只是临时放在这里，并没有什么作用。 &lt;br /&gt;

黑色编号3：暗红色带勾标志。此标志表明这条规则只对特定的程序起作用，当此特定的程序启动后，此标志则变为绝色带勾标志，表示规则启用了，否则为暗红色带勾标志，表示这规则暂时未被启用。这种设置方式似乎也没有在其它防火墙中见到，极其特别，也是LNS灵活的一个体现。它的好象是什么呢？显示易见，当该特定程序没有启动时，就相当于少了一条规则，少一条规则多一分安全是主要的；其次可以加快对规则匹配操作的时间。设置特定程序的方法为双击当前规则，出现一个设置窗如图四所示。 &lt;br /&gt;

&lt;img style=&#34;width: 596px; height: 467px&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96950.jpg&#34; if(this.width=&#34;&#34; alt=&#34;&#34;/&gt;&lt;br /&gt;
双击一条规则后会出现如红色编号1的窗口，点击些窗口上的“应用程序…”按钮，出现如红色编号2所示的窗口，将此窗口中右侧的程序双击添加到左侧，然后一路确定就可以了。图示是偶为BT添加的自定义规则，只有当BT启动后它才启用，平时这条规则相当于不存在，呵呵，否则会浪费偶的资源的。 &lt;br /&gt;

第二列，有二种属性。分别是禁止与允许，对应于黑色编号4。此列主要用途是，允许执行与此规则匹配的连接请求，还是禁止与此规则匹配的连接请求。 &lt;br /&gt;

黑色编号4：红色禁止标志。此标志表示，当某个连接请求或者操作与此规则匹配时，则禁止该连接请求或者操作。如果是灰色圆点标志，则表示此允许此连接请求或者操作。此属性的好处是，可以用来限制某些特定的操作而又不产生全局影响，而当你需要时又可以打开这一特定规则。 &lt;br /&gt;

第三列，二种属性。记录或者不记录与该规则匹配的操作信息。 &lt;br /&gt;

黑色编号6：单感叹号标志。表示当某个连网请求或者操作与此规则匹配时，则记录些操作的信息，这些信息一定会在日志标签的窗口里显示出来。如果你启用了“选项”标签中的日志文件功能，则这些信息保存在日志文件中，如果没有启用日志文件功能，则不保存。另一灰色圆点标志表示不记录也不保存这些信息。本人建议把LNS的记录功能打开，这样一旦某些软件不能正常上网时，可以在日志中发现并生成规则（后面讲到如何用日志生成适用规则）。 &lt;br /&gt;

第四列，二种属性。分别对应黑色编号7、黑色编号8。功能比较简单，但却非常的有用啊。 &lt;br /&gt;

黑色编号7：黄色下箭头标志。些标志表示，如果某个操作与此规则匹配时，则直接进行相应的操作（即第一列、第二列、第三列所定义的属性及具体规则内容进行操作），不再继续匹配后续的其它规则，因为LNS匹配规则的顺序是自上而下的（故大家最好不要调整那些LNS默认生成的规则的上下顺序，否则可能什么程序也上不了网）。这种属性产生的操作带来的好处是：不用将所有规则匹配一遍，极大地减少了LNS规则匹配操作所用的时间；其次如果你添加了一条过于宽泛自己不知道有没有漏洞的规则，那么你可以关闭此属性，则当有某个操作与此规则匹配后，后续规则继续对其进行检测，以发现问题。 &lt;br /&gt;

黑色编号8：灰色圆点标志。此标志表示匹配完此规则后，再继续匹配后续规则。 &lt;br /&gt;

第五列，三种属性。对应于黑色编号9、黑色编号10。作用是当有某操作与此规则匹配时，以什么方式来报警。 &lt;br /&gt;

黑色编号9：小喇叭标志。此标志表示某操作与此规则匹配时，以发生声音的方式报警。打开此属性必须同时在“选项”标签中选中“声音”功能。 &lt;br /&gt;

黑色编号10：双感叹号标志。此标志表示某操作与此规则匹配时，不但发出声音报警，而且跳出消息框报警。也必须同时打开“选项”标签中的“声音”与“消息框”功能，否则不起作用。 &lt;br /&gt;

灰色小圆点标志，表示不需要报警。 &lt;br /&gt;
此列的属性建议对系统默认的规则打开，此时能看到一些异常操作，及时采用措施。对于其它的频繁正常操作，如果打开了会不胜其烦的。比如在你为BT设置的规则上设置此属性，消息框会跳满一屏幕，呵呵。 &lt;br /&gt;

最后再说一下，如果你取消对图三右下角的“互联网过滤已启用”选中的话，则此规则表中所有规则都相当于不存在，基本上是门户大开啊。切记！&lt;br /&gt;
&lt;span id=&#34;text3&#34; style=&#34;font-size: 12px&#34;&gt;3.规则编辑----定义符号你自己需要的规则。 &lt;br /&gt;
在LNS里定义规则有两种方法，在“互联网过滤”里“添加”规则是最难的一种；另一种方法是从“日志”标签里进行添加，则简单得多了，后面再讲到。 &lt;br /&gt;

图五是规则编辑窗的界面，分为8个区域，按“区”讲吧。分别为“规则名称”、“方向”、“规则说明”、“以太网”、“IP”、“标识”、“来源”、“目标”8个区。&lt;br /&gt;


&lt;img style=&#34;width: 587px; height: 440px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96962.jpg&#34; if(this.width=&#34;&#34;/&gt;&lt;br /&gt;
首先，LNS防火墙在编辑时规则是中性的，也就是说在编辑界面上，我们不能够确定该规则是禁止了某个操作还是允许了某个操作，一旦“确定”后，LNS默认这个规则是允许与之匹配的操作的；如果你编制规则的目的是想禁止某种操作，那么你只要把规则说清楚，“确定”后再点图四所示的第二列的“红色禁止”标志就行了，此时在该规则也会出现一个禁止标志，意思就是禁止那些与此规则匹配的操作。这一点与任何防火墙都不同。 &lt;br /&gt;

LNS防火墙的规则的信任关系是基于IP地址+MAC地址的，这是一种理想的信任关系模式。IP地址是可以欺骗的，MAC地址也同样，但IP+MAC的欺骗就困难得多，所以LNS安全性能可想而知。因此在图五中大家会看到“以太网：类型”和“以太网：地址”区域，使设置显得复杂常常令人困惑。其实了解了它的作用就不感到复杂了。&lt;br /&gt;

“规则名称”区 &lt;br /&gt;
黑色编号1：规则名称，不用多说。 &lt;br /&gt;

“方向”区 &lt;br /&gt;
黑色编号2：设定此规则的数据方向。你可以定义这条规则只对传入的连接（数据）起作用，或是对传出的生效，或对传入传出都起作用。此设置与“来源”和“目标”区有关联，选中“传入”或者“传出”则“来源”和“目标”内容有变化，此时更直接；但选中“两者”时，“来源”和“目标”区域显得复杂。 &lt;br /&gt;

“规则说明”区 &lt;br /&gt;
黑色编号3：可以对该规则进行说明，以便记忆或了解。 &lt;br /&gt;

“以太网:类型”区 &lt;br /&gt;
黑色编号4：可能也是让大家头痛的地方，常常不知道如何设置这个地方。“以太网：类型”其实就是告诉防火墙你的机器是局域网中的机器还是独立的一台机器，或者你理解“以太网：类型”就是要告诉LNS此条规则是适用于网域局中的通讯或者适用于互联网中的通讯。在这里就得多唠叨几句。这个类型里有四种选择，分别是“全部”、“IP”、“ARP”、“其它”，“全部”即指包括“IP、ARP、其它”的全部类型。 &lt;br /&gt;
“全部”类型极少用到，除非你的机器处于混合网络（如同时有windows、Linux、Unix、Mac os、VAX、Netware等操作系统的机器）中，可能会同时存在多种不同的局域网协议时。因此不赞成独立PC和单纯局域网选择该类型。 &lt;br /&gt;
&#34;IP”类型，网际协议类型，用于把数据包从源地址发往目的地，多数情况下选择这种类型是合适的，尤其你的机器是通过非代理非网关直接上网时至少得（选择“全部”当然可以，但开放了不必要的协议）选择此类型，制定那些与互联网连接相关的规则时必须选择它，当然如果规则是局域相关的也同样可以选择它。 &lt;br /&gt;
“ARP”类型，地址解析协议，它的作用是把IP地址解析（转换）为与此IP对应的MAC地址，从而找到该机器，只能用于与局域网相关的规则中，用在与互联网相关的规则中会造成该规则不起作用。除非你是在局域网中使用本机，否则不要生成选中此类型的规则；如果你是在局域网中通过代理或者网关上网，那么LNS默认有一条规则使用的此类型，规则名是“ARP : Authorize all ARP packets”，则必须打开并允许此规则，否则你无法上互联网。 &lt;br /&gt;

“IP”区 &lt;br /&gt;
黑色编号5：也就是为当前规则指定协议，共有8种类型。最常用的是TCP和UDP，偶一般人用这2个协议足够，其它协议给高手们用。编号右侧的“碎片偏移”和“碎片标志”俺不知道是个啥，所以通常用“全部”没有不良影响，呵呵。如果选择了TCP协议，则右侧的“TCP标志”是可选的；如果选择了ICMP/IGMP，侧“标志”内容也不同。 &lt;br /&gt;

“来源”区，我想它后面的一串文字和方向，是造成大家不好理解的重要原因。与其它任何防火墙不同的是：在LNS的这个规则编辑器里，“来源”完全表示本地，“目标”则表示远程，而不管实际的连接请求或者数据包方向，大家在此一定要转变思路。所以，“来源”区所填写的数据都是与本地有关的，比如你要打开或者关闭本机的某个端口、允许或禁止本地的某个IP（当LNS安装在网关或者代理服务器上时有用），都可以把端口、IP地址信息输入在这里，理解了这一点，规则就好编了。 &lt;br /&gt;

黑色编号的7、8：用来限定MAC地址的，当编号7选择了“全部”时，后面的不用填任何地址，填了也没用；只有当编号7选择了“等于”或者“不等于”时填MAC地址才有用，而且此时LNS也应该在代理服务器或者网关上才真正有用。它的作用就是限制内网的一个或某些机器的特定操作的，具体是什么特定操作还要看其它设置的配合情况。 &lt;br /&gt;

黑色编号9：用来对IP地址进行各种组合和排除的，共10种方法，真是了得！当选择了“全部”时，它下面黑色编号11的地址栏是灰色不能进行输入的，否则要进行输入。但LNS有个BUG，即在此输入的IP地址无法输入3位数，解决方法是先能输入多少输入多少，保存后，用文本工具打开LNS目录的对应的规则文件，按你在此所定义的规则名称，找到你所输入的内容后把IP地址改为3位数保存后，重启LNS就行了，呵呵，这个BUG真不应该。 &lt;br /&gt;

黑色编号10：用来定义具体的端口号的，此时建议尽量选择你想要的协议，然后输入端口号。如果不选择协议就输入端口号，则此端口号对所有协议开放，安全性应该会下降。同样黑色编号12有7种方法，以便对端口号进行排除。 &lt;br /&gt;

黑色编号13：用来指定程序的。也就是说，当你指定了程序后，该规则只对此程序起作用，当该程序没有启动时，该规则是不执行的，因而也不会影响到其它程序。比如你为BT制定了特殊的&lt;strong&gt;规&lt;/strong&gt;规则，那么就可以在这里设置好，当BT启动后该规则也自动加载。有此功能，就既可以定义特殊规则，又不会让此规则影响到全部程序了。 &lt;br /&gt;

“目标”区，此区是与“来源”区相对应的，一定要注意，你的本地的信息永远不要出现在这个区，虽然它叫“目标”，但它完全是指远程机器的，那怕你的本地机器被全宇宙的黑客当成“目标”！所以在这个区出现的IP地址、端口号都是批你想要访问或者你不想要访问，再或者你不想让它来访问你的那些远程机器的IP和端口号。我想现在大家知道了“来源”和“目标”的实质，编规则也好办了。那么此区的“以太网：地址”、“IP地址”、“TCP/UDP端口”的设置方法与“来源”区所讲到的完全相同，不用再说了，不同的是它们是指的远程！！！&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span id=&#34;text4&#34; style=&#34;font-size: 12px&#34;&gt;“规则编辑”看来不讲例子是不行的，下面先讲一个开放特殊端口的例子，以BT为例，见图&lt;br /&gt;

&lt;img style=&#34;width: 596px; height: 421px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96963.jpg&#34; if(this.width=&#34;&#34;/&gt;&lt;br /&gt;
事先说明偶的BT监听的端口是10521，Bt（Emule、Edonkey都是工作原理类似的软件）比较特殊，它与其它下载工具的工作原理不同，偶认为BT是用其它端口发送连接请求等等信息，而用10521端口来专门进行数据包的传输，故10521端口是不主动向外发送信息，因而当其它的远程BT端收到本地BT发出的信息后，便把回应信息向10521端口发送，此时在LNS里便认为这个操作有隐患，故而拦截。那么便需要对LNS进行设置，让它放这种信息一马，这样BT才能正常工作。（随便说一下，多数防火墙基于程序的信任程度更高一些，在此类防火墙里，应用程序所打开的所有端口都是对外开放的，也就是说外部程序可以主动联系该程序打开的所有端口，因而不用进行端口设置。看起来没有在LNS里这么麻烦，但仔细想想，安全性要低一些。就象是在一个正常卖票的窗口旁边有一个本来不是卖票的关着窗口，但当有人去敲了敲，窗口竞然打开了或许还进行了某种交易？！） &lt;br /&gt;
言归正传，下面说如何为BT打开这个被动的端口，通过下述设置偶在BT里每任务最大100个连接，当有80个左右的用户时，下载速度可以轻松达到120KB以上。 &lt;br /&gt;

?首先给该规则起个名，定义方向，略加说明，如图六中的1、2、4所示； &lt;br /&gt;
?然后在“以太网：类型”里选择“IP”，等于告诉LNS这是一条通关于数据包往来的规则，如3所示； &lt;br /&gt;

?在黑色编号5的“IP”里选择“TCP或UDP”，告诉LNS这是基于TCP或者UDP协议的数据包的规则（通常在BT里只用TCP协议，但偶在日志中发现它偶有用到UDP，所以也打开了，偶对BT的机制并不熟悉）； &lt;br /&gt;

?在黑色编号7里不用填任何MAC地址，本规则是对本机的，不需要进行MAC地址的排除组合等（但如果LNS安装在网关上，而BT在你的机器上，则可以在MAC地址里填写上你的MAC地址，呵呵，则只有你可以用BT了因为MAC地址在局域网里有唯一性，尤其它你们的局域网是自动分配IP地址的话。）； &lt;br /&gt;

?黑色编号8，IP地址选择“等于本机”就不用手工输入了。同样，如果你的机器在内网，而LNS在网关上，你就可以指定哪些IP可以使用BT而哪些机器不能使用了；比如你的内部机器IP=192.168.2.4，此时可以在“IP地址”里选择“等于”，并把192.168.2.4填写在正文，那么只有这台机器的10521端口可以被外部其它机器连接。大家多试试就可以体会。 &lt;br /&gt;

?黑色编号9，选择“等于”，然后填写你的BT监听的端口号。 &lt;br /&gt;

?点“应用程序”，如果黑色编号13、14所示，把你的Bt软件添加上，然后一路确定，回到“互联网过滤”界面，保存和应用就可以了（OK，此时打开BT开始下载，看看“日志”里有没有大量的记录，如果没有恭喜了，如果有大量的与端口有关的记录，说明某个地方弄错了，再仔细检查一下该规则）。这样该条规则就是BT专用的了，绝对不影响其它程序。 &lt;br /&gt;
同样的道理，如果你是想禁用远程机器与本地/本机的某个端口进行连接，那么只要在图三所示的“第二列”为该规则打上禁止标示就可以了，那么此时与该IP地址或者Mac地址匹配的机器的10521端口就永远无法被其它连接，且该端口也无法向外发送信息了。&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span id=&#34;text5&#34; style=&#34;font-size: 12px&#34;&gt;上面的例子是控制本地/本机资源的，那么如何限制你本地/本机应用程序对远程机器的访问，将在下面再举一例。见图七。 &lt;br /&gt;

&lt;img style=&#34;width: 595px; height: 418px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96964.jpg&#34; if(this.width=&#34;&#34;/&gt;&lt;br /&gt;
虽然在“应用程序过滤”里已经讲到了如何限制对远程的访问，但它不具有全局性，也就是说“应用程序过滤”里的规则优先级低于“互联网过滤”，LNS先匹配“应用程序过滤”然后再匹配“互联网过滤”，如果在“应用程序过滤”里已经禁止了的，在“互联网过滤”里将继续禁止；如果在“应用程序过滤”里允许了的，那么还得经过“互联网过滤”的审查。在这里编写的规则具有全局性，当然也可以针对某个特定程序。 &lt;br /&gt;

讲一个禁止与远程某个端口连接的例子，或者理解为禁止本地与远程某个端口进行通讯，此例子规则的意思为：禁止与12.10.2.20地址的77777端口进行双向联系。编写一条禁止规则通常有二个步骤。 &lt;br /&gt;

第一步：远程机器的信息只能设置在图七所示的目标区，黑色编号1选择“IP”类型，编号2选择“TCP”或者其它协议，如果不能确定，填上“TCP或者UDP”也不会有问题。 &lt;br /&gt;

在“目标”区域，如果你要禁止具体的某个远程主机，则在“IP地址”里选择“等于”（如果是对所有的远程主机则选择“全部”），然后再下面填写具体IP地址（例子里随便写了个12.10.2.20），“TCP/UDP端口”里填上端口号77777。 &lt;br /&gt;

如果这个禁止规则是与某个具体程序对应的，那么点“应用程序”，把具体的程序加入就行了；如果是对本机所有程序的，侧不需要添加任何程序。一路确定，回到“互联网过滤”界面。 &lt;br /&gt;

第二步：点击如图三所示的“第二列”（当然位置要与此条规则对应），当出现红色禁止标志时，点击“保存”和“应用”，OK！此时12.10.2.20地址的77777端口不能联系你的机器，你的机器也不能联系12.10.2.20机器的77777端口。当然其它端口是可以双向联系的。 &lt;br /&gt;

如果你想写一条禁止本地/本机的具体地址的具体端口与远程的具体地址的具体端口进行连接的规则时，则在“目标”区域填写你的本地/本机的IP和端口信息，而在“目标”区域填写远程机器的IP和端口信息，完成后再在“互联网过滤”界面上打上禁止标志就行了。通常很难存在一条这样的“允许”规则的。&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span id=&#34;text6&#34; style=&#34;font-size: 12px&#34;&gt;4.日志标签---告诉你当前阻止了哪些连接；允许了哪些连接（如果你也设置了记录的话，LNS默认对阻止的规则进行记录）；可以用来建立特殊规则。如图八所示。&lt;br /&gt;
&lt;img style=&#34;width: 597px; height: 447px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96965.jpg&#34; if(this.width=&#34;&#34;/&gt;&lt;br /&gt;
当你使用了某些软件并允许了它上网但却不能正常使用，此时可以查看“日志标签”，只是此时日志中不显示对应的程序名称，会显示连续的规则名称相同的一些信息。首先你确保这些信息是因为阻止了此类连接而生成的（通过规则名称在“互联网过滤标签”里看此规则前面是否有禁止标志），然后再看在端口号上有没有规律性，当规则名称相同、端口号也有规律性时，就可以用它来生成规则了。 &lt;br /&gt;

以例子说明，图八所示为BT在没有打开端口时的日志情况。黑色编号4区显示的是规则名称，几乎完全一样；黑色编号3区是端口；黑色编号2区所示为有一致性的端口号，都为10521（偶的BT监听端口）。从日志可以明显看出，BT的10521端口不允许被外界连接，也就是造成BT下载速度慢的全部原因（虽然已经把BT设置为任凭程序了，但对它的端口还是有限制的。）。&lt;br /&gt;

设置方法：在任意一条记录上点鼠标右键，会出现图八黑色编号1所示的菜单，菜单上总共会出现2个选择，你应该用鼠标点在黑色编号3区域中看到的那个频繁出现的端口所在的选择项。如本例中在黑色编号3区域中看到的频繁出现的端口号是10521，则在此菜单上就选择“允许Port10521-服务器”（此外的“服务器”意思是本机被其它机器连接，有点服务器的味道P），选择后会返回到“互联网过滤”标签，此时可以看到LNS已经为你自动增加了一条规则，并为此规则起了一个名称和简单的说明，你可以双击此规则改变规则名称和说明以使你清楚知道此规则的作用。 &lt;br /&gt;

回到日志来继续看，如果在某条日志上双击，则出现如图九中红色编号1所示的窗口，在此窗口中可以看到该条日志的详细信息（可惜没有与程序具体对应），有源/目标的IP地址、端口、数据报等详细内容，有经验的用户可以就此进行深入分析，以手工建立规则。在此不详细讲了。 &lt;br /&gt;
&lt;img style=&#34;width: 596px; height: 447px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_96966.jpg&#34; if(this.width=&#34;&#34;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&#34;font-size: 12px&#34;&gt;&lt;span style=&#34;font-size: 12px;&#34;&gt;&lt;span style=&#34;font-size: 12px;&#34;&gt;&lt;span id=&#34;text7&#34; style=&#34;font-size: 12px;&#34;&gt;5.选项标签-高级设置及其它杂项，如图十所示 &lt;br /&gt;


&lt;img style=&#34;width: 592px; height: 224px&#34; alt=&#34;Click here to open new window&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_97053.jpg&#34; if(this.width=&#34;&#34;/&gt;&lt;br /&gt;
这一部分没有什么内容可讲，当鼠标停留在某个选项上时，都会自动跳出提示的。主要说说选择网络接口的操作。 &lt;br /&gt;
图中红色编号1区即为选择界面，通常按“自动选择”方式就能很好的工作，如果不能时，请按图十二所示按自己的上网方式进行选择。&lt;br /&gt;
&lt;img style=&#34;width: 598px; height: 430px&#34; src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_97055.jpg&#34; if(this.width=&#34;&#34; alt=&#34;&#34;/&gt;&lt;br /&gt;
点击红色编号2，则出现如图十一所示的“高级选项”界面，这个也大概说一下。&lt;br /&gt;
&lt;img src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_97054.jpg&#34; if(this.width=&#34;&#34; alt=&#34;&#34;/&gt;&lt;br /&gt;
除了黑色编号3所在区域，其它编号区当鼠标指向时都有提示跳出，而且容易理解，不详细讲了，如果以后有时间再补充。重点讲黑色编号4、5、6、7区的。先来看看黑色编号3区的。 &lt;br /&gt;

“高级模式”----选中它，则在“应用程序过滤”、“互联网过滤”标签里才有一些高级属性出现。大家视自己的情况决定，不过偶建议打开。 &lt;br /&gt;
“原始日志”----选中它，则在日志文件中记录更多的信息，也就是日志文件更加详细，提供更多的基层信息，而且需要用第三方的工具才能打开察看日志文件。一般人没有必要打开，而且偶不建议记录日志文件，一来作用不大，二来记录日志文件的话，会增加CPU使用量。 &lt;br /&gt;
“退出时确认”----不用说。 &lt;br /&gt;
“TCP全状态包检测”----读为“TCP全状态?包检测”，一种数据包过滤技术，通过对报文的TCP标志进行检测而实现的。建议大家打开此功能；但这个功能默认是记录日志的，不能更改。 &lt;br /&gt;
“在此程序退出后保持互联网过滤处于活动状态”----2000以上有用。作用是当退出LNS，互联网过滤规则也在后台运行。偶想不出这个功能的必要性，故不建议大家打开，尤其是新安装LNS还处于调试阶段时更不要打开这个功能。否则可能会造成退出LNS了，上网还不正常。 &lt;br /&gt;
“监视DNS呼叫”----2000以上才起作用，用于监视应用程序向DNS服务器发出地址解析请求的。建议打开，但如果打开它LNS经常导致机器蓝屏，请关闭它。另外，在2003下千万不要打开，否则肯定蓝屏。 &lt;br /&gt;
“监视线程侵加（恶意代码插入）”----2000以上有用。也就是对付内存数据改写之类操作的，建议打开。 &lt;br /&gt;
最后面二条一看就明白，建议选中。 &lt;br /&gt;

黑色编号7，当你在图十中选中了网络界面接口的“自动选择”时，这个功能必较有用。它是用来排除那些不用检测的网卡的，比如说，你机器上有2个以上的网卡，其中一个是连接互联网的，其它的是连接不同网段的，那么你就把其它网段的IP输入在这里，以保证LNS能正常检测到你的上网网卡。可以在这里输入多个网段，之间用半角的分号分隔开。 &lt;br /&gt;

黑色编号4，点击后出现图十三所示的界面。 &lt;br /&gt;
&lt;img src=&#34;http://www.magicwinmail.com/course/looknstop/images/22_97089.jpg&#34; if(this.width=&#34;&#34; alt=&#34;&#34;/&gt;&lt;br /&gt;
黑色编号1为本机现有网络协议以及LNS是否允许此协议，当前哪些协议处于活动状态等信息。不同的操作系统显示的不同，2000以上系统只有NETBT.SYS和TCPIP.SYS二种。这二种协议的属性都是默认，且不可更改。当有其它协议时，比如图中的NPF.sys（网络监视），可以用“拦截”来控制是否允许它，也可以用“移除”删除它而不对该协议进行监控。 &lt;br /&gt;

黑色编号2，此区域决定了是否对已经激活的协议进行过滤（控制与该协议相关的网络操作），当选择禁用时不对当前活动的协议进行过滤，如果启用了则进行过滤，以增加安全性。建议打开“启用”。 &lt;br /&gt;

当点击图十一中的黑色编号5“插件”时，则出现一个已安装插件的选择窗口，选择了某个插件后就具备相关的扩展功能。这个不多讲了，除了多语言支持插件以外，其它都太高深了，偶们一般也用不到。 &lt;br /&gt;

当点击图十一中的黑色编号6“动态链接库”，会出现如图十四所示的动态链接库设置的窗口。此时勾“启用动态链接库检测”则当程序第一次加载一个DLL时LNS会询问允许或禁止，经过一些时间的学习后就不询问了。但当某个DLL的数字签名发生了变化，则LNS会再询问以保证DLL是合法修改，确保系统安全性；当然你也可以手工直接添加那些你认为有必要进行检测的DLL。2000以上系统才有此功能。使用windows2003的兄弟注意了，在2003下不要打开这个功能，否则Crash。这个功能也就是ZA、OP等的“组件功能”，但应该说LNS的这种处理方式更安全一些。&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&#34;font-size: 12px;&#34;&gt;&lt;span style=&#34;font-size: 12px;&#34;&gt;&lt;span style=&#34;font-size: 12px;&#34;&gt;&lt;span id=&#34;text8&#34; style=&#34;font-size: 12px;&#34;&gt;三、特定事件处理 &lt;br /&gt;
1.阻止网络执法官控制 &lt;br /&gt;

　　网络执法官是利用的ARp欺骗的来达到控制目的的。　　 &lt;br /&gt;
　　ARP协议用来解析IP与MAC的对应关系，所以用下列方法可以实现抗拒网络执法官的控制。 &lt;br /&gt;
如果你的机器不准备与局域网中的机器通讯，那么可以使用下述方法： &lt;br /&gt;
　　A.在“互联网过滤”里面有一条“ARP : Authorize all ARP packets”规则，在这个规则前面打上禁止标志； &lt;br /&gt;
　　B.但这个规则默认会把网关的信息也禁止了，处理的办法是把网关的MAC地址（通常网关是固定的）放在这条规则的“目标”区，在“以太网：地址”里选择“不等于”，并把网关的MAC地址填写在那时；把自己的MAC地址放在“来源”区，在“以太网：地址”里选择“不等于”。 &lt;br /&gt;
　　C.在最后一条“All other packet”里，修改这条规则的“目标”区，在“以太网：地址”里选择“不等于”，MAC地址里填FF:FF:FF:FF:FF:FF；把自己的MAC地址放在“来源”区，在“以太网：地址”里选择“不等于”。其它不改动。 &lt;br /&gt;
　　这样网络执法官就无能为力了。此方法适用于不与局域网中其它机器通讯，且网关地址是固定的情况下。 &lt;br /&gt;
　　如果你的机器需要与局域网中的机器通讯，仅需要摆脱网络执法官的控制，那么下述方法更简单实用（此方法与防火墙无关）： &lt;br /&gt;
　　进入命令行状态，运行“ARP -s 网关IP 网关MAC”就可以了，想获得网关的MAC，只要Ping一下网关，然后用Arp-a命令查看，就可以得到网关的IP与MAC的对应。此方法应该更具通用性，而且当网关地址可变时也很好操作，重复一次“ARP -s 网关IP网关MAC”就行了。此命令作用是建立静态的ARP解析表。 &lt;br /&gt;

2.安装后不能上网 &lt;br /&gt;

　　安装LNS后不能上网的问题很是奇怪，可能与个人的具体上网方式关系较大。此时先确保在LNS中的网络接口选择是正确的（参见图十二）。 &lt;br /&gt;
　　其次看看LNS的“欢迎”标签里的“已连接”前面有没有勾，并且在“IP地址”里面有没有地址，如果这二项都没有问题，那么请把“互联网过滤”的规则表最后一条规则的“以太网：类型”中的“全部”改为“IP”再试，一般应该可以解决。如果这样做都无法解决上网，请再后面发帖，详细说明上网方式和LNS的设置情况，偶研究一下。^^_ &lt;br /&gt;

3.记不住规则&lt;br /&gt;
　　LNS记不住规则的情况是：当你的应用程序安装在一个中文目录中时。所以你重新安装应用程序，不要安装在中文目录下就可以解决。 &lt;br /&gt;

4.“已连接”没有选中 &lt;br /&gt;

　　“已连接”前面没有出现一个勾，此时并不意味着LnS不正常工作。出现此现象时，说明LNS并不确定网络接口选择的是否正确，特殊的上网方式或者一台机器安装有几块网卡时会出现此现象，而且要注意自己的IP地址是否与“高级选项”中的“网络自动检测时排除的IP”中的地址有冲突。 &lt;br /&gt;
　　解决办法是：先排除不是由于“网络自动检测时排除的IP”中包含了本机IP，如果是此情况，请删除“网络自动检测时排除的IP”列表中与自己IP冲突的数值；如果不是此情况，请手工在“网络接口”窗口中选择接口，直到“已连接”前面出现勾，且“IP地址”栏里出现正确的本机IP为止。 &lt;br /&gt;

5.关机超慢 &lt;br /&gt;

　　关机慢通常是由于没有退出网络连接造成的（通过网关上网的机器应该没有此现象），解决办法是关闭连接（比如断开ADSL连接）后再关机。 &lt;br /&gt;

四、LNS的优化 &lt;br /&gt;

（一）.应用程序过滤区的优化 &lt;br /&gt;

　　对应用程序过滤区的优化可以把程序类型分为操作系统软件和第三方软件。 &lt;br /&gt;
　　1.对于操作系统自己的文件，允许连网的数量越少越好，但数量取决于你希望系统提供哪些服务。比如，偶在内网，通过网关代理上网，本机不开任何其它服务，访问局域网中的其它机器的共享文件，那么偶只允许SVChost.exe通过防火墙（虽然SVChost.exe自己不上网，只加载其它程序）。而SVchost.exe想要做什么呢？它调用了其它系统某个网络应用（偶不知道是哪个）去进行域名解析，也就是连接到你的DNS的53端口，这样就可以在LNS里对Svchost.exe的行为进行限定。 &lt;br /&gt;
　　方法是： &lt;br /&gt;
　　A.双击“应用程序过滤”列表里的Svchost.exe，在出现的窗口中端口填写53，IP填写你自己所在地的域名解析服务器的IP地址； &lt;br /&gt;
　　B.点SVChost.exe所在行的绿色双箭头标志，让它变为红色的禁止标志； &lt;br /&gt;
　　C.其它所有如Explorer.exe等系统程序都禁止通过。 &lt;br /&gt;
　　这样，SVChost.exe所调用的系统文件、包括所调用的其它程序也只能访问这个地址和53号端口；且当系统启动后Svchost.exe也不能再调用并运行其它程序了。好处是让SVChost.exe只访问一个IP的一个端口，即使中了一些利用Svchost.exe调用以运行并且连网的病毒也不怕此病毒下载安装其它东东。 &lt;br /&gt;
　　2.第三方应用软件，则尽量根据各软件的特点，设定对应的端口就行了，IP地址不做限制。 &lt;br /&gt;
A.邮件客户端软件。则在前面所说的端口里只打开110和25端口就好了，方法是输入“110;25”不包括双引号。这样邮件客户端就只连接远程的这二个端口。 &lt;br /&gt;
　　B.FTP客户端软件。则打开FTP端口和高端口，方法是输入“20-24;60000-65000”不包括双引号。有些FTP服务端打开的可能是21、22、23端口；而发数据通常是60000以上的端口。有人可能说：“应用程序过滤”的优先级低于“互联网过滤”的优先级，在这里打开60000以上端口会不会也需要制定一条专门的规则呢（因为BT就得专门开一个端口）？其实不用，FTP的原理与BT不同，BT的监听端口是被动的，而FTP的高端口是主动的。&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>详解：IP的分类、寻址规则及子网掩码zz</title>
      <link>https://wdicc.com/about-ip/</link>
      <pubDate>Sat, 25 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/about-ip/</guid>
      <description>&lt;p&gt;　　&lt;strong&gt;二、IP地址的分类&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;　　我们说过因特网是把全世界的无数个网络连接起来的一个庞大的网间网，每个网络中的计算机通过其自身的IP地址而被唯一标识的，据此我们也可以设想，在INTERNET上这个庞大的网间网中，每个网络也有自己的标识符。这与我们日常生活中的电话号码很相像，例如有一个电话号码为0515163，这个号码中的前四位表示该电话是属于哪个地区的，后面的数字表示该地区的某个电话号码。与上面的例子类似，我们把计算机的IP地址也分成两部分，分别为网络标识和主机标识。同一个物理网络上的所有主机都用同一个网络标识，网络上的一个主机(包括网络上工作站、服务器和路由器等)都有一个主机标识与其对应?IP地址的4个字节划分为2个部分，一部分用以标明具体的网络段，即网络标识；另一部分用以标明具体的节点，即主机标识，也就是说某个网络中的特定的计算机号码。例如，盐城市信息网络中心的服务器的IP地址为210.73.140.2，对于该IP地址，我们可以把它分成网络标识和主机标识两部分，这样上述的IP地址就可以写成：&lt;/p&gt;&lt;p&gt;　　网络标识：210.73.140.0&lt;/p&gt;&lt;p&gt;　　主机标识：　　　　　2&lt;/p&gt;&lt;p&gt;　　合起来写：210.73.140.2&lt;/p&gt;&lt;p&gt;　　由于网络中包含的计算机有可能不一样多，有的网络可能含有较多的计算机，也有的网络包含较少的计算机，于是人们按照网络规模的大小，把32位地址信息设成三种定位的划分方式，这三种划分方法分别对应于A类、B类、C类IP地址。&lt;/p&gt;&lt;p&gt;　　1.A类IP地址&lt;/p&gt;&lt;p&gt;　　一个A类IP地址是指，在IP地址的四段号码中，第一段号码为网络号码，剩下的三段号码为本地计算机的号码。如果用二进制表示IP地址的话，A类IP地址就由1字节的网络地址和3字节主机地址组成，网络地址的最高位必须是“0”。A类IP地址中网络的标识长度为7位，主机标识的长度为24位，A类网络地址数量较少，可以用于主机数达1600多万台的大型网络。&lt;/p&gt;&lt;p&gt; &amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;A类网络地址的最高位必须是“0”，也就是说第一位必须是00000000~01111111，换算过来就是0~127(2^7-1)，也就是从0.0.0.0~127.255.255.255，总共128个A类网络。每一个可以包含255x255x255=16581375台主机（其中应该除去127.x.x.x和0.0.0.0类型的ip，127开头的ip被保留用作回路测试，0.0.0.0用于启动后不再使用的主机）。A类网址的掩码最后三位都是0。&lt;/span&gt;&lt;br /&gt;
&lt;/p&gt;&lt;p&gt;　　2.B类IP地址&lt;/p&gt;&lt;p&gt;　　一个B类IP地址是指，在IP地址的四段号码中，前两段号码为网络号码，剩下的两段号码为本地计算机的号码。如果用二进制表示IP地址的话，B类IP地址就由2字节的网络地址和2字节主机地址组成，网络地址的最高位必须是“10”。B类IP地址中网络的标识长度为14位，主机标识的长度为16位，B类网络地址适用于中等规模规模的网络，每个网络所能容纳的计算机数为6万多台。&lt;/p&gt;&lt;p&gt; &amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;B类网络地址的最高位必须是“10”，也就是说第一位必须是10000000~10111111，换算过来就是128(2^7)~191(2^7+2^6-1)，从128.0.0.0~191.255.255.255，总共64x255=16320个B类网络。每一个可以包含255x255=65025台主机。B类网址的掩码最后两位是0。&lt;/span&gt; &lt;/p&gt;&lt;p&gt;　　3.C类IP地址 &lt;/p&gt;&lt;p&gt;　　一个C类IP地址是指，在IP地址的四段号码中，前三段号码为网络号码，剩下的一段号码为本地计算机的号码。如果用二进制表示IP地址的话，C类IP地址就由3字节的网络地址和1字节主机地址组成，网络地址的最高位必须是“110”。C类IP地址中网络的标识长度为21位，主机标识的长度为8位，C类网络地址数量较多，适用于小规模的局域网络，每个网络最多只能包含254台计算机。&lt;/p&gt;&lt;p&gt; &amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=&#34;color: rgb(255, 0, 0)&#34;&gt;C类网络地址的最高位必须是“110”，也就是说第一位必须是11000000~11011111，换算过来就是192(2^7+2^6)~223(2^7+2^6+2^5-1=128+64+32-1)，从192.0.0.0~223.255.255.255，总共32x255x255=2080800个C类网络。每一个可以包含255台主机。C类网络的掩码最后一位是0。&lt;/span&gt; &lt;/p&gt;&lt;p&gt;　　除了上面三种类型的IP地址外，还有几种特殊类型的IP地址，TCP/IP协议规定，凡IP地址中的第一个字节以“lll0”开始的地址都叫多点广播地址。因此，任何第一个字节大于223小于240的IP地址是多点广播地址；IP地址中的每一个字节都为0的地址(“0.0.0.0”)对应于当前主机；IP地址中的每一个字节都为1的IP地址(“255.255.255.255”)是当前子网的广播地址；IP地址中凡是以“llll0”的地址都留着将来作为特殊用途使用；IP地址中不能以十进制“127”作为开头，127.x.x.x用于回路测试，同时网络ID的第一个6位组也不能全置为“0”，全“0”表示本地网络。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;三、IP的寻址规则　&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;　　1.网络寻址规则 &lt;/p&gt;&lt;p&gt;　　A、 网络地址必须唯一。 &lt;/p&gt;&lt;p&gt;　　B、 网络标识不能以数字127开头。在A类地址中，数字127保留给内部回送函数。 &lt;/p&gt;&lt;p&gt;　　C、 网络标识的第一个字节不能为255。数字255作为广播地址。 &lt;/p&gt;&lt;p&gt;　　D、 网络标识的第一个字节不能为“0”，“0”表示该地址是本地主机，不能传送。 &lt;/p&gt;&lt;p&gt;　　2.主机寻址规则 &lt;/p&gt;&lt;p&gt;　　A、主机标识在同一网络内必须是唯一的。 &lt;/p&gt;&lt;p&gt;　　B、主机标识的各个位不能都为“1”，如果所有位都为“1”，则该机地址是广播地址，而非主机的地址。 &lt;/p&gt;&lt;p&gt;　　C、主机标识的各个位不能都为“0”，如果各个位都为“0”，则表示“只有这个网络”，而这个网络上没有任何主机。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;四、IP子网掩码概述　&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;　　1.子网掩码的概念 &lt;/p&gt;&lt;p&gt;　　子网掩码是一个32位地址，用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。 &lt;/p&gt;&lt;p&gt;　　2.确定子网掩码数 &lt;/p&gt;&lt;p&gt;　　用于子网掩码的位数决定于可能的子网数目和每个子网的主机数目。在定义子网掩码前，必须弄清楚本来使用的子网数和主机数目。 &lt;/p&gt;&lt;p&gt;　　定义子网掩码的步骤为： &lt;/p&gt;&lt;p&gt;　　A、确定哪些组地址归我们使用。比如我们申请到的网络号为 “210.73.a.b”，因为c类网络从192~223，所以该网络地址为c类IP地址，网络标识为“210.73”，主机标识为“a.b”。 &lt;/p&gt;&lt;p&gt;　　B、根据我们现在所需的子网数以及将来可能扩充到的子网数，用宿主机的一些位来定义子网掩码。比如我们现在需要12个子网，将来可能需要16个。用第三个字节的前四位确定子网掩码。前四位都置为“1”，即第三个字节为“11110000”，这个数我们暂且称作新的二进制子网掩码。 &lt;/p&gt;&lt;p&gt;　　C、把对应初始网络的各个位都置为“1”，即前两个字节都置为“1”，第四个字节都置为“0”，则子网掩码的间断二进制形式为：“11111111.11111111.11110000.00000000” &lt;/p&gt;&lt;p&gt;　　D、把这个数转化为间断十进制形式为：“255.255.240.0”&lt;/p&gt;&lt;p&gt; &amp;nbsp; &amp;nbsp;&amp;nbsp; 也可以这么计算，因为是C类网络，所以掩码的最后一位肯定是0，从255往下算16个C类网络，应该到240就够了，所以掩码应该是255.255.240.0。&lt;br /&gt;
 &lt;/p&gt;&lt;p&gt;　　这个数为该网络的子网掩码。 &lt;/p&gt;&lt;p&gt;　　3.IP掩码的标注 &lt;/p&gt;&lt;p&gt;　　A、无子网的标注法 &lt;/p&gt;&lt;p&gt;　　对无子网的IP地址，可写成主机号为0的掩码。如IP地址210.73.140.5，掩码为255.255.255.0，也可以缺省掩码，只写IP地址。 &lt;/p&gt;&lt;p&gt;　　B、有子网的标注法 &lt;/p&gt;&lt;p&gt;　　有子网时，一定要二者配对出现。以C类地址为例。 &lt;/p&gt;&lt;p&gt;　　1.IP地址中的前3个字节表示网络号，后一个字节既表明子网号，又说明主机号，还说明两个IP地址是否属于一个网段。如果属于同一网络区间，这两个地址间的信息交换就不通过路由器。如果不属同一网络区间，也就是子网号不同，两个地址的信息交换就要通过路由器进行。例如：对于IP地址为210.73.140.5的主机来说，其主机标识为00000101，对于IP地址为210.73.140.16的主机来说它的主机标识为00010000，以上两个主机标识的前面三位全是000，说明这两个IP地址在同一个网络区域中。 &lt;/p&gt;&lt;p&gt;　　2.掩码的功用是说明有子网和有几个子网，但子网数只能表示为一个范围，不能确切讲具体几个子网，掩码不说明具体子网号，有子网的掩码格式(对C类地址):主机标识前几位为子网号，后面不写主机，全写0。 &lt;/p&gt;&lt;p&gt;　　&lt;strong&gt;五、IP的其他事项　&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;　　1.一般国际互联网信息中心在分配IP地址时是按照网络来分配的，因此只有说到网络地址时才能使用A类、B类、C类的说法； &lt;/p&gt;&lt;p&gt;　　2.在分配网络地址时，网络标识是固定的，而计算机标识是可以在一定范围内变化的，下面是三类网络地址的组成形式： &lt;/p&gt;&lt;p&gt;　　A类地址：73.0.0.0 &lt;/p&gt;&lt;p&gt;　　B类地址：160.153.0.0 &lt;/p&gt;&lt;p&gt;　　C类地址：210.73.140.0 &lt;/p&gt;&lt;p&gt;　　上述中的每个0均可以在0~255之间进行变化。 &lt;/p&gt;&lt;p&gt;　　3.因为IP地址的前三位数字已决定了一个IP地址是属于何种类型的网络，所以A类网络地址将无法再分成B类IP地址，B类IP地址也不能再分成C类IP地址。 &lt;/p&gt;&lt;p&gt;　　4.在谈到某一特定的计算机IP地址时不宜使用A类、B类、C类的说法，但可以说主机地址是属于哪一个A类、B类、C类网络了。 &lt;/p&gt;&lt;p&gt;　　通过上面的学习，大家对IP地址肯定有了了解。有了IP地址大家就可以发送电子邮件了，并且可以获得Internet网上的其他信息，例如可以获得Internet上的WWW服务、BBS服务、FTP服务等等。&lt;/p&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>flickr,免费相册</title>
      <link>https://wdicc.com/flickr-free-photo-album/</link>
      <pubDate>Thu, 23 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/flickr-free-photo-album/</guid>
      <description>
其实很早就知道flickr了，不过是发现那上面的图片似乎只能看小图，不能看大图，那多郁闷。刚才又去看了一下，发现可以看大图了，哇哇。。。这个真不错，推荐大家使用。&lt;br /&gt;

比较详细的使用说明&lt;br /&gt;
&lt;a href=&#34;http://www.mugou.com/user3/13903/archives/2006/8374.shtml&#34;&gt;http://www.mugou.com/user3/13903/archives/2006/8374.shtml&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>L3 switch</title>
      <link>https://wdicc.com/l3-switch/</link>
      <pubDate>Thu, 23 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/l3-switch/</guid>
      <description>
http://vbb3.twftp.org/archive/index.php/t-4016.html&lt;br /&gt;

一般常用的交換器 Switch 是屬於第二層交換器 Layer 2 Switch，這種交換器是利用 OSI 第二層 MAC 位址的資訊來進行資料交換，它可以記憶學習第一個 Port 連接的 MAC 位址，透過 MAC 位址及封包目的的位址的辨別，L2 Switch 會將該封包直接傳送至連接目的地的 Port，而不會將該封包傳送到其他的 Port。若並無此目的地 IP 的資訊時，則 L2 Switch 會廣播至所有的連接埠上，待目的 IP 回應時，將新的連接埠對應學習起來，那麼下次就不用廣播而直接傳送。&lt;br /&gt;

如果再把路由表的功能加入 L2 Switch，那麼它就會變成 L3 Switch，可以為 VLAN 建立適當的路由表，讓效能更加提昇。L3 的交換器又稱為 IP Switch 或 Switch Router，透過專屬的 ASIC 晶片來解析第三層表頭（如 IP Header）以達到傳送目的，因此通常可以提高到每秒百萬封包的效能以及數十個高速乙太網路連接埠之容量。L3 Switch 的路由表可以對 VLAN 做更有效的管制，讓廣播封包不會無限制的傳送。&lt;br /&gt;
http://140.111.152.100/archives/2004_09.html&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>LDAP,Lightweight Directory Access Protocol</title>
      <link>https://wdicc.com/ldaplightweight-directory-access-protocol/</link>
      <pubDate>Thu, 23 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ldaplightweight-directory-access-protocol/</guid>
      <description>&lt;strong&gt;2 LDAP目录的优势&lt;/strong&gt;&lt;br /&gt;

使用Win下面的IIS＋acess（or sql server），或者Linux下面的Apache＋mysql（or oracle）之类的后台，这种数据库也可以针对某个用户对数据库、表等作一些权限设置，最低只能到表一级，不能控制到记录一级。并且使用数据库需要不停的对数据类型做验证等，也会导致系统的整体性能一定程度的降低。&lt;br /&gt;

目录主要面向数据的查询服务，查询操作比修改操作多很多时，适宜使用目录服务。LDAP协议是跨平台的一个&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>tt 1.0.1中CODE</title>
      <link>https://wdicc.com/code-in-tt/</link>
      <pubDate>Thu, 23 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/code-in-tt/</guid>
      <description>
借鉴的是tt 0.9.6中的方法。&lt;br /&gt;

修改blog目录下的&lt;br /&gt;

category/index.php&lt;br /&gt;
archive/index.php,item.php&lt;br /&gt;
entry/index.php&lt;br /&gt;
search/index.php&lt;br /&gt;
tag/index.php&lt;br /&gt;
keylog/index.php&lt;br /&gt;
notice/index.php,item.php&lt;br /&gt;
index.php&lt;br /&gt;
item.php&lt;br /&gt;

文件，找到function bindTags($id,$content)这个函数，其实所有包含这个函数的都需要做如下修改，不知道为啥不单独将这个函数写到一个文件，修改起来好麻烦。&lt;br /&gt;

在这个函数的第一行前面添&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>WSUS,Microsoft Windows Server Update Services</title>
      <link>https://wdicc.com/wsusmicrosoft-windows-server-update-services/</link>
      <pubDate>Thu, 23 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/wsusmicrosoft-windows-server-update-services/</guid>
      <description>&lt;strong&gt;3 wsus需要的配置&lt;/strong&gt;&lt;br /&gt;

wsus服务器通过80和443端口从Mircosoft update获取更新，WSUS服务器到以下Web站点的HTTP/HTTPS获取更新。&lt;br /&gt;

http://windowsupdate.microsoft.com &lt;br /&gt;
http://*.windowsupdate.microsoft.com &lt;br /&gt;
https://*.windowsupdate.microsoft.com &lt;br /&gt;
http://*.update.microsoft.com &lt;br /&gt;
https://*.update.microsoft.com &lt;br /&gt;
http://*.windowsupdate.com &lt;br /&gt;
http://download.windowsupdate.com &lt;br /&gt;
http://download.microsoft.com &lt;br /&gt;
http://*.download.windowsupdate.com &lt;br /&gt;
http://wustat.windows.com &lt;br /&gt;
http://ntservicepack.microsoft.com &lt;br /&gt;

WSUS与IIS服务器结合创建Web站点来实现更新程序的分发，可以配置WSUS Web站点共享使用默认Web站点（服务端口为TCP 80）或者使用其他的端口为客户端计算机提供服务。在安装WSUS服务器时，如果不选择使用默认的Web站点，那么WSUS将创建自定义的Web站点并在TCP端口8530侦听HTTP连接请求，建议使用默认的Web站点。 &lt;br /&gt;

&lt;strong&gt;4 wsus客户端的配置&lt;/strong&gt;&lt;br /&gt;

WSUS服务器要求客户端计算机上运行WSUS客户端，WSUS客户端可以在打过SP3及以上补丁的Windows 2000全系列产品、Windows XP全系列产品、Windows server 2003全系列产品上运行，换言之，WSUS服务器支持运行这些操作系统的客户端计算机从其获得更新程序。其中Windows XP SP2以及Windows server 2003 SP1已经内建了WSUS客户端；而其他的操作系统中除了没有安装过任何SP的Windows XP外，内建的自动更新组件均具有自我更新特性，可以通过WSUS提供的自我更新程序包自动更新至WSUS客户端；对于没有安装过任何SP的Windows XP，你必须安装SUS客户端，从而通过SUS客户端来实现自我更新至WSUS客户端。 &lt;br /&gt;

由于客户端计算机的自动更新组件只能通过服务端口TCP 80来实现自我更新，因此，如果你在安装WSUS时不使用默认的Web站点而自定义一个Web站点，你也必须在侦听TCP 80端口的Web站点中创建一个名为Selfupdate的虚拟目录来为客户端计算机提供自我更新程序包，否则非WSUS客户端计算机不能正常的进行自我更新，从而不能从WSUS服务器获取更新程序。 &lt;br /&gt;

&lt;strong&gt;5 链式WSUS服务器环境&lt;/strong&gt;&lt;br /&gt;

WSUS服务器不仅仅可以从Windows Update中获取更新程序，也可以从其他WSUS服务器中获取更新程序。所以大规模的企业可以配置多台wsus服务器，形成链式WSUS服务器环境。&lt;br /&gt;

&lt;strong&gt;6 wsus的工作模式&lt;/strong&gt;&lt;br /&gt;

wsus服务器支持两种工作模式：集中管理和分布管理。&lt;br /&gt;

集中管理模式的WSUS服务器采用独立管理服务器和复制服务器这两种角色，它的含义是单个服务器（主服务器）作为独立管理服务器，而一个或多个从属服务器（复制服务器）只是复制主服务器上的数据。&lt;br /&gt;

分布管理模式只允许你配置每台WSUS服务器为独立管理服务器。&lt;br /&gt;

&lt;strong&gt;7 wsus使用的数据库&lt;/strong&gt;&lt;br /&gt;

WSUS数据库存储以下信息：WSUS服务器配置信息；用于描述更新程序作用的元数据；客户端计算机、更新程序信息以及客户端计算机所进行的更新情况。每个WSUS服务器需要自己的数据库，如果具有多个WSUS服务器，必须具有多个WSUS数据库。&lt;br /&gt;

&lt;strong&gt;8 更新存储位置&lt;/strong&gt;&lt;br /&gt;

更新可以分为两个部分：元数据和更新文件。元数据存储在wsus数据库中，而更新文件可以存储在Microsoft update服务器上，或者存储在本地wsus服务器。第一种方式wsus部署更新之后，客户端从Microsoft update服务器上面获取更新，这样可以节省本地服务器的空间，但是客户端较多的时候，更新时会占用大量带宽。第二种方式为默认选项，wsus下载更新后存储在本地，客户端更新时从wsus服务器下载。&lt;br /&gt;

&lt;strong&gt;9 性能相关的设置&lt;/strong&gt;&lt;br /&gt;

wsus允许设置为只有在批准更新时才下载更新文件，还可以对更新做过滤，只下载需要的更新。还有一个快速更新的设置，设置之后占用的外部带宽会增加，而内部带宽会减少。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>测试一下</title>
      <link>https://wdicc.com/a-test/</link>
      <pubDate>Thu, 23 Mar 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-test/</guid>
      <description>
在xh这里蹭了一块地方，哈哈哈，不知道能蹭多久。先测试一下有没有问题。yahoo的dns修改了2天才生效，这个郁闷啊。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>可能是最后一场雪了吧</title>
      <link>https://wdicc.com/may-be-last-snow/</link>
      <pubDate>Tue, 28 Feb 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/may-be-last-snow/</guid>
      <description>
早上起来，看见外面白茫茫的，以为是下大雾呢，出门才发现，原来地上也是白茫茫一片。阴了好几天了，总算下来雪了。上了公车，看到路边的汽车不管是黑色的红色的，隔着有水汽的车窗往外看，都是白色的了，呵呵。&lt;br /&gt;


[##_Gallery|1290633992.jpg||1031278377.jpg||width=&#34;449&#34; height=&#34;339&#34;|_##]&lt;br /&gt;
顺便测试一下tt1.0的新功能。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>刷子有自留地了</title>
      <link>https://wdicc.com/website-for-skaters/</link>
      <pubDate>Mon, 20 Feb 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/website-for-skaters/</guid>
      <description>
自从花园限制ip之后，刚好也赶上了冬天，不适和活动，所以一直没有和组织联系了。这下好了，&lt;a href=&#34;http://grisword.com/bbs/index.php&#34; target=&#34;_blank&#34;&gt;自留地&lt;/a&gt;开通了。欢迎刷刷爱好者来加入。 {{kaixin}}&lt;br /&gt;

另外，也得考虑要搞搞活动了，春游或者刷刷。嗯。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我结婚了</title>
      <link>https://wdicc.com/get-married/</link>
      <pubDate>Fri, 17 Feb 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/get-married/</guid>
      <description>
2006.2.14是我的结婚0周年纪念日。&lt;br /&gt;

去年就计划着情人节去领证，这下子，成事实了，呵呵。从登记处出来后，实在是按耐不住心头的兴奋，不过不善言辞的我也没有把内心的这种激动表现出来，而是和老婆开玩笑的说：&#34;这下子你完蛋了，以后都跑不掉了，哈哈哈&#34;，老婆郁闷的冲我哼了几声，呵呵。&lt;br /&gt;

那天登记的人特别多，前一天xh还建议我们早点去的，紧赶慢赶结果到了那里已经快11点了都。排了一个号，351，也就是说，前面还有300多对比我们到的早.....后来有一个9电多来的人告诉我们，他们的号也是300左右，这样我们心里还平衡一点了，不知道领1号的那个人是什么时候到的。&lt;br /&gt;

在那里呆了一会，出去逛了一会，再去看一会，得出来一个小时只能弄50对的结论，算一下，我们最早也要下午5点才能领上了。在双安和双安对面的一个胡同里面的小店逛了好几圈，等啊等，等的我都困了。&lt;br /&gt;

不过还好，在那个胡同里面发现一个卖埃及银饰的小店，进去订做了两个戒指，上面刻的都是古埃及的象形文字，说是象形，其实不对着那个表铁定认不出来。&lt;br /&gt;

领证的人里面有一个mm特别胖，而那个gg长的体型还算可以吧，身高也够，我和老婆合计这个gg八成是被逼的，呵呵。其中还有一个30、40岁的一对，好像有一方还领着一个小孩，小孩长的还不错，呵呵。一对一对领完证一般都是一人拿一个证，边走边看。我和老婆领完了，我拿着两个证出来了，老婆也不找我要一个，不知道是不是怕看到那么多人羞的不行。&lt;br /&gt;

领证之前就讨论了一个问题，以后管她妈叫啥啊？这个问题还得问问xh怎么处理的。&lt;br /&gt;

这几天老婆说我变得不如以前对她好了，呵呵。其实怎么可能，现在是名副其实的老婆了，只会对你更好，怎么会不如以前呢？新年的工作压力比较大，结婚之后更加有了压力，所以也要体谅一下我，我会努力让老婆过上幸福日子的。&lt;br /&gt;

今天早上坐车的时候，问老婆我们什么时候办婚宴啊，老婆掐指头算了算，说2010年吧。。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>学妹，你那里有CD吗? (from ptt)</title>
      <link>https://wdicc.com/a-joke-4/</link>
      <pubDate>Tue, 17 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-4/</guid>
      <description>我一时慌乱，即时补上∶&#34;D吗?&#34;&lt;br /&gt;





















学妹∶&#34;嗯，差不多！&#34;&lt;br /&gt;

真强者学妹....XD&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>短信zz</title>
      <link>https://wdicc.com/a-joke-5/</link>
      <pubDate>Tue, 17 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-5/</guid>
      <description>
夜，夫于床看书，不时伸手摸妻两腿之处，妻脱衣撒娇曰：做否？夫摇头言：不做，湿湿手，好翻书。谨以此寓言致吾兄弟，望勉励苦读，不要沉迷女色中。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>caphit qmail 配置</title>
      <link>https://wdicc.com/caphit-qmail-conf/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/caphit-qmail-conf/</guid>
      <description>
参考网址&lt;br /&gt;
http://lifewithqmail.org(中文版http://lifewithqmail.org/LWQ-CN.html)&lt;br /&gt;
http://qmail.te8.com/rpms/glibc-2.3.1/(patch下载地址)&lt;br /&gt;
http://www.fehcom.de/qmail/qmail.html&lt;br /&gt;
http://www.pipeline.com.au/staff/mbowe/isp/vpopmail-mysql.htm&lt;br /&gt;
http://bbs.chinaunix.net/forum/viewtopic.php?t=254662&lt;br /&gt;

ucspi-tcp&lt;br /&gt;
http://cr.yp.to/ucspi-tcp.html&lt;br /&gt;
ucspi-tcp-0.88.a_record.patch，ucspi-tcp-0.88.errno.patch，ucspi-tcp-0.88.nodefaultrbl.patch&lt;br /&gt;
（或者）ucspi-tcp-0.88.a_record.patch，ucspi-tcp-0.88.errno.patch，ucspi-tcp-0.88.nobase.patch&lt;br /&gt;
patch -d ucspi-tcp.xxx -p1 &amp;lt; ucspi-tcp-xxx.patch&lt;br /&gt;
make&amp;amp;&amp;amp;make setup check&lt;br /&gt;

daemontools&lt;br /&gt;
http://cr.yp.to/daemontools.html&lt;br /&gt;
daemontools-0.76.errno.patch&lt;br /&gt;
package/install&lt;br /&gt;
Adding svscanboot to inittab...init should start svscan now.&lt;br /&gt;

cmd5checkpw&lt;br /&gt;
http://www.fehcom.de/qmail/auth/cmd5checkpw-030_tgz.bin&lt;br /&gt;
make&amp;amp;&amp;amp;make setup&lt;br /&gt;

qmail 1.03&lt;br /&gt;
http://cr.yp.to/qmail.html&lt;br /&gt;
http://www.fehcom.de/qmail/qmail.html&lt;br /&gt;
http://www.fehcom.de/qmail/spamcontrol/spamcontrol-2311_tgz.bin&lt;br /&gt;
tar zxvf spamcontrol-2311_tgz.bin&lt;br /&gt;
编辑conf-spamcontrol&lt;br /&gt;
建立用户组&lt;br /&gt;
groupadd nofiles&lt;br /&gt;
useradd -g nofiles -d /var/qmail qmaild -s /sbin/nologin&lt;br /&gt;
useradd -g nofiles -d /var/qmail qmaill -s /sbin/nologin&lt;br /&gt;
useradd -g nofiles -d /var/qmail qmailp -s /sbin/nologin&lt;br /&gt;
useradd -g nofiles -d /var/qmail/alias alias -s /sbin/nologin&lt;br /&gt;
groupadd qmail&lt;br /&gt;
useradd -g qmail -d /var/qmail qmailq -s /sbin/nologin&lt;br /&gt;
useradd -g qmail -d /var/qmail qmailr -s /sbin/nologin&lt;br /&gt;
useradd -g qmail -d /var/qmail qmails -s /sbin/nologin&lt;br /&gt;
./install_spamcontrol.sh&lt;br /&gt;
make setup check&lt;br /&gt;
./config-fast xxxx.com&lt;br /&gt;

vpopmail&lt;br /&gt;
http://sourceforge.net/projects/vpopmail/&lt;br /&gt;
groupadd vchkpw;useradd vpopmail&lt;br /&gt;
CREATE DATABASE vpopmail;&lt;br /&gt;
GRANT select,insert,update,delete,create,drop ON vpopmail.* TO vpopmailuser@localhost IDENTIFIED BY &#39;vpoppasswd&#39;;&lt;br /&gt;
配置(用igenus需要enable-many-domains)&lt;br /&gt;
./configure   --enable-logging=p&lt;br /&gt;
--enable-domain-quotas=y&lt;br /&gt;
--enable-auth-module=mysql&lt;br /&gt;
--enable-tcprules-prog=/usr/local/bin/tcprules&lt;br /&gt;
--enable-tcpserver-file=/etc/tcp.smtp&lt;br /&gt;
--disable-mysql-limits&lt;br /&gt;
--enable-mysql-logging&lt;br /&gt;
--enable-many-domains&lt;br /&gt;
make&amp;amp;&amp;amp;make install-strip&lt;br /&gt;
vi vpopmail.mysql&lt;br /&gt;
vi vlimits.default&lt;br /&gt;
echo &#34;xxxx.com&#34; &amp;gt; /home/vpopmail/etc/defaultdomain&lt;br /&gt;
vi /home/vpopmail/domains/.quotawarn.msg&lt;br /&gt;
From: CAPH Postmaster&lt;br /&gt;
&lt;postmaster@xxx.com&gt; Reply-To: postmaster@xxx.com&lt;br /&gt;
To: SomeCompany User:;&lt;br /&gt;
Subject: Mail quota warning&lt;br /&gt;
Mime-Version: 1.0&lt;br /&gt;
Content-Type: text/plain; charset=iso-8859-1&lt;br /&gt;
Content-Transfer-Encoding: 7bit&lt;/postmaster@xxx.com&gt;&lt;br /&gt;

Your mailbox on the server is now more than 90% full.&lt;br /&gt;

So that you can continue to receive mail,&lt;br /&gt;
you need to remove some messages from your mailbox.&lt;br /&gt;

If you require assistance with this,&lt;br /&gt;
please contact our support department :&lt;br /&gt;

email : postmaster@xxx.com&lt;br /&gt;
Tel   : 010 68372647&lt;br /&gt;
echo &#34;Message rejected. Not enough storage space in user&#39;s mailbox to accept message.&#34; &amp;gt; /home/vpopmail/domains/.over-quota.msg&lt;br /&gt;

/var/qmail/rc&lt;br /&gt;
vi /var/qmail/rc&lt;br /&gt;
#!/bin/sh&lt;br /&gt;

# Using stdout for logging&lt;br /&gt;
# Using control/defaultdelivery from qmail-local to deliver messages by default&lt;br /&gt;

exec env - PATH=&#34;/var/qmail/bin:$PATH&#34;&lt;br /&gt;
qmail-start &#34;`cat /var/qmail/control/defaultdelivery`&#34;&lt;br /&gt;

echo ./Maildir/ &amp;gt;/var/qmail/control/defaultdelivery&lt;br /&gt;
chmod 755 /var/qmail/rc&lt;br /&gt;
mkdir /var/log/qmail&lt;br /&gt;

/var/qmail/bin/qmailctl&lt;br /&gt;

vi /var/qmail/bin/qmailctl&lt;br /&gt;
#!/bin/sh&lt;br /&gt;

# description: the qmail MTA&lt;br /&gt;

PATH=/var/qmail/bin:/bin:/usr/bin:/usr/local/bin:/usr/local/sbin&lt;br /&gt;
export PATH&lt;br /&gt;
LOG_AUTH=1&lt;br /&gt;
export LOG_AUTH&lt;br /&gt;

QMAILDUID=`id -u qmaild`&lt;br /&gt;
NOFILESGID=`id -g qmaild`&lt;br /&gt;

case &#34;$1&#34; in&lt;br /&gt;
start)&lt;br /&gt;
echo &#34;Starting qmail&#34;&lt;br /&gt;
if svok /service/qmail-send ; then&lt;br /&gt;
svc -u /service/qmail-send /service/qmail-send/log&lt;br /&gt;
else&lt;br /&gt;
echo &#34;qmail-send supervise not running&#34;&lt;br /&gt;
fi&lt;br /&gt;
if svok /service/qmail-smtpd ; then&lt;br /&gt;
svc -u /service/qmail-smtpd /service/qmail-smtpd/log&lt;br /&gt;
else&lt;br /&gt;
echo &#34;qmail-smtpd supervise not running&#34;&lt;br /&gt;
fi&lt;br /&gt;
if svok /service/qmail-pop3d ; then&lt;br /&gt;
svc -u /service/qmail-pop3d /service/qmail-pop3d/log&lt;br /&gt;
else&lt;br /&gt;
echo qmail-pop3d supervise not running&lt;br /&gt;
fi&lt;br /&gt;
if [ -d /var/lock/subsys ]; then&lt;br /&gt;
touch /var/lock/subsys/qmail&lt;br /&gt;
fi&lt;br /&gt;
;;&lt;br /&gt;
stop)&lt;br /&gt;
echo &#34;Stopping qmail...&#34;&lt;br /&gt;
echo &#34;  qmail-smtpd&#34;&lt;br /&gt;
svc -d /service/qmail-smtpd /service/qmail-smtpd/log&lt;br /&gt;
echo &#34;  qmail-smtpd&#34;&lt;br /&gt;
svc -d /service/qmail-smtpd /service/qmail-smtpd/log&lt;br /&gt;
echo &#34;  qmail-send&#34;&lt;br /&gt;
svc -d /service/qmail-send /service/qmail-send/log&lt;br /&gt;
echo &#34;  qmail-pop3d&#34;&lt;br /&gt;
svc -d /service/qmail-pop3d /service/qmail-pop3d/log&lt;br /&gt;
if [ -f /var/lock/subsys/qmail ]; then&lt;br /&gt;
rm /var/lock/subsys/qmail&lt;br /&gt;
fi&lt;br /&gt;
;;&lt;br /&gt;
stat)&lt;br /&gt;
svstat /service/qmail-send&lt;br /&gt;
svstat /service/qmail-send/log&lt;br /&gt;
svstat /service/qmail-smtpd&lt;br /&gt;
svstat /service/qmail-smtpd/log&lt;br /&gt;
svstat /service/qmail-pop3d&lt;br /&gt;
svstat /service/qmail-pop3d/log&lt;br /&gt;
qmail-qstat&lt;br /&gt;
;;&lt;br /&gt;
doqueue|alrm|flush)&lt;br /&gt;
echo &#34;Flushing timeout table and sending ALRM signal to qmail-send.&#34;&lt;br /&gt;
/var/qmail/bin/qmail-tcpok&lt;br /&gt;
svc -a /service/qmail-send&lt;br /&gt;
;;&lt;br /&gt;
queue)&lt;br /&gt;
qmail-qstat&lt;br /&gt;
qmail-qread&lt;br /&gt;
;;&lt;br /&gt;
reload|hup)&lt;br /&gt;
echo &#34;Sending HUP signal to qmail-send.&#34;&lt;br /&gt;
svc -h /service/qmail-send&lt;br /&gt;
;;&lt;br /&gt;
pause)&lt;br /&gt;
echo &#34;Pausing qmail-send&#34;&lt;br /&gt;
svc -p /service/qmail-send&lt;br /&gt;
echo &#34;Pausing qmail-smtpd&#34;&lt;br /&gt;
svc -p /service/qmail-smtpd&lt;br /&gt;
echo &#34;Pausing qmail-pop3d&#34;&lt;br /&gt;
svc -p /service/qmail-smtpd&lt;br /&gt;
echo &#34;Pausing qmail-pop3d&#34;&lt;br /&gt;
svc -p /service/qmail-pop3d&lt;br /&gt;
;;&lt;br /&gt;
cont)&lt;br /&gt;
echo &#34;Continuing qmail-send&#34;&lt;br /&gt;
svc -c /service/qmail-send&lt;br /&gt;
echo &#34;Continuing qmail-smtpd&#34;&lt;br /&gt;
svc -c /service/qmail-smtpd&lt;br /&gt;
echo &#34;Continuing qmail-pop3d&#34;&lt;br /&gt;
svc -c /service/qmail-pop3d&lt;br /&gt;
;;&lt;br /&gt;
restart)&lt;br /&gt;
echo &#34;Restarting qmail:&#34;&lt;br /&gt;
echo &#34;* Stopping qmail-smtpd.&#34;&lt;br /&gt;
svc -d /service/qmail-smtpd /service/qmail-smtpd/log&lt;br /&gt;
echo &#34;* Sending qmail-send SIGTERM and restarting.&#34;&lt;br /&gt;
svc -t /service/qmail-send /service/qmail-send/log&lt;br /&gt;
echo &#34;* Restarting qmail-smtpd.&#34;&lt;br /&gt;
svc -u /service/qmail-smtpd /service/qmail-smtpd/log&lt;br /&gt;
echo &#34;* Restarting qmail-pop3d.&#34;&lt;br /&gt;
svc -t /service/qmail-pop3d /service/qmail-pop3d/log&lt;br /&gt;
;;&lt;br /&gt;
cdb)&lt;br /&gt;
tcprules /etc/tcp.smtp.cdb /etc/tcp.smtp.tmp &amp;lt; /etc/tcp.smtp&lt;br /&gt;
tcprules /etc/tcp.pop3.cdb /etc/tcp.pop3.tmp &amp;lt; /etc/tcp.pop3&lt;br /&gt;
chmod 644 /etc/tcp.smtp.cdb&lt;br /&gt;
chmod 644 /etc/tcp.pop3.cdb&lt;br /&gt;
echo &#34;Reloaded /etc/tcp.smtp.&#34;&lt;br /&gt;
echo &#34;Reloaded /etc/tcp.pop3.&#34;&lt;br /&gt;
;;&lt;br /&gt;
help)&lt;br /&gt;
cat &amp;lt;   stop -- stops mail service (smtp connections refused, nothing goes out)&lt;br /&gt;
start -- starts mail service (smtp connection accepted, mail can go out)&lt;br /&gt;
pause -- temporarily stops mail service (connections accepted, nothing leaves)&lt;br /&gt;
cont -- continues paused mail service&lt;br /&gt;
stat -- displays status of mail service&lt;br /&gt;
cont -- continues paused mail service&lt;br /&gt;
stat -- displays status of mail service&lt;br /&gt;
cdb -- rebuild the tcpserver cdb file for smtp&lt;br /&gt;
restart -- stops and restarts smtp, sends qmail-send a TERM &amp;amp; restarts it&lt;br /&gt;
doqueue -- schedules queued messages for immediate delivery&lt;br /&gt;
reload -- sends qmail-send HUP, rereading locals and virtualdomains&lt;br /&gt;
queue -- shows status of queue&lt;br /&gt;
alrm -- same as doqueue&lt;br /&gt;
flush -- same as doqueue&lt;br /&gt;
hup -- same as reload&lt;br /&gt;
HELP&lt;br /&gt;
;;&lt;br /&gt;
*)&lt;br /&gt;
echo &#34;Usage: $0 {start|stop|restart|doqueue|flush|reload|stat|pause|cont|cdb|queue|help}&#34;&lt;br /&gt;
exit 1&lt;br /&gt;
;;&lt;br /&gt;
esac&lt;br /&gt;

exit 0&lt;br /&gt;

chmod 755 /var/qmail/bin/qmailctl&lt;br /&gt;
ln -s /var/qmail/bin/qmailctl /usr/bin&lt;br /&gt;
echo 20 &amp;gt; /var/qmail/control/concurrencyincoming&lt;br /&gt;
chmod 644 /var/qmail/control/concurrencyincoming&lt;br /&gt;

supervise 脚本&lt;br /&gt;
mkdir -p /var/qmail/supervise/qmail-send/log&lt;br /&gt;
mkdir -p /var/qmail/supervise/qmail-smtpd/log&lt;br /&gt;
mkdir -p /var/qmail/supervise/qmail-pop3d/log&lt;br /&gt;

qmail-send&lt;br /&gt;

/var/qmail/supervise/qmail-send/run&lt;br /&gt;

#!/bin/sh&lt;br /&gt;
exec /var/qmail/rc&lt;br /&gt;

/var/qmail/supervise/qmail-send/log/run&lt;br /&gt;

#!/bin/sh&lt;br /&gt;
exec /usr/local/bin/setuidgid qmaill /usr/local/bin/multilog t /var/log/qmail&lt;br /&gt;

qmail-smtpd&lt;br /&gt;

/var/qmail/supervise/qmail-smtpd/run&lt;br /&gt;

#!/bin/sh&lt;br /&gt;

#QMAILDUID=`id -u qmaild`&lt;br /&gt;
NOFILESGID=`id -g qmaild`&lt;br /&gt;
QMAILDUID=`id -u vpopmail`&lt;br /&gt;
QMAILDGID=`id -g vpopmail`&lt;br /&gt;

MAXSMTPD=`cat /var/qmail/control/concurrencyincoming`&lt;br /&gt;
LOCAL=`head -1 /var/qmail/control/me`&lt;br /&gt;
if [ -z &#34;$QMAILDUID&#34; -o -z &#34;$NOFILESGID&#34; -o -z &#34;$MAXSMTPD&#34; -o -z &#34;$LOCAL&#34; ]; then&lt;br /&gt;
echo QMAILDUID, NOFILESGID, MAXSMTPD, or LOCAL is unset in&lt;br /&gt;
echo /var/qmail/supervise/qmail-smtpd/run&lt;br /&gt;
exit 1&lt;br /&gt;
fi&lt;br /&gt;
if [ ! -f /var/qmail/control/rcpthosts ]; then&lt;br /&gt;
echo &#34;No /var/qmail/control/rcpthosts!&#34;&lt;br /&gt;
echo &#34;Refusing to start SMTP listener because it&#39;ll create an open relay&#34;&lt;br /&gt;
exit 1&lt;br /&gt;
fi&lt;br /&gt;
exec /usr/local/bin/softlimit -m 30000000&lt;br /&gt;
/usr/local/bin/tcpserver -v -H -R -l &#34;$LOCAL&#34; -x /etc/tcp.smtp.cdb -c &#34;$MAXSMTPD&#34;&lt;br /&gt;
-u &#34;$QMAILDUID&#34; -g &#34;$QMAILDGID&#34; 0 smtp /usr/local/bin/rblsmtpd -r relays.ordb.org&lt;br /&gt;
/var/qmail/bin/qmail-smtpd&lt;br /&gt;
/home/vpopmail/bin/vchkpw /bin/true /bin/cmd5checkpw /bin/true 2&amp;gt;&amp;amp;1&lt;br /&gt;

/var/qmail/supervise/qmail-smtpd/log/run&lt;br /&gt;

#!/bin/sh&lt;br /&gt;
exec /usr/local/bin/setuidgid qmaill /usr/local/bin/multilog t&lt;br /&gt;
/var/log/qmail/smtpd&lt;br /&gt;

qmail-pop3d&lt;br /&gt;

/var/qmail/supervise/qmail-pop3d/run&lt;br /&gt;

#!/bin/sh&lt;br /&gt;

LOCAL=`head -1 /var/qmail/control/me`&lt;br /&gt;

exec /usr/local/bin/softlimit -m 30000000&lt;br /&gt;
/usr/local/bin/tcpserver -x /etc/tcp.pop3.cdb&lt;br /&gt;
-H -l $LOCAL&lt;br /&gt;
-v -c 20 -R 0 pop3&lt;br /&gt;
/var/qmail/bin/qmail-popup $LOCAL&lt;br /&gt;
/home/vpopmail/bin/vchkpw /var/qmail/bin/qmail-pop3d Maildir 2&amp;gt;&amp;amp;1&lt;br /&gt;

/var/qmail/supervise/qmail-pop3d/log/run&lt;br /&gt;

#!/bin/sh&lt;br /&gt;
exec /usr/local/bin/setuidgid qmaill /usr/local/bin/multilog t&lt;br /&gt;
/var/log/qmail/pop3d&lt;br /&gt;

chmod 755 /var/qmail/supervise/qmail-send/run;chmod 755 /var/qmail/supervise/qmail-send/log/run&lt;br /&gt;
chmod 755 /var/qmail/supervise/qmail-smtpd/run;chmod 755 /var/qmail/supervise/qmail-smtpd/log/run&lt;br /&gt;
chmod 755 /var/qmail/supervise/qmail-pop3d/run;chmod 755 /var/qmail/supervise/qmail-pop3d/log/run&lt;br /&gt;
mkdir -p /var/log/qmail/smtpd;chown qmaill /var/log/qmail /var/log/qmail/smtpd&lt;br /&gt;
ln -s /var/qmail/supervise/qmail-send /var/qmail/supervise/qmail-smtpd /var/qmail/supervise/qmail-pop3d /service&lt;br /&gt;
touch .qmail-root .qmail-postmaster&lt;br /&gt;
ln -s .qmail-postmaster /var/qmail/alias/.qmail-mailer-daemon&lt;br /&gt;
chmod 644 /var/qmail/alias/.qmail-root /var/qmail/alias/.qmail-postmaster&lt;br /&gt;

clamav&lt;br /&gt;
http://www.clamav.net/&lt;br /&gt;
groupadd clamav&lt;br /&gt;
useradd -g clamav -s /sbin/nologin clamav -d /tmp&lt;br /&gt;
./configure&lt;br /&gt;
make check&lt;br /&gt;
make install&lt;br /&gt;

maildrop&lt;br /&gt;

./configure&lt;br /&gt;
make;make install-strip;make install-man&lt;br /&gt;

spamassassin&lt;br /&gt;

perl Makefile.PL&lt;br /&gt;
make&lt;br /&gt;
make install&lt;br /&gt;
cp spamd/redhat-rc-script.sh /etc/init.d/spamd&lt;br /&gt;

qmail-scanner&lt;br /&gt;

groupadd qscand;useradd -g qscand -s /sbin/nologin qscand -d /tmp&lt;br /&gt;
./configure --spooldir /var/qmailscan --qmaildir /var/qmail --bindir /var/qmail/bin --qmail-queue-binary&lt;br /&gt;
/var/qmail/bin/qmail-queue  --admin postmaster --domain xxx.com --notify sender,admin --local-domains &#34;xxx.com,xxx.com.cn,xxx.com.cn&#34; --silent-viruses auto --debug yes --unzip 1&lt;br /&gt;
--block-password-protected 0 --add-dscr-hdrs 0 --archive 0 --redundant yes --log-details syslog --log-crypto 0&lt;br /&gt;
--fix-mime 2  --ignore-eol-check 0 --scanners &#34;clamscan,fast_spamassassin&#34;&lt;br /&gt;

cp qmail-scanner-queue.pl /var/qmail/bin&lt;br /&gt;
chown qscand:qscand /var/qmail/bin/qmail-scanner-queue.pl&lt;br /&gt;
chmod 4755 /var/qmail/bin/qmail-scanner-queue.pl&lt;br /&gt;
vi /etc/tcp.smtp&lt;br /&gt;

127.:allow,RELAYCLIENT=&#34;&#34;,MFDNSCHECK=&#34;&#34;,BADMIMETYPE=&#34;&#34;,RBLSMTPD=&#34;&#34;,QMAILQUEUE=&#34;/var/&lt;br /&gt;
qmail/bin/qmail-scanner-queue.pl&#34;&lt;br /&gt;

qmailctl cdb&lt;br /&gt;
qmailctl restart&lt;br /&gt;
contrib/test_installation.sh -doit测试&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>caphit web 配置</title>
      <link>https://wdicc.com/caphit-web-conf/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/caphit-web-conf/</guid>
      <description>
httpd.conf&lt;br /&gt;
ServerName caph&lt;br /&gt;
AddDefaultCharset GB2312&lt;br /&gt;
NameVirtualHost *&lt;br /&gt;

ServerAdmin webmaster@caphbook.com&lt;br /&gt;
DocumentRoot /www&lt;br /&gt;
ServerName 210.72.203.226&lt;br /&gt;

AllowOverride None&lt;br /&gt;
Options +ExecCGI&lt;br /&gt;
AddHandler cgi-script .cgi .pl&lt;br /&gt;
Order allow,deny&lt;br /&gt;
Allow from all&lt;br /&gt;

ServerAdmin webmaster@caphbook.com&lt;br /&gt;
DocumentRoot /www/caphbook&lt;br /&gt;
ServerName www.caphbook.com&lt;br /&gt;
ServerAlias caphbook.com caphbook.com.cn www.caphbook.com.cn&lt;br /&gt;
ErrorLog logs/caphbook.com-error_log&lt;br /&gt;
CustomLog logs/caphbook.com-access_log common&lt;br /&gt;

#&lt;br /&gt;
# ServerAdmin webmaster@aphit.com.cn&lt;br /&gt;
# DocumentRoot /www/caphit&lt;br /&gt;
# ServerName www.aphit.com.cn&lt;br /&gt;
# ServerAlias aphit.com.cn&lt;br /&gt;
#&lt;br /&gt;
# Options Indexes&lt;br /&gt;
#&lt;br /&gt;
#&lt;br /&gt;
#mail&lt;br /&gt;

ServerAdmin webmaster@caphbook.com&lt;br /&gt;
DocumentRoot /www/igenus&lt;br /&gt;
ServerName mail.caphbook.com&lt;br /&gt;
ServerAlias mail.caphbook.com.cn mail.aphit.com.cn&lt;br /&gt;
ErrorLog logs/mail-error_log&lt;br /&gt;
CustomLog logs/mail-access_log common&lt;br /&gt;

ssl.conf&lt;br /&gt;

此后&lt;br /&gt;
service httpd restart&lt;br /&gt;
chkconfig --level 345 httpd on&lt;br /&gt;

php.ini&lt;br /&gt;
register_globals = On&lt;br /&gt;
max_execution_time = 60 ; Maximum execution time of each script, in seconds&lt;br /&gt;
max_input_time = 120 ; Maximum amount of time each script may spend parsing request data&lt;br /&gt;
memory_limit = 20M&lt;br /&gt;
php.ini&lt;br /&gt;
LimitRequestBody 52428800&lt;br /&gt;
apache配置完毕&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>cvs</title>
      <link>https://wdicc.com/cvs/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cvs/</guid>
      <description>
客户端配置最重要的是CVSROOT环境变量的配置。&lt;br /&gt;

其格式是： :pserver:username@hostname(或者IP地址):CVS仓库路径&lt;br /&gt;

例如，我在使用我们实验室的CVS服务器时的配置为：&lt;br /&gt;

:pserver:car@192.168.2.2:/had/src&lt;br /&gt;

每一个实验室的成员应该是用自己的mail服务器账户作为usernam，密码也是mail服务器的密码。&lt;br /&gt;

上面是摘抄的一段，用cvs需要先&lt;br /&gt;

cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/pureftpd login &lt;br /&gt;

登陆，或者设置$CVSROOT环境变量，之后用&lt;br /&gt;

cvs -d :pserver:anonymous@cvs.sourceforge.net:/cvsroot/pureftpd checkout pureftpd&lt;br /&gt;

就可以checkout更新了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Howto Qmail with spamassassin</title>
      <link>https://wdicc.com/howto-qmail-with-spamassassin/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/howto-qmail-with-spamassassin/</guid>
      <description>
http://sylvestre.ledru.info/howto/howto_qmail_spamassassin.php&lt;br /&gt;

By Sylvestre Ledru June 2003&lt;br /&gt;
Version francaise&lt;br /&gt;
Return to the linux page&lt;br /&gt;

(02/04/2002), Bug fix :&lt;br /&gt;
I just add a little bug fix for some OS which remove the +x on qmail-queue (the qmail-scanner is not concerned)&lt;br /&gt;
(01/11/2003), Qmail-scanner :&lt;br /&gt;
I had a new way of calling spamassassin client using qmail-scanner.&lt;br /&gt;
(23/07/2003), Preferences :&lt;br /&gt;
Matthew Francis sent me a quite good howto explaining how to get user preferences for spamassassin. It is available here.&lt;br /&gt;
(08/06/2003), Localisation :&lt;br /&gt;
If you want to change the language of the spam report (ie why the email has been tagged as a spam), just change the locales to your language (dpkg-reconfigure locales under debian) and install gettext (apt-get install gettext) and you will have the appropriate version (french for example)...&lt;br /&gt;
(11/03/2005), Update :&lt;br /&gt;
After almost two years without updates, my other howto about qmail is much more complet and uptodate, I clean this one :&lt;br /&gt;
- first method deprecated&lt;br /&gt;
- new version of spamassassin 3.0.X&lt;br /&gt;
- use of netqmail instead of qmail&lt;br /&gt;
- new version of qmail-scanner with the q-s-st patch (activation of Spamassassin just for a domain)&lt;br /&gt;

If you like this howto and you want to thank me for my work : here is my wishlist on Amazon - France or my Amazon US wishlist :)&lt;br /&gt;
If you are a corporation and you make some business thanks to my howto, we&#39;ll love to have a present from you (or just tell me who is using my howto).&lt;br /&gt;
Thank to Scott Kinkade for his cash donation. I really do appreciate.&lt;br /&gt;

If you want more informations about the intallation of qmail, I wrote a long howto about.&lt;br /&gt;
I wrote this howto because there is a lack of documentation about qmail with spamassassin.&lt;br /&gt;

This howto has been designed for qmail with vpopmail but it should work without a lot of modifications with something else than vpopmail.&lt;br /&gt;

Spamassassin is a very powerfull program which checks if the receveid email is a spam or not. The analys is based on a list of mark. If the sum of all the mark exceed a specified amount (for example 5), the email will be tagged (****SPAM**** in the topic).&lt;br /&gt;
With this, it is very easy to create a rule which will move all emails into a specific directory (i.e. trash:)&lt;br /&gt;

If you want to link Qmail with spamassassin, it is quite easy.&lt;br /&gt;
First, install spamassassin and install razor and pyzor if you want to use it.&lt;br /&gt;
Under debian :&lt;br /&gt;
apt-get install spamassassin You should use the &#34;debian unstable or testing&#34; version of spamassassin which, most of the time, will find more spam.&lt;br /&gt;

Under other system (Redhat, Suse, Solaris ...) : The latest version of spamassassin today is the version 3.0.2. The installation is almost the same, only a few directives changed.&lt;br /&gt;
wget http://useast.spamassassin.org/released/Mail-SpamAssassin-2.55.tar.gz&lt;br /&gt;
tar -zxvf Mail-SpamAssassin-2.55.tar.gz&lt;br /&gt;
cd Mail-SpamAssassin-2.55&lt;br /&gt;
perl Makefile.PL&lt;br /&gt;
make&lt;br /&gt;
make install&lt;br /&gt;
cp spamd/debian-rc-script.sh /etc/init.d/spamassassin You can replace debian by redhat, solaris, netbsd, suse ...&lt;br /&gt;
chmod +x /etc/init.d/spamassassin&lt;br /&gt;

Then, edit /etc/spamassassin/local.cf&lt;br /&gt;
Version 2.5X :&lt;br /&gt;
required_hits 6.0&lt;br /&gt;
rewrite_subject 1&lt;br /&gt;
report_header 1&lt;br /&gt;
use_terse_report 1&lt;br /&gt;
defang_mime 1&lt;br /&gt;
dns_available yes&lt;br /&gt;
dcc_add_header 1&lt;br /&gt;
use_pyzor 1 (Only if you have installed pyzor)&lt;br /&gt;
use_razor2 (Only if you have installed razor2)&lt;br /&gt;
use_dcc 1&lt;br /&gt;
Version 3 :&lt;br /&gt;
#Number of points to tag the spam required_hits 5.0 # Add the result in the header always_add_headers 1 # change the subject rewrite_subject 1 report_safe 1 use_terse_report 1 # dns checks (warning : increase the process length) dns_available yes dcc_add_header 0 # Don&#39;t skip the relay black list skip_rbl_checks 0 use_dcc 1 dcc_timeout 10 # Remote verification use_pyzor 1 pyzor_timeout 10 pyzor_add_header 1 # Never from the previous results auto_learn 1 # use the bayes filter use_bayes 1 # Where spamassassin must store these informations : bayes_path /var/qmail/spamassassin/ # Where he stores the auto white list results : auto_whitelist_path /var/qmail/spamassassin/auto_whitelist&lt;br /&gt;
If you want to have detailled information about spamassassin processing, add the line in the local.cf file : timelog_path /var/log/spamassassin, run the daemon with the -D option (so, specify it in the /etc/default/spamassassin file under debian), create the directory with appropriate rights (should be vpopmail). In the directory, you will have for each email a file which sum up the spamassassin process (it is a debug option !).&lt;br /&gt;

I use these rules. Feel free to change ! Documentation about this is available here : perldoc Mail::SpamAssassin::Conf&lt;br /&gt;

In /etc/default/spamassassin (if this file does not exist, create it)&lt;br /&gt;
Change ENABLED to 1, then add these options : - &#34;-m 10 -v --auto-whitelist&#34; for the version 2.5X.&lt;br /&gt;
- &#34;-v -m 10 -u vpopmail --nouser-config&#34; for the version 3&lt;br /&gt;
With that stuff, you can launch spamd which is bascilly a spamassassin deamon (provide great performances).&lt;br /&gt;
-m 10 =&amp;gt; 10 childs&lt;br /&gt;
-v =&amp;gt; vpopmail config&lt;br /&gt;
--auto-whitelist =&amp;gt; Use auto whitelist (friend list)&lt;br /&gt;
Instead of spamassassin, you have to use spamc in order to test email.&lt;br /&gt;
There are some options &#34;-c -u vpopmail&#34; which enabled the creation of preferences for a domain or a user but it does not work very well for me.&lt;br /&gt;
/etc/init.d/spamassassin start&lt;br /&gt;

Next, the modification of qmail in order to check emails.&lt;br /&gt;
Basically, there are two kind of configuration for qmail :&lt;br /&gt;
- the fastest/easiest way is to change the qmail-queue in order to &#34;introduce&#34; the spamasssin check.Deprecated&lt;br /&gt;
- the cleanest way is to use qmail-scanner.&lt;br /&gt;
Changing the qmail-queue program&lt;br /&gt;
cp /var/qmail/bin/qmail-queue /var/qmail/bin/qmail-queue.orig&lt;br /&gt;
chown qmailq:qmail qmail-queue&lt;br /&gt;
chown qmailq:qmail qmail-queue.orig&lt;br /&gt;
chmod u+s qmail-queue.orig&lt;br /&gt;
chmod o+r,+x qmail-queue.orig qmail-queue Not fundamental but sometime it is necessary (depends the system)&lt;br /&gt;

mkdir /home/vpopmail/.spamassassin&lt;br /&gt;
cd /home/vpopmail&lt;br /&gt;
chmod 777 /home/vpopmail/.spamassassin&lt;br /&gt;

chown -R qmailq:qmail .spamassassin&lt;br /&gt;
chmod u=rwx,g=rx,o= /home/vpopmail/.spamassassin&lt;br /&gt;
Now, delete the content of the executable which manage the queue.&lt;br /&gt;
echo -n &amp;gt; /var/qmail/bin/qmail-queue&lt;br /&gt;
Then, edit the qmail-queue file and add this inside :&lt;br /&gt;
#!/bin/sh&lt;br /&gt;
/usr/bin/spamc | /var/qmail/bin/qmail-queue.orig&lt;br /&gt;
I agree that it is a quick/dirty method. It causes some issues with the injection of a bounce in the queue. (qmail-queue is not planned to work this way).&lt;br /&gt;
With qmail-scanner - Visit http://sylvestre.ledru.info/howto/howto_qmail_vpopmail.php for more informations&lt;br /&gt;
First, you have to patch qmail with the qmailqueue-patch or install netqmail which has already this plugin.&lt;br /&gt;
Qmail with the patch :&lt;br /&gt;
wget http://qmail.agarik.com/qmail-1.03.tar.gz&lt;br /&gt;
tar -zxvf qmail-1.03.tar.gz&lt;br /&gt;
cd qmail-1.03&lt;br /&gt;
wget http://qmail.mirrored.ca/moni.csi.hu/pub/glibc-2.3.1/qmail-1.03.errno.patch&lt;br /&gt;
wget http://sylvestre.ledru.info/howto/qmail/qmailqueue-patch&lt;br /&gt;
patch -p1 &amp;lt; qmail-1.03.errno.patch&lt;br /&gt;
patch -p1 &amp;lt; qmailqueue-patch&lt;br /&gt;
With netqmail :&lt;br /&gt;
wget http://qmail.agarik.com/netqmail-1.05.tar.gz&lt;br /&gt;
tar -zxvf netqmail-1.05.tar.gz&lt;br /&gt;
cd netqmail-1.05/&lt;br /&gt;
./collate.sh&lt;br /&gt;
cd netqmail-1.05&lt;br /&gt;
Add the QMAILQUEUE parameter to the /etc/tcp.smtp file :&lt;br /&gt;
127.0.0.1:allow,RELAYCLIENT=&#34;&#34;,QMAILQUEUE=&#34;/var/qmail/bin/qmail-scanner-queue.pl&#34;&lt;br /&gt;
198.168.1.:allow,RELAYCLIENT=&#34;&#34;,QMAILQUEUE=&#34;/var/qmail/bin/qmail-scanner-queue.pl&#34;&lt;br /&gt;
:allow,QMAILQUEUE=&#34;/var/qmail/bin/qmail-scanner-queue.pl&#34;&lt;br /&gt;
Rehash tcpserver :&lt;br /&gt;
/usr/local/bin/tcprules /etc/tcp.smtp.cdb /etc/tcp.smtp.tmp &amp;lt; /etc/tcp.smtp&lt;br /&gt;
chmod 644 /etc/tcp.smtp.cdb&lt;br /&gt;
And then, install qmail-scanner with qmail-scanner-st&lt;br /&gt;
. qmail-scanner-st is a patched version a qmail-scanner which enabled great features like auto delete/reject/quarantine spam over a specified score but also to select which scanners will be used for a domain and even for a user, then, it is possible to configure the spamassassin / antivirus just for one domain/user.&lt;br /&gt;
wget http://unc.dl.sourceforge.net/sourceforge/qmail-scanner/qmail-scanner-1.25.tgz wget http://xoomer.virgilio.it/j.toribio/qmail-scanner/download/q-s-1.25st-20050207.patch.gz&lt;br /&gt;
gunzip q-s-1.25st-20050207.patch.gz&lt;br /&gt;
tar -zxvf qmail-scanner-1.25.tgz&lt;br /&gt;
cd qmail-scanner-1.25/&lt;br /&gt;
patch -p1 &amp;lt; ../q-s-1.25st-20050207.patch&lt;br /&gt;
groupadd qscand&lt;br /&gt;
useradd -c &#34;Qmail-Scanner Account&#34; -g qscand -s /bin/false qscand&lt;br /&gt;
./configure --qs-user qscand --qs-group qscand --spooldir /var/spool/qmailscan --qmaildir /var/qmail --bindir /var/qmail/bin --qmail-queue-binary /var/qmail/bin/qmail-queue --admin-fromname &#34;Mail admin&#34; --admin postmaster --domain vladimir.avence.info --notify sender,admin,recips --local-domains `cat /var/qmail/control/rcpthosts | tr &#34;\n&#34; &#34; &#34;` --silent-viruses auto --unzip 1 --add-dscr-hdrs 1 --archive 0 --redundant yes --log-crypto 0 --scanners &#34;fast_spamassassin&#34; --scanners-per-domain yes --sa-subject &#34;*****SPAM*****&#34; --sa-delete 5 --install 1&lt;br /&gt;
After the installation, if you want to change your preferences, you have to edit the /var/qmail/bin/qmail-scanner-queue.pl file. In this file, you can also add option for the spamassassin client.&lt;br /&gt;
If you want to enable/disable some scanners, edit the /var/spool/qmailscan/scanners_per_domain.txt&lt;br /&gt;
To rehash the scanner per domain file : /var/qmail/bin/qmail-scanner-queue.pl -p&lt;br /&gt;
To rehash the quarantine attachement file : /var/qmail/bin/qmail-scanner-queue.pl -g&lt;br /&gt;
trunks.ecranbleu.org:sa,ps,clamdscan_scanner&lt;br /&gt;

# sa = spamassassin&lt;br /&gt;
# ps = perl scanner&lt;br /&gt;

This should be enough to use SpamAssassin on the whole system.&lt;br /&gt;
I have to try to find how it can be linked with vpopmail in order to create preference for a specific domain or a specific user. (if someone knows : sylvestre@ecranbleu.org)&lt;br /&gt;

Problems :&lt;br /&gt;
- link with vpopmail&lt;br /&gt;
This howto is inspired and corrected from :&lt;br /&gt;
http://www.euronet.nl/users/erhnam/linux/qmail/qmail.htm.&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>igenus</title>
      <link>https://wdicc.com/igenus/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/igenus/</guid>
      <description>
igenus需要给vpopmail数据库里添加几个表，同时还需要修改vpopmail表。添加了一个pw_id字段。没有这个这个字段，igenus里面不能修改密码（我就遇到这么一个情况）。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>proftpd limit段</title>
      <link>https://wdicc.com/proftpd-limit-conf/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/proftpd-limit-conf/</guid>
      <description>
写命令 APPE DELE MKD RMD RNTO STOR XMKD XRMD&lt;br /&gt;
读命令 RETR SITE SIZE STAT&lt;br /&gt;
列表命令 CDUP CWD LIST MDTM NLST PWD RNFR XCUP XCWD XPWD&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>proftpd 配置</title>
      <link>https://wdicc.com/proftpd-conf/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/proftpd-conf/</guid>
      <description>
www.proftpd.org&lt;br /&gt;

ServerName                      &#34;Caph ftp server...&#34;&lt;br /&gt;
ServerType                      standalone&lt;br /&gt;
DefaultServer                   on&lt;br /&gt;
Port                            21&lt;br /&gt;
Umask                           002&lt;br /&gt;
MaxInstances                    30&lt;br /&gt;
User                            ftp&lt;br /&gt;
Group                           ftp&lt;br /&gt;

DisplayLogin .welcome.msg&lt;br /&gt;
DeferWelcome on&lt;br /&gt;
ServerIdent Off&lt;br /&gt;
UseReverseDNS off&lt;br /&gt;
IdentLookups off&lt;br /&gt;
MaxLoginAttempts 3&lt;br /&gt;
MaxClientsPerHost 2&lt;br /&gt;
MaxClients 20&lt;br /&gt;
MaxInstances 100&lt;br /&gt;
ListOptions &#34;&#34;&lt;br /&gt;

DirFakeUser On ftp&lt;br /&gt;
DirFakeGroup On ftp&lt;br /&gt;
DeferWelcome On&lt;br /&gt;
LogFormat awstats &#34;%t   %h  %u  %m  %f  %s  %b&#34;&lt;br /&gt;
ExtendedLog /var/log/xferlog read,write awstats&lt;br /&gt;
TransferLog none&lt;br /&gt;
SystemLog /var/log/proftpd.log&lt;br /&gt;
ServerIdent off&lt;br /&gt;
WtmpLog off&lt;br /&gt;

DefaultRoot ~ ftp&lt;br /&gt;
&lt;limit&gt; Order allow,deny&lt;br /&gt;
DenyGroup !ftp &lt;/limit&gt;&lt;directory&gt;&lt;br /&gt;
AllowOverwrite                on&lt;br /&gt;
AllowStoreRestart             on&lt;br /&gt;
#  AllowForeignAddress             on&lt;br /&gt;
&lt;limit&gt;&lt;br /&gt;
DenyUser ftp&lt;br /&gt;
&lt;/limit&gt;&lt;br /&gt;
&lt;limit&gt;&lt;br /&gt;
AllowUser it&lt;br /&gt;
&lt;/limit&gt;&lt;br /&gt;
&lt;/directory&gt;&lt;br /&gt;

&lt;directory&gt;&lt;br /&gt;
&lt;limit&gt;&lt;br /&gt;
AllowUser ftp&lt;br /&gt;
&lt;/limit&gt;&lt;br /&gt;
&lt;/directory&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>qmail中的几个error的产生的原因和解决方法</title>
      <link>https://wdicc.com/solve-qmail-error/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/solve-qmail-error/</guid>
      <description>
deferral: Unable_to_chdir_to_maildir._(#4.2.1)&lt;br /&gt;

   这个是qmail找不到用户的收信目录所致。如果你是用vpopmail的虚拟域名来管理的，那看看你的control/locals文件，里面不能有虚拟域名，只能有实际域名（这个实际域名的意思应该是使用系统用户作为用户的域，而不是使用vpopmail的虚拟用户的域）。因此呢，如果不是用 vpopmail，那么可能是系统用户的目录权限设置不正确。&lt;br /&gt;

如果发生这个错误，首先保证你没有对user/assign做过手动修改，添加域名都是使用vpopmail的vadddomin命令来添加的，没有修改过~vopmail/domins目录以及其下面目录的权限和属主，然后修改了locals文件之后重启应该就没有问题了。&lt;br /&gt;

deferral: Uh-oh:_.qmail_has_prog_delivery_but_has_x_bit_set._(#4.7.0)&lt;br /&gt;

   这个是因为你的.qmail文件设置了x属性，把.qmail文件的x去掉就ok了。这个.qmail文件就在你的domins/xxx.com下面，包括比如.qmail-default之类的文件，修改一下权限，去掉x就ok了。&lt;br /&gt;

454 oops, unable to write pipe and I can&amp;#39;t auth (#4.3.0)&lt;br /&gt;

  这个错误是在你打了smtp auth的补丁之后，却发现不能正常auth，输入了正确的用户名密码还是提示不正确。可以通过下面的命令来测试。&lt;br /&gt;

[root@caph qmail-smtpd]# telnet localhost 25&lt;br /&gt;
Trying 127.0.0.1...&lt;br /&gt;
Connected to localhost.&lt;br /&gt;
Escape character is &amp;#39;^]&amp;#39;.&lt;br /&gt;
220 xxx.com ESMTP&lt;br /&gt;
ehlo&lt;br /&gt;
250-xxx.com&lt;br /&gt;
250-PIPELINING&lt;br /&gt;
250-8BITMIME&lt;br /&gt;
250-SIZE 104857600&lt;br /&gt;
250 AUTH LOGIN PLAIN CRAM-MD5 //显示这个通常表示你已经打好了补丁，不过这个是可以通过修改qmail-smtpd.c文件来定制的。&lt;br /&gt;
auth login&lt;br /&gt;
334 VXNlcm5hbWU6&lt;br /&gt;
awefaq23rasdf&lt;br /&gt;
334 UGFzc3dvcmQ6&lt;br /&gt;
awefwaef&lt;br /&gt;
454 oops, unable to write pipe and I can&amp;#39;t auth (#4.3.0)&lt;br /&gt;
quit&lt;br /&gt;
221 xxx.com&lt;br /&gt;
Connection closed by foreign host.&lt;br /&gt;

出现了这种问题是因为smtp运行脚本没有设置正确的用户所致。将你的smtp的tcpserver命令的运行用户和组指定一下。&lt;br /&gt;

QMAILDUID=`id -u vpopmail`&lt;br /&gt;
QMAILDGID=`id -g vpopmail`&lt;br /&gt;

/usr/local/bin/tcpserver -v -H -R -l &#34;$LOCAL&#34; -x /etc/tcp.smtp.cdb -c &#34;$MAXSMTPD&#34;&lt;br /&gt;
        -u &#34;$QMAILDUID&#34; -g &#34;$QMAILDGID&#34; 0 smtp /usr/local/bin/rblsmtpd -r relays.ordb.org&lt;br /&gt;
        /var/qmail/bin/qmail-smtpd&lt;br /&gt;
        /home/vpopmail/bin/vchkpw /bin/true /bin/cmd5checkpw /bin/true 2&gt;&amp;1&lt;br /&gt;

不需要修改~vpopmail/bin/vchkpw的属性。&lt;br /&gt;

451 qq write error or disk full (#4.3.0)&lt;br /&gt;

通常产生这个可能有2个原因：（1）你的qmail queue所在的磁盘空间不足。（2）qmail-scanner-queue的.pl权限设置不正确或者文件有问题。&lt;br /&gt;

qq temporary problem (#4.3.0)&lt;br /&gt;

看到的都是说不是suidperl就是qmail-scanner-queue.pl的权限设置不对这两个可能。&lt;br /&gt;
-rwsr-xr-x 1 qscand qscand 98594 12月 21 10:18 qmail-scanner-queue.pl&lt;br /&gt;

vchkpw-smtp: vpopmail user not found&lt;br /&gt;

查看/home/vpopmail/bin/vchkpw的属性和smtpd启动的用户名和组有没有问题。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Qmail的主要配置文件</title>
      <link>https://wdicc.com/qmail-conf-file/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/qmail-conf-file/</guid>
      <description>1.2、boucefrom&lt;br /&gt;

    bouceform是定义当邮件投递失败时系统返回给发送者一个包含失败信息的邮件时的&lt;br /&gt;
发送者。如果不存在这个文件，默认的发送者是MAILER-DAEMON。比如本文的&lt;br /&gt;

    echo postmaster &gt; /var/qmail/control/bouncefrom&lt;br /&gt;

    就是定义投递者为postmaster，这样所有投递失败的返回邮件的发送者就成了postm&lt;br /&gt;
aster。&lt;br /&gt;

    1.3、concurrencylocal&lt;br /&gt;

     这个文件定义了qmail可以同时投递的本地邮件的个数。这个参数的缺省值是10，&lt;br /&gt;
也就是说系统允许同时有10个邮件在本地投递。concurrencylocal这个参数的最大值是&lt;br /&gt;
由编译时的conf-spawn参数来决定的，缺省值是120，最大值是255。&lt;br /&gt;

    1.4、concurrencyremote&lt;br /&gt;

    这个参数定义了qmail可以同时投递的远端邮件的个数，这个参数的缺省值是20。这&lt;br /&gt;
个参数的最大值也是由conf-spawn来决定的。&lt;br /&gt;

    1.5、defaultdomain&lt;br /&gt;

    它主要用于邮件用户在投递给同一邮件服务器的邮件用户时的邮件投递处理，比如&lt;br /&gt;
邮件服务器cnunix.com.cn用户user发送邮件给另一个邮件用户user1@cnunix，这实qmai&lt;br /&gt;
l-inject会将defaultdomain中定义的邮件域名加入到这个邮件的目标地址中，qmail会&lt;br /&gt;
自动认为这个邮件的目标地址是user1@cnunix.com.cn，并按照这个地址进行投递。当这&lt;br /&gt;
个文件不存在的时候，qmail会从配置文件me中读取这个参数。如果系统变量DEFAULTDOM&lt;br /&gt;
AIN已经设置，defaultdomain定义的参数将被忽略。&lt;br /&gt;

    1.6、defaulthost&lt;br /&gt;

    它和defaultdomain类似，当邮件系统接收到没有目标主机名的邮件时，这个设置文&lt;br /&gt;
件定义了系统往这个邮件中加入的目标主机名名称。在缺省情况下，qmail-inject会将d&lt;br /&gt;
efaulthost中定义的名称加入到没有定义投递邮件地址的邮件的目标主机名中，如果def&lt;br /&gt;
aulthost不存在，加入的目标主机名将时字符串“defaulthost”，defaulthost主要用&lt;br /&gt;
于邮件用户在投递给同一邮件服务器的邮件进行投递处理。如果系统变量QMAILDEFAULTH&lt;br /&gt;
OST已经设置，defaulthost定义的参数将被忽略。&lt;br /&gt;

    1.7、databyes&lt;br /&gt;

    它定义了qmail-smtpd所允许接收的邮件的最大字节数。这个参数的缺省值为0，表&lt;br /&gt;
示对接收邮件的字节数没有限制。如果要限制最大的接收为10M，操作如下：&lt;br /&gt;

    echo 10485760 &gt; /var/qmail/control/databytes&lt;br /&gt;

    这是任何大于10M的邮件都会被拒绝。这个参数最好设置上，以避免恶意的对你服务&lt;br /&gt;
器发送大量的超大邮件，产生邮件服务器负荷过大，甚至系统崩溃的危险。&lt;br /&gt;

    1.8、doublebouncehost&lt;br /&gt;

    这个配置文件定义了出现“双重反弹”的时候，系统转发的邮件的主机名称。“双&lt;br /&gt;
重反弹”就是当系统因为投递失败将邮件返回给发送者时，发送者又将此邮件返回，这&lt;br /&gt;
个时候qmail将会把这个邮件转发到另一个邮件地址，一般这个地址就是管理员的地址。&lt;br /&gt;
doublebouncehost就是定义这个转发的邮件地址的主机名部分，而这个邮件地址的用户&lt;br /&gt;
名部分是由doublebouceto来定义的，因此这两个配置文件一般都是结合起来使用的。当&lt;br /&gt;
doublebouncehost不存在的时候，系统将会从配置文件me中读取这个参数。&lt;br /&gt;

    1.9、doublebounceto&lt;br /&gt;

    这个参说是结合blebouncehost来使用的，当这个参数不存在的时候，系统缺省值是&lt;br /&gt;
postmaster用户。&lt;br /&gt;

    1.10、helohost&lt;br /&gt;

    这个配置文件定义了当程序qmail-remote和远程邮件系统建立连接时所使用的主机&lt;br /&gt;
名。如果这个配置文件不存在，系统将会从配置文件me中读取这个参数值，如果me不存&lt;br /&gt;
在，qmail-remote将不能正常运行工作。&lt;br /&gt;

    1.11、locals&lt;br /&gt;

    这个配置文件是定义本地邮件域的，在qmail-send处理邮件投递时，将会使用local&lt;br /&gt;
s定义的值和邮件的目标地址进行比较，如果相同，系统就会将这个邮件投递到本地交给&lt;br /&gt;
qmail-lspawn来处理。如果一个邮件的目标主机名在locals找不到，系统将会把这个邮&lt;br /&gt;
件投递到远端邮件服务器系统，即使这个邮件的目标地址可能是本地邮件系统的。如果l&lt;br /&gt;
ocals不存在，系统将会从配置文件me中读取这个参数，如果me不存在，qmail-send将不&lt;br /&gt;
能正常运行。&lt;br /&gt;

    1.12、me&lt;br /&gt;

    这个配置文件是qmail系统十分重要的一个文件，如果这个文件不存在，qmail系统&lt;br /&gt;
将无法运行。me是用来定义本地邮件服务器的主机名的，上面已经介绍到了，有多个配&lt;br /&gt;
置文件是和me有关联的，如果那些配置文件不存在系统默认会从me中读取参数值的。me&lt;br /&gt;
这个配置文件一般都是在qmail系统安装时使用configure-fast来创建的，在上面qmail&lt;br /&gt;
系统安装的时候已经使用过了这个参数。&lt;br /&gt;

    1.13、queuelifetime&lt;br /&gt;

    这个配置文件是定义一个邮件在邮件队列中存活的时间，缺省值为7天(604800s)，&lt;br /&gt;
这个期限掉了以后qmail-send将会进行最后一次的投递尝试，如果投递失败，该邮件将&lt;br /&gt;
会从邮件队列中删除。&lt;br /&gt;

    1.14、rcphosts&lt;br /&gt;

     这个配置文件也是qmail一个十分重要的文件，这个文件是定义系统允许转发邮件&lt;br /&gt;
的邮件域，如果这个文件不存在或者为空，你的系统将会接收Internet上所有的域的邮&lt;br /&gt;
件转发，即你的系统是Open relay。配置文件rcpthosts最多可以支持50个主机名和域名&lt;br /&gt;
，如果超个这个数字，就需要保存到他的扩充配置文件morercphosts中，然后使用qmail&lt;br /&gt;
的命令程序qmail-newmrh(在本系统中，该文件在/var/qmail/bin目录下)来生成二进制&lt;br /&gt;
的morercpthosts.cdb文件，这样qmail-smtpd才可以从这个二进制文件中读取信息。&lt;br /&gt;

    1.15、virtualdomains&lt;br /&gt;

    这也是qmail的一个非常重要的配置文件，它定义了qmail的虚拟邮件域，qmail结合&lt;br /&gt;
vpopmail的虚拟域管理功能可以定义多个虚拟邮件域。&lt;br /&gt;

    1.16、smtproutes&lt;br /&gt;

    这个配置文件是定义qmail邮件系统的静态SMTP路由表信息的，他的格式应该是：&lt;br /&gt;

     HOST: targetHOST    //HOST可以是主机名或者域名。这行所表示的是意思是将所&lt;br /&gt;
有目标是HOST的邮件转发到targetHOST邮件服务器中，这个是最常规的表示方式。&lt;br /&gt;

      下面给一些例子和一些特殊的表示方法：&lt;br /&gt;

       cnunix.com.cn:cnunix.com   //这行表示的意思是将所有发往cnunix.com.cn的&lt;br /&gt;
邮件全部转发到cnunix.com这个邮件服务器。qmail不会在cnunix.com.cn邮件服务器中&lt;br /&gt;
投递时查询DNS中的MX记录，直接投递到cnunix.com邮件服务器中，加快了投递的速度。&lt;br /&gt;


     .cnunix.net:     //这行表示强迫qmail对DNS的MX记录进行查询，因为没有定义&lt;br /&gt;
转发的主机名，qmail将在DNS中查询任何以.cnunix.net结尾的邮件服务器&lt;br /&gt;

     :mail.cnunix.com.cn:2525    //这行定义表示所有发往该机器的所有邮件都将会&lt;br /&gt;
转发到mail.cnunix.com.cn这个邮件服务器，并且转发到对方的2525端口，这个方式一&lt;br /&gt;
般都是做邮件网关时用的到的。&lt;br /&gt;

    注意：smtproutes如果设置不正确或者DNS的变动会产生邮件的循环投递。&lt;br /&gt;

    1.17、timeoutconnect&lt;br /&gt;

    这个配置文件定义了qmail-remote在和远端SMTP服务器在SMTP连接断开以前接受一&lt;br /&gt;
个新的连接等待的最大时间(单位为秒s),默认值为一分钟(60s)。如果你的网络连接速率&lt;br /&gt;
比较低，就需要相应的调整这个参数到一个适合的值。&lt;br /&gt;

    1.18、timeoutremote&lt;br /&gt;

    这个配置文件定义了qmail-remote等待远端的SMTP服务器相应时等待的最大时间，&lt;br /&gt;
默认值为20分钟(1200s),如果到达这个最大值没有相应，qmail才和对方断开连接并且把&lt;br /&gt;
失败的记录写到qmail的日志中。&lt;br /&gt;

    1.19、smtpgreeting&lt;br /&gt;

     这个配置文件定义了用户在登录SMTP服务时显示的系统欢迎信息。修改这个信息可&lt;br /&gt;
以掩盖一些你的系统的本身的信息，可以相对的迷惑一下登录者:)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>qss不正常显示的问题</title>
      <link>https://wdicc.com/a-bug-of-qss/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-bug-of-qss/</guid>
      <description>
1 php3.x版本以上不正常显示&lt;br /&gt;

设置php.ini的&lt;font color=&#34;#FF0000&#34;&gt;register_globals = On&lt;/font&gt;&lt;br /&gt;

或者&lt;br /&gt;

修改getGraph.php添加&lt;br /&gt;
&lt;font color=&#34;#FF0000&#34;&gt;$data=$_GET[&amp;#39;data&amp;#39;];&lt;br /&gt;
$t=$_GET[&amp;#39;t&amp;#39;];&lt;br /&gt;
修改getGraph1.php添加&lt;br /&gt;
$data=$_GET[&amp;#39;data&amp;#39;];&lt;br /&gt;
$s=$_GET[&amp;#39;s&amp;#39;];&lt;/font&gt;&lt;br /&gt;

2 还不能正常显示&lt;br /&gt;

那可能你的qmail-scanner的版本是1.2以上的，此版本以上的log文件格式有些变化，qss却没有做相应更新，所以会有问题。你可以看看你的log文件的日期是不是下面这种格式&lt;br /&gt;
Mon, 03 Jan 2005 04:01:57 CST&lt;br /&gt;
如果是，那么差不多就是这个问题了。&lt;br /&gt;

解决方法是在index.php里面查找&lt;br /&gt;
&lt;font color=&#34;#FF0000&#34;&gt;# Calc the date timestamp&lt;/font&gt;&lt;br /&gt;
把他下面的5行语句用下面的替换&lt;br /&gt;
&lt;font color=&#34;#FF0000&#34;&gt;   if ( eregi(&#34;(^[0-9]+)&#34;, $val[0]) )&lt;br /&gt;
   {&lt;br /&gt;
      # Calc the date timestamp&lt;br /&gt;
      $date = explode(&#34;/&#34;,$val[0]);&lt;br /&gt;
      $dateT = $date[0];&lt;br /&gt;
      $date[0] = $date[1];&lt;br /&gt;
      $date[1] = $dateT;&lt;br /&gt;
      $date = strtotime(implode(&#34;/&#34;,$date));&lt;br /&gt;
   }&lt;br /&gt;
   else&lt;br /&gt;
   {&lt;br /&gt;
      $date = strtotime ($val[0]);&lt;br /&gt;
   };&lt;br /&gt;
&lt;/font&gt;&lt;br /&gt;

参考网址&lt;br /&gt;
&lt;a href=&#34;http://www.tnpi.biz/internet/mail/toaster/faq.shtml#how_do_i_get_qmailscanner_statistics_to_work&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>历史上最强最强的跨专业的考研人zz</title>
      <link>https://wdicc.com/a-joke-3/</link>
      <pubDate>Mon, 16 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-3/</guid>
      <description>
　　1、现在跨专业跨学校考研已经是一种趋势。某君学习图书馆学n年，也是觉得发腻。于是决定考个理科的研究生，在广泛的调查和研究之后。他毅然决定考天大的化院来挑战一下自己。看看一个连苯烷都不会写的人是否可以大跨度考研成功。他做了以下几步：&lt;br /&gt;
坐火车到天大，找到自己未来的研究生导师。先恭敬的鞠上一躬，然后对老先生说：我想考您的研究生，随后递上自己的简历。老先生先是一脸鄙夷，想你们XX大学图书馆学虽然是全国第一，但又怎么知道我们数学的博大精深。不过他没有当面拒绝，而是写了十几个问题对小伙子说：不急，先把这些问题搞清楚再来找我。也就是说，先搞清楚才有资格。这个强人并没有生气，把问题清单收了起来。&lt;br /&gt;

　　2、回到学校，把问题翻译成英语，然后给哈佛大学化学系某教授发了一封e-mail，信中写道：我想考贵院的研究生，这是我对专业的一点问题，可以帮我解答一下吗？同时加上自己的简历。哈佛教授看后很激动，因为发现了一个东方化学奇人，虽然不是专业人才但是专业问题问得很深。于是他们认认真真解答了问题，并列出一些其他的问题对小伙子做进一步的考核。&lt;br /&gt;

　　3、收到哈佛的回信后，某君把问题翻译成汉语，再去找天大的老先生。先把答案给了老先生，老先生一看已经半疯，想小伙子不错，水平比我还高，已经达到国外哈佛的水平了。这时某君又拿出写满问题的那张纸，对老先生说：老师的问题我回答了，这是我对本专业的一些问题，请老师解答一下。老头看了问题，倒吸了一口凉气，傻眼了。这时某君装着要走。老先生急了，说：小伙子，别走！我要定你了，专业课不用考了，我包你过。公共课去回去复习一下，只要过线就行，只要过线。&lt;br /&gt;

　　4、 回到学校，没过几天，收到老先生花了几个通宵、查了大量资料写好的哈佛教授所提问题的答案。某君把答案翻译成英语，给哈佛教授又发过去。他们在确认东方奇人后，提出了一年给某君4万美金的奖学金。一边是保研一边是全奖出国，到底选哪边？某君犯难了。&lt;br /&gt;

　　5、当然是选保研，因为哈佛是淘汰制。而天大的老先生只会拍拍小伙子的肩膀说：孩子，好好学，谁让我当时瞎了眼把你收来呢。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Linux下双网接入高级路由配置脚本zz</title>
      <link>https://wdicc.com/linux-bridge-script/</link>
      <pubDate>Thu, 12 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/linux-bridge-script/</guid>
      <description>
http://lwfs.net/2005/11/28/10/&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
    #!/bin/bash

    IP0=&lt;ip of your eth0&gt;
    IP1=&lt;ip of your eth1&gt;
    GW0=&lt;gateway of your first net&gt;
    GW1=&lt;gateway of your second net&gt;
    NET0=&lt;network address of your first net: network address/netmask&gt;
    NET1=&lt;same as above, the second net&gt;
    DEV0=eth0
    DEV1=eth1

    # comment the next two line after first run this script.
    echo 200 cernet &gt;&gt;/etc/iproute2/rt_tables
    echo 210 chinanet &gt;&gt;/etc/iproute2/rt_tables

    ip route add ${NET0} dev ${DEV0} src ${IP0} table cernet
    ip route add default via ${GW0} table cernet
    ip route add ${NET1} dev ${DEV1} src ${IP1} table chinanet
    ip route add default via ${GW1} table chinanet
    ip route add ${NET0} dev ${DEV0} src ${IP0}
    ip route add ${NET1} dev ${DEV1} src ${IP1}

    # delete old rule
    ip rule del from ${IP0}
    ip rule del from ${IP1}
    # setup new rule
    ip rule add from ${IP0} table cernet
    ip rule add from ${IP1} table chinanet 
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>下雪了</title>
      <link>https://wdicc.com/snowing-now/</link>
      <pubDate>Thu, 12 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/snowing-now/</guid>
      <description>
这个冬天的第一场雪可能都不能算是雪，据说是某些地方下了几颗肉眼刚好看到的雪粒粒，而且还是就早晨一会，反正我没看到。&lt;br /&gt;

第二场似乎应该就是元旦那次了吧，是元旦那天，还是元旦前夜，我忘记了，反正据说是下了，看到据说了吧，说明我还是没看到。呵呵。那两天都在家里呆着，没有出门，只是听说下雪之后站在阳台看了一眼，12层楼往下看，似乎没看到白色的积雪，也没看到哗哗的雪片。可能是我看的时候人家早停了吧，北京的雪基本上都是掉下来就化，所以地上没有积雪也正常的。&lt;br /&gt;

这次算是第三次了吧。因为座位不靠窗，所以没有注意到，到隔壁办公室的时候，听他们说起来才注意到，外面的雪片还真大。早上走的时候其实就在下了，不过都是小颗粒，还没想到居然成大气候了，呵呵。&lt;br /&gt;

雪现在还在下，在角落里面已经有了一些积雪了，走人走车的地方的雪基本都化了，地上好多水。北京的天气比较来说不够冷，但是够湿润，所以比较容易看到下雪，但是不容易看到积雪。我们家那里比较干燥，冬天就是干冷，下雪少，偶尔来一次就是大的，这一次之后，可能整个冬天都能到处看到积雪，尤其是村子后面的山头上，都白白的。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>clamav</title>
      <link>https://wdicc.com/clamav/</link>
      <pubDate>Wed, 11 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/clamav/</guid>
      <description>
网址：http://www.clamav.net&lt;br /&gt;

安装命令&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
#./configure --sysconfdir=/etc/clamav
#make;make check;make install&lt;/pre&gt;
安装之后需要多关注升级log，新版本出来就会有提示
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
Received signal: wake up
ClamAV update process started at Wed Jan 11 04:02:26 2006
WARNING: Your ClamAV installation is OUTDATED!
WARNING: Local version: 0.86.1 Recommended version: 0.88
DON&#39;T PANIC! Read http://www.clamav.net/faq.html
main.cvd is up to date (version: 35, sigs: 41649, f-level: 6, builder: tkojm)
WARNING: Your ClamAV installation is OUTDATED!
WARNING: Current functionality level = 5, recommended = 6
DON&#39;T PANIC! Read http://www.clamav.net/faq.html
daily.cvd updated (version: 1237, sigs: 470, f-level: 7, builder: diego)
WARNING: Your ClamAV installation is OUTDATED!
WARNING: Current functionality level = 5, recommended = 7
DON&#39;T PANIC! Read http://www.clamav.net/faq.html
Database updated (42119 signatures) from db.cn.clamav.net (IP: 221.6.197.162)&lt;/pre&gt;
看到之后只需要去下载最新版本，然后重新安装即可。

启动系统时运行/usr/local/bin/freshclam -d定时更新程序。配置文件在/etc/clamav
</description>
    </item>
    
    <item>
      <title>isoqlog</title>
      <link>https://wdicc.com/isoqlog/</link>
      <pubDate>Wed, 11 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/isoqlog/</guid>
      <description>
isoqlog是用来统计域里面的邮件的。通过查看qmail的log文件，来统计进出的邮件。&lt;br /&gt;

配置文件在/usr/local/etc下面，isoqlog.conf&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
#isoqlog Configuration file 

logtype     = &#34;qmail-multilog&#34;                          # log type qmai-multilog, qmail-syslog, sendmail, postfix
logstore    = &#34;/var/log/qmail&#34;                          #
domainsfile = &#34;/usr/local/etc/isoqlog.domains&#34;          #
outputdir   = &#34;/www/isoqlog/log&#34;                        # html output directory
htmldir     = &#34;/usr/local/share/isoqlog/htmltemp&#34;
langfile    = &#34;/usr/local/share/isoqlog/lang/english&#34;
hostname    = &#34;xxx.com&#34;

maxsender   = 100
maxreceiver = 100
maxtotal    = 100  

maxbyte     = 100&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>到年底了</title>
      <link>https://wdicc.com/last-of-a-year/</link>
      <pubDate>Wed, 11 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/last-of-a-year/</guid>
      <description>
年底比较期待的一件事情就是tatter tools 1.0，功能更加强大了。希望能无缝升级。&lt;br /&gt;

现在不得不承认和老婆两个人都太懒了。该我洗的碗非要推到第二天做饭前，该老婆打扫的地板一拖就是好几天，猫沙本来应该一天一清理，可非要等到看着似乎都没地方的才动手。得改改这些烂习惯了。&lt;br /&gt;

得考虑年底给家里带点什么东西了。cc家里的话，回头再商量商量给买什么好。还是带点东西好。嗯。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>看强人怎么砍价的zz</title>
      <link>https://wdicc.com/a-joke-2/</link>
      <pubDate>Wed, 11 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-2/</guid>
      <description>没有任何赠品。好了，我算是知道底价了  &lt;br /&gt;

又走，跑国美去了。  &lt;br /&gt;

碰到老乡，亲切。一家人不说两家话，上来直奔主题。人家能报给我3500的价（骗骗他）你能给多少？  &lt;br /&gt;

他：%·#%·#￥%·#  &lt;br /&gt;

最后他说，已经很低了，我也只能给你这个价……要不，我去请示一下厂商……然后再多送点东西给你……  &lt;br /&gt;

说，那边实在谈不下来，要不这样，我给你开3500，然后自己再帮你贴一张50的赠券……  &lt;br /&gt;

ok，价格谈妥了，然后磨赠品  &lt;br /&gt;

说，人家送耳机的耶……  &lt;br /&gt;

他说，行，我也送……  &lt;br /&gt;

送了一副耳机……  &lt;br /&gt;

我说能接电脑的吧？  &lt;br /&gt;

他说能，我说那你得给我根接电脑的线，不然我拿回去怎么试啊  &lt;br /&gt;

他：行，线的新旧你就别在意了，我这边有根用过的，不过肯定是好的，电脑线入手……  &lt;br /&gt;

我：听说……现在DVD接电视机一般都用S-video端子  &lt;br /&gt;

他：是啊，这样比较清晰  &lt;br /&gt;

我：呀，还没见过长什么样呢，你去拿一根来给我看看，我就看看，买的时候就不会买错了  &lt;br /&gt;

他吭哧吭哧去拿了一根来，时值盛夏，他满头大汗  &lt;br /&gt;

我：哎呀，热坏了吧？  &lt;br /&gt;

他：嗯  &lt;br /&gt;

我：要不，这跟SV线我帮你带走了，省得你多跑一次还要放回去  &lt;br /&gt;

他：#^@#%@#%$@%  &lt;br /&gt;

我：SV线有了，dvd机器家里也有……就是没碟片  &lt;br /&gt;

他：我去帮你拿几张，好看与否别管  &lt;br /&gt;

我：辛苦了。。。碟片到手……  &lt;br /&gt;

准备走了  &lt;br /&gt;

我：对了对了，电视机是挂墙上的还是放桌上的？  &lt;br /&gt;

他：哦，对，忘记了，有两种架子，一种是放桌上的，一种挂墙上的，你告诉我，我通知发货的人  &lt;br /&gt;

我：我打算一开始放桌上，过一阵子挂墙上  &lt;br /&gt;

他：行了行了，我帮你发两个架子，到时候你验收一下。。。。两个架子入手  &lt;br /&gt;

最后……我说，对了，国美好像在搞打老虎的活动耶  &lt;br /&gt;

他说……是。打老虎就是打电老虎。三个月的电费帐单，7月份报销30%，8月份报销60%，9月份报销90%  &lt;br /&gt;

当时是8月份。我问他，只要是电费帐单就可以吗？  &lt;br /&gt;

他：不可以，必须是收货地址的帐单。  &lt;br /&gt;

我：。。。不送到这个地址了，帮我换个送货地址  &lt;br /&gt;

他：汗。  &lt;br /&gt;

改成了我姐家的地址。我家当时除了电灯，又没任何别的电器的，老姐家三台空调呢。  &lt;br /&gt;

就这样……0月份我去报销电费单，报了四百多块。。。。报销的小姐：天，这么多，我这边报销最多的也只有一百多块。  &lt;br /&gt;

换了四百多块的购物券。自己贴了点钱，买了个五百块的电饭锅。  &lt;br /&gt;

收获如下：1台电视机，5张碟片，2个架子，1根电脑线，1根SV线，1副无线耳机（包装上写价值499），1个电饭煲，N多勺铲叉，1个围裙，1个锅垫，1个淘米箩，1个微波炉手套……————。。用赠券买电饭煲的时候也缠了人家很久……  &lt;br /&gt;

买电饭煲那天……还买了个微波炉，又是一大堆赠品  &lt;br /&gt;

。。。出门的时候，营业员说，我帮你一起拿出去  &lt;br /&gt;

我：没关系，我一个人就可以了……  &lt;br /&gt;

营业员：我不陪你出去保安不会放你走的……  &lt;br /&gt;

真的是这样，保安看着我的发票，问，你就买了两个？那……其他的东西都是赠品？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>这</title>
      <link>https://wdicc.com/another-arch/</link>
      <pubDate>Sun, 08 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/another-arch/</guid>
      <description>
debian和arch换来换去，还是觉得arch最舒服，虽然源比较少，可其实真正用到的软件也没那么多，常用的自然有人会考虑作一个包。&lt;br /&gt;

使用utf8 的locale的时候，mount win分区需要使用utf8，如下：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
/dev/hda2 / ext3 defaults 0 1
/dev/hda5 /mnt/d vfat utf8,umask=000 0 0
/dev/hda6 /mnt/e vfat utf8,umask=000 0 0
&lt;/pre&gt;&lt;br /&gt;

使用gdm的时候，scim的启动可以放到~/.profile里面：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
export GTK_IM_MODULE=scim
export QT_IM_MODULE=scim
/usr/bin/scim -d
&lt;/pre&gt;&lt;br /&gt;

mplayer关于宽屏的设置：&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
&lt;/pre&gt;&lt;br /&gt;

在rc.conf里面适当使用&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>随便写点</title>
      <link>https://wdicc.com/write-something/</link>
      <pubDate>Sun, 08 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/write-something/</guid>
      <description>
明天要去书展值班，比较郁闷，本来和我们毫不相关的事情，却要我们去干活，这个很不合理。可是目前这个公司就这样的，没办法。在这里呆了快4年了，不合理的事情见的太多了，也懒得去多想了，看大家的说法，国企可能都这个德性，而且私企也慢慢的在学这种风气。到底什么是好的工作环境，真不知道了。&lt;br /&gt;

这几天天气还算可以，周六早上早早的起来了，觉得这个周末时间好长，想想还是不要把那么多时间浪费在睡觉上比较好，年轻是资本，还是多积累一下吧。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>新年了</title>
      <link>https://wdicc.com/new-year/</link>
      <pubDate>Sun, 01 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/new-year/</guid>
      <description>
昨天晚上4点多才睡觉，终于看完了 &lt;a href=&#34;http://blog.wdicc.com/index.php?pl=73&amp;ct1=5&#34; target=&#34;_blank&#34;&gt;豪杰春香&lt;/a&gt; 。刚过0点的时候发了一堆新年快乐，发现还没睡的人也很多啊，赫赫。&lt;br /&gt;

新年要有新的气象，嗯。不过昨晚上kboss啥都木右，看来运气不是很好啊。。。要努力了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Uhello</title>
      <link>https://wdicc.com/uhello/</link>
      <pubDate>Fri, 30 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/uhello/</guid>
      <description>
之前在网上看到一个网址，就是一个100万像素格子的图片，卖这些格子。忘记网址了，刚才去找了一下发现原来国外很多这种网站，比如 &lt;a href=&#34;http://www.pixelsitelinks.com/&#34; target=&#34;_blank&#34;&gt;http://www.pixelsitelinks.com/&lt;/a&gt; 。不过国内还没有看到过。&lt;br /&gt;

刚才看到 &lt;a href=&#34;http://www.8ie.cn/post/241.html&#34; target=&#34;_blank&#34;&gt;七巧仔&lt;/a&gt; 对 &lt;a href=&#34;http://uhello.com/chushibiao/&#34; target=&#34;_blank&#34;&gt;uhello&lt;/a&gt; 的介绍，就去看了看，也满有意思的，呵呵。这个东东全靠那个网站的流量来赚钱了，我看也有51.la的统计，不过看不到。做这个网站的方法到很简单，只要想怎么提高流量就好，呵呵。&lt;br /&gt;

有兴趣的可以过去看看，现在还有 &lt;a href=&#34;http://uhello.com/forum/viewtopic.php?t=25&#34; target=&#34;_blank&#34;&gt;优惠&lt;/a&gt; 。&lt;br /&gt;

做了一个图案。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1264199857.jpg&#34; width=&#34;45&#34; height=&#34;45&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>动态iptables 防火墙</title>
      <link>https://wdicc.com/dynamic-iptables/</link>
      <pubDate>Thu, 29 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/dynamic-iptables/</guid>
      <description>
http://www-128.ibm.com/developerworks/cn/linux/network/dif/index.html&lt;br /&gt;

&lt;a href=&#34;http://www-128.ibm.com/developerworks/cn/linux/network/dif/index.html#author&#34; target=&#34;_blank&#34;&gt;Daniel Robbins&lt;/a&gt;, 总裁兼 CEO, Gentoo Technologies, Inc.&lt;br /&gt;

    防火墙非常有趣，但在需要对防火墙规则进行快速且复杂的更改时，您会做些什么？很简单。请使用本文中演示的 Daniel Robbins 的动态防火墙脚本。可以使用这些脚本来增&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>通过mod_limitipconn模块来限制apache的并发连接数</title>
      <link>https://wdicc.com/apache-limit-module/</link>
      <pubDate>Thu, 29 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-limit-module/</guid>
      <description>
http://bbs.chinaunix.net/viewthread.php?tid=3129&lt;br /&gt;

&lt;b&gt;下载mod_limitipconn.c&lt;/b&gt;&lt;br /&gt;

http://dominia.org/djao/limitipconn.html&lt;br /&gt;

&lt;b&gt;修改httpd.conf&lt;/b&gt;&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
LoadModule limitipconn_module modules/mod_limitipconn.so

ExtendedStatus On

&lt;IfModule mod_limitipconn.c&gt;
    &lt;Location /somewhere&gt;
	MaxConnPerIP 3
	# exempting images from the connection limit is often a good
	# idea if your web page has lots of inline images, since these
	# pages often generate a flurry of concurrent image requests
	NoIPLimit image/*
    &lt;/Location&gt;
#需要注意的是，路径应该是相对服务器的路径。
    &lt;Location /mp3&gt;
	MaxConnPerIP 1
	# In this case, all MIME types other than audio/mpeg and video*
	# are exempt from the limit check
	OnlyIPLimit audio/mpeg video
    &lt;/Location&gt;
&lt;/IfModule&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>四道题让你变成超级大猪头，有胆子就来试试啊zz</title>
      <link>https://wdicc.com/a-joke/</link>
      <pubDate>Wed, 28 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke/</guid>
      <description>第一题:&lt;br /&gt;
　　你正在参加赛跑，几惊辛苦， 你终于超过第二位的健儿，&lt;br /&gt;
　　你现在是第几位?&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
　　answer:&lt;br /&gt;
　　&lt;br /&gt;
　　如果你答第一，你就完全错啦!如果你超前原本第二的人，你便取代他的位置，即是&lt;br /&gt;
第二......&lt;br /&gt;
　　&lt;br /&gt;
　　第二题:（不可以用多过第一题的时间， 要快!）&lt;br /&gt;
　　&lt;br /&gt;
　　如果你跑呀跑， 超前最后一名， 而你现在是第几?&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.answer:&lt;br /&gt;
　　&lt;br /&gt;
　　如果你答尾二， 你又错啦!&lt;br /&gt;
　　你又怎么可能超前最后人，他都是最尾咯...？你怎么还会在他后面?&lt;br /&gt;
　　&lt;br /&gt;
　　第三题:（开始觉得自己有点猪头了吧......）&lt;br /&gt;
　　&lt;br /&gt;
　　数学心算题题... 不准用笔，纸或计数器、， 只可以心算......&lt;br /&gt;
　　1000 加上40 ......得未... 再加1000 ... 再加30...&lt;br /&gt;
　　再多1000... 又再加20... 现在再加多1000... 再加10...&lt;br /&gt;
　　总和是多少?&lt;br /&gt;
　　马上回答!?&lt;br /&gt;
　　&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.5000? 唉...又错啦... ？个计数找个计算器check一下啦......&lt;br /&gt;
　　&lt;br /&gt;
　　answer.&lt;br /&gt;
　　&lt;br /&gt;
　　4100 猪头!&lt;br /&gt;
　　&lt;br /&gt;
　　你真是超笨呀......最后给你一次机会!&lt;br /&gt;
　　&lt;br /&gt;
　　第四题，（英文题:）&lt;br /&gt;
　　&lt;br /&gt;
　　mary‘s father has five daughters: 1. nana， 2. nene， 3. nini，&lt;br /&gt;
　　4.nono.&lt;br /&gt;
　　what is the name of the fifth daughter?&lt;br /&gt;
　　&lt;br /&gt;
　　nunu?&lt;br /&gt;
　　&lt;br /&gt;
　　no! of course not.&lt;br /&gt;
　　&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　.&lt;br /&gt;
　　answer.&lt;br /&gt;
　　&lt;br /&gt;
　　her name is mary. read the question again&lt;br /&gt;
　　&lt;br /&gt;
　　祝贺你终于实现了自己的梦想---做一个大猪头！&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>显示一个文件或者文件夹的数字形式的权限</title>
      <link>https://wdicc.com/usefull-command/</link>
      <pubDate>Wed, 28 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/usefull-command/</guid>
      <description>
stat -c %a&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>写了一篇关于Miranda IM的文章</title>
      <link>https://wdicc.com/something-about-miranda-im/</link>
      <pubDate>Mon, 26 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/something-about-miranda-im/</guid>
      <description>
在这里&lt;br /&gt;
&lt;a href=&#34;http://blog.wdicc.com/mim/Miranda%20IM.htm&#34; target=&#34;_blank&#34;&gt;http://blog.wdicc.com/mim/Miranda%20IM.htm&lt;/a&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>圣诞了</title>
      <link>https://wdicc.com/the-birthday-of-jesus-christ/</link>
      <pubDate>Sun, 25 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/the-birthday-of-jesus-christ/</guid>
      <description>
前天下班就跑去xh那里了，吃了饭，他们在打牌，我在看片子，一会就睡著了，迷迷糊糊的，被托了起来，说要去k歌了，唉，那个郁闷。&lt;br /&gt;

去了白金，券不让用，转去钱柜，k了3小时，快5电的时候才走。钱柜新添了一个菜，炸鸡腿，和麦当劳里面的差不多，味道不错，可以去尝尝，呵呵。&lt;br /&gt;

昨天下午去火锅，抽中一个一等奖，送了50块钱的免餐券，呵呵，不错不错。不过可惜啊，特等奖是一个电磁炉，盯上好久了，唉。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>半夜偷偷下载A片 被老婆撞个正着zz</title>
      <link>https://wdicc.com/a-joke-about-a-film/</link>
      <pubDate>Fri, 23 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-joke-about-a-film/</guid>
      <description>
有一次，是在一个论坛上，看到一个撩人的帖子：“一群青春玉女，赤身裸体，三点全露，年龄绝不超过20岁，风吹欲破的肌肤，活泼自然的表情，让人欲罢不能……绝无病毒，无需注册。”不禁怦然心动，于是悄悄记下了下载地址，等到晚上，老婆和快到周岁的孩子全睡了，才小心翼翼地打开链接，果然无需注册，有300多兆的内容，好家伙，是一部长片啊！我的机子比较老，不过我有耐心等，我冲了杯咖啡，点了根烟，时间一分一秒地过去，屏幕上小纸片一张一张地飞，我似乎看到了一个个美女。&lt;br /&gt;
　　&lt;br /&gt;
整整用了一个多小时，眼看着片子就要下载完了。&lt;br /&gt;

“半夜了，怎么还不睡啊？”不知什么时候老婆进了书房，吓了我一大跳，真想立即就关掉那个页面，可又舍不得，毕竟用了我一个多小时的时间啊。&lt;br /&gt;
　　&lt;br /&gt;
老婆看出了我的异常，干脆走近了电脑：“搞什么名堂？”屏幕上出现了对话框：“是否打开？”我正想解释，老婆已点击了“打开”，我的脸一下子红了起来，半夜三更下载这种东西可真够无聊的！&lt;br /&gt;
　　&lt;br /&gt;
我尴尬地盯着电脑，画面渐渐打开，一个非常年轻而又漂亮的护士出现在画面上，我的脸红到了极点，只见那护士做了个优美的手势，随即出现一行大字：“怎样给婴儿洗澡？”画面上一个个男孩女孩，赤身裸体，果真是不超过20岁，三点全露啊。&lt;br /&gt;
　　&lt;br /&gt;
老婆忍不住笑了起来：“咱这孩子长大了不孝顺可真对不起你的一番苦心啊！”&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>小重山--【宋】岳飞</title>
      <link>https://wdicc.com/a-poem-by-yuefei/</link>
      <pubDate>Mon, 19 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-poem-by-yuefei/</guid>
      <description>
　　昨夜寒蛩不住鸣。惊回千里梦，已三更。起来独自绕阶行。人悄悄，帘外月胧明。&lt;br /&gt;

　　白首为功名，旧山松竹老，阻归程。欲将心事付瑶琴。知音少，弦断有谁听。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>上网实在无聊，看到点东西</title>
      <link>https://wdicc.com/somethins-on-network/</link>
      <pubDate>Sun, 18 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/somethins-on-network/</guid>
      <description>
现在白天上网，晚上上网，做了梦了还在打网游，已经快上到了不知道该上什么网页的地步了，错了，不是快要，应该说是已经是了。&lt;br /&gt;

打开浏览器，去几个常去的网址浏览一下，搜索一下自己感兴趣的关键字，通常都是没什么所获，“求救”“帮我啊”“大牛来看看”，大部分都是此类，早已经失去了回帖的兴趣。&lt;br /&gt;

刚无意中想起来上次某人的blog提到的sina的读书频道，或许那里有几本好看的？想起来了曾经看过的《毕业了一起失恋》《龌龊后的清纯》《风往南吹》之类，或者还能看到不错的咚咚呢。&lt;br /&gt;

书没看到感兴趣的，倒是看到了大家的兴趣，呵呵。左下脚的经典热词里面的内容反映了大家的兴趣&lt;br /&gt;

&lt;div style=&#34;padding-left:50; background-color:#F0F0F0;&#34;&gt;经典热词&lt;br /&gt;
性 美女 外遇 性丑闻 同居&lt;br /&gt;
爆笑 激情 情人 避孕 怀孕&lt;br /&gt;
魔幻 恐怖 侦探 笑话 武侠&lt;br /&gt;
单身女性 女学生 MBA 面试&lt;br /&gt;
原创 减肥 家居 服饰 时尚&lt;br /&gt;
小资 星座 影视 明星 名人&lt;br /&gt;
情色 写真 广告 求职 白领&lt;br /&gt;
时政 军事 修养 高考 留学&lt;br /&gt;
英语 考研 哈佛 女生 校花&lt;br /&gt;
音乐 戏剧 伟人 作家 体育&lt;br /&gt;
地理 北京 成都 心理素质&lt;br /&gt;
上海男人 周杰伦 海蒂性学&lt;br /&gt;
人体艺术 性教育 女博士&lt;/div&gt;&lt;br /&gt;

色情网站不让开，那就打擦边球好了，其实现实生活也是如此。这就让我想起来了昨天刚看得尼古拉斯凯其主演的《战争之王》，打擦边球才能赚到别人几倍的利润而又不被指认违反任何法律。&lt;br /&gt;

在以前资本家说“如果有300%的利润，那就敢践踏人间的一切法律”，现在就不是这样了，大家都是文明人，都是斯文人，也都是聪明人，所以要做的是不践踏法律的情况下，拿到300%或者更多的利润。&lt;br /&gt;

yy一下，大家不都喜欢yy么？yy无际限...{{bss}}&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>昨天老婆的第一笔工资</title>
      <link>https://wdicc.com/first-pay/</link>
      <pubDate>Fri, 16 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/first-pay/</guid>
      <description>
没发多少钱，给我买了一个鞋子，一条裤子。本来还要买衣服的，我都说不喜欢就没买。嗯，要记下来，记下来。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>网络好慢阿</title>
      <link>https://wdicc.com/sloooow-network/</link>
      <pubDate>Fri, 16 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sloooow-network/</guid>
      <description>
唉，真郁闷。以前长宽的时候还天天上内网骂，现在adsl都没地方骂。好慢的adsl阿。。。{{gx }}{{test}}{{kq}}{{kq}}&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>tatter tools中的一个小bug</title>
      <link>https://wdicc.com/a-bug-of-tatter-tools/</link>
      <pubDate>Wed, 14 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-bug-of-tatter-tools/</guid>
      <description>
中午在tatter发帖子的时候发现有时code&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为Archlinux做镜像</title>
      <link>https://wdicc.com/mirror-for-arch/</link>
      <pubDate>Wed, 14 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/mirror-for-arch/</guid>
      <description>
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
MIRROR_PATH=/data/archlinux
rsync -avz rsync.archlinux.org::current $MIRROR_PATH/current/
rsync -avz rsync.archlinux.org::extra $MIRROR_PATH/extra/
rsync -avz rsync.archlinux.org::ftp/testing $MIRROR_PATH/testing/
rsync -avz rsync.archlinux.org::ftp/unstable $MIRROR_PATH/unstable/

#LOCAL_PATH=/data/archlinux
#rsync -avz download.ourlinux.net::archlinux-current $LOCAL_PATH/current
#rsync -avz download.ourlinux.net::archlinux-extra $LOCAL_PATH/extra
#rsync -avz download.ourlinux.net::archlinux-unstable $LOCAL_PATH/unstable
#rsync -avz download.ourlinux.net::archlinux-testing $LOCAL_PATH/testing
#rsync -avz download.ourlinux.net::archlinux-alcle $LOCAL_PATH/alcle&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>为debian unstable做镜像</title>
      <link>https://wdicc.com/mirror-for-debian/</link>
      <pubDate>Wed, 14 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/mirror-for-debian/</guid>
      <description>
#HOST=opensource.nchc.org.tw&lt;br /&gt;
HOST=debian.nctu.edu.tw&lt;br /&gt;
#HOST_NONUS=opensource.nchc.org.tw&lt;br /&gt;
#HOST_NONUS=debian.cn99.com&lt;br /&gt;
HOST_NONUS=debian.nctu.edu.tw&lt;br /&gt;

DISTS=&#34;unstable&#34;&lt;br /&gt;
DISTS_NONUS=&#34;unstable/non-US&#34;&lt;br /&gt;
DISTS_SEC=&#34;unstable/updates&#34;&lt;br /&gt;

ARCHS=&#34;i386&#34;&lt;br /&gt;

MIRROR_ROOT=&#39;/data/debian/debian&#39;&lt;br /&gt;
MIRROR_ROOT_NONUS=&#39;/data/debian/debian-non-US&#39;&lt;br /&gt;

OPTIONS=&#34;--getcontents --progress --nosource --method=http -s main,contrib,non-free --ignore-release-gpg&#34;&lt;br /&gt;


#ADDDIRS=&#34;dists/unstable/main/disks-i386&#34; &lt;br /&gt;


echo &#34;Processing standard using $HOST&#34; &lt;br /&gt;
/usr/bin/debmirror --host=$HOST --dist=$DISTS --arch=$ARCHS $OPTIONS -r /debian $MIRROR_ROOT&lt;br /&gt;

echo &#34;Processing non-US using $HOST_NONUS&#34; &lt;br /&gt;
/usr/bin/debmirror --host=$HOST_NONUS --dist=$DISTS_NONUS --arch=$ARCHS $OPTIONS -r /debian-non-US $MIRROR_ROOT_NONUS&lt;br /&gt;

echo &#34;Processing xfce4.2 using www.os-works.com&#34;&lt;br /&gt;

/usr/bin/debmirror -a i386 -s main -h www.os-works.com -d testing -r /debian --progress -e http --ignore-release-gpg /data/debian/xf&lt;br /&gt;
ce4.2&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>生成缩略图和给图片</title>
      <link>https://wdicc.com/add-water-mark/</link>
      <pubDate>Tue, 13 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/add-water-mark/</guid>
      <description>&lt;pre lang=&#34;php&#34;&gt;&lt;br /&gt;
&lt;?&lt;br /&gt;

$FILENAME=&#34;image_name&#34;;&lt;br /&gt;

// 生成图片的宽度&lt;br /&gt;
$RESIZEWIDTH=400;&lt;br /&gt;

// 生成图片的高度&lt;br /&gt;
$RESIZEHEIGHT=400;&lt;br /&gt;


function ResizeImage($im,$maxwidth,$maxheight,$name){&lt;br /&gt;
	$width = imagesx($im);&lt;br /&gt;
	$height = imagesy($im);&lt;br /&gt;
	&lt;br /&gt;
	if(($maxwidth &amp;&amp; $width &gt; $maxwidth) || ($maxheight &amp;&amp; $height &gt; $maxheight)){&lt;br /&gt;
		if($maxwidth &amp;&amp; $width &gt; $maxwidth){&lt;br /&gt;
			$widthratio = $maxwidth/$width;&lt;br /&gt;
			$RESIZEWIDTH=true;&lt;br /&gt;
		}&lt;br /&gt;

		if($maxheight &amp;&amp; $height &gt; $maxheight){&lt;br /&gt;
			$heightratio = $maxheight/$height;&lt;br /&gt;
			$RESIZEHEIGHT=true;&lt;br /&gt;
		}&lt;br /&gt;

		if($RESIZEWIDTH &amp;&amp; $RESIZEHEIGHT){&lt;br /&gt;
			if($widthratio &lt; $heightratio){&lt;br /&gt;
				$ratio = $widthratio;&lt;br /&gt;
			}else{&lt;br /&gt;
				$ratio = $heightratio;&lt;br /&gt;
			}&lt;br /&gt;
		}elseif($RESIZEWIDTH){&lt;br /&gt;
			$ratio = $widthratio;&lt;br /&gt;
		}elseif($RESIZEHEIGHT){&lt;br /&gt;
			$ratio = $heightratio;&lt;br /&gt;
		}&lt;br /&gt;
		&lt;br /&gt;
		$newwidth = $width * $ratio;&lt;br /&gt;
		$newheight = $height * $ratio;&lt;br /&gt;
		&lt;br /&gt;
		if(function_exists(&#34;imagecopyresampled&#34;)){&lt;br /&gt;
			$newim = imagecreatetruecolor($newwidth, $newheight);&lt;br /&gt;
			imagecopyresampled($newim, $im, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);&lt;br /&gt;
		}else{&lt;br /&gt;
			$newim = imagecreate($newwidth, $newheight);&lt;br /&gt;
			imagecopyresized($newim, $im, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);&lt;br /&gt;
		}&lt;br /&gt;
		&lt;br /&gt;
		ImageJpeg ($newim,$name . &#34;.jpg&#34;);&lt;br /&gt;
		ImageDestroy ($newim);&lt;br /&gt;
	}else{&lt;br /&gt;
		ImageJpeg ($im,$name . &#34;.jpg&#34;);&lt;br /&gt;
	}&lt;br /&gt;
}&lt;br /&gt;



if($_FILES[&amp;#39;image&amp;#39;][&amp;#39;size&amp;#39;]){&lt;br /&gt;
	if($_FILES[&amp;#39;image&amp;#39;][&amp;#39;type&amp;#39;] == &#34;image/pjpeg&#34;){&lt;br /&gt;
		$im = imagecreatefromjpeg($_FILES[&amp;#39;image&amp;#39;][&amp;#39;tmp_name&amp;#39;]);&lt;br /&gt;
	}elseif($_FILES[&amp;#39;image&amp;#39;][&amp;#39;type&amp;#39;] == &#34;image/x-png&#34;){&lt;br /&gt;
		$im = imagecreatefrompng($_FILES[&amp;#39;image&amp;#39;][&amp;#39;tmp_name&amp;#39;]);&lt;br /&gt;
	}elseif($_FILES[&amp;#39;image&amp;#39;][&amp;#39;type&amp;#39;] == &#34;image/gif&#34;){&lt;br /&gt;
		$im = imagecreatefromgif($_FILES[&amp;#39;image&amp;#39;][&amp;#39;tmp_name&amp;#39;]);&lt;br /&gt;
	}&lt;br /&gt;
	&lt;br /&gt;
	if($im){&lt;br /&gt;
		if(file_exists(&#34;$FILENAME.jpg&#34;)){&lt;br /&gt;
			unlink(&#34;$FILENAME.jpg&#34;);&lt;br /&gt;
		}&lt;br /&gt;
		ResizeImage($im,$RESIZEWIDTH,$RESIZEHEIGHT,$FILENAME);&lt;br /&gt;
		ImageDestroy ($im);&lt;br /&gt;
	}&lt;br /&gt;
}&lt;br /&gt;

?&gt;&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;

自动&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>推荐一个韩剧《豪杰春香》</title>
      <link>https://wdicc.com/recommend-a-korean-sitcom/</link>
      <pubDate>Mon, 12 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/recommend-a-korean-sitcom/</guid>
      <description>
看完了《浪漫满屋》暂时没的看了。无意中在tv版看到一拖人推荐《豪杰春香》，就试着down了2集看看。第一集看了一半就喜欢上这个片子了，哈哈。&lt;br /&gt;

这个片子的内容和《浪漫满屋》的情节可能差不多，也是两个人在不情愿下结了婚，然后blablabla。。。{{haning}}，里面mm挺pp，gg挺ss，男女应该都喜欢看，呵呵。&lt;br /&gt;


&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1137632615.jpg&#34; width=&#34;590&#34; height=&#34;442&#34;&gt;&lt;/center&gt;&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1134710887.jpg&#34; width=&#34;500&#34; height=&#34;350&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>为网站申请了一个域名</title>
      <link>https://wdicc.com/buy-a-domain-name/</link>
      <pubDate>Sat, 10 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/buy-a-domain-name/</guid>
      <description>
wdicc.com&lt;br /&gt;

在yahoo申请的，需要支付$，不过有信用卡就可以。5年$15不到，平均一年$3，也就是￥20多块钱。国内申请的话，通常.com的域名需要￥70多。所以要申请的抓紧了。&lt;br /&gt;

申请的地址：&lt;a href=&#34;http://smallbusiness.yahoo.com/domains&#34; target=&#34;_blank&#34;&gt;http://smallbusiness.yahoo.com/domains&lt;/a&gt;&lt;br /&gt;

5年之后续费似乎是￥80多。不过谁知道5年后是个什么行情了，呵呵。{{bss}}&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>尝试了一下用微波炉泡方便面</title>
      <link>https://wdicc.com/micro-wave-oven-noodles/</link>
      <pubDate>Sat, 10 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/micro-wave-oven-noodles/</guid>
      <description>
前天去大中买了一个微波炉，格兰士的，花了￥600。之前本来打算花个￥300就搞定的，结果去了一看就选中这个了。那个导购mm也比较会推销，从￥399到￥499到￥599一直推，最后成功推销掉了￥599的。不过老婆也不是吃素的，从刚开始只送一个蒸锅，到最后送了2个蒸锅，2套碗，1个蒸蛋器，再加一个热牛奶的，呵呵。太牛啦。。{{haning}}&lt;br /&gt;

昨天试了一下煮方便面。他那个上头有个方便面的按钮，其实也就是为了这些按钮才买的这个，因为不会用，时间长短上自己也不会把握，所以弱智一点机器应该还比较好用。。。&lt;br /&gt;

先找了一个碗，放了两带方便面，放了水进去，按照说明书，200克按了两下那个按钮，定时是3分钟。自己还在琢磨呢，这玩意还真不错，要是烧水3分钟也烧不开啊，这个就能煮好方便面了，不错。&lt;br /&gt;

等了一会提示好了，打开一看。。。。水还没热那。。。{{gx }}微波炉耍我啊？再放进去，又按了一下那个按钮，定时2分钟，继续等。&lt;br /&gt;

等一下又提示好了，打开再看。。。。水刚刚有点温度。。。{{shale}}有点郁闷了，怎么还没好？再放进去，又按了一下那个按钮，2分钟，再等。。。&lt;br /&gt;

又提示好了。。。打开看看。。。{{kq}}。。还没好。。。水是热了，可是方便面还没泡开呢。。。再再次放进去，又按了一下，再再等。。&lt;br /&gt;

又提示好了。。。打开看看，唉将就吃吧。。{{kq}}&lt;br /&gt;

总结一下：总共大概花了10分钟才好，下次煮就知道了。不过他那个按钮有问题啊，难道是让我放热水进去？。。。。{{shale}}&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>总算找到Miranda中文的组织了</title>
      <link>https://wdicc.com/miranda-china/</link>
      <pubDate>Thu, 08 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/miranda-china/</guid>
      <description>
http://forums.miranda-im.org/showthread.php?t=1144&lt;br /&gt;

the characters under is chinese&lt;br /&gt;

我是从2001年初开始用miranda的 当时还是0.1&lt;br /&gt;
还是miranda icq 的名字&lt;br /&gt;
现在miranda 慢慢发展起来了 我仍然在用她 很喜欢&lt;br /&gt;

不过我在这里仅仅遇到过几个 香港朋友&lt;br /&gt;
我想这里应该不少说中国话的朋友吧&lt;br /&gt;
我很想和你们多交流一下 也想在中国推广一下 miranda&lt;br /&gt;
不象现在 一些小孩子把miranda＋qqplugin用来挂qq 或是简单的使用当成msn替代品&lt;br /&gt;
我们要参与进来 我不是程序员 不过也算为miranda做了一点小的customize&lt;br /&gt;

我希望和这里的中国朋友 包括大陆 台湾 香港 澳门 华侨等等 交流一下&lt;br /&gt;

感谢stark开发qq新插件 需要的朋友可以去下载 讨论贴在靠后的地方找&lt;br /&gt;

下载地址 http://starkwong.ivehost.net/mimqq/&lt;br /&gt;


我的&lt;br /&gt;
icq 698253&lt;br /&gt;
msn jerrycutest@hotmail.com&lt;br /&gt;
email: jdepot@21cn.com&lt;br /&gt;

还有个qq群 2571213&lt;br /&gt;

{{kaixin}}&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>grep的一个用法</title>
      <link>https://wdicc.com/use-grep/</link>
      <pubDate>Tue, 06 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-grep/</guid>
      <description>
在目前的目錄及子目錄下，找尋所有的檔案，並顯示含有 Keyword 的檔案列表&lt;br /&gt;

grep -r &#34;Keyword&#34; *&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Linux下面如何制作ico图标？</title>
      <link>https://wdicc.com/make-ico-in-linux/</link>
      <pubDate>Mon, 05 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/make-ico-in-linux/</guid>
      <description>
首先用画图工具制作png or gif文件，然后用netpbm转一下就可以了。&lt;br /&gt;

netpbm可以从这里下载：netpbm.sf.net&lt;br /&gt;

在debian下面，直接apt-get install netpbm即可。&lt;br /&gt;

然后这样转换：&lt;br /&gt;

pngtopnm myicon.png  | ppmtowinicon -output favicon.ico&lt;br /&gt;

转自:http://www.bloghome.cn/index.php?op=ViewArticle&amp;articleId=14&amp;blogId=5&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>弄了一个photo album</title>
      <link>https://wdicc.com/make-a-photo-album/</link>
      <pubDate>Sun, 04 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/make-a-photo-album/</guid>
      <description>
居然弄到了1点半，天那{{tianna}}，不过总算弄好了，呵呵{{kaixin}}&lt;br /&gt;

地址是&lt;a href=&#34;http://stefing.3322.org/pixelpost/index.php&#34; target=&#34;_blank&#34;&gt;http://stefing.3322.org/pixelpost/index.php&lt;/a&gt;。&lt;br /&gt;

用的是pixelpost，从他网站上下了一个模板，改吧改吧，看着效果还可以。&lt;br /&gt;

又换了一个模板，嘿嘿。{{kaixin}}&lt;br /&gt;

tt&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>添加了一些表情，呵呵</title>
      <link>https://wdicc.com/add-some-emotion/</link>
      <pubDate>Sat, 03 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/add-some-emotion/</guid>
      <description>
{{gx }}{{papa}}{{kaixin}}{{test}}&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>wget 使用</title>
      <link>https://wdicc.com/use-wget/</link>
      <pubDate>Fri, 02 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-wget/</guid>
      <description>
http://www.linuxfans.org/nuke/modules.php?name=Forums&amp;file=viewtopic&amp;t=88813&lt;br /&gt;

$ wget --help&lt;br /&gt;
GNU Wget 1.9.1，非交互式的网络文件下载工具。&lt;br /&gt;
用法： wget [选项]... [URL]...&lt;br /&gt;

长选项必须用的参数在使用短选项时也是必须的。&lt;br /&gt;

启动：&lt;br /&gt;
  -V,  --version           显示 Wget 的版本并且退出。&lt;br /&gt;
  -h,  --help              打印此帮助。&lt;br /&gt;
  -b,  -background         启动后进入后台操作。&lt;br /&gt;
  -e,  -execute=COMMAND    运行‘.wgetrc’形式的命令。&lt;br /&gt;

日志记录及输入文件：&lt;br /&gt;
  -o,  --output-file=文件     将日志消息写入到指定文件中。&lt;br /&gt;
  -a,  --append-output=文件   将日志消息追加到指定文件的末端。&lt;br /&gt;
  -d,  --debug                打印调试输出。&lt;br /&gt;
  -q,  --quiet                安静模式(不输出信息)。&lt;br /&gt;
  -v,  --verbose               详细输出模式(默认)。&lt;br /&gt;
  -nv, --non-verbose          关闭详细输出模式，但不进入安静模式。&lt;br /&gt;
  -i,  --input-file=文件      下载从指定文件中找到的 URL。&lt;br /&gt;
  -F,  --force-html           以 HTML 方式处理输入文件。&lt;br /&gt;
  -B,  --base=URL             使用 -F -i 文件选项时，在相对链接前添加指定的 URL。&lt;br /&gt;

下载：&lt;br /&gt;
  -t,  --tries=次数             配置重试次数（0 表示无限）。&lt;br /&gt;
       --retry-connrefused      即使拒绝连接也重试。&lt;br /&gt;
  -O   --output-document=文件   将数据写入此文件中。&lt;br /&gt;
  -nc, --no-clobber             不更改已经存在的文件，也不使用在文件名后&lt;br /&gt;
                                添加 .#（# 为数字）的方法写入新的文件。&lt;br /&gt;
  -c,  --continue               继续接收已下载了一部分的文件。&lt;br /&gt;
       --progress=方式          选择下载进度的表示方式。&lt;br /&gt;
  -N,  --timestamping           除非远程文件较新，否则不再取回。&lt;br /&gt;
  -S,  --server-response        显示服务器回应消息。&lt;br /&gt;
       --spider                 不下载任何数据。&lt;br /&gt;
  -T,  --timeout=秒数           配置读取数据的超时时间 (秒数)。&lt;br /&gt;
  -w,  --wait=秒数              接收不同文件之间等待的秒数。&lt;br /&gt;
       --waitretry=秒数         在每次重试之间稍等一段时间 (由 1 秒至指定的 秒数不等)。&lt;br /&gt;
       --random-wait            接收不同文件之间稍等一段时间(由 0 秒至  2*WAIT 秒不等)。&lt;br /&gt;
  -Y,  --proxy=on/off           打开或关闭代理服务器。&lt;br /&gt;
  -Q,  --quota=大小             配置接收数据的限额大小。&lt;br /&gt;
       --bind-address=地址      使用本机的指定地址 (主机名称或 IP) 进行连接。&lt;br /&gt;
       --limit-rate=速率        限制下载的速率。&lt;br /&gt;
       --dns-cache=off          禁止查找存于高速缓存中的 DNS。&lt;br /&gt;
       --restrict-file-names=OS 限制文件名中的字符为指定的 OS (操作系统) 所允许的字符。&lt;br /&gt;

目录：&lt;br /&gt;
  -nd  --no-directories            不创建目录。&lt;br /&gt;
  -x,  --force-directories         强制创建目录。&lt;br /&gt;
  -nH, --no-host-directories       不创建含有远程主机名称的目录。&lt;br /&gt;
  -P,  --directory-prefix=名称     保存文件前先创建指定名称的目录。&lt;br /&gt;
       --cut-dirs=数目             忽略远程目录中指定数目的目录层。&lt;br /&gt;

HTTP 选项：&lt;br /&gt;
       --http-user=用户    配置 http 用户名。&lt;br /&gt;
       --http-passwd=密码    配置 http 用户密码。&lt;br /&gt;
  -C,  --cache=on/off        (不)使用服务器中的高速缓存中的数据 (默认是使用的)。&lt;br /&gt;
  -E,  --html-extension      将所有 MIME 类型为 text/html 的文件都加上 .html 扩展文件名。&lt;br /&gt;
       --ignore-length       忽略“Content-Length”文件头字段。&lt;br /&gt;
       --header=字符串         在文件头中添加指定字符串。&lt;br /&gt;
       --proxy-user=用户   配置代理服务器用户名。&lt;br /&gt;
       --proxy-passwd=密码   配置代理服务器用户密码。&lt;br /&gt;
       --referer=URL         在 HTTP 请求中包含“Referer：URL”头。&lt;br /&gt;
  -s,  --save-headers        将 HTTP 头存入文件。&lt;br /&gt;
  -U,  --user-agent=AGENT    标志为 AGENT 而不是 Wget/VERSION。&lt;br /&gt;
       --no-http-keep-alive  禁用 HTTP keep-alive（持久性连接）。&lt;br /&gt;
       --cookies=off         禁用 cookie。&lt;br /&gt;
       --load-cookies=文件   会话开始前由指定文件载入 cookie。&lt;br /&gt;
       --save-cookies=文件   会话结束后将 cookie 保存至指定文件。&lt;br /&gt;
       --post-data=字符串    使用 POST 方法，发送指定字符串。&lt;br /&gt;
       --post-file=文件      使用 POST 方法，发送指定文件中的内容。&lt;br /&gt;

HTTPS (SSL) 选项：&lt;br /&gt;
       --sslcertfile=文件     可选的客户段端证书。&lt;br /&gt;
       --sslcertkey=密钥文件  对此证书可选的“密钥文件”。&lt;br /&gt;
       --egd-file=文件        EGD socket 文件名。&lt;br /&gt;
       --sslcadir=目录         CA 散列表所在的目录。&lt;br /&gt;
       --sslcafile=文件      包含 CA 的文件。&lt;br /&gt;
       --sslcerttype=0/1      Client-Cert 类型 0=PEM (默认) / 1=ASN1 (DER)&lt;br /&gt;
       --sslcheckcert=0/1     根据提供的 CA 检查服务器的证书&lt;br /&gt;
       --sslprotocol=0-3      选择 SSL 协议；0=自动选择，&lt;br /&gt;
                              1=SSLv2 2=SSLv3 3=TLSv1&lt;br /&gt;

FTP 选项：&lt;br /&gt;
  -nr, --dont-remove-listing   不删除“.listing”文件。&lt;br /&gt;
  -g,  --glob=on/off           设置是否展开有通配符的文件名。&lt;br /&gt;
       --passive-ftp           使用“被动”传输模式。&lt;br /&gt;
       --retr-symlinks         在递归模式中，下载链接所指示的文件(连至目录&lt;br /&gt;
                               则例外）。&lt;br /&gt;
递归下载：&lt;br /&gt;
  -r,  --recursive          递归下载。&lt;br /&gt;
  -l,  --level=数字         最大递归深度(inf 或 0 表示无限)。&lt;br /&gt;
       --delete-after       删除下载后的文件。&lt;br /&gt;
  -k,  --convert-links      将绝对链接转换为相对链接。&lt;br /&gt;
  -K,  --backup-converted   转换文件 X 前先将其备份为 X.orig。&lt;br /&gt;
  -m,  --mirror             等效于 -r -N -l inf -nr 的选项。&lt;br /&gt;
  -p,  --page-requisites    下载所有显示完整网页所需的文件，例如图像。&lt;br /&gt;
       --strict-comments    打开对 HTML 备注的严格(SGML)处理选项。&lt;br /&gt;

递归下载时有关接受/拒绝的选项：&lt;br /&gt;
  -A,  --accept=列表                接受的文件样式列表，以逗号分隔。&lt;br /&gt;
  -R,  --reject=列表                排除的文件样式列表，以逗号分隔。&lt;br /&gt;
  -D,  --domains=列表               接受的域列表，以逗号分隔。&lt;br /&gt;
       --exclude-domains=列表       排除的域列表，以逗号分隔。&lt;br /&gt;
       --follow-ftp                 跟随 HTML 文件中的 FTP 链接。&lt;br /&gt;
       --follow-tags=列表           要跟随的 HTML 标记，以逗号分隔。&lt;br /&gt;
  -G,  --ignore-tags=列表           要忽略的 HTML 标记，以逗号分隔。&lt;br /&gt;
  -H,  --span-hosts                 递归时可进入其它主机。&lt;br /&gt;
  -L,  --relative                   只跟随相对链接。&lt;br /&gt;
  -I,  --include-directories=列表   要下载的目录列表。&lt;br /&gt;
  -X,  --exclude-directories=列表   要排除的目录列表。&lt;br /&gt;
  -np, --no-parent                  不搜索上层目录。&lt;br /&gt;

请将错误报告或建议寄给 &lt;bug-wget@gnu.org&gt;。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>一页纸多一点的博士论文</title>
      <link>https://wdicc.com/1-page-paper/</link>
      <pubDate>Fri, 02 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/1-page-paper/</guid>
      <description>时间一转就到了1919，这是一个科学界急剧动荡动着的年代。就在这一年，德布罗意突&lt;br /&gt;
然 移情别恋对物理产生了兴趣，尤其是感兴趣于当时正流行的量子论。具体来说就是感&lt;br /&gt;
兴趣 于一个在当时很酷的观点：光具有粒子性。 &lt;br /&gt;


这一观点早在十几年前由普朗克提出，而后被爱因斯坦用来解释了光电效应，但即便如&lt;br /&gt;
此 ，也非常不见容于物理学界各大门派。德布罗意倒并不见得对这一观点的物理思想有&lt;br /&gt;
多了 解，也许他的理解也仅仅就是理解到这个观点是在说“波就是粒子”。 &lt;br /&gt;


或许是一时冲动，或许是因为年轻而摆酷，德布罗意来到了一派宗师朗之万门下读研究&lt;br /&gt;
生 。从此，德布罗意走出了一道足以让让任何传奇都黯然失色的人生轨迹。 &lt;br /&gt;


二 &lt;br /&gt;

历史上德布罗意到底花了多少精力去读他的研究生也许已经很难说清，事实上德布罗意&lt;br /&gt;
在 他的5年研究生生涯中几乎是一事无成。事实上也可以想象，一个此前对物理一窍不&lt;br /&gt;
通的中 世纪史爱好者很难真正的在物理上去做些什么。白驹过隙般的五年转眼就过去了&lt;br /&gt;
，德布罗 意开始要为他的博士论文发愁了。 &lt;br /&gt;


其实德布罗意大约只是明白普朗克爱因斯坦那帮家伙一直在说什么波就是粒子，(事实上&lt;br /&gt;
对 于普朗克大约不能用“一直”二字，此时的普朗克已经完全抛弃自己当初的量子假设&lt;br /&gt;
，又 回到了经典的旧框架。)而真正其中包含的物理，他能理解多少大约只有上帝清楚&lt;br /&gt;
。 &lt;br /&gt;


五年的尽头，也就是在1924，德布罗意终于提交了自己的博士论文。他的博士论文只有&lt;br /&gt;
一 页纸多一点，不过可以猜想这一页多一点的一份论文大约已经让德布罗意很头疼了，&lt;br /&gt;
只可 惜当时没有枪手可以雇来帮忙写博士论文。他的博士论文只是说了一个猜想，既然&lt;br /&gt;
波可以 是粒子，那么反过来粒子也可以是波。 &lt;br /&gt;


而进一步德布罗意提出波的波矢和角频率与粒子动量和能量的关系是： &lt;br /&gt;

动量＝普朗克常数/波矢 &lt;br /&gt;

能量＝普朗克常数*角频率 &lt;br /&gt;

这就是他的论文里提出的两个公式。 &lt;br /&gt;

而这两个公式的提出也完全是因为在爱因斯坦解释光电效应的时候提出光子的动量和能&lt;br /&gt;
量 与光的参数满足这一关系。可以想象这样一个博士论文会得到怎样的回应。 &lt;br /&gt;


在对论文是否通过的投票之前，德布罗意的老板朗之万就事先得知论文评审委员会的六&lt;br /&gt;
位 教授中有三位已明确表态会投反对票。 &lt;br /&gt;


本来在欧洲，一个学生苦读数年都拿不到学位是件很正常的事情，时至今日的欧洲也依&lt;br /&gt;
然 如此。何况德布罗意本来就是这么一个来混日子的花花公子。 &lt;br /&gt;


然而这次偏偏又有些不一样---德布罗意的父亲又是一位权高望众的内阁部长，而德布罗&lt;br /&gt;
意 在此厮混五年最后连一个Ph.D都没拿到，双方面子上自然也有些挂不住。情急之中，&lt;br /&gt;
朗之 万往他的一个好朋友那里寄了一封信。当初的朗之万是不是碍于情面想帮德布罗意&lt;br /&gt;
混得一 个PhD已不得而知，然而事实上，这一封信却改变了科学发展的轨迹。 &lt;br /&gt;


三 &lt;br /&gt;

这封信的收信人是爱因斯坦。信的内容大致如下： &lt;br /&gt;

尊敬的爱因斯坦阁下： &lt;br /&gt;

在我这里有一位研究生，已经攻读了五年的博士学位，如今即将毕业，在他提交的毕业&lt;br /&gt;
论 文中有一些新的想法…请对他的论文作出您的评价。 &lt;br /&gt;


另外顺便向您提及，该研究生的父亲是弊国的一位伯爵，内阁的**部长，若您……，将&lt;br /&gt;
来 您来法国定会受到隆重的接待 朗之万 &lt;br /&gt;


在信中，大约朗之万的潜台词似乎就是如果您不肯给个面子，呵呵，以后就甭来法国了&lt;br /&gt;
。 不知是出于知趣，还是出于当年自己的离经叛道而产生的惺惺相惜，爱因斯坦很客气&lt;br /&gt;
回了 一封信，大意是该论文里有一些很新很有趣的思想云云。 &lt;br /&gt;


此时的爱因斯坦虽不属于任何名门望派，却已独步于江湖，颇有威望。有了爱因斯坦的&lt;br /&gt;
这 一封信，评审委员会的几位教授也不好再多说些什么了。于是，皆大欢喜。 &lt;br /&gt;


浪荡子弟德布罗意就这样攻读下了他的PhD(博士)。而按照当时欧洲的学术传统，朗之万&lt;br /&gt;
则 将德布罗意的博士论文印成若干份分寄到了欧洲各大学的物理系。大约所有人都以为&lt;br /&gt;
事情 会就此了结，多少年以后德布罗意那篇很新很有趣的博士论文也就被埋藏到了档案&lt;br /&gt;
堆里了 。德布罗意大约也就从此以一个PhD的身份继续自己的浪荡生活。但历史总是喜&lt;br /&gt;
欢用偶然来 开一些玩笑，而这种玩笑中往往也就顺带着改变了许多人的命运。在朗之万&lt;br /&gt;
寄出的博士论 文中，有一份来到了维也纳大学。 &lt;br /&gt;


四 &lt;br /&gt;

1926年初。维也纳。当时在维也纳大学主持物理学术活动的教授是德拜，他收到这份博&lt;br /&gt;
士 论文后，将它交给了他的组里面一位已经年届中年的讲师。 &lt;br /&gt;


这位讲师接到的任务是在两周后的Seminar(学术例会)上将该博士论讲一下。这位老讲师&lt;br /&gt;
大 约早已适应了他现在这种不知算是平庸还是算是平静的生活，可以想象，一个已到不&lt;br /&gt;
惑之 年而仍然只在讲师的位置上晃荡的人，其学术前途自然是朦胧而晦暗。而大约也正&lt;br /&gt;
因为这 位讲师的这种地位才使得它可以获得这个任务，因为德拜将任务交给这位讲师时&lt;br /&gt;
的理由正 是你现在研究的问题不很重要，不如给我们讲讲德布罗意的论文吧。这位讲师&lt;br /&gt;
的名字叫做 ---薛定谔(Schrodinger)！ &lt;br /&gt;


在接下来的两周里，薛定谔仔细的读了一下德布罗意的博士论文，其实从内容上来讲也&lt;br /&gt;
许 根本就用不上“仔细”二字，德布罗意的这篇论文只不过一页纸多一点，通篇提出的&lt;br /&gt;
式子 也不过就两个而已，并且其原型是已经在爱因斯坦发表的论文中出现过的。 &lt;br /&gt;


然而论文里说的话却让薛定谔一头雾水，薛定谔只知道德布罗意大讲了一通波即粒子，&lt;br /&gt;
粒 子即波，除此之外则是不知所云。 &lt;br /&gt;


两周之后，薛定谔硬着头皮把这篇论文的内容在Seminar上讲了一下，讲者不懂，听者自&lt;br /&gt;
然 也是云里雾里，而老板德拜则做了一个客气的评价：这个年轻人的观点还是有些新颖&lt;br /&gt;
的东 西的，虽然显得很孩子气，当然也许他需要更深入一步，比如既然提到波的概念，&lt;br /&gt;
那么总 该有一个波动方程吧。多年以后有人问德拜是否后悔自己当初作出的这一个评论&lt;br /&gt;
，德拜自 我解嘲的说，你不觉得这是一个很好的评论吗？并且，德拜建议薛定谔做一做&lt;br /&gt;
这个工作， 在两周以后的seminar上再讲一下。 &lt;br /&gt;


两周以后。薛定谔再次在seminar上讲解德布罗意的论文，并且为德布罗意的波找了一个&lt;br /&gt;
波 动方程。这个方程就是薛定谔方程！ &lt;br /&gt;


当然，一开始德布罗意的那篇论文就已经认为是垃圾，而从垃圾产生出来的自然也不会&lt;br /&gt;
离 垃圾太远，于是没人真正把这个硬生生给德布罗意的波套上的方程当一回事，甚至还&lt;br /&gt;
有人 顺口编了一首打油诗讽刺薛定谔的方程： &lt;br /&gt;


欧文用他的psi，计算起来真灵通：但psi真正代表什么，没人能够说得清。(欧文就是薛&lt;br /&gt;
定 谔，psi是薛定谔波动方程中的一个变量)。故事的情节好像又一次的要归于平庸了，&lt;br /&gt;
然而 平庸偏偏有时候就成了奇迹的理由。大约正是薛定谔的平庸使得它对自己的这个波&lt;br /&gt;
动方程 的平庸有些心有不甘，他决定再在这个方程中撞一撞运气。 &lt;br /&gt;


五 &lt;br /&gt;

上面讲到的情节放到当时的大环境中来看就好像是湖水下的一场大地震---从湖面上看来&lt;br /&gt;
却 是风平浪静。下面请允许我暂时停止对老讲师薛定谔的追踪，而回过头来看一看这两&lt;br /&gt;
年发 生在物理学界这个大湖表面的风浪。 &lt;br /&gt;


此前，玻尔由普朗克和爱因斯坦的理论的启发提出了著名的三部曲，解释了氢光谱，在&lt;br /&gt;
这 十几年的发展当中，由玻尔掌门的哥本哈根学派已然是量子理论界的少林武当。 &lt;br /&gt;


1925，玻尔的得意弟子海森堡提出了著名的矩阵力学，进一步抛弃经典概念，揭示量子&lt;br /&gt;
图 像，精确的解释了许多现象，已经成为哥本哈根学派的镇门之宝---量子届的“屠龙&lt;br /&gt;
宝刀” 。不过在当时懂矩阵的物理学家没有几个，所以矩阵力学的影响力仍然有限。事&lt;br /&gt;
实上就是 海森堡本人也并不懂矩阵，而只是在他的理论出炉之后哥本哈根学派的另一位&lt;br /&gt;
弟子玻恩告 诉海森堡他用的东西在数学中就是矩阵。 &lt;br /&gt;


再回过头来再关注一下我们那个生活风平浪静的老讲师薛定谔在干些什么---我指的是在&lt;br /&gt;
薛 定谔讲解他的波动方程之后的两个星期里。事实上此时的他正浸在温柔乡中---带着&lt;br /&gt;
他的情 妇在维也纳的某个滑雪场滑雪。不知道是宜人的风景，总之是冥冥之中有某种东&lt;br /&gt;
西，给了 薛定谔一个灵感，而就是这一个灵感，改变了物理学发展的轨迹。薛定谔从他&lt;br /&gt;
的方程中得 出了玻尔的氢原子理论！ &lt;br /&gt;


六 &lt;br /&gt;

倚天一出，天下大惊。从此谁也不敢再把薛定谔的波动方程当成nonsense了。哥本哈根&lt;br /&gt;
学 派的掌门人玻尔更是大为惊诧，于是将薛定谔请到哥本哈根，详细切磋量子之精妙。&lt;br /&gt;
然而 让玻尔遗憾的是，在十天的漫长切磋中，两个人根本都不懂对方在说些什么。在一&lt;br /&gt;
场让两 个人都疲惫不堪却又毫无结果的哥本哈根论剑之后，薛定谔回到了维也纳。 &lt;br /&gt;


薛定谔回到了维也纳之后仍然继续做了一工作，他证明了海森堡的矩阵力学和他的波动&lt;br /&gt;
方 程表述的量子论其实只是不同的描述方式。从此倚天、屠龙合而为一。 &lt;br /&gt;


此后，薛定谔虽也试图从更基本的假设出发导出更基本的方程，但终究没有成功，而不&lt;br /&gt;
久 ，他也对这个失去了兴趣，转而去研究生命是什么。历史则继续着演义他的历史喜剧&lt;br /&gt;
。德 布罗意，薛定谔都在这场喜剧中成为诺奖得主而名垂青史。 &lt;br /&gt;


尾声 &lt;br /&gt;

其实在这一段让人啼笑皆非的历史当中，上帝还是保留了某种公正的。薛定谔得出它的&lt;br /&gt;
波 动方程仅在海森堡的矩阵力学的的诞生一年之后，倘若上帝把这个玩笑开得更大一点&lt;br /&gt;
，让 薛定谔在1925年之前就导出薛定谔方程，那恐怕矩阵力学就根本不可能诞生了(波&lt;br /&gt;
动方程也 就是偏微分方程的理论是为大多数物理学家所熟悉的，而矩阵在当时则没有多&lt;br /&gt;
少人懂)。如 此则此前在量子领域已辛苦奋斗了十几年的哥本哈根学派就真要吐血了！&lt;br /&gt;
薛定谔方程虽然 搞出了这么一个波动方程，却并不能真正理解这个方程精髓之处，而对&lt;br /&gt;
它的方程给出了一 个错误的解释---也许命中注定不该属于他的东西终究就不会让他得&lt;br /&gt;
到。对薛定谔方程的正 确解释是有哥本哈根学派的玻恩作出的。(当然玻恩的解释也让&lt;br /&gt;
物理界另一位大师---爱因 斯坦极为震怒，至死也念念不忘“上帝不会用掷色子来决定&lt;br /&gt;
这个世界的”，此为后话)。 更基本的量子力学方程，也就是薛定谔试图获得但终究无&lt;br /&gt;
力企及的的基本理论，则是由哥 本哈根学派的另一位少壮派弟子---狄拉克导出的，而&lt;br /&gt;
狄拉克则最终领袖群伦，建起了了量 子力学的神殿。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>差不多搞定了Miranda</title>
      <link>https://wdicc.com/use-miranda-im/</link>
      <pubDate>Sat, 26 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-miranda-im/</guid>
      <description>直接解压到一个目录，多个msn的话，多复制plugin里面的msn.dll一份即可，jabber是用来上gtalk的，其他的看字面意思好了，不知道就都留着。&lt;br /&gt;

然后去下载mirandaqq，上&lt;a href=&#34;http://miranda-im.org&#34; target=&#34;_blank&#34;&gt;http://miranda-im.org&lt;/a&gt;搜索mirandaqq，下载下来把所有内容解压到plugin里面，然后再去&lt;a href=&#34;http://starkwong.ivehost.net/mimqq/&#34; target=&#34;_blank&#34;&gt;http://starkwong.ivehost.net/mimqq/&lt;/a&gt;下载dll的最新版本。这样qq就可用了。&lt;br /&gt;

去miranda网站搜索一下chinese可以找到中文语言文件，放到miranda的根目录下即可。&lt;br /&gt;

启动miranda，然后再选项里面可以找到qq，msn之类的设置选项。关于gtalk的可以参考&lt;a href=&#34;http://www.google.com/support/talk/bin/answer.py?answer=24885&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

这样，一个基本的聊天环境就有啦，如果能忍受他简洁的界面，那就可以用了。后面说说怎么让他更加好看。&lt;br /&gt;

先下载一个Modern Contact List Layered，来&lt;a href=&#34;http://miranda-im.org/download/details.php?action=viewfile&amp;id=2103&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;下载稳定版，或者来&lt;a href=&#34;http://shpynov.nm.ru/alpha/&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;下载测试版。之后解压到plugin文件夹。重启miranda，在选项里面的plugin那里选上clist_modern，再重启miranda即可。&lt;br /&gt;

重启之后会看到界面有了变化，如果你的没变化，说明clist_modern还没有起作用，自己找原因吧，呵呵。&lt;br /&gt;

之后就需要下载类似于qq，winamp之类的skin文件了。可以来&lt;a href=&#34;http://miranda-im.org/download/index.php?action=display&amp;id=93&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;看看。每一个theme通常都提供了一个效果预览图片，可以看看效果再下载。下载之后注意看里面的安装说明之类。&lt;br /&gt;

下载之后可以放到skins文件夹里面，然后去选项-&gt;自定义-&gt;面板里面可以看到刚下载skin。有些skin应用之后可能会让整个面板透明，呵呵，为什么出这个问题偶也不知道啦。&lt;br /&gt;

继续来搞聊天窗口的美化。先下载tabsrmm和ieview这两个plugin，要注意的是，tabsrmm需要下载最新版本，至少是0.9.9.96版本以上。我在这里走了不少弯路。我的理解，tabsrmm可以让聊天窗口支持tab形式，比如gaim的那种。而ieview可以让tabsrmm的聊天窗口可以应用css模板来显示的更加pp。当然他们还有其他功能，自己研究去吧。&lt;br /&gt;

此后需要在选项-&gt;信息对话框-&gt;信息窗口里面的信息记录选项卡里面选上支持外部外挂程式。这样才可以用ieview为聊天窗口美化。&lt;br /&gt;

然后就去下载&lt;a href=&#34;http://miranda-im.org/download/index.php?action=display&amp;id=83&#34; target=&#34;_blank&#34;&gt;ieview的模板&lt;/a&gt;去吧。下载好了在ieview里面设置一下就ok了。&lt;br /&gt;

另外还有qq和msn的表情的支持，在ieview里面也有设置。为每个协议指定表情之后，就可以在聊天的时候使用表情了。qq表情来&lt;a href=&#34;http://starkwong.ivehost.net/mimqq/&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;下载。msn表情来&lt;a href=&#34;http://miranda-im.org/download/details.php?action=viewfile&amp;id=2180&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;。&lt;br /&gt;

这时联系人列表里面的msn还没有头像，可以下载&lt;a href=&#34;http://miranda-im.org/download/details.php?action=viewfile&amp;id=2361&#34; target=&#34;_blank&#34;&gt;avatar service&lt;/a&gt;。至于qq的头像怎么搞出来，我还不知道，你要是弄出来了，可别忘记告诉我啊。&lt;br /&gt;

对了，是不是觉得列表里面的联系人那么多好郁闷么？呵呵，分组吧，可以把qq,msn放到一个分组里面，这个感觉非常好。可惜这个分组不能上传到服务器。&lt;br /&gt;

选项-&gt;联系人列表-&gt;图标，还可以修改每个协议的图标。要是不修改默认都一样，特别丑。推荐一个&lt;a href=&#34;http://miranda-im.org/download/details.php?action=viewfile&amp;id=2256&#34; target=&#34;_blank&#34;&gt;cristal full&lt;/a&gt;，里面msn，qq的图标都有。&lt;br /&gt;

是不是还想要msn，qq那种来消息的提示音呢？来&lt;a href=&#34;http://miranda-im.org/download/index.php?action=display&amp;id=5&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;看看。下载后，在选项-&gt;事件-&gt;声音里面分别指定一下就ok了。&lt;br /&gt;

好了，似乎没什么要说的了，有什么好的经验别忘记告诉我哦。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>用上了miranda</title>
      <link>https://wdicc.com/use-miranda/</link>
      <pubDate>Fri, 25 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-miranda/</guid>
      <description>
感觉非常好的一个软件，可以整合qq，msn，gtalk再一起。可以把我的qq，2个msn，gtalk用一个软件登陆了，呵呵。&lt;br /&gt;

缺点是传文件、自定义图片啥的不行。不过一般也用不着，无所谓了。&lt;br /&gt;

现在用到的插件有tabsrmm,smileyadd,popup_plus,mirandaqq,loadavatars,ieview,contact list layer。&lt;br /&gt;

skin用的是LaPrata。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1101489270.png&#34; width=&#34;218&#34; height=&#34;666&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>落叶</title>
      <link>https://wdicc.com/defoliation/</link>
      <pubDate>Tue, 22 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/defoliation/</guid>
      <description>
前天早上上班走到复兴路上，发现一个晚上落叶多了很多，可能是突然降温的缘故吧，树枝上面空了好多，有一种荒凉感。。。&lt;br /&gt;

今天刚拿到了分配的任务，可能得忙几天了。忙之前，中午还看了一个片子，呵呵，打开pplive刚好开始，名字叫《诅咒》cures of lola，里面mm挺pp的，是一个叫田原的，比较ft这个名字，呵呵。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1312987229.jpg&#34; width=&#34;550&#34; height=&#34;382&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>测试一个foobar的插件</title>
      <link>https://wdicc.com/foobar-plugin/</link>
      <pubDate>Thu, 17 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/foobar-plugin/</guid>
      <description>
&lt;img src=&#34;http://www.blueforge.net/playing/img.php?tokenID=elcGGBKfUIeocMUEUcOk&#34; border=0&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>有两个地方都有金矿zz</title>
      <link>https://wdicc.com/a-allegory/</link>
      <pubDate>Tue, 15 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/a-allegory/</guid>
      <description>
　　第一种情况：&lt;br /&gt;
　  在A国来了一个人投资建了一个矿场，雇一百个工人为他淘金，每年获利1000万，矿主把其中的50%做为工人工资发下去，每个工人每年收入5万，他们拿一万来租房子，剩下的四万可以结婚，生孩子，成家立业，矿主手里还有五百万，可以做投资。因为工人手里有钱，要安家落户，所以，房子出现需求。于是矿主用手里的钱盖房子，租给工人，或者卖给工人。工人要吃要喝，所以，开饭店，把工人手里的钱再赚回来。开饭馆又要雇别的工人，于是工人的妻子有了就业机会，也有了收入。一个家庭的消费需求就更大了。这样，几年之后，在这个地方出现了100个家庭。孩子要读书，有了教育的需求，于是有人来办学校，工人要约会，要消费，要做别的东西，于是有了电影院，有了商店，这样，50年过去以后，当这个地方的矿快被挖光了的时候，这里已经成了一个10万人左右的繁荣城市。&lt;br /&gt;

　　而第二种情况是这样的：&lt;br /&gt;
　　假设同样发现了金矿，同样有人来投资开采，同样雇 100工人，同样每年获利1000万，但是矿主把其中10%作为工资发下去，每个工人一年1万。这些钱只够他们勉强填饱肚子，没有钱租房子，没有钱讨老婆，只能住窝棚。矿主一年赚了900万，但是看一看满眼都是穷人，在本地再投资什么都不会有需求。于是，他把钱转到国外，因为在本地根本就不安全，他盖几个豪华别墅，雇几个工人当保镖，工人没有前途，除了拼命工作糊口，根本没有别的需求。唯一可能有戏的就是想办法骗一个老婆来，生一个漂亮女儿，或许还可以嫁给矿主做老婆。50年下去以后，这个地方除了豪华别墅，依然没有别的产业。等到矿挖完了，矿主带着巨款走了，工人要么流亡，要么男的为盗，女的为娼。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>自己烤白薯</title>
      <link>https://wdicc.com/sweet-potato/</link>
      <pubDate>Fri, 11 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sweet-potato/</guid>
      <description>
懒汉版：&lt;br /&gt;
微波炉，2个白薯，高火烤8分钟，然后翻一下，然后继续8分钟，就ok乐。&lt;br /&gt;

馋猫版：&lt;br /&gt;
似乎是把皮弄掉，然后切开，煮，水刚没过白薯，放黄xx糖，煮一回，然后搅一搅，让糖溶解。等煮到可以用筷子轻松扎透即可。捞出来，然后放到微波炉里，中高火8分钟。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>小亚家的大毛</title>
      <link>https://wdicc.com/core-and-damao/</link>
      <pubDate>Thu, 03 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/core-and-damao/</guid>
      <description>
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/414278.jpg&#34; width=&#34;540&#34; &gt;&lt;/center&gt;&lt;br /&gt;
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/103377.jpg&#34; width=&#34;540&#34; &gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>老婆出差时超强的留言（ZZ）</title>
      <link>https://wdicc.com/super-messages/</link>
      <pubDate>Thu, 03 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/super-messages/</guid>
      <description>
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1361658957.jpg&#34; width=&#34;424&#34; height=&#34;493&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>老家的猫猫们</title>
      <link>https://wdicc.com/cats-cats/</link>
      <pubDate>Thu, 03 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/cats-cats/</guid>
      <description>
&lt;center&gt;一大一小关系最好了，差了一辈&lt;/center&gt;&lt;br /&gt;
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/590803.jpg&#34; width=&#34;540&#34;&gt;&lt;/center&gt;&lt;br /&gt;
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/581508.jpg&#34; width=&#34;540&#34;&gt;&lt;/center&gt;&lt;br /&gt;
&lt;center&gt;短毛猫生的长毛猫&lt;/center&gt;&lt;br /&gt;
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/015809.jpg&#34; width=&#34;540&#34;&gt;&lt;/center&gt;&lt;br /&gt;
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/056227.jpg&#34; width=&#34;540&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>周末ktv的地址</title>
      <link>https://wdicc.com/address-of-ktv/</link>
      <pubDate>Wed, 02 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/address-of-ktv/</guid>
      <description>
地点：佰金KTV，西直门外，交大东路25号。&lt;br /&gt;

路线：&lt;br /&gt;
西直门西侧桥下第一个红绿灯往北拐，上高梁桥斜街；&lt;br /&gt;
沿高梁桥斜往西北走，第一个红绿灯往北拐，上交大东路；&lt;br /&gt;
沿交大东路往北走，大概800米远处是一个没有红绿灯的十字路口；&lt;br /&gt;
十字路口的西北角，就是东方八喜大酒楼；&lt;br /&gt;
佰金KTV就在东方八喜大酒楼的南侧。&lt;br /&gt;

佰金KTV电话：82165558&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>预览待上</title>
      <link>https://wdicc.com/preview-before-upload/</link>
      <pubDate>Mon, 31 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/preview-before-upload/</guid>
      <description>
原文在&lt;a href=&#34;http://www.sharkui.com/articles/article.php?id=26&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;&lt;br /&gt;

　　上&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我的桌面:)</title>
      <link>https://wdicc.com/my-dekstop/</link>
      <pubDate>Sat, 29 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/my-dekstop/</guid>
      <description>
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1121201799.jpg&#34; width=&#34;500&#34; &gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>昨天晚上饭做砸了</title>
      <link>https://wdicc.com/failed-dinner/</link>
      <pubDate>Thu, 27 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/failed-dinner/</guid>
      <description>
晚上以为老婆不回来了，就想着吃什么。本来想吃烩菜，后来想着太繁了，还是做面条比较简单。&lt;br /&gt;

从超市出来后，剩5块钱了，不过要了一斤鸡蛋加土豆和青椒西红柿之后，钱差不多刚好。结果老婆打电话过来说晚上要回来吃饭，这下咋办？只能让他吃面条了。&lt;br /&gt;

煮好了面条，去拿碗的时候，发现西红柿忘记放了。。。晕。。&lt;br /&gt;

老婆不喜欢吃面条，剩了老大一碗，只好今天看看是不是继续吃面条了。不过得给老婆热排骨炒蒜苔了。希望能做好 :)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>vim的一些有用的咚咚</title>
      <link>https://wdicc.com/some-usefull-about-vim/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/some-usefull-about-vim/</guid>
      <description>&lt;pre lang=&#34;bash&#34;&gt;# cat .vimrc&lt;br /&gt;
&#34; multi-encoding setting&lt;br /&gt;
if has(&#34;multi_byte&#34;)&lt;br /&gt;
  &#34;set bomb&lt;br /&gt;
  set fileencodings=ucs-bom,utf-8,cp936,big5,euc-jp,euc-kr,latin1&lt;br /&gt;
  &#34; CJK environment detection and corresponding setting&lt;br /&gt;
  if v:lang =~ &#34;^zh_CN&#34;&lt;br /&gt;
    &#34; Use cp936 to support GBK, euc-cn == gb2312&lt;br /&gt;
    set encoding=cp936&lt;br /&gt;
    set termencoding=cp936&lt;br /&gt;
    set fileencoding=cp936&lt;br /&gt;
  elseif v:lang =~ &#34;^zh_TW&#34;&lt;br /&gt;
    &#34; cp950, big5 or euc-tw&lt;br /&gt;
    &#34; Are they equal to each other?&lt;br /&gt;
    set encoding=big5&lt;br /&gt;
    set termencoding=big5&lt;br /&gt;
    set fileencoding=big5&lt;br /&gt;
  elseif v:lang =~ &#34;^ko&#34;&lt;br /&gt;
    &#34; Copied from someone&amp;#39;s dotfile, untested&lt;br /&gt;
    set encoding=euc-kr&lt;br /&gt;
    set termencoding=euc-kr&lt;br /&gt;
    set fileencoding=euc-kr&lt;br /&gt;
  elseif v:lang =~ &#34;^ja_JP&#34;&lt;br /&gt;
    &#34; Copied from someone&amp;#39;s dotfile, untested&lt;br /&gt;
    set encoding=euc-jp&lt;br /&gt;
    set termencoding=euc-jp&lt;br /&gt;
    set fileencoding=euc-jp&lt;br /&gt;
  endif&lt;br /&gt;
  &#34; Detect UTF-8 locale, and replace CJK setting if needed&lt;br /&gt;
  if v:lang =~ &#34;utf8$&#34; || v:lang =~ &#34;UTF-8$&#34;&lt;br /&gt;
    set encoding=utf-8&lt;br /&gt;
    set termencoding=utf-8&lt;br /&gt;
    set fileencoding=utf-8&lt;br /&gt;
  endif&lt;br /&gt;
else&lt;br /&gt;
  echoerr &#34;Sorry, this version of (g)vim was not compiled with multi_byte&#34;&lt;br /&gt;
endif&lt;br /&gt;
set shell=bash\ --rcfile\ ~/.bashrc.vim&lt;br /&gt;
nnoremap j gj&lt;br /&gt;
nnoremap k gk&lt;br /&gt;
vnoremap j gj&lt;br /&gt;
vnoremap k gk&lt;br /&gt;
nnoremap &lt;Down&gt; gj&lt;br /&gt;
nnoremap &lt;Up&gt; gk&lt;br /&gt;
vnoremap &lt;Down&gt; gj&lt;br /&gt;
vnoremap &lt;Up&gt; gk&lt;br /&gt;
inoremap &lt;Down&gt; &lt;C-o&gt;gj&lt;br /&gt;
inoremap &lt;Up&gt; &lt;C-o&gt;gk&lt;br /&gt;
&lt;/pre&gt;&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
set tabstop=4
set shiftwidth=4&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>vim里面关于文件编码我的一点经验</title>
      <link>https://wdicc.com/encoding-in-vim/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/encoding-in-vim/</guid>
      <description>其中fenc是当前文件的编码，也就是说，一个在vim里面已经正确显示了的文件(前提是你的系统环境跟你的enc设置匹配)，你可以通过改变fenc后再w来将此文件存成不同的编码。比如说，我:set fenc=utf-8然后:w就把文件存成utf-8的了，:set fenc=gb18030再:w就把文件存成gb18030的了。这个值对于打开文件的时候是否能够正确地解码没有任何关系。&lt;br /&gt;

        fencs就是用来在打开文件的时候进行解码的猜测列表。文件编码没有百分百正确的判断方法，所以vim只能猜测文件编码。比如我的vimrc里面这个的设置是&lt;br /&gt;

set fileencodings=utf-8,gb18030,utf-16,big5&lt;br /&gt;

        所以我的vim每打开一个文件，先尝试用utf-8进行解码，如果用utf-8解码到了一半出错(所谓出错的意思是某个地方无法用utf-8正确地解码)，那么就从头来用gb18030重新尝试解码，如果gb18030又出错(注意gb18030并不是像utf-8似的规则编码，所以所谓的出错只是说某个编码没有对应的有意义的字，比如0)，就尝试用utf-16，仍然出错就尝试用big5。这一趟下来，如果中间的某次解码从头到尾都没有出错，那么vim就认为这个文件是这个编码的，不会再进行后面的尝试了。这个时候，fenc的值就会被设为vim最后采用的编码值，可以用:set fenc?来查看具体是什么。&lt;br /&gt;

        当然这个也是有可能出错的，比如你的文件是gb18030编码的，但是实际上只有一两个字符是中文，那么有可能他们正好也能被utf-8解码，那么这个文件就会被误认为是utf-8的导致错误解码。&lt;br /&gt;

        至于enc，其作用基本只是显示。不管最后的文件是什么编码的，vim都会将其转换为当前系统编码来进行处理，这样才能在当前系统里面正确地显示出来，因此enc就是干这个的。在windows下面，enc默认是cp936，这也就是中文windows的默认编码，所以enc是不需要改的。在linux下，随着你的系统locale可能设为zh_CN.gb18030或者zh_CN.utf-8，你的enc要对应的设为gb18030或者utf-8(或者gbk之类的)。&lt;br /&gt;

        最后再来说一下新建空文件的默认编码。看文档好像说会采用fencs里面的第一个编码作为新建文件的默认编码。但是这里有一个问题，就是fencs的顺序跟解码成功率有很大关系，根据我的经验utf-8在前比gb18030在前成功率要高一些，那么如果我新建文件默认想让它是gb18030编码怎么办？一个方法是每次新建文件后都:set fenc=gb18030一下，不过我发现在vimrc里面设置fenc=gb18030也能达到这个效果。&lt;br /&gt;

        总结一下，我的vimrc里面的设置是：&lt;br /&gt;

set fileencoding=gb18030&lt;br /&gt;
set fileencodings=utf-8,gb18030,utf-16,big5&lt;br /&gt;

        另外enc根据环境来设。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>wd love cc</title>
      <link>https://wdicc.com/wd-love-cc/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/wd-love-cc/</guid>
      <description>
和cc在故宫的相片 :)&lt;br /&gt;
&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1353548855.jpg&#34; width=&#34;320&#34; height=&#34;240&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>wiki译文：Archlinux 快速安装指南（Quick Archlinux Install）</title>
      <link>https://wdicc.com/quick-archlinux-install/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/quick-archlinux-install/</guid>
      <description>
原文地址：[url]http://wiki2.archlinux.org/index.php/Quick%20Archlinux%20Install[/url]&lt;br /&gt;

Quick Archlinux Install&lt;br /&gt;
Archlinux 快速安装指南&lt;br /&gt;

这篇文&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Wireless on Dell D800</title>
      <link>https://wdicc.com/wireless-on-dell-d800/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/wireless-on-dell-d800/</guid>
      <description>
1 Install wireless_tools.&lt;br /&gt;
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;

2 Install ipw2100(the wireless modules).
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
Then modify /etc/rc.conf ,add ipw2100 to the MODULES line,and eth1 to the INTERFACES line,add eth1=&#34;dhcp&#34;(to use dhcp) blow eth0=&#34;&#34;.

3 Modify /etc/conf.d/wireless as blow
&lt;pre class=&#34;prettyprint lang-txt&#34;&gt;
wlan_eth1=&#34;eth1 mode managed essid default&#34;
WLAN_INTERFACES=(eth1)
&lt;/pre&gt;&lt;br /&gt;
Set the firest line to fit your network.&lt;br /&gt;

4 Reboot.&lt;br /&gt;

想添&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>使用mplayer播放dvd</title>
      <link>https://wdicc.com/play-dvd-by-mplayer/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/play-dvd-by-mplayer/</guid>
      <description>
从mplayer的web上找到的。&lt;br /&gt;

4.2 DVD播放&lt;br /&gt;

可用选项的完整列表参见man page。播放&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>养猫</title>
      <link>https://wdicc.com/feed-cats/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/feed-cats/</guid>
      <description>养猫只需要给他猫粮、猫砂、水，必要的时候洗洗澡就可以了，吃饱喝足之后，他就会满足的趴在你怀里呼噜呼噜了。猫粮猫砂这些一个月的消费2只猫可能100以内就足够了，也就是你出去吃喝两次的钱。如果实在困难，你还是可以培养他吃米饭，吃馒头，这个就更加便宜了。&lt;br /&gt;

养猫不需要给他买衣服，在你不能忍受他的脏的时候给他洗洗澡就可以了。洗澡也很简单，你洗澡的时候把他拉进去，一起来个淋浴，就ok了。&lt;br /&gt;

养猫和养狗比起来，养猫还是比较轻松的。溜猫肯定是不用的，也不用办猫证。但是猫这个动物是不认人的，只要是吃的就行，从来不管是谁给的。狗不一样，你让他蹲下，他就蹲下，让他过来他就会过来。你要是想要猫也能做到，估计最后的结果只能是不是你疯掉就是猫疯掉。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1312758951.jpg&#34; width=&#34;600&#34; height=&#34;450&#34;&gt;&lt;/center&gt;&lt;br /&gt;

养猫要考虑的其实就是下面几个事情：&lt;br /&gt;

1 猫的寿命是10多年，你得能保证在这些年里面你对他不离不弃，如果只是想着抱回来养养试试看，那还是算了。很多其他途径的，可以找有猫的朋友借几天，我想他们肯定非常乐意的。&lt;br /&gt;

2 养猫对孕妇不好。所以如果家里有这种情况，一定要慎重。我觉得也不是说不能养，比如关另外一个房间，老公帮忙喂养，不养长毛猫什么的，就差不多了。养长毛猫会掉很多毛，要做好准备。&lt;br /&gt;

3 如果是单身，最好不要经常出差。出差的时候，就算托了人照顾，除非那人也有养猫经验，否则很难照顾好你的小猫的。&lt;br /&gt;

4 猫属于昼伏夜出型。猫猫一般都是白天睡觉，晚上起来捉老鼠的。不过现在的家养猫晚上可没有老鼠可捉，但是他们依然会晚上起来玩，如果是2只以上的话，那难免会追着跑，影响你睡觉是肯定的了。不过如果你有条件，关到另外一个屋子，事情就变得简单多了。&lt;br /&gt;

暂时就想到上面几点，等日后想到了再补充吧。其实养猫也没有那么难，每天喂点吃的喝的，清理一下猫砂，基本就可以了。只要关键问题想清楚了，那就去领养一只小猫吧。&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1238156937.jpg&#34; width=&#34;600&#34; height=&#34;450&#34;&gt;&lt;/center&gt;&lt;br /&gt;

&lt;center&gt;&lt;img src=&#34;https://wdicc.com/wordpress/wp-content/uploads/1275261871.jpg&#34; width=&#34;600&#34; height=&#34;450&#34;&gt;&lt;/center&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给系统添</title>
      <link>https://wdicc.com/add-fonts-for-arch/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/add-fonts-for-arch/</guid>
      <description>
原文[url]http://wiki2.archlinux.org/index.php/Adding%20Fonts[/url]&lt;br /&gt;

给linux系统添&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>自动贴星运的脚本</title>
      <link>https://wdicc.com/auto-script/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/auto-script/</guid>
      <description>#!/bin/bash &lt;br /&gt;

#星座的名字,抓网页的时候要用的 &lt;br /&gt;
Signs=&#34;aries taurus gemini cancer leo virgo libra scorpio sagittarius capricorn aquarius pisces&#34;&lt;br /&gt;

#日期,每篇文章标题要用的 &lt;br /&gt;
head=`date --date=&#39;1 days&#39; +%Y-%m-%d`&lt;br /&gt;

#要贴的BBS站点,都是水木代码的 &lt;br /&gt;
Sites=&#39;bbs.buaa.edu.cn&#39;&lt;br /&gt;

#用户名密码&lt;br /&gt;
user=horoscope&lt;br /&gt;
pass=*****&lt;br /&gt;

#生成每个星座的星运文件 &lt;br /&gt;
i=1;&lt;br /&gt;
for sign in $Signs&lt;br /&gt;
do&lt;br /&gt;
    wget http://mindcity.sina.com.tw/west/MC-12stars/${sign}2.html -O $i.htm&lt;br /&gt;
    sed -n &#39;/&lt;!--START:HORO_TOMORROW--&gt;/,/&lt;!--END:HORO_TOMORROW--&gt;/p&#39; $i.htm | sed -e &#39;s/&lt;br /&gt;
/\n/g&#39; -e &#39;s/&amp;lt;[^&amp;gt;]*&amp;gt;//g&#39;  -e &#39;s/\t//&#39;| sed -n &#39;4,$p&#39; | sed -e &#39;2,4d&#39; -e &#39;15d&#39;|iconv -f BIG5 -t GB2312 &amp;gt; $i.ast&lt;br /&gt;
    rm $i.htm&lt;br /&gt;
    let i=$i+1&lt;br /&gt;
done&lt;br /&gt;


#out 用户名 密码 文件 &lt;br /&gt;
out(){&lt;br /&gt;
sleep 1&lt;br /&gt;
echo &#34;$1&#34; &lt;br /&gt;
sleep 1&lt;br /&gt;
echo &#34;$2&#34; &lt;br /&gt;
echo&lt;br /&gt;
sleep 1&lt;br /&gt;
echo -n &#34;qqqqqqqqqq&#34; &lt;br /&gt;
sleep 1&lt;br /&gt;
echo &#34;S&#34; &lt;br /&gt;
echo &#34;horoscope&#34; &lt;br /&gt;
echo &lt;br /&gt;

sleep 3&lt;br /&gt;

j=1 &lt;br /&gt;
while [ $j -lt 13 ] &lt;br /&gt;
do      &lt;br /&gt;
        echo -n $&#39;\cp&#39;&lt;br /&gt;
        ((echo -n $head) &amp;amp;&amp;amp; (head -1 $j.ast))&lt;br /&gt;
        echo&lt;br /&gt;
        echo $head&lt;br /&gt;
        echo&lt;br /&gt;
        cat $j.ast&lt;br /&gt;
        echo&lt;br /&gt;
        echo -n $&#39;\cx&#39;&lt;br /&gt;
        echo&lt;br /&gt;
        let j=$j+1&lt;br /&gt;
    sleep 3&lt;br /&gt;
done&lt;br /&gt;

sleep 3&lt;br /&gt;

echo &#34;qqqqg&#34; &lt;br /&gt;
echo &lt;br /&gt;
echo &lt;br /&gt;
echo &lt;br /&gt;
}&lt;br /&gt;

for site in $Sites&lt;br /&gt;
do  &lt;br /&gt;
    out $user $pass | telnet -8 $site&lt;br /&gt;
done&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>远程安装ArchLinux(翻译)</title>
      <link>https://wdicc.com/remote-install-arch/</link>
      <pubDate>Wed, 26 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/remote-install-arch/</guid>
      <description>
[color=green]原文地址：[url]http://wiki2.archlinux.org/index.php/Remote%20ArchLinux%20Install[/url][/color]&lt;br /&gt;
远程安装ArchLinux&lt;br /&gt;

基于Tobias Kieslich的工作。他的原始版请看这里[url]http://www.justdreams.de/archlinux/docs/00_rootserver.html。[/url]&lt;br /&gt;

[b]概述[/b]&lt;br /&gt;

这是一个建立Archlinux基本服务器的指南。Archlinux是一个很好的服务器系统，但是它通常不会被选择作为一个预装的发行版。在本机替换预装的系统非常容易。但是替换一个&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>上zhaopin.com弄了一个简历，嘿嘿</title>
      <link>https://wdicc.com/resume-on-zhaopindotcom/</link>
      <pubDate>Tue, 24 May 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/resume-on-zhaopindotcom/</guid>
      <description>
注册之后回答几个问题可以弄一个简历出来，我稍微修改了一下弄到这里来了，嘿嘿&lt;br /&gt;

今天xh会给询问情况，不知道能不能搞定。也不知道去广州是福是货。比较了一下情况。&lt;br /&gt;
  好处：&lt;br /&gt;
 1  钱比现在多。&lt;br /&gt;
 2  可以转行。&lt;br /&gt;
 3  离开生活了近7年的北京去体验一下南方的城市。&lt;br /&gt;
 4  方便去南方周边的城市玩，不过不知道时间允不允许。&lt;br /&gt;
 5  。。。还没想好。&lt;br /&gt;
  坏处：&lt;br /&gt;
 1  和c两地。&lt;br /&gt;
 2  房租刚交了，好多money可能丢掉了。&lt;br /&gt;
 3  猫怎么弄过去，弄过去之后的生活等。&lt;br /&gt;
 4  现在的好多生活用品怎么办？&lt;br /&gt;
 5  回家需要北京转车，可能直接面对的是回家买不到车票。&lt;br /&gt;
 6  。。。。&lt;br /&gt;

是好事还是。。。。？&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>总算拿到户口卡了</title>
      <link>https://wdicc.com/hukouka/</link>
      <pubDate>Mon, 23 May 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/hukouka/</guid>
      <description>
没给钱，反正拿到手了。写了个条子，先手里拿着有事再说吧。下午去办身份证去，哼哼&lt;br /&gt;

上周去天津腐败了一圈，单位花钱，哈哈。不过其实也没啥好玩的，蹭了几顿免费餐 ：），爬山的时候才发现，自己的体力比较来说还是蛮好的嘛，哈哈，一直跑在最前面。&lt;br /&gt;

不过看着自己的小肚子，sigh，确实得减肥了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>跳槽了。。</title>
      <link>https://wdicc.com/job-hopping/</link>
      <pubDate>Mon, 16 May 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/job-hopping/</guid>
      <description>
又一个朋友告诉我要跳槽了，下周一就去新公司上班了。还有一个朋友也在说同事跳槽给他好大压力。。。。&lt;br /&gt;

我们单位2002年以后来的同事好几个已经走了，sigh，就我在这里赖着快3年了。三年来似乎没有得到多少经验，三年来也就后面1年才自己捣鼓着学了点linux的东西，很粗浅，找工作根本不能用来作为资本。。。写程序很烂，做美工不行，搞点系底层研究吧，还不会。。。不知道能干吗了。国企真的是养人的地方，相有些自己的事业，还是早点去开个公司吧。就算是卖方便面，好歹。。。还可以自己说了算。。。&lt;br /&gt;

跳槽的日子一天一天靠近着。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>越来越想去南方呆着了</title>
      <link>https://wdicc.com/sick-for-south-of-china/</link>
      <pubDate>Wed, 11 May 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/sick-for-south-of-china/</guid>
      <description>
宜人的空气，舒适的节奏，舒适的阳光，pp的美女。。。。sigh&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>遭遇3721</title>
      <link>https://wdicc.com/3721-is-a-shit/</link>
      <pubDate>Wed, 11 May 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/3721-is-a-shit/</guid>
      <description>
装一个国产的rss软件firedemon，把3721给我装上了，f**k一百遍。&lt;br /&gt;

删除的路程是漫长的，sigh。&lt;br /&gt;

先看进程，没有相关咚咚，3721目录又删不掉。后来好容易找到了方法：&lt;br /&gt;

先复制一个system32/drivers文件出来，然后删掉复制出来的那个里面的cn*。&lt;br /&gt;
重启到安全模式，把drivers目录改名，然后把复制出来那个改成drivers，之后重启就可以删注册表了。&lt;br /&gt;
删掉注册表里面run里面cns*和help*，还有software里面的3721目录和microsoft\internet explore里面的advanced*的*cn*。&lt;br /&gt;
重启电脑，删掉windows/Downloaded Program Files里面的一拖，删掉Program Files/3721文件夹。&lt;br /&gt;

这个世界清静了。。。。&lt;br /&gt;

本来想用knoppix启动盘搞定的，结果ntfs还不行，shit，以后不用ntfs了。重启了n次才搞定，重启过程中百度打电话过来问网站推广，nnd，直接说没有负责人就刮掉了。都是一拖shit。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>5.1去了趟沈阳</title>
      <link>https://wdicc.com/goto-shenyang/</link>
      <pubDate>Sun, 08 May 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/goto-shenyang/</guid>
      <description>
森林动物园是超级无聊的地方，还是别去了。植物园却是很好很有意思的地方。好多的桥，不过我说你可能心里没有什么概念，还是亲自看一眼的好。植物园适合夏天去避暑，去的时候最好多备一套衣服，穿凉鞋，呵呵。不过现在植物园有烘干衣服的地方了，设施还算齐全。相比之下，北京的植物园就差远了。&lt;br /&gt;

森林动物园的门票70，包括10块钱的棋盘山风景区的通票。植物园门票30包括10块钱的花展的票，里面过桥不另外收费。总的来说沈阳还是比北京玩的好一点。游戏机30块钱70个币，可以爽爽的玩。逛街的话，中街和王府井的步行街似得，不过似乎比王府井好玩得多。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>做xfce4.2得mirror</title>
      <link>https://wdicc.com/mirror-of-xfce/</link>
      <pubDate>Thu, 28 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/mirror-of-xfce/</guid>
      <description>
Mirroring &lt;br /&gt;
If you want to use our Debian packages on multiple systems in a networked environment, it might be a good idea to establish a local mirror of our Debian repository, so you don&amp;#39;t need to fetch the packages from the internet for every system. You can use the utility debmirror to create a mirror of the packages and keep it up to date. &lt;br /&gt;

For example, to mirror the i386 binary packages into the directory /ftp/mirror/debian, use the command: &lt;br /&gt;


debmirror -a i386 -s main -h www.os-works.com \&lt;br /&gt;
          -d testing -r /debian --progress \&lt;br /&gt;
          -e http --ignore-release-gpg \&lt;br /&gt;
          /ftp/mirror/debian&lt;br /&gt;

Say, for example, the directory /ftp/mirror/debian is accessible via ftp as ftp://mymirror/debian/, then you&amp;#39;d put the line &lt;br /&gt;


deb ftp://mymirror/debian/ testing main&lt;br /&gt;

in the /etc/apt/sources.list file on every system in your network.&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>新水母可以上了，呵呵</title>
      <link>https://wdicc.com/login-newsmth/</link>
      <pubDate>Wed, 27 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/login-newsmth/</guid>
      <description>-------------------------------------------------------------------&lt;br /&gt;
牛：   你懂XXX协议、YYY框架、ZZZ思想吗&lt;br /&gt;
coder：稍微知道一点点&lt;br /&gt;
牛：   那你看过XX牛的《XXXX》第X版第X卷，YY牛的《YYYY》第Y版第Y卷，&lt;br /&gt;
        ZZ牛的《ZZZZ》第Z版第Z卷吗&lt;br /&gt;
coder：你说的这些书都是《经典书籍》，不过我大都没认真看过&lt;br /&gt;
牛：   这么说，你对XXX协议、YYY框架、ZZZ思想的底层细节应该不是很了解哦&lt;br /&gt;
coder：可以这么说&lt;br /&gt;
牛：   你具体做什么项目，&lt;br /&gt;
coder：做X2X网站&lt;br /&gt;
牛：   你说你不懂XXX协议、YYY框架、ZZZ思想的底层细节，那么你们做X2X网站时，&lt;br /&gt;
       碰到XXX问题你怎么解决的&lt;br /&gt;
coder：很简单，我们会给XX、YY大学的牛发Email，叫他们给我们解XXX组件。很方&lt;br /&gt;
       便的。&lt;br /&gt;
牛：   如果没人肯帮你们解XXX组件呢&lt;br /&gt;
coder：不会的，每次都有N多牛排长对呢。再说了，到Internet上Search一下，买&lt;br /&gt;
       XXX组件的公司成堆&lt;br /&gt;
牛：   好了，好了，我再问你，你都用什么语言开发呢&lt;br /&gt;
coder：用ASP＋VB&lt;br /&gt;
牛：   你只不知道MS已经不再支持VB＋ASP了，改为C#＋MS.NET&lt;br /&gt;
coder：在聊天室里听牛说过&lt;br /&gt;
牛：   那你为什么还要用VB&lt;br /&gt;
coder：C#，JAVA我不懂 ，所以我用VB&lt;br /&gt;
牛：   唉，又来了，基础的XXX协议、YYY框架、ZZZ思想的底层细节你说你不太懂，&lt;br /&gt;
       前沿的C#, MS.NET；JAVA,SUN.ONE你又不懂，你难道没想过要好好学学吗&lt;br /&gt;
coder：我有想过啊&lt;br /&gt;
牛：   那你为什么不学呢&lt;br /&gt;
coder：我没有时间&lt;br /&gt;
牛：   你的时间都到哪儿去了&lt;br /&gt;
coder：用VB+ASP编代码赚钱啊&lt;br /&gt;
牛：   赚钱干吗&lt;br /&gt;
coder：供我儿子出国读大学&lt;br /&gt;
牛：   读研究生&lt;br /&gt;
coder：不是，是读本科&lt;br /&gt;
牛：   读本科就出去读，没必要吧&lt;br /&gt;
coder：在XXX协议、YYY框架、ZZZ思想的底层细节方面，国内经常生产牛的最牛的XX&lt;br /&gt;
       大学刚刚入门，在****方面连门都没入。我知道我儿子是块搞技术的料，所以&lt;br /&gt;
       我想要让我儿子系统掌握XXX协议、YYY框架、ZZZ思想的细节，精通前沿的...&lt;br /&gt;
       (听到Coder批评牛毕业的XX大学，牛有点生气了，开始不客气起来)&lt;br /&gt;
牛：   你知不知道，你没有XXX协议、YYY框架、ZZZ思想的底层细节，是写不出完美&lt;br /&gt;
       的代码出来的。还有，像你这样，虽然现在可以赚一点小钱，但四年后肯定要&lt;br /&gt;
       被淘汰的......&lt;br /&gt;
coder：在我淘汰之前,我就不想干了&lt;br /&gt;
牛：   那你去干嘛&lt;br /&gt;
coder：我想开一家软件公司，招很多牛，包括精通XXX协议、YYY框架、ZZZ思想的底&lt;br /&gt;
       层细节的牛，精通MS.net SUN.ONE的牛......&lt;br /&gt;
牛：   好笑!&lt;br /&gt;
----------------------------------------------------------------------&lt;br /&gt;
4年后，软件业VB已经彻底绝迹，XXX协议、YYY框架、ZZZ思想的底层细节已经被大量&lt;br /&gt;
修改，MS.net和SUN.ONE也快倒掉的时候.......&lt;br /&gt;
牛：   (XXX公司CTO办公室里，看着www.xxx.com上的新闻)&lt;br /&gt;
       啊! MS.net和SUN.ONE真要倒掉了吗?看来偶要继续充电了.......&lt;br /&gt;
coder：(XXX公司CEO办公室里，看着www.xxx.com上的新闻)&lt;br /&gt;
       哦，MS.net和SUN.ONE果真快倒掉了。看来我要招聘新的CTO和Coder了...&lt;br /&gt;
谁也不知道，XXX公司的CTO和CEO就是当年在“牛狼之家”聊天战聊天的牛和Coder。&lt;br /&gt;

    很多人自以为什么都知道---的确有很多牛从协议细节到当前潮流到开发环境....&lt;br /&gt;
样样都精通，但那是少数---可是却偏偏不知道自己正真需要的是什么，自己最需要的&lt;br /&gt;
又是什么，自己为什么要去知道这么多东西。&lt;br /&gt;
    有的人知道的的确不多，但是他知道他最需要的是什么。他知道他时间不多，只&lt;br /&gt;
能去争取他最需要的东西。&lt;br /&gt;
    以后的社会分工会越来越细，没必要也没有可能什么都懂，开飞机的显然不必知&lt;br /&gt;
道流体力学---虽然流体力学毫无疑问是飞机飞上天的基础；装配飞机的显然不必知道&lt;br /&gt;
采购来的发动机具体是如何把航空油变成动力输出的----虽然这是飞机可以开动的基&lt;br /&gt;
础。&lt;br /&gt;
    一样，用COM+或者EJB组件构造企业系统，你根本没有必要知道这个COM+或者EJB&lt;br /&gt;
组件是如何处理底层TCP/IP连接的。组件生产者关心的是实现细节--稳定性，效率，&lt;br /&gt;
安全......至于你，就去关心企业业务流程好了，即使不明白什么是TCP/IP，什么&lt;br /&gt;
是IPv6也没有关系。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天是搬家后正常工作第一天</title>
      <link>https://wdicc.com/first-day-after-move/</link>
      <pubDate>Tue, 26 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/first-day-after-move/</guid>
      <description>
周末要去老婆家了，今天晚上还得去买车票，不知道好不好买。&lt;br /&gt;

服务器似乎没啥问题了，还需要配一个dhcp带一台电脑上网。其他的就先放着了。&lt;br /&gt;

有空还得看看zencart的问题。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>服务器ip是一天一改啊</title>
      <link>https://wdicc.com/ip-change-everyday/</link>
      <pubDate>Tue, 26 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/ip-change-everyday/</guid>
      <description>
nnd&lt;br /&gt;

现在混饭吃的人太多了，打了8个电话都没人明白路由不通是怎么回事。而最后终级解决方法居然是把ip改回去了。&lt;br /&gt;

服了，航天&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>疯了疯了</title>
      <link>https://wdicc.com/almost-crazy/</link>
      <pubDate>Mon, 25 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/almost-crazy/</guid>
      <description>
单位总算可以上网了，sigh，今天搞了一天，累死了&lt;br /&gt;

没有以前爽了，ip少了，还是dhcp的，超级郁闷&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给网站加了个zend</title>
      <link>https://wdicc.com/use-zend/</link>
      <pubDate>Fri, 22 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-zend/</guid>
      <description>
用起来超级简单，呵呵。。&lt;br /&gt;

先到 http://www.zend.com/store/free_download.php 下载对应的版本。我这里是rhel3，glibc是2.3可是没有对应版本，就下了一个对应2.1的。&lt;br /&gt;

下载后解压缩，然后运行install就行了，都按照默认一路回车就行了。之后phpmyadmin里面看看phpinfo里面是不是有了zend的信息。好像。。。没觉得快了多少。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Grisword给tt写的一个图片counter</title>
      <link>https://wdicc.com/counter-for-tt/</link>
      <pubDate>Wed, 20 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/counter-for-tt/</guid>
      <description>
保存为tools/counter.php&lt;br /&gt;
代&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天上班很郁闷</title>
      <link>https://wdicc.com/on-duty/</link>
      <pubDate>Wed, 20 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/on-duty/</guid>
      <description>
之前用的一台电脑被搬到其他部门了，我就去里面把有用的咚咚备份了一下。今天要用到那些 咚咚了才发现，备份错了，这个郁闷啊。。。想了好多个解决方案，今天还是去找那台电脑尝试去恢复一下吧。&lt;br /&gt;

去了看了一眼，发现电脑上面那个分区放了点东西，但是不是很多，应该还有希望吧。先试了easyrecover，界面很友好，和easycd creater差不多，那个分区大概15G，扫描需要10几分钟，扫描的过程中似乎看到了自己想要的咚咚，可是等扫完了发现，没有任何有用的，那个郁闷。&lt;br /&gt;

接着换finaldata，扫描需要1个小时。。。my god！不过实际可能工作时间没那么久，看着看着快完了，结果。。。windows出了个错，给关掉了。。。万恶的比尔盖！算了，不恢复了，想其他方法得了。。。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>apache版本号显示的问题</title>
      <link>https://wdicc.com/apache-ver/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/apache-ver/</guid>
      <description>此指令控制了Server回送给客户端的回应头域是否包含关于服务器OS类型和编译进的模块描述信息。 &lt;br /&gt;

ServerTokens Prod[uctOnly] &lt;br /&gt;
服务器会发送（比如说）：Server:Apache &lt;br /&gt;
ServerTokens Major &lt;br /&gt;
服务器会发送（比如说）：Server:Apache/2 &lt;br /&gt;
ServerTokens Minor &lt;br /&gt;
服务器会发送（比如说）：Server:Apache/2.0 &lt;br /&gt;
ServerTokens Min[imal] &lt;br /&gt;
服务器会发送（比如说）：Server:Apache/2.0.41 &lt;br /&gt;
ServerTokens OS &lt;br /&gt;
服务器会发送（比如说）：Server: Apache/2.0.41 (Unix) &lt;br /&gt;
ServerTokens Full (or not specified) &lt;br /&gt;
服务器会发送（比如说）：Server: Apache/2.0.41 (Unix) PHP/4.2.2 MyMod/1.2 &lt;br /&gt;
此设置将施用与整个服务器，而且不能在虚拟主机的管理层次上予以启用或禁用。 &lt;br /&gt;


ServerSignature 指令 &lt;br /&gt;
说明: 配置服务器生成页面的页脚 &lt;br /&gt;
语法: ServerSignature On|Off|EMail &lt;br /&gt;
默认值: ServerSignature Off &lt;br /&gt;
上下文: 服务器配置, 虚拟主机, 目录, .htaccess &lt;br /&gt;
覆盖项: All &lt;br /&gt;
状态: 核心 &lt;br /&gt;
模块: core &lt;br /&gt;

ServerSignature指令允许您配置服务器端生 成文档的页脚（错误信息、mod_proxy的ftp目录列表、mod_info的输出）。您启用这个页脚的原因主要在于处于一个代理服务器链中的时候，用户基本无法辨识出究竟是链中的哪个服务器真正产生了返回的错误信息。 &lt;br /&gt;
默认的Off设定没有错误行（这样便与Apache 1.2及更旧版本兼容）。采用On会简单的增加一行关于服务器版本和正在伺服的虚拟主机的ServerName，而EMail设置会如文档中说明的那样额外创建一个指向ServerAdmin的&#34;mailto:&#34;部分。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>archlinux安装</title>
      <link>https://wdicc.com/install-archlinux/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-archlinux/</guid>
      <description>
1 准备工作&lt;br /&gt;
1.1 下载arch0.7的base iso，或者完整iso&lt;br /&gt;
  arch的iso可以从官方网站下载，http://www.archlinux.org/download.php ，&lt;br /&gt;
  也可以从我的mirror下载，http://210.72.203.226/current/iso/i686/arch-0.7-base.iso ，我这里的是base iso。本文以完整iso为例，其实是没有区别的，都是安装一个基本系统。&lt;br /&gt;

1.2 安排安装分区&lt;br /&gt;
  把arch的iso放到硬盘的一个ext2、ext3或者resierfs分区上面，注意不要放到fat分区上面，&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>debian下的alsa(zz)</title>
      <link>https://wdicc.com/alsa-in-debian/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/alsa-in-debian/</guid>
      <description>
前段时间重装机器，用的是debian提供的2.6内核，装了alsa-base后发现alsa无法发声，但oss却工作正常。折腾了大半天也没搞明白是怎么回事，无奈之下只好使用oss。今天在版上看到有人讨论，才知道oss不能和alsa共存。而我的问题很可能就是系统在启动的时候预先加载了 oss的驱动。后来用google查了一下，在下面这个网址http://www.sonic.net/~rknop/linux/debian_alsa.html&lt;br /&gt;

发现问题果然如此。原来debian中自动侦探硬件的程序discover在检测到声卡后会自动加载oss，只要不让它自动加载就可以了。具体做法就是在/etc/discover.conf中加上一句skip i810_audio 。然后重启就能使用alsa了，不过要注意的是alsa默认是静音，需要自己手动将声音调大。&lt;br /&gt;

版上有人说还需要在/etc/hotplug/blacklist中加上i810_audio，我发现不需要这么做。因为安装alsa时，系统在/etc/hotplug/blacklist.d/alsa*中自动添加这些内容。&lt;br /&gt;

版上有人说还需要更改/etc/modutils/alsa-base中的相关内容，具体就是将above改为alias。&lt;br /&gt;

http://wiki.debian.org.tw/index.php/HardwareIdentification 这个网址讲述了debian中硬件识别的相关知识。&lt;br /&gt;

引用网址：http://www.debian.org.hk/node/12420&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Linux远程GUI访问的应用</title>
      <link>https://wdicc.com/linux-remote-gui/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/linux-remote-gui/</guid>
      <description>● rdesktop的下载和安装&lt;br /&gt;

    在各种版本的RedHat Linux系统安装盘上，一般第三张光盘上都带有rdesktop的可执行的RPM软件包，例如：&lt;br /&gt;
    RedHat 8.0: rdesktop-1.1.0-2.i386.rpm&lt;br /&gt;
    RedHat 9.0: rdesktop-1.2.0-1.i386.rpm&lt;br /&gt;
    Fedora Core 2: rdesktop-1.3.1-3.i386.rpm&lt;br /&gt;
    通过用 #rpm –q rdesktop 查看系统中是否已安装了rdesktop，然后安装相应的rpm软件包。&lt;br /&gt;

    我们还可以下载rdesktop的源程序，在各个操作平台上编译和安装。下面介绍在RedHat 9.0下安装rdesktop-1.3.1，下载的ftp地址为：&lt;br /&gt;
    ftp://tu172055.tsinghua.edu.cn/pub/mirror/gentoo/distfiles/rdesktop-1.3.1.tar.gz&lt;br /&gt;
    编译安装如下：&lt;br /&gt;
    [root@host12 cx]# tar xvzf rdesktop-1.3.1.tar.gz&lt;br /&gt;
    [root@host12 cx]# cd rdesktop-1.3.1&lt;br /&gt;
    [root@host12 cx]# ./configure&lt;br /&gt;
    [root@host12 cx]# make&lt;br /&gt;
    [root@host12 cx]# make install&lt;br /&gt;
    [root@host12 cx]#&lt;br /&gt;
    安装成功后，在/usr/local/bin下生成了可执行的rdesktop程序。&lt;br /&gt;

    ● rdesktop的使用&lt;br /&gt;

    1、远程Windows系统的设置&lt;br /&gt;

    这里以连接Windows XP Professional的远程桌面服务为例。首先在Windows XP下启用远程桌面服务（注意，XP的HomeEdition没有远程桌面服务），右键点击我的电脑，选择属性，查看“远程”选项，选择“允许用户远程连接到这台计算机”即可。&lt;br /&gt;

    2、Linux下rdesktop的使用&lt;br /&gt;

    rdesktop的使用很简单，可通过 #rdesktop –h得到使用的帮助。一般常用的登录命令为：&lt;br /&gt;
    #rdesktop –g 1024x768 –d 24 hostname&lt;br /&gt;
    其中 “g 1024x768”设置分辨率为1024x768，“d 24”设置真彩24位，hostname为 windows机器的主机名或者ip地址。&lt;br /&gt;

    在输入了Windows XP的用户名和密码后，就可以登录并操作远程的windows系统。如下图：&lt;br /&gt;


 &lt;br /&gt;

    二、Linux对GUI远程访问的支持&lt;br /&gt;

    如果你想在本机访问远程的Linux窗口系统，并需运行和显示图形程序，Linux提供了对图形用户界面（GUI）远程访问的广泛支持。&lt;br /&gt;

    ● 本机为Linux或UNIX系统&lt;br /&gt;

    现在设想登录到远程主机rhostname上，运行gimp程序，并把它的显示输出到本机的屏幕上，那么需要依次执行以下操作： &lt;br /&gt;

    1、启动X服务器  &lt;br /&gt;
    # xhost +rhostname   (允许远程rhostname机使用本机的X Server)&lt;br /&gt;

    2、telnet (或ssh)登录远程主机&lt;br /&gt;
    # telnet rhostname&lt;br /&gt;

    3、设置DISPLAY环境变量&lt;br /&gt;
    指定了一个显示设备，所有的图形程序都将显示到这个设备。&lt;br /&gt;
    DISPLAY的格式为：hostname:displaynumber.screennumber&lt;br /&gt;
    hostname是本机主机名，或者是它的ip地址。一般displaynumber、screennumber都是0。&lt;br /&gt;
    # echo $SHELL&lt;br /&gt;
    • 如果返回的是 /bin/ksh，那么可以用：&lt;br /&gt;
    # export DISPLAY=本机的IP地址:0.0&lt;br /&gt;
    • 如果返回的是 /bin/csh，那么可以用：&lt;br /&gt;
    # setenv DISPLAY 本机的IP地址:0.0&lt;br /&gt;
    • 如果返回的是 /bin/bash，那么可以用：&lt;br /&gt;
    # DISPLAY=本机的IP地址:0.0&lt;br /&gt;
    # export DISPLAY&lt;br /&gt;

    4、启动gimp程序&lt;br /&gt;
     # gimp&lt;br /&gt;
    &lt;br /&gt;
    ● 本机为Windows系统&lt;br /&gt;

    在微软的Windows下需要一个XServer软件，以便可以登录到远程的Linux，而将结果显示在本地计算机上。常见的Windows的XServer软件有：X-win、Exceed和cywin等。下面介绍如何使用Exceed远程登陆Linux的过程。&lt;br /&gt;

    1、Exceed软件&lt;br /&gt;
    Hummingbird Exceed是运行在Windows环境下的优秀的X终端仿真软件，是一个商业软件。 运行Exceed之后, Windows系统就拥有了一台Xserver, 可以登录到任何一台Linux和UNIX主机上，并将图形化的窗口显示到本地，此时该Windows系统仍可正常运行其他的Windows应用程序，真正享受多任务操作系统的方便.。&lt;br /&gt;

    2、Exceed的设置（以Exceed 8.0为例）&lt;br /&gt;
    通过“开始&gt;&gt;程序&gt;&gt; Hummingbird Connectivity V8.0&gt;&gt;Exceed&gt;&gt;Xconfig”启动设置程序Network and Communication项，在Mode项中选择“XDMCP Broadcast”。&lt;br /&gt;



    3、在Windows下启动远程Linux的Kde图形界面&lt;br /&gt;
    （1）启动Hummingbird Exceed，然后将Exceed窗口变成最小化；&lt;br /&gt;
    （2）打开Windows下的ssh，登录到远程主机rhostname,;&lt;br /&gt;
    （3）登录成功后，输入：&lt;br /&gt;
    # export DISPLAY= =本机的IP地址:0.0&lt;br /&gt;
    # startkde&lt;br /&gt;

    此后远程的Linux的KDE图形界面就会显示在本机的Windows系统下，用户对它可进行任何操作。&lt;br /&gt;


参考网址：http://www.pcworld.com.cn/so_pcworld/more/zhuti/1231_z7.asp&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>mysql修改数据库权限</title>
      <link>https://wdicc.com/mysql-grant/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/mysql-grant/</guid>
      <description>
&lt;pre class=&#34;prettyprint lang-sql&#34;&gt;
GRANT select,insert,update,delete,create,drop ON xxxdb.* TO xxxuser@localhost IDENTIFIED BY &#34;xxxpwd&#34;;
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>一段自动设置文件编</title>
      <link>https://wdicc.com/usefull-vimrc/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/usefull-vimrc/</guid>
      <description>
&lt;pre class=&#34;prettyprint lang-bash&#34;&gt;
[root@caph root]# cat .vimrc 
&#34; multi-encoding setting
if has(&#34;multi_byte&#34;)
  &#34;set bomb
  set fileencodings=ucs-bom,utf-8,cp936,big5,euc-jp,euc-kr,latin1
  &#34; CJK environment detection and corresponding setting
  if v:lang =~ &#34;^zh_CN&#34;
    &#34; Use cp936 to support GBK, euc-cn == gb2312
    set encoding=cp936
    set termencoding=cp936
    set fileencoding=cp936
  elseif v:lang =~ &#34;^zh_TW&#34;
    &#34; cp950, big5 or euc-tw
    &#34; Are they equal to each other?
    set encoding=big5
    set termencoding=big5
    set fileencoding=big5
  elseif v:lang =~ &#34;^ko&#34;
    &#34; Copied from someone&amp;#39;s dotfile, untested
    set encoding=euc-kr
    set termencoding=euc-kr
    set fileencoding=euc-kr
  elseif v:lang =~ &#34;^ja_JP&#34;
    &#34; Copied from someone&amp;#39;s dotfile, untested
    set encoding=euc-jp
    set termencoding=euc-jp
    set fileencoding=euc-jp
  endif
  &#34; Detect UTF-8 locale, and replace CJK setting if needed
  if v:lang =~ &#34;utf8$&#34; || v:lang =~ &#34;UTF-8$&#34;
    set encoding=utf-8
    set termencoding=utf-8
    set fileencoding=utf-8
  endif
else
  echoerr &#34;Sorry, this version of (g)vim was not compiled with multi_byte&#34;
endif
&lt;/pre&gt;&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天我也blog了</title>
      <link>https://wdicc.com/first-blog/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/first-blog/</guid>
      <description>
找了个模板，也blog了一把，呵呵，日后有空多添点咚咚。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>今天装了个freebsd</title>
      <link>https://wdicc.com/install-freebsd/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/install-freebsd/</guid>
      <description>
花了大概一个下午的时间把FreeBSD5.3装上了。&lt;br /&gt;

FreeBSD不像linux那样可以完全脱离光驱软驱来安装，鼓捣了半天，最后还是刻盘装的，不过似乎刻一张盘就ok了，第二张盘一直没用。&lt;br /&gt;

安装好之后就是设置网络了。在/etc/rc.conf里面设置，也可以运行sysinstall来设置，不过运行一次就添加一次，晕死了。设置好了ip就是改mac地址了。在这个文件似乎不行，设置了ether就会启动不起来网络。没办法，只好在/etc/rc里面试着添加了三句，没想到居然还搞定了，呵呵。&lt;br /&gt;

ifconfig rl0 down&lt;br /&gt;
ifconfig rl0 ehter FFFFFFFF&lt;br /&gt;
ifconfig rl0 up&lt;br /&gt;

FreeBSD很奇怪，网卡名字似乎是和网卡型号联系的，不同型号不同名字。&lt;br /&gt;

装好之后就是设置了ssh。对了，设置好网卡后会出现sendmail启动不起来的情况，修改/etc/defaults/rc.conf里面关于sendmail部分，能disable都disable就ok了。ssh设置了允许root登陆和密码验证。&lt;br /&gt;

PermitRootLogin yes&lt;br /&gt;
PasswordAuthentication yes&lt;br /&gt;

不习惯su来su去的，还是加入root敢死队吧，呵呵。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>在mdk安装xsim输入法</title>
      <link>https://wdicc.com/xsim-on-mdk/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/xsim-on-mdk/</guid>
      <description>在mdk安装xsim输入法，有以下几项工作要做&lt;br /&gt;
1 准备软件&lt;br /&gt;

xsim安装需要db4,我的mdk9.1安装的时候我已经选择了大部分软件，但是还是没有这个，所以你也可能需要这个，如果不确定，可以先跳过第3步看看，因为我也不知道怎么看有没有装。软件到这里下载http://www.sleepycat.com/download/index.shtml,下载GNU gzip/tar format&lt;br /&gt;
然后下在xsim,到这里http://download.berlios.de/xsim找到xsim-x.x.x.tar.gz(那里有个rpm的，但是我用rpm尝试了很多次，始终是装上了进入kde就死，可能是我设置的问题，你可以试试看，如果安装了不行，可以用rpm -e xxx.rpm卸载了重来)&lt;br /&gt;

2 准备安装&lt;br /&gt;

很多地方都说需要先把什么xcin,Chinput卸载了，我也照做了，可能是会有冲突吧。卸载命令&lt;br /&gt;
rpm -e xcin&lt;br /&gt;
rpm -e Chinput&lt;br /&gt;

3 安装db4&lt;br /&gt;

下载以后，你可以在windows下解压看看里面的文档，用winrar就可以解，在docs目录下面，或者直接看关于unix安装部分docsrefbuild_unixintro.html里面有安装方法&lt;br /&gt;
1）先把你的包解压了&lt;br /&gt;
tar xvzf db-4.x.x.tar.gz(我还不明白xvzf的意思，总之是参数了)&lt;br /&gt;
解压以后应该在当然目录会多出来一个db-4.x.x文件夹。&lt;br /&gt;

2）进入其中的build_unix目录，执行下面的命令&lt;br /&gt;
../dist/configure --enable-cxx --prefix=/usr/local&lt;br /&gt;
make&lt;br /&gt;
make install&lt;br /&gt;
在此过程中要注意看有没有错误，一般就是个xxx error之类，停下来。如果有，。。。。。我也不知道怎么办，你去重新下载一个看看，或者详细参看上面提到的他的文档。&lt;br /&gt;

3）如果要重装，执行下面的命令&lt;br /&gt;
make realclean&lt;br /&gt;

ok,make install不出意外，你的db4就应该没有问题了。&lt;br /&gt;

4 安装xsim&lt;br /&gt;

解压，和上面的命令类似 tar xvzf xsim-x.x.x.x.tar.gz&lt;br /&gt;
进入xsim-x.x.x.x目录，执行下面的命令&lt;br /&gt;
./configure&lt;br /&gt;
make&lt;br /&gt;
make install&lt;br /&gt;
在此过程中不能有错误&lt;br /&gt;
然后make install-data&lt;br /&gt;
这个命令我每次执行都会出错，后来我执行到这一步的时候，先把xsim文件夹改名字，例如xsim2,然后用rpm安装了他的rpm,命令rpm -ivh xxx.rpm，然后拷贝/usr/local/xsim/dat目录里面的东西到/usr/local/xsim2/dat里面，然后在卸载rpm,然后把xsim文件夹删除了，用rmdir -r xsim命令。然后把xsim2改为xsim&lt;br /&gt;
然后还需要修改dat文件夹的权限，chown -R xxx dat其中的xxx为x用户的用户名，其他的我也不会。&lt;br /&gt;
这样xsim也ok啦&lt;br /&gt;

5 配置&lt;br /&gt;

修改/etc/sysconfig/i18n文件，把里面的下面的对应项修改,其他的都是什么zh_CN或者zh_CN.GB2312,zh_CN.GB1380之类，反正有zh_CN就行了吧，我觉得，不是很清楚。&lt;br /&gt;
XIM=XSIM&lt;br /&gt;
XIM_PROGRAM=xsim&lt;br /&gt;
XMODIFIERS=&#34;@im=XSIM&#34;&lt;br /&gt;

修改完后，在控制台输入执行echo $XMODIFIERS命令，如果输出是@im=XSIM，那就好了。&lt;br /&gt;

我在安装的过程中还修改过/etc/init.d/XIM文件，将里面的Chinput改成xsim，但是我觉得这个可能不需要修改，你可以先不修改。&lt;br /&gt;

6  运行个startx看看吧，上天保佑你。反正我看到那个右下角的“简”字兴奋了半天。切出输入法的快捷健是ctrl+space。&lt;br /&gt;

That&amp;#39;s all&lt;br /&gt;
感谢eyes同学的指导，呵呵&lt;br /&gt;
从rh8开始装，到了mdk9才搞定，我是不是太笨了？ :P&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>弄了老久的debian，总算可以看了</title>
      <link>https://wdicc.com/nice-look-of-debian/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/nice-look-of-debian/</guid>
      <description>
装的xfce4.2，目前debian官方还没有收录，很轻快的一个桌面系统。本来想用xorg的，可是debian官方也没有，作罢。&lt;br /&gt;

debian的系统菜单在/usr/share/applications下面，他会自动添加条目。xfce会调用这个里面的，显示debian系统菜单。xfce的菜单设置是在~/.config/xfce4下面，保存了好多信息。桌面菜单在desktop下面，用utf-8编码，修改的时候要注意。面板菜单调用的是/etc/xdg/xfce4/desktop/menu.xml，所以两个不能同步修改。回头看看能不能链接一下。&lt;br /&gt;

xfce下的文件管理器是rox，用起来还行，呵呵。mplayer和xfce的source是下面的这个：&lt;br /&gt;

# xfce4&lt;br /&gt;
deb http://www.os-works.com/debian unstable main&lt;br /&gt;
#uo&lt;br /&gt;
deb http://211.151.91.103/debian-uo sid marillat ustc rareware&lt;br /&gt;

mplayer的主页:http://www.mplayerhq.hu/homepage/design7/news.html。解码器:http://www.mplayerhq.hu/MPlayer/releases/codecs/。Skin：http://ftp.iasi.roedu.net/mirrors/ftp.mplayerhq.hu/MPlayer/Skin/。&lt;br /&gt;

xfce的主页:www.us.xfce.org。插件主页:https://developer.berlios.de/project/showfiles.php?group_id=910&amp;release_id=4494。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>我來編譯 nVidia 顯卡驅動zz</title>
      <link>https://wdicc.com/compile-nvidia-driver/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/compile-nvidia-driver/</guid>
      <description>*因為我安裝的是 kernel 2.6.8-2-686-smp，但沒有這個核心的nVidia驅動，所以我自己來！*&lt;br /&gt;

步驟0： 準備編譯環境&lt;br /&gt;
=================&lt;br /&gt;

Code.0.1 安裝系統核心版本的庫頭文件包&lt;br /&gt;

# apt-get install kernel-headers-$KVERS&lt;br /&gt;

Code.0.2 當source還是sarge的時候安裝debian的打包工具&lt;br /&gt;

# apt-get install debconf-utils debhelper dpatch gettext html2text intltool-debian po-debconf&lt;br /&gt;

步驟1： 編譯及安裝 nVidia的核心模塊&lt;br /&gt;
=================&lt;br /&gt;

Code.1.1 設置一些方便的環境參數&lt;br /&gt;

# export KVERS=$(uname -r)&lt;br /&gt;
# export KSRC=/usr/src/kernel-headers-$KVERS&lt;br /&gt;

* 改source為unstable，再更新&lt;br /&gt;
Code.1.2 安裝nVidia 顯卡驅動程式系統核心模塊包&lt;br /&gt;

# apt-get install nvidia-kernel-source nvidia-kernel-common&lt;br /&gt;

這樣便會在/usr/src內找到剛安裝的模塊包&lt;br /&gt;
Code.1.3 解包&lt;br /&gt;

# cd /usr/src&lt;br /&gt;
# tar -zxf nvidia-kernel-source.tar.gz&lt;br /&gt;

Code.1.4 重建（編譯）模組&lt;br /&gt;

# cd /usr/src/modules/nvidia-kernel&lt;br /&gt;
# debian/rules binary_modules&lt;br /&gt;

好！完成編譯，編譯完的debian包可以在/usr/src/modules/(或/usr/src/ ??)內找到。&lt;br /&gt;

Code.1.5 把編譯完成的驅動包安裝到系統&lt;br /&gt;

# dpkg -i /usr/src/modules/nvidia-kernel-*.deb&lt;br /&gt;

*如果你有多於一個nvidia-kernel包在這目錄下，就要指明用哪個包啦！&lt;br /&gt;

步驟2：安裝用戶層庫&lt;br /&gt;
=================&lt;br /&gt;

* 改source回來為sarge，再更新&lt;br /&gt;

Code.2.1 安裝nVidia的用戶層庫&lt;br /&gt;

# apt-get install nvidia-glx&lt;br /&gt;

步驟3： 更新系統配置&lt;br /&gt;
=================&lt;br /&gt;

Code.3.1 修改 X 伺服器配置，看下方引用&lt;br /&gt;

# nano -w /etc/X11/XF86Config-4&lt;br /&gt;

Code.3.2 重要/etc/X11/XF86Config-4更改部份&lt;br /&gt;

...Module Section&lt;br /&gt;
Load &#34;glx&#34;&lt;br /&gt;
#Load &#34;dri&#34;&lt;br /&gt;
#Load &#34;GLCore&#34;&lt;br /&gt;
...Device Section&lt;br /&gt;
Driver &#34;nvidia&#34; #本來都是 &#34;nv&#34;或&#34;vesa&#34;吧？&lt;br /&gt;

Code. 把nvidia列入系統自動載入的模塊配置列表吧。&lt;br /&gt;

# grep -q ^nvidia /etc/modules ||echo nvidia&gt;&gt;/etc/modules&lt;br /&gt;
引用网址：http://linux.hiweed.com/node/1843&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>揭开正则表达式语法的神秘面纱zz</title>
      <link>https://wdicc.com/the-secret-of-regula-expressions/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/the-secret-of-regula-expressions/</guid>
      <description>支持多种平台正则表达式最早是由数学家Stephen Kleene于1956年提出，他是在对自然语言的递增研究成果的基础上提出来的。具有完整语法的正则表达式使用在字符的格式匹配方面上，后来被应用到熔融信息技术领域。自从那时起，正则表达式经过几个时期的发展，现在的标准已经被ISO(国际标准组织)批准和被Open Group组织认定。&lt;br /&gt;

正则表达式并非一门专用语言，但它可用于在一个文件或字符里查找和替代文本的一种标准。它具有两种标准：基本的正则表达式(BRE)，扩展的正则表达式(ERE)。ERE包括BRE功能和另外其它的概念。&lt;br /&gt;

许多程序中都使用了正则表达式，包括xsh,egrep,sed,vi以及在UNIX平台下的程序。它们可以被很多语言采纳，如HTML 和XML，这些采纳通常只是整个标准的一个子集。&lt;br /&gt;

比你想象的还要普通随着正则表达式移植到交叉平台的程序语言的发展，这的功能也日益完整，使用也逐渐广泛。网络上的搜索引擎使用它，e-mail程序也使用它，即使你不是一个UNIX程序员，你也可以使用规则语言来简化你的程序而缩短你的开发时间。&lt;br /&gt;

正则表达式101很多正则表达式的语法看起来很相似，这是因为你以前你没有研究过它们。通配符是RE的一个结构类型，即重复操作。让我们先看一看ERE标准的最通用的基本语法类型。为了能够提供具有特定用途的范例，我将使用几个不同的程序。&lt;br /&gt;

字符匹配&lt;br /&gt;


正则表达式的关键之处在于确定你要搜索匹配的东西，如果没有这一概念，Res将毫无用处。&lt;br /&gt;

每一个表达式都包含需要查找的指令，如表A所示。&lt;br /&gt;

Table A: Character-matching regular expressions&lt;br /&gt;
 &lt;br /&gt;
操作&lt;br /&gt;
 解释&lt;br /&gt;
 例子&lt;br /&gt;
 结果&lt;br /&gt;
 &lt;br /&gt;
.&lt;br /&gt;
 Match any one character&lt;br /&gt;
 grep .ord sample.txt&lt;br /&gt;
 Will match “ford”, “lord”, “2ord”, etc. in the file sample.txt.&lt;br /&gt;
 &lt;br /&gt;
[ ]&lt;br /&gt;
 Match any one character listed between the brackets&lt;br /&gt;
 grep [cng]ord sample.txt&lt;br /&gt;
 Will match only “cord”, “nord”, and “gord”&lt;br /&gt;
 &lt;br /&gt;
[^ ]&lt;br /&gt;
 Match any one character not listed between the brackets&lt;br /&gt;
 grep [^cn]ord sample.txt&lt;br /&gt;
 Will match “lord”, “2ord”, etc. but not “cord” or “nord”&lt;br /&gt;
 &lt;br /&gt;

 &lt;br /&gt;
 grep [a-zA-Z]ord sample.txt&lt;br /&gt;
 Will match “aord”, “bord”, “Aord”, “Bord”, etc.&lt;br /&gt;
 &lt;br /&gt;

 &lt;br /&gt;
 grep [^0-9]ord sample.txt&lt;br /&gt;
 Will match “Aord”, “aord”, etc. but not “2ord”, etc.&lt;br /&gt;
 &lt;br /&gt;


重复操作符重复操作符，或数量词，都描述了查找一个特定字符的次数。它们常被用于字符匹配语法以查找多行的字符，可参见表B。&lt;br /&gt;

Table B: Regular expression repetition operators&lt;br /&gt;
 &lt;br /&gt;
操作&lt;br /&gt;
 解释&lt;br /&gt;
 例子&lt;br /&gt;
 结果&lt;br /&gt;
 &lt;br /&gt;
?&lt;br /&gt;
 Match any character one time, if it exists&lt;br /&gt;
 egrep “?erd” sample.txt&lt;br /&gt;
 Will match “berd”, “herd”, etc. and “erd”&lt;br /&gt;
 &lt;br /&gt;
*&lt;br /&gt;
 Match declared element multiple times, if it exists&lt;br /&gt;
 egrep “n.*rd” sample.txt&lt;br /&gt;
 Will match “nerd”, “nrd”, “neard”, etc.&lt;br /&gt;
 &lt;br /&gt;
+&lt;br /&gt;
 Match declared element one or more times&lt;br /&gt;
 egrep “[n]+erd” sample.txt&lt;br /&gt;
 Will match “nerd”, “nnerd”, etc., but not “erd”&lt;br /&gt;
 &lt;br /&gt;
{n}&lt;br /&gt;
 Match declared element exactly n times&lt;br /&gt;
 egrep “[a-z]{2}erd” sample.txt&lt;br /&gt;
 Will match “cherd”, “blerd”, etc. but not “nerd”, “erd”, “buzzerd”, etc.&lt;br /&gt;
 &lt;br /&gt;
{n,}&lt;br /&gt;
 Match declared element at least n times&lt;br /&gt;
 egrep “.{2,}erd” sample.txt&lt;br /&gt;
 Will match “cherd” and “buzzerd”, but not “nerd”&lt;br /&gt;
 &lt;br /&gt;
{n,N}&lt;br /&gt;
 Match declared element at least n times, but not more than N times&lt;br /&gt;
 egrep “n[e]{1,2}rd” sample.txt&lt;br /&gt;
 Will match “nerd” and “neerd”&lt;br /&gt;
 &lt;br /&gt;


锚&lt;br /&gt;

锚是指它所要匹配的格式，如图C所示。使用它能方便你查找通用字符的合并。例如，我用vi行编辑器命令:s来代表substitute，这一命令的基本语法是：&lt;br /&gt;

s/pattern_to_match/pattern_to_substitute/&lt;br /&gt;
 &lt;br /&gt;

Table C: Regular expression anchors&lt;br /&gt;
 &lt;br /&gt;
操作&lt;br /&gt;
 解释&lt;br /&gt;
 例子&lt;br /&gt;
 结果&lt;br /&gt;
 &lt;br /&gt;
^&lt;br /&gt;
 Match at the beginning of a line&lt;br /&gt;
 s/^/blah /&lt;br /&gt;
 Inserts “blah “ at the beginning of the line&lt;br /&gt;
 &lt;br /&gt;
$&lt;br /&gt;
 Match at the end of a line&lt;br /&gt;
 s/$/ blah/&lt;br /&gt;
 Inserts “ blah” at the end of the line&lt;br /&gt;
 &lt;br /&gt;
&lt;&lt;br /&gt;
 Match at the beginning of a word&lt;br /&gt;
 s/&lt;br /&gt;
 Inserts “blah” at the beginning of the word&lt;br /&gt;
 &lt;br /&gt;

 &lt;br /&gt;
 egrep “&lt;br /&gt;
 Matches “blahfield”, etc.&lt;br /&gt;
 &lt;br /&gt;
&gt;&lt;br /&gt;
 Match at the end of a word&lt;br /&gt;
 s/&gt;/blah/&lt;br /&gt;
 Inserts “blah” at the end of the word&lt;br /&gt;
 &lt;br /&gt;

 &lt;br /&gt;
 egrep “&gt;blah” sample.txt&lt;br /&gt;
 Matches “soupblah”, etc.&lt;br /&gt;
 &lt;br /&gt;
b&lt;br /&gt;
 Match at the beginning or end of a word&lt;br /&gt;
 egrep “bblah” sample.txt&lt;br /&gt;
 Matches “blahcake” and “countblah”&lt;br /&gt;
 &lt;br /&gt;
B&lt;br /&gt;
 Match in the middle of a word&lt;br /&gt;
 egrep “Bblah” sample.txt&lt;br /&gt;
 Matches “sublahper”, etc.&lt;br /&gt;
 &lt;br /&gt;




间隔&lt;br /&gt;
Res中的另一可便之处是间隔(或插入)符号。实际上，这一符号相当于一个OR语句并代表|符号。下面的语句返回文件sample.txt中的“nerd” 和 “merd”的句柄：&lt;br /&gt;

egrep “(n|m)erd” sample.txt&lt;br /&gt;


间隔功能非常强大，特别是当你寻找文件不同拼写的时候，但你可以在下面的例子得到相同的结果：&lt;br /&gt;

egrep “[nm]erd” sample.txt&lt;br /&gt;

当你使用间隔功能与Res的高级特性连接在一起时，它的真正用处更能体现出来。&lt;br /&gt;

一些保留字符Res的最后一个最重要特性是保留字符(也称特定字符)。例如，如果你想要查找“ne*rd”和“ni*rd”的字符，格式匹配语句“n[ei]*rd”与“neeeeerd” 和 “nieieierd”相符合，但并不是你要查找的字符。因为‘*’(星号)是个保留字符，你必须用一个反斜线符号来替代它，即：“n[ei]*rd”。其它的保留字符包括：&lt;br /&gt;

^ (carat) &lt;br /&gt;
. (period) &lt;br /&gt;
[ (left bracket} &lt;br /&gt;
$ (dollar sign) &lt;br /&gt;
( (left parenthesis) &lt;br /&gt;
) (right parenthesis) &lt;br /&gt;
| (pipe) &lt;br /&gt;
* (asterisk) &lt;br /&gt;
+ (plus symbol) &lt;br /&gt;
? (question mark) &lt;br /&gt;
{ (left curly bracket, or left brace) &lt;br /&gt;
backslash &lt;br /&gt;
一旦你把以上这些字符包括在你的字符搜索中，毫无疑问Res变得非常的难读。比如说以下的PHP中的eregi搜索引擎代码就很难读了。&lt;br /&gt;

eregi(&#34;^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*$&#34;,$sendto)&lt;br /&gt;

你可以看到，程序的意图很难把握。但如果你抛开保留字符，你常常会错误地理解代码的意思。&lt;br /&gt;

总结在本文中，我们揭开了正则表达式的神秘面纱，并列出了ERE标准的通用语法。如果你想阅览Open Group组织的规则的完整描述，你可以参见：Regular Expressions，欢迎你在其中的讨论区发表你的问题或观点。&lt;br /&gt;

引用网址：http://www.zdnet.com.cn/developer/tech/story/0,2000081602,39077620-1,00.htm&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>第一次用cvs</title>
      <link>https://wdicc.com/use-cvs/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/use-cvs/</guid>
      <description>
客户端配置最重要的是CVSROOT环境变量的配置。&lt;br /&gt;

其格式是： :pserver:username@hostname(或者IP地址):CVS仓库路径 &lt;br /&gt;

例如，我在使用我们实验室的CVS服务器时的配置为： &lt;br /&gt;

:pserver:car@192.168.2.2:/had/src &lt;br /&gt;

每一个实验室的成员应该是用自己的mail服务器账户作为usernam，密码也是mail服务器的密码。 &lt;br /&gt;

上面是摘抄的一段，用cvs需要先cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/pureftpd login 登陆，或者设置$CVSROOT环境变量，之后用cvs -d :pserver:anonymous@cvs.sourceforge.net:/cvsroot/pureftpd checkout pureftpd就可以checkout更新了。&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>给本本装了个debian</title>
      <link>https://wdicc.com/debian-on-my-notebook/</link>
      <pubDate>Tue, 19 Apr 2005 00:00:00 +0000</pubDate>
      
      <guid>https://wdicc.com/debian-on-my-notebook/</guid>
      <description>mrxvt支持多tab，是国产得软件，呵呵。不过还得设置才能正常显示输入中文。&lt;br /&gt;

#cat ~/.mrxvtrc&lt;br /&gt;
mrxvt*mfont:              hanzigb16st&lt;br /&gt;
mrxvt*xftmfont:           simsun&lt;br /&gt;
mrxvt*xftSize:            14&lt;br /&gt;
mrxvt*multichar_encoding: GB&lt;br /&gt;
mrxvt*inputMethod:        fcitx&lt;br /&gt;

这样就ok了。&lt;br /&gt;


看到xfce4.2出来了，可是debian还没有包含，找到一个安装方法:http://www.os-works.com/view/debian/&lt;br /&gt;

To start the installation of the Debian packages, add the following two lines to the file /etc/apt/sources.list on your system: &lt;br /&gt;


deb http://www.os-works.com/debian testing main&lt;br /&gt;
deb-src http://www.os-works.com/debian testing main&lt;br /&gt;
You&amp;#39;ll have to update your package cache afterwards, using the command (as user root): &lt;br /&gt;


apt-get update&lt;br /&gt;
This may take some time dependeing on your bandwidth. &lt;br /&gt;

Now, if you want to install the whole Xfld desktop - including the Terminal emulator, the ROX file manager, the Xfmedia media player and several additional panel plugins - you should run the command &lt;br /&gt;


apt-get install -t testing xfld-desktop&lt;br /&gt;
as user root. This will download all required packages and install them on your computer. The parameter -t testing should not be needed in most cases, but it doesn&amp;#39;t hurt either. It tells apt-get to use packages from the testing release - which is the release name we use for our repository - even if your system defaults to another release (e.g. unstable). See this introduction to APT Pinning for further details on how to manage multiple APT sources. For example, if you are using Debian unstable (aka sid), you may need to add the following lines to the file /etc/apt/preferences/ (create the file if its not already present on your system) to ensure that you will actually install Xfce 4.2 and not Xfce 4.0 from Debian unstable: &lt;br /&gt;


Package: *&lt;br /&gt;
Pin: origin www.os-works.com&lt;br /&gt;
Pin-Priority: 999&lt;br /&gt;
These three lines will make sure that APT assigns a higher priority to the Xfce 4.2, when installing or upgrading software on your system. Once you have added these lines, you don&amp;#39;t need to use the -t testing option to apt-get any longer. &lt;br /&gt;

In case you want to use only the core components of the Xfce 4.2 Desktop Environment, the command &lt;br /&gt;


apt-get install -t testing xfce4&lt;br /&gt;
will install the window manager, session manager, panel, file manager and the various utilities that ship with Xfce, but not the additional software that completes the Xfld Desktop. &lt;br /&gt;

If you have Xfce 4.0.x currently installed on your system, you can try to upgrade to the Xfce 4.2 packages using the command &lt;br /&gt;


apt-get dist-upgrade&lt;br /&gt;
If you have trouble upgrading from the Xfce packages in the official Debian repository, you could try to uninstall the official packages first: &lt;br /&gt;


apt-get remove libxfce4util-1&lt;br /&gt;
will remove all Xfce packages from your system. Afterwards, you should retry with the installation as described above.&lt;br /&gt;
</description>
    </item>
    
  </channel>
</rss>
