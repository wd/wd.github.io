<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wd and cc</title>
  <subtitle>happy everyday</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wdicc.com/"/>
  <updated>2016-12-27T06:07:08.000Z</updated>
  <id>https://wdicc.com/</id>
  
  <author>
    <name>wd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Beansdb merge tools</title>
    <link href="https://wdicc.com/Beansdb-merge-tools/"/>
    <id>https://wdicc.com/Beansdb-merge-tools/</id>
    <published>2016-12-26T10:36:11.000Z</published>
    <updated>2016-12-27T06:07:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Beansdb 是豆瓣开源出来的一个高效的支持 memcached 协议的文件存储 db。按 key 查找的时候，会有索引定位到磁盘位置。不过貌似前段时间看到说他们搞了一个新的替代这个，我找了一下没找到链接。</p>
<p>使用 beansdb 的时候，有 2 个问题需要解决</p>
<ul>
<li>冗余问题</li>
<li>数据过期删除问题</li>
</ul>
<h2 id="数据冗余问题"><a href="#数据冗余问题" class="headerlink" title="数据冗余问题"></a>数据冗余问题</h2><p>先说第一个问题。beansdb 本身不提供分布式 hash 逻辑，它就是个单机的程序。冗余需要你自己搞定，如果你使用标准的 memcache 协议，可以有多 server 的配置，读的时候其中一个失败会自动找下一个 server，写的时候就不会了，需要你自己写到多个 server。如果你所有的 server 都是一模一样的，那多写就可以了。如果不一样，你还需要考虑自己的 hash 策略。</p>
<p>豆瓣提供了一个 python 的<a href="https://github.com/douban/beansdb/blob/master/python/dbclient.py" target="_blank" rel="external">客户端</a>，这个客户端里面其实包含了 hash 策略。通过把 key 和 server 分桶来做 hash。摘一点代码如下</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">BEANSDBCFG = &#123;</div><div class="line">    <span class="string">"localhost:7901"</span>: range(16),</div><div class="line">    <span class="string">"localhost:7902"</span>: range(16),</div><div class="line">    <span class="string">"localhost:7903"</span>: range(16),</div><div class="line">&#125;</div><div class="line"></div><div class="line">db = Beansdb(BEANSDBCFG, 16)</div></pre></td></tr></table></figure>
<p>上面定义了三个 server，每个包含 16 个桶（你可以根据你的需求比如定义第一个 server 只包含某些桶）。</p>
<pre><code>def __init__(self, servers, buckets_count=16, N=3, W=1, R=1):
</code></pre><p>这里是定义写入数据的时候的逻辑，那个 <code>buckets_count</code> 是桶的数量，<code>N</code> 和 <code>R</code> 貌似没用。。。，<code>W</code> 是改动的时候要求成功的最小 server 数量，包括删除和写入的时候。</p>
<p>读取的时候，会循环从包含这个 key 的桶的 server 列表里面循环读取，这里还有一个「自愈」的逻辑，循环读取直到遇到一个成功的 server，会同时把前面失败的 server 都写入一份数据。</p>
<p>这样下来基本就解决了读写分布式和故障恢复的逻辑了，非常巧妙。</p>
<p>其实针对这个问题，豆瓣还开源了个 <a href="https://github.com/douban/beanseye" target="_blank" rel="external">beanseye</a>，具体功能没有仔细研究，不过应该是上面需要客户端处理的事情都不需要考虑了。</p>
<p>我们开始用的时候，不知道有 beanseye，我的场景是在 perl 环境下面使用，把 python 的客户端翻译了一个 perl 的版本出来。[1] 有兴趣可以看看。</p>
<h2 id="数据过期删除问题"><a href="#数据过期删除问题" class="headerlink" title="数据过期删除问题"></a>数据过期删除问题</h2><p>beansdb 设计之初写入用的是 append 模式，就是说，遇到删除也是写入一条新的记录，并不会返回去修改原来的数据，所以能达到合理的 IO 速度。如果场景是大量不会删除的小文件，那么 beansdb 使用起来非常合适。</p>
<p>如果有数据过期或者删除的需求，就需要想办法处理这些数据了，否则的话，beandb 的数据文件里面会慢慢的有大量的无用数据，浪费磁盘空间。</p>
<p>这个删除过期数据的过程，我看豆瓣叫做 merge。思路其实就是把所有数据遍历一次，把有效的数据写入一个新的 data 文件，然后旧的删掉，就可以了。beansdb 的数据文件有 2 种，一种是 <code>xxx.data</code>，这种文件是数据文件，另外一种是 <code>xxx.hint.qlz</code> 这种是索引文件。</p>
<p>针对这个需求，我写了两版程序，第一版就是单纯的解读一下数据文件，把其中的数据的信息读出来，主要是版本号和创建时间，然后根据版本号只写入高版本的，根据创建时间把过期的数据丢弃。生成新的 data 文件之后，要删除 hint 文件，启动的时候会自动产生 hint 文件。然后在 beansdb 的机器上面定期跑这个脚本就好了，注意跑之前应该先关闭 beansdb。</p>
<p>第一个版本的程序只是解读了每个块的数据头，程序用起来也勉强还行，但是主要问题是，每次启动都需要重新产生 hint 文件，导致启动到提供服务很慢，所以就有了第二版程序。第二版包含了第一版的全部功能，还提供了按照文件大小来定义删除时限的功能。</p>
<p>第二个版本程序基本把 data 和 hint 文件产生的逻辑都用 perl 实现了（不过还没有经过太多测试）。下面简单讲讲逻辑。</p>
<h3 id="data-文件"><a href="#data-文件" class="headerlink" title="data 文件"></a>data 文件</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">‌<span class="keyword">typedef</span> <span class="keyword">struct</span> data_record</div><div class="line">&#123;</div><div class="line">    <span class="keyword">char</span> *value;</div><div class="line">    <span class="keyword">union</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">bool</span> free_value;    <span class="comment">// free value or not</span></div><div class="line">        <span class="keyword">uint32_t</span> crc;</div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">int32_t</span> tstamp;</div><div class="line">    <span class="keyword">int32_t</span> flag;</div><div class="line">    <span class="keyword">int32_t</span> version;</div><div class="line">    <span class="keyword">uint32_t</span> ksz;</div><div class="line">    <span class="keyword">uint32_t</span> vsz;</div><div class="line">    <span class="keyword">char</span> key[<span class="number">0</span>];</div><div class="line">‌&#125; DataRecord;</div></pre></td></tr></table></figure>
<p>数据文件里面，每个 key 对应的数据的长度是 <code>4*6 + key_size + value_size + padding</code>。</p>
<pre><code>read($fh, my $header, 4*6);
my ( $crc, $tstamp, $flag, $ver, $ksz, $vsz ) = unpack(&apos;I i i i I I&apos;, $header);
</code></pre><p>头部是 24 个字节，依次包括校验数据，写入时间戳，标记位，版本号，key 的长度，value 的长度。上面 <code>unpack</code> 方法第一个参数里面的含义，可以参考<a href="http://perldoc.perl.org/functions/pack.html" target="_blank" rel="external">perl 的文档</a>。每个 4 字节，32bit 整数。</p>
<p>然后是读取 <code>$ksz</code> 的长度的 key，读取 <code>$vsz</code> 长度 value。如果 <code>$flag</code> 标记表明 value 有压缩，压缩用的是 QLZ 算法，真实的值需要用 qlz 解压缩之后才能得到。</p>
<p>最后是 padding 部分，整个数据长度需要是 256 的整数倍。不足的部分，会写入 <code>\0</code> 做 padding。</p>
<p>merge 的过程不关心 value 的真实值，所以不需要解压缩，把读取到的原样写回去就可以了。另外就是 merge 的时候遇到同一个 key 多个 version 出现的时候，只保留大的那个就可以了。这样操作之后 data 文件会变小。</p>
<h3 id="hint-文件"><a href="#hint-文件" class="headerlink" title="hint 文件"></a>hint 文件</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">‌<span class="keyword">typedef</span> <span class="keyword">struct</span> hint_record</div><div class="line">&#123;</div><div class="line">    <span class="keyword">uint32_t</span> ksize:<span class="number">8</span>;</div><div class="line">    <span class="keyword">uint32_t</span> pos:<span class="number">24</span>;</div><div class="line">    <span class="keyword">int32_t</span> version;</div><div class="line">    <span class="keyword">uint16_t</span> hash;</div><div class="line">    <span class="keyword">char</span> key[NAME_IN_RECORD]; <span class="comment">// allign</span></div><div class="line">‌&#125; HintRecord;</div></pre></td></tr></table></figure>
<p>hint 文件比 data 文件稍微复杂一点，每一条记录是 <code>key_size + data_pos + ver + hash + key + padding</code>。</p>
<pre><code>my ( $ksz, $datapos, $ver, $hash ) = unpack(&quot;B8 B24 i B16&quot;, $header);

$ksz = unpack(&quot;I&quot;, pack(&quot;B32&quot;, $ksz));
$datapos = unpack(&quot;I&quot;, pack(&quot;B32&quot;, $datapos));
$datapos = $datapos &lt;&lt; 8;
$hash = unpack(&quot;I&quot;, pack(&quot;B32&quot;, $hash));
</code></pre><p>头部的 10 个字节如上面代码，第一个 8 bit 是 key 的长度，接下来 24 个 bit 是这个 key 对应数据在 data 文件里面的位置。然后是 4 字节版本，16 bit 的 hash。</p>
<p>padding 和上面 data 里面的逻辑一样，按照 256 的倍数补全。</p>
<p>hint 文件结尾有个 <code>.qlz</code>，表示整个 hint 里面的数据是压缩的，所以在处理前需要先解压缩一下。（不过我看到我代码里面在读取 hint 的时候，是全部数据解压，写入的时候，是按照 record 压缩的，很奇怪）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Beansdb 是豆瓣开源出来的一个高效的支持 memcached 协议的文件存储 db。按 key 查找的时候，会有索引定位到磁盘位置。不过貌似前段时间看到说他们搞了一个新的替代这个，我找了一下没找到链接。&lt;/p&gt;
&lt;p&gt;使用 beansdb 的时候，有 2 个问题需要解
    
    </summary>
    
    
      <category term="beansdb" scheme="https://wdicc.com/tags/beansdb/"/>
    
  </entry>
  
  <entry>
    <title>Release some staff at github</title>
    <link href="https://wdicc.com/release-some-staff-at-github/"/>
    <id>https://wdicc.com/release-some-staff-at-github/</id>
    <published>2016-12-13T09:00:31.000Z</published>
    <updated>2016-12-13T11:09:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>把 blog 用到的模板整理了一下，放到了 <a href="https://github.com/wd/hexo-fabric" target="_blank" rel="external">https://github.com/wd/hexo-fabric</a> ，这个最开始是 fork 别人的代码改的，后来发现原来那个人已经不用了，就整理一下，增加了一个 tag 支持，修改了一下字体和背景色，还有代码颜色等，都是一些小修改。同时也提交到了官方的 theme 库，不过 pull request 还没有通过。。</p>
<p>另外，还把之前写的一个给 ngx-lua 用的一个使用 mcrypt 加密解密的库 <a href="https://github.com/wd/lua-resty-mcrypt" target="_blank" rel="external">https://github.com/wd/lua-resty-mcrypt</a> ，整理出来单独弄了一个模块。代码其实非常简单，这个也能看出来 ngx_lua 里面使用 ffi 调用 C 模块开发多舒服，不过因为 C 知识有限，可能还是会有一些问题，不过至少自己测试是 ok 的，也在线上跑了好久，只能遇到有问题的再说了。这个同时也提交到了春哥的 opm 仓库，那个倒没有审核，提交就被索引了，使用的话应该可以用 opm 命令直接安装。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把 blog 用到的模板整理了一下，放到了 &lt;a href=&quot;https://github.com/wd/hexo-fabric&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/wd/hexo-fabric&lt;/a&gt; ，这
    
    </summary>
    
    
      <category term="lua" scheme="https://wdicc.com/tags/lua/"/>
    
      <category term="hexo" scheme="https://wdicc.com/tags/hexo/"/>
    
      <category term="ngx_lua" scheme="https://wdicc.com/tags/ngx-lua/"/>
    
      <category term="mcrypt" scheme="https://wdicc.com/tags/mcrypt/"/>
    
  </entry>
  
  <entry>
    <title>Bloat and Query Speed in PostgreSQL</title>
    <link href="https://wdicc.com/Bloat-and-Query-Speed-in-PostgreSQL/"/>
    <id>https://wdicc.com/Bloat-and-Query-Speed-in-PostgreSQL/</id>
    <published>2016-12-09T04:12:21.000Z</published>
    <updated>2016-12-09T09:08:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>内容反义自 <a href="https://www.citusdata.com/blog/2016/11/04/autovacuum-not-the-enemy/" target="_blank" rel="external">https://www.citusdata.com/blog/2016/11/04/autovacuum-not-the-enemy/</a></p>
<p>pg 的 mvcc 会导致表索引的 bloat 就不多说了。说一下不合理处理这种 bloat 害处是啥。</p>
<p>首先肯定是会浪费空间。然后也会影响查询速度。表和索引存储的时候都是 8kB 一个 page，如果一个查询一些行，数据库会加载这些 pages 到内存。一个 page 里面的 dead rows 越多，在加载的时候就越浪费 I/O。例如全表扫描会加载所有的 dead rows。</p>
<p>Bloat 还会导致热门的查询会一下塞满内存。会导致相同的 live rows 需要更多 pages。This causes swapping and makes certain query plans and algorithms ineligible for execution.</p>
<p>还有一个影响是，pg 的系统表也会有可能 bloat，因为他们也是表。导致这个的一种情况是频繁的创建和删除临时表。这个进一步会导致一些管理命令执行变慢，甚至比如 <code>\d</code> 这种命令。</p>
<p>索引也有可能会 bloat。索引是 tuple 标识和数据之间的一个映射。这些标识指向的是某个 page 里面的 offset。每个 tuple 都是一个独立的对象，需要自己的索引条目。更新一行的时候总是会创建这行的新的索引条目。</p>
<p>索引的 bloat 的影响比 table 小一点。索引里面指向 dead tuple 的可以直接标记为 dead. 这会使得索引膨胀，但是不会导致不必要的堆查找。同时更新堆中的 tuples 不影响已经索引的列，使用一种叫做 HOT 的技术来把指向 dead tuples 的指针指向新的。这允许查询可以通过这些指针复用旧的索引条目。(Also updates to tuples in the heap that do not affect the indexed column(s) use a technique called HOT to provide pointers from the dead tuple to its replacement. This allows queries to reuses old index entries by following pointers across the heap.) (没太看明白.)</p>
<p>索引 bloat 的问题还是应该需要重视。例如 btree 索引是由二叉树组成()。叶子节点包含值和 tuple 标识（应该是指在 data file 的 offset）。随机更新因为会重用 page，所以可以保持 btree 维持一个良好的形状。但是，如果是单侧更新，会导致大量的空页。</p>
<p>The size considerations of index bloat are still significant. For instance a btree index consists of binary tree of pages (the same sized pages as you find holding tuples in the heap). The leaf node pages contain values and tuple identifiers. Uniform random table updates tend to keep a btree index in pretty good shape because it can reuse pages. However lopsided inserts/updates affecting one side of the tree while preserving a few straggling entries can lead to lots of mostly empty pages.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;内容反义自 &lt;a href=&quot;https://www.citusdata.com/blog/2016/11/04/autovacuum-not-the-enemy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.citusdata.
    
    </summary>
    
    
      <category term="postgresql" scheme="https://wdicc.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>Full page write in PostgreSQL</title>
    <link href="https://wdicc.com/Full-page-write-in-PostgreSQL/"/>
    <id>https://wdicc.com/Full-page-write-in-PostgreSQL/</id>
    <published>2016-12-08T10:02:14.000Z</published>
    <updated>2016-12-08T10:48:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>读了一篇<a href="http://blog.2ndquadrant.com/on-the-impact-of-full-page-writes/" target="_blank" rel="external">文章</a>，简单翻译总结下。</p>
<h2 id="Partial-Writes-Torn-Pages"><a href="#Partial-Writes-Torn-Pages" class="headerlink" title="Partial Writes / Torn Pages"></a>Partial Writes / Torn Pages</h2><p>pg 默认是 8kB 一个 page。linux 文件系统一般是 4kB（x86 里面最大是 4kB)，老设备驱动一般是 512B 一个扇区，新的设备有些支持 4kB 或者 8kB。</p>
<p>当 pg 写入一个 page 8kB 的时候，系统的底层会拆分小一点块，这里涉及到写入的原子性。8kB 的 pg page，会被文件系统拆分成 4kB 的块，然后拆分成 512B 扇区大小。这个时候如果系统崩溃（比如停电，内核 bug）会发生什么？</p>
<p>即使系统的存储有针对这种情况的设计（比如 SSD 自带电容器，RAID 控制器自带电池），内核那块也是会拆分成 4kB 的 page，所以还是有一定可能性，pg 写了 8kB，但是只有部分写入成功。</p>
<p>这个时候你可能意识到这就是为啥我们要有事务日志（WAL）。所以当系统崩溃重启之后，数据库会读取 WAL（从最后一次 checkpoint），然后重新写入一遍，以保证数据文件是完整的。</p>
<p>恢复的时候，在修改一个 page 之前，还是会读取一下。</p>
<p>在 checkpoint 之后第一次修改一个 page 的时候，会把整个 page 写入 WAL。这是为了保证在恢复的时候，能保证这些被修改的 page 能完全恢复到他原有的样子。</p>
<h2 id="写放大"><a href="#写放大" class="headerlink" title="写放大"></a>写放大</h2><p>如果打开 Full page write，很显然会导致 WAL 文件增加，因为就算修改一个字节，也会导致 8kB page 的写入。因为 Full page write 只发生在 checkpoint 之后的第一次写入，所以减少 checkpoint 的发生频率是可以减少写入的。</p>
<h2 id="UUID-vs-BIGSERIAL-主键"><a href="#UUID-vs-BIGSERIAL-主键" class="headerlink" title="UUID vs BIGSERIAL 主键"></a>UUID vs BIGSERIAL 主键</h2><p>比较了一下使用 UUID 或者 bigserial 做主键对写入的影响。可以看原链接的图，会发现在 INSERT 语句的情况下 UUID 产生的 WAL 文件量比较多。主要原因是 Btree 索引的情况下，bigserial 是顺序的维护这个索引，UUID 是无顺序的，会导致维护索引产生的数据量不同。</p>
<p>如果是使用 UPDATE 随机修改，那么会发现产生的 WAL 数量就差不多了。</p>
<h2 id="8kB-and-4kB-pages"><a href="#8kB-and-4kB-pages" class="headerlink" title="8kB and 4kB pages"></a>8kB and 4kB pages</h2><p>如果减小 pg 的 page 的大小，可以减小 WAL 数量。从 8kB 减小到 4kB，上面 UUID 那个例子，可以减少大概 35% 的量。</p>
<h2 id="需要-full-page-write-吗？"><a href="#需要-full-page-write-吗？" class="headerlink" title="需要 full-page write 吗？"></a>需要 full-page write 吗？</h2><p>首先，这个参数是 2005 年 pg 8.1 引入的，那么现代的文件系统是不是已经不用操心部分写入的情况了？作者尝试了一些测试没有测试出来部分写入的情况，当然这不表示不会存在。但是就算是存在，数据的一致性校验也会是有效的保护（虽然并不能修复这个问题，但是至少能让你知道有坏的 page）</p>
<p>其次，现在很多系统都依赖于流式同步，并不会等着有问题的服务器在有硬件问题的时候重启，并且花费很多时间恢复，一般都直接切换到热备服务器上面了。这个时候部分写就不是什么问题了。但是如果我们都推荐这么做，那么「我也不知道为啥数据损坏了，我只是设置了 full_page_writes=off」这种会是 DBA 死前最常见的言论了。(类似于「这种蛇我之前在 reddit 看见过，无毒的」)</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于 full-page write 你没法直接优化。大部分情况下，full-page write 都是发生在 checkpoint 之后，直到下一次 checkpoint。所以调整 checkpoint 的发生频率不要太频繁很重要。</p>
<p>有些应用层的操作，可能会导致对表或者索引的随机写入的增加，例如上面的 UUID 的值就是随机的，会让简单的 INSERT 也会导致索引的随机 update。使用 Bigserial 做主键(让 UUID 做替代键)可以减少写放大。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;读了一篇&lt;a href=&quot;http://blog.2ndquadrant.com/on-the-impact-of-full-page-writes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;，简单翻译总结下。&lt;/p&gt;
&lt;h2 id=&quot;P
    
    </summary>
    
    
      <category term="postgresql" scheme="https://wdicc.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>使用 pgrepup 跨版本升级 pg</title>
    <link href="https://wdicc.com/use-pgrepup-to-upgrade-your-postgres/"/>
    <id>https://wdicc.com/use-pgrepup-to-upgrade-your-postgres/</id>
    <published>2016-12-08T03:55:33.000Z</published>
    <updated>2016-12-08T06:18:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://gasparin.net/2016/11/pgrepup-upgrade-postgresql-using-logical-replication/" target="_blank" rel="external">pgrepup</a> 其实是一个支持 pg 跨版本复制的工具。而 pg 大版本升级需要停机是个比较郁闷的事情，如果能通过这个解决就实在太好了。下面测试了一下。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>需要安装 <code>pgrepup</code> 和 <code>pglogical</code>。</p>
<h3 id="安装-pgrepup"><a href="#安装-pgrepup" class="headerlink" title="安装 pgrepup"></a>安装 pgrepup</h3><p>pgrepup 官方说是支持 python &gt;= 2.7 的版本，我自己测试的结果，python 3.5 里面执行有点问题，需要修改几个地方。但是在 python 2.7 里面，不需要做任何修改，所以建议使用 python 2.7。安装很简单，执行 <code>pip install pgprepup</code> 就可以了。</p>
<h3 id="安装-pglogical"><a href="#安装-pglogical" class="headerlink" title="安装 pglogical"></a>安装 pglogical</h3><p>需要给你的 pg 安装这个扩展。高版本的和低版本的都需要安装。</p>
<p>安装也很简单，下载源码，执行 <code>PATH=/opt/pg96/bin:$PATH make USE_PGXS=1 install</code> 就好了。如果是给 pg95 装，那就把路径改成 pg95。</p>
<p>可以参考<a href="https://2ndquadrant.com/it/resources/pglogical/pglogical-installation-instructions/" target="_blank" rel="external">这里</a>。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置-db"><a href="#配置-db" class="headerlink" title="配置 db"></a>配置 db</h3><p>先给几个 db 定义一下角色。db1 假设为 9.5 版本，db2 假设为 9.6 版本。</p>
<p>pgrepup 允许 db1, db2 和执行 pgrepup 所在的机器分别在不同的机器，也可以在相同的机器，看机器情况。</p>
<p>对于 db，最小配置的 postgres.conf 修改如下，我测试的时候两个 db 在一台机器上面，只需要修改 port 不一样就可以了。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="attr">listen_addresses</span> = <span class="string">'*'</span>          # what IP address(es) to listen <span class="literal">on</span>;</div><div class="line"><span class="attr">port</span> = <span class="number">5495</span></div><div class="line"><span class="attr">wal_level</span> = logical # minimal, archive, hot_standby, or logical</div><div class="line"><span class="attr">max_wal_senders</span> = <span class="number">3</span>             # max number of walsender processes</div><div class="line"><span class="attr">max_replication_slots</span> = <span class="number">3</span>       # max number of replication slots</div><div class="line"><span class="attr">shared_preload_libraries</span> = <span class="string">'pglogical'</span>          # (change requires restart)</div><div class="line"></div><div class="line"><span class="comment">## 下面几个参数不是必须设置的</span></div><div class="line"><span class="attr">logging_collector</span> = <span class="literal">on</span>          # Enable capturing of stderr and csvlog</div><div class="line"><span class="attr">log_filename</span> = <span class="string">'postgresql-%Y-%m-%d.log'</span>        # log file name pattern,</div></pre></td></tr></table></figure></p>
<p>pg_hba.conf 如下，修改其中的 client_ip 和 db_ip 为对应的真实 ip。<br><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">host <span class="built_in">all</span> <span class="built_in">all</span> client_ip/<span class="number">32</span> <span class="built_in">md5</span></div><div class="line">host replication pgrepup_replication db_ip/<span class="number">32</span> <span class="built_in">md5</span></div><div class="line">host <span class="built_in">all</span> pgrepup_replication db_ip/<span class="number">32</span> <span class="built_in">md5</span></div></pre></td></tr></table></figure></p>
<p>配置好之后，启动 db1 和 db2 看看是不是可以正常连接。</p>
<p>还需要建立用户。如果已经存在一个 super 的用户，那也可以直接用那个用户，没有的话，就建一个。db1 和 db2 都需要建立，可以是不同的用户。</p>
<h4 id="hint"><a href="#hint" class="headerlink" title="hint"></a>hint</h4><p>当然，如果我们在生产环境里面做这个事情，那肯定会是 db1 已经是一个存在的 db，只需要增加原来没有的配置就好了。db2 会是一个全新的 db，使用 initdb 初始化，之后配置上面的配置项（当然，如果是将来要给生产用，那应该是复制 db1 的配置文件过来，修改端口就可以了，其他都一样）。</p>
<h3 id="配置-pgrepup"><a href="#配置-pgrepup" class="headerlink" title="配置 pgrepup"></a>配置 pgrepup</h3><p>执行一下 <code>pgrepup config</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup config</div><div class="line">Pgrepup 0.3.7</div><div class="line"><span class="keyword">Create</span> a <span class="keyword">new</span> pgrepup config</div><div class="line">Configuration filename [~/.pgrepup] ./pgrepup.config</div><div class="line"><span class="keyword">Security</span></div><div class="line"><span class="keyword">Do</span> you want <span class="keyword">to</span> <span class="keyword">encrypt</span> <span class="keyword">database</span> credentials <span class="keyword">using</span> a <span class="keyword">password</span>? [Y/n] n</div><div class="line">Folder <span class="keyword">where</span> pgrepup <span class="keyword">store</span> <span class="keyword">temporary</span> dumps <span class="keyword">and</span> pgpass <span class="keyword">file</span> [/tmp] ./tmp</div><div class="line"><span class="keyword">Source</span> <span class="keyword">Database</span> configuration</div><div class="line">Ip address <span class="keyword">or</span> Dns <span class="keyword">name</span>: db_ip</div><div class="line">Port: <span class="number">5495</span></div><div class="line"><span class="keyword">Connect</span> <span class="keyword">Database</span>: [template1]</div><div class="line">Username: wd</div><div class="line"><span class="keyword">Password</span>:</div><div class="line">Destination <span class="keyword">Database</span> configuration</div><div class="line">Ip address <span class="keyword">or</span> Dns <span class="keyword">name</span>: db_ip</div><div class="line">Port: <span class="number">5496</span></div><div class="line"><span class="keyword">Connect</span> <span class="keyword">Database</span>: [template1]</div><div class="line">Username: wd</div><div class="line"><span class="keyword">Password</span>:</div><div class="line">Configuration saved <span class="keyword">to</span> ./pgrepup.config.</div><div class="line">You can <span class="keyword">now</span> <span class="keyword">use</span> the <span class="keyword">check</span> command <span class="keyword">to</span> <span class="keyword">verify</span> setup <span class="keyword">of</span> <span class="keyword">source</span> <span class="keyword">and</span> destination <span class="keyword">databases</span></div></pre></td></tr></table></figure></p>
<p>之后会产生一个配置文件 pgrepup.config，有修改的话，可以打开再次编辑。</p>
<p>之后，可以执行一下 <code>pgrepup check</code> 来检查一下</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup <span class="attr">-c</span> pgrepup.config check</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line"><span class="built_in">Global</span> checkings<span class="attr">...</span></div><div class="line"> &gt;  Folder ./tmp exists <span class="keyword">and</span> is writable <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line">Checking Source<span class="attr">...</span></div><div class="line"> &gt;  Connection PostgreSQL connection <span class="keyword">to</span> db_ip:<span class="number">5495</span> <span class="keyword">with</span> user wd OK</div><div class="line"> &gt;  pglogical installation <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.KO</div><div class="line"></div><div class="line">    Hint: Install docs at https:<span class="comment">//2ndquadrant.com/it/resources/pglogical/pglogical-installation-instructions/</span></div><div class="line"></div><div class="line"> &gt;  Needed wal_level setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Needed max_worker_processes setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Needed max_replication_slots setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Needed max_wal_senders setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  pg_hba.conf settings <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>KO</div><div class="line">    Hint: Add the following lines <span class="keyword">to</span> /home/wd/data95/pg_hba.conf:</div><div class="line">        host replication pgrepup_replication db_ip/<span class="number">32</span> md5</div><div class="line">        host <span class="literal">all</span> pgrepup_replication db_ip/<span class="number">32</span> md5</div><div class="line">    After adding the lines, remember <span class="keyword">to</span> reload postgreSQL</div><div class="line"> &gt;  <span class="built_in">Local</span> pg_dumpall version <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Source cluster tables without primary keys</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      testdb</div><div class="line"> &gt;          <span class="keyword">public</span>.t1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line">Checking Destination<span class="attr">...</span></div><div class="line"> &gt;  Connection PostgreSQL connection <span class="keyword">to</span> db_ip:<span class="number">5496</span> <span class="keyword">with</span> user wd OK</div><div class="line"> &gt;  pglogical installation <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.KO</div><div class="line"></div><div class="line">    Hint: Install docs at https:<span class="comment">//2ndquadrant.com/it/resources/pglogical/pglogical-installation-instructions/</span></div><div class="line"></div><div class="line"> &gt;  Needed wal_level setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..KO</div><div class="line">    Hint: <span class="built_in">Set</span> wal_level <span class="keyword">to</span> logical</div><div class="line"> &gt;  Needed max_worker_processes setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Needed max_replication_slots setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..KO</div><div class="line">    Hint: Increase max_replication_slots <span class="keyword">to</span> <span class="number">3</span></div><div class="line"> &gt;  Needed max_wal_senders setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  pg_hba.conf settings <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>KO</div><div class="line">    Hint: Add the following lines <span class="keyword">to</span> /home/wd/data96/pg_hba.conf:</div><div class="line">        host replication pgrepup_replication db_ip/<span class="number">32</span> md5</div><div class="line">        host <span class="literal">all</span> pgrepup_replication db_ip/<span class="number">32</span> md5</div><div class="line">    After adding the lines, remember <span class="keyword">to</span> reload postgreSQL</div><div class="line"> &gt;  <span class="built_in">Local</span> pg_dumpall version <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div></pre></td></tr></table></figure>
<p>上面是我第一次执行 check 的结果，可以看到很多红色的 <code>KO</code>，有些下面还有 hint 提示告诉你怎么修复，针对红色的信息进行修复就好了。</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup <span class="attr">-c</span> pgrepup.config check</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line"><span class="built_in">Global</span> checkings<span class="attr">...</span></div><div class="line"> &gt;  Folder ./tmp exists <span class="keyword">and</span> is writable <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line">Checking Source<span class="attr">...</span></div><div class="line"> &gt;  Connection PostgreSQL connection <span class="keyword">to</span> db_ip:<span class="number">5495</span> <span class="keyword">with</span> user wd <span class="attr">...</span>OK</div><div class="line"> &gt;  pglogical installation <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Needed wal_level setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Needed max_worker_processes setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Needed max_replication_slots setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Needed max_wal_senders setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  pg_hba.conf settings <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  <span class="built_in">Local</span> pg_dumpall version <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Source cluster tables without primary keys</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      testdb</div><div class="line"> &gt;          <span class="keyword">public</span>.t1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line">Checking Destination<span class="attr">...</span></div><div class="line"> &gt;  Connection PostgreSQL connection <span class="keyword">to</span> db_ip:<span class="number">5496</span> <span class="keyword">with</span> user wd <span class="attr">...</span>OK</div><div class="line"> &gt;  pglogical installation <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Needed wal_level setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Needed max_worker_processes setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Needed max_replication_slots setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Needed max_wal_senders setting <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  pg_hba.conf settings <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  <span class="built_in">Local</span> pg_dumpall version <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div></pre></td></tr></table></figure>
<p>上面是我修复之后执行的结果。其中会提示会被同步的 db（上面是 template1, testdb, postgres）。之后执行 setup</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup <span class="attr">-c</span> pgrepup.config setup</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line">Check <span class="keyword">if</span> there are active subscriptions <span class="keyword">in</span> Destination nodes <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"><span class="built_in">Global</span> tasks</div><div class="line"> &gt;  Remove nodes from Destination cluster</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Create temp pgpass file <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Drop pg_logical extension <span class="keyword">in</span> <span class="literal">all</span> databases of Source cluster</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Drop pg_logical extension <span class="keyword">in</span> <span class="literal">all</span> databases of Destination cluster</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line">Setup Source</div><div class="line"> &gt;  Create user for replication <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  Dump globals <span class="keyword">and</span> schema of <span class="literal">all</span> databases <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Setup pglogical replication sets <span class="keyword">on</span> Source node name</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line">Setup Destination</div><div class="line"> &gt;  Create <span class="keyword">and</span> <span class="keyword">import</span> source globals <span class="keyword">and</span> schema <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Setup pglogical Destination node name</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line">Cleaning up</div><div class="line"> &gt;  Remove temporary pgpass file <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Remove other temporary files <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div></pre></td></tr></table></figure>
<p>然后执行 start</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup <span class="attr">-c</span> pgrepup.config start</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line">Start replication <span class="keyword">and</span> upgrade</div><div class="line"> &gt;  postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;  template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div></pre></td></tr></table></figure>
<p>可以通过 status 看同步状态</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup <span class="attr">-c</span> pgrepup.config status</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line">Configuration</div><div class="line"> &gt;  Source database cluster <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Destination database cluster <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line">Pglogical setup</div><div class="line"> &gt;  Source database cluster</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Destination database cluster</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line">Replication status</div><div class="line"> &gt;  Database postgres</div><div class="line"> &gt;      Replication status <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.replicating</div><div class="line"> &gt;  Database testdb</div><div class="line"> &gt;      Replication status <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.replicating</div><div class="line"> &gt;  Database template1</div><div class="line"> &gt;      Replication status <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.replicating</div><div class="line"> &gt;  Xlog difference (<span class="built_in">bytes</span>) <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="number">57816</span></div></pre></td></tr></table></figure>
<p>可以看到三个 db 都在同步。这个时候在 db1 上面插入数据，能在 db2 上面看到会同步过去。</p>
<p>状态有三种情况</p>
<ul>
<li>initializing: pglogical 正在 copy 数据</li>
<li>replication: 同步状态</li>
<li>down: 同步断开了，需要检查日志修复</li>
</ul>
<h2 id="需要注意的问题"><a href="#需要注意的问题" class="headerlink" title="需要注意的问题"></a>需要注意的问题</h2><h3 id="db-里面的表都需要有主键"><a href="#db-里面的表都需要有主键" class="headerlink" title="db 里面的表都需要有主键"></a>db 里面的表都需要有主键</h3><p>如果存在没有主键的表，执行 check 的时候会看到下面的信息</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt;  Source cluster tables without primary keys</div><div class="line">&gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line">&gt;      testdb</div><div class="line">&gt;          <span class="keyword">public</span>.t2 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>KO</div><div class="line">   Hint: Add a primary key <span class="keyword">or</span> unique index <span class="keyword">or</span> use the pgrepup fix command</div><div class="line">&gt;          <span class="keyword">public</span>.t1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line">&gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div></pre></td></tr></table></figure>
<p>如果不解决就执行 setup，会提示下面的信息</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Setup Source <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.Skipped, configuration problems</div><div class="line">Setup Destination</div><div class="line"> &gt;  Create <span class="keyword">and</span> <span class="keyword">import</span> source globals <span class="keyword">and</span> schema <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..Skipped</div><div class="line"> &gt;  Setup pglogical Destination node name</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div></pre></td></tr></table></figure>
<p>可以自己创建一个主键重新 check，也可以执行 fix 来修复，然后再次执行 setup。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> ❯❯❯ pgrepup -c pgrepup.config fix</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line">Find Source cluster's databases with tables without primary <span class="type">key</span>/unique index...</div><div class="line"> &gt;  template1 ....................................................................OK</div><div class="line"> &gt;  postgres .....................................................................OK</div><div class="line"> &gt;  testdb</div><div class="line"> &gt;      Found public.t2 without primary <span class="type">key</span> ................Added __pgrepup_id field</div></pre></td></tr></table></figure>
<p>通过 fix 加的主键，在 uninstall 的时候会被删除。</p>
<h3 id="Replication-status-down"><a href="#Replication-status-down" class="headerlink" title="Replication status .. down"></a>Replication status .. down</h3><p>有时候会遇到有的 db 的状态是好的，有的 db 是 down 的情况</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Replication status</div><div class="line"> &gt;  Database postgres</div><div class="line"> &gt;      Replication status <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.replicating</div><div class="line"> &gt;  Database testdb</div><div class="line"> &gt;      Replication status <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..down</div><div class="line"> &gt;  Database template1</div><div class="line"> &gt;      Replication status <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.replicating</div><div class="line"> &gt;  Xlog difference (<span class="built_in">bytes</span>) <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..<span class="number">614096</span></div></pre></td></tr></table></figure>
<p>在同步状态下面，如果给某个 db 加一个没有主键的表，就会导致同步断掉。修复方法是先 stop，然后执行 check，按照提示修复，然后执行 setup，然后 start 就可以了。</p>
<h3 id="官方列出来的几个问题"><a href="#官方列出来的几个问题" class="headerlink" title="官方列出来的几个问题"></a>官方列出来的几个问题</h3><ul>
<li>DDL 命令。不会同步 DDL 命令，可以在 db1 试试看 <code>pglogical.replicate_ddl_command</code>。</li>
<li>seq 序列。执行 stop 命令的时候，会在目标 db 的 seq 上面加 1000。</li>
<li>有大量的 db。执行 start 命令之后，pglogical 会每个 db 启动一个 worker 来同步数据，要是 db 比较多会导致比较高的负载。</li>
</ul>
<p>因为这个是基于 pglogical 的，所以还需要关注 pglogical 列出来的一些<a href="https://2ndquadrant.com/it/resources/pglogical/pglogical-docs/" target="_blank" rel="external">限制</a> 第 4 部分 Limitations and Restrictions。</p>
<ul>
<li>4.1 Superuser is required</li>
<li>4.2 UNLOGGED and TEMPORARY not replicated</li>
<li>4.3 One database at a time</li>
<li>4.4 PRIMARY KEY or REPLICA IDENTITY required</li>
<li>4.5 Only one unique index/constraint/PK</li>
<li>4.6 DDL</li>
<li>4.7 No replication queue flush</li>
<li>4.8 FOREIGN KEYS</li>
<li>4.9 TRUNCATE</li>
<li>4.10 Sequences</li>
<li>4.11 Triggers</li>
<li>4.12 PostgreSQL Version differences</li>
<li>4.13 Doesn’t replicate DDL</li>
</ul>
<h3 id="pgrepup-uninstall"><a href="#pgrepup-uninstall" class="headerlink" title="pgrepup uninstall"></a>pgrepup uninstall</h3><p>uninstall 会清理 pgrepup 创建的一些信息，比如安装的 pglogical 扩展，创建用来同步的用户，和通过 fix 命令添加的 seq。</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">❯❯❯ pgrepup <span class="attr">-c</span> pgrepup.config uninstall</div><div class="line">Pgrepup <span class="number">0.3</span><span class="number">.7</span></div><div class="line">Check active subscriptions <span class="keyword">in</span> Destination nodes</div><div class="line"> &gt;  template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>Stopped</div><div class="line"> &gt;  testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>Stopped</div><div class="line"> &gt;  postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.Stopped</div><div class="line">Uninstall operations</div><div class="line"> &gt;  Remove nodes from Destination cluster</div><div class="line"> &gt;      postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;      testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;      template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Drop pg_logical extension <span class="keyword">in</span> <span class="literal">all</span> databases</div><div class="line"> &gt;      Source</div><div class="line"> &gt;          template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;          postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;          testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;      Destination</div><div class="line"> &gt;          postgres <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;          testdb <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;          template1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>OK</div><div class="line"> &gt;  Drop user for replication <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>.OK</div><div class="line"> &gt;  Drop unique fields added <span class="keyword">by</span> fix command</div><div class="line"> &gt;          template1</div><div class="line"> &gt;          postgres</div><div class="line"> &gt;          testdb</div><div class="line"> &gt;              <span class="keyword">public</span>.t1 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div><div class="line"> &gt;              <span class="keyword">public</span>.t2 <span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span><span class="attr">...</span>..OK</div></pre></td></tr></table></figure>
<h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>如果前面配置好了同步状态，那剩下的事情就简单了。</p>
<ul>
<li>停止应用链接 db1</li>
<li>确保 db1 已经没有任何链接</li>
<li>使用 <code>pgrepup stop</code> 停止 replication</li>
<li>修改应用链接到 db2</li>
<li>启动应用</li>
<li>剩下的就是处理掉停止的 db1</li>
</ul>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://qiita.com/yteraoka/items/e82e4d28f6a23915d190" target="_blank" rel="external">http://qiita.com/yteraoka/items/e82e4d28f6a23915d190</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://gasparin.net/2016/11/pgrepup-upgrade-postgresql-using-logical-replication/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pgrepup&lt;/a&gt; 其实
    
    </summary>
    
    
      <category term="postgres" scheme="https://wdicc.com/tags/postgres/"/>
    
  </entry>
  
  <entry>
    <title>Built in sharding in PostgreSQL</title>
    <link href="https://wdicc.com/Built-in-sharding-in-PostgreSQL/"/>
    <id>https://wdicc.com/Built-in-sharding-in-PostgreSQL/</id>
    <published>2016-12-07T08:54:59.000Z</published>
    <updated>2016-12-07T08:56:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>PostgreSQL 内建 sharding 支持，粗略翻译自 <a href="https://wiki.postgresql.org/wiki/Built-in_Sharding" target="_blank" rel="external">https://wiki.postgresql.org/wiki/Built-in_Sharding</a></p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>内建支持 sharding 最大的挑战是，如何用最小的代码修改实现。大部分社区的 sharding 修改支持都修改了很多 PostgreSQL 的代码，这也导致这些不能被 Postgres 社区那些不需要 sharding 的人接受。有了 FDW 之后，就有了在有限代码修改情况下实现内建 sharding 支持的可能。</p>
<p>基于 FDW 的这种 sharding 设计，是基于 NTT 开发的 Postgres-XC，大概已经有 10 年了。Postgres-XL 是基于这个设计的一种更加灵活的实现。</p>
<h2 id="Enhance-Existing-Features"><a href="#Enhance-Existing-Features" class="headerlink" title="Enhance Existing Features"></a>Enhance Existing Features</h2><ul>
<li>已完成？提升 FDW 的基础设计和 postgres_fdw。特别的，好的性能要求合理的把一些操作推送到子节点(foreign shards)。在 Postgres 9.6 中，join, sort, update, delete 都可以推送到字节点了。聚合的 pushdown 将在 Postgres 10 中支持。FDW 表已经可以作为继承表出现。</li>
<li>提升分区支持有效提升 existence of shards。幸运的是，单节点的分区支持也需要重构才能提升性能和更多优化。例如，executor-based partition pruning.</li>
<li>给 FDW 请求增加并行支持。这样能允许节点并行执行，这个可能会通过多个异步的链接来实现。</li>
</ul>
<h2 id="New-Subsystems"><a href="#New-Subsystems" class="headerlink" title="New Subsystems"></a>New Subsystems</h2><p>还需要开发一些子系统：</p>
<ul>
<li>允许表可以复制到所有节点，以允许更多的 join pushdown。这个可以通过 trigger 或者逻辑复制来完成。</li>
<li>实现一个子模块，以使用新的分区系统表来提交符合提交的查询的 FDW 查询。</li>
<li>实现一个子模块收集 FDW 查询的结果返回给用户。</li>
<li>实现全局事务管理器以便更加高效的允许子节点原子的提交事务。这个可能会通过 prepared 的事务来实现，还有某种在 crash 之后清理那些 preapared 的事务的事务管理器。例如 XA。</li>
<li>实现全局快照管理器，以允许子节点可以看到一致性的快照。（是不是 serialisable 事务模式会避免跨节点快照冲突？pg_export_snapshot() 或者 hot_standby_feedback 是不是会有帮助？) 多节点的备份的一致性也需要这个支持。</li>
<li>实现支持 create, manage, report on shards 这些用户 API。</li>
</ul>
<h2 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h2><p>有四种可能的用户案例和不同的需求:</p>
<ul>
<li>跨节点在只读节点上面执行只读聚合查询，例如数据仓库<br>这种是最简单的场景，不需要全局事务管理，全局快照管理，并且因为聚合，所以子节点返回的数据量也是最小的。</li>
<li>跨节点在只读节点上面执行只读非聚合查询<br>这种会给调度节点压力，需要收集和处理很多子节点返回的数据。这种也能看到 FDW 传输机制等级。</li>
<li>跨节点在可读写节点执行只读查询<br>这个需要全局快照管理来保证子节点返回数据的一致性</li>
<li>跨节点执行读写查询<br>这个需要全局快照管理器和全局事务管理器</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PostgreSQL 内建 sharding 支持，粗略翻译自 &lt;a href=&quot;https://wiki.postgresql.org/wiki/Built-in_Sharding&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://wiki.
    
    </summary>
    
    
      <category term="postgresql" scheme="https://wdicc.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>申请 google voice</title>
    <link href="https://wdicc.com/registration-about-google-voice/"/>
    <id>https://wdicc.com/registration-about-google-voice/</id>
    <published>2016-11-14T08:02:30.000Z</published>
    <updated>2016-11-14T08:16:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨天晚上突然想申请一个 google voice 帐号。有了之后就可以作为国外的号码使用了，可以打电话收短信，想想好像还有点用。比如我就可以用他注册一个微博帐号用来关联一些无聊的服务了。。。</p>
<p>申请的过程网上很多，不细说了。主要注意下面几点。</p>
<ol>
<li>需要美国 ip 打开 <a href="https://www.google.com/voice" target="_blank" rel="external">https://www.google.com/voice</a> ，否则会跳转到一个帮助页面。这个从网上搜一些免费的代理就可以了。我是搜索到了一些 ss 帐号，然后配合 surge 来做的。</li>
<li>需要一个能接电话的美国号码来接受 google voice 的验证电话。这个我是通过 <a href="http://textnow.com" target="_blank" rel="external">http://textnow.com</a> 来做的。登录 textnow.com 注册一个免费的帐号，其中有一步是需要输入一个美国区号，这个要注意，我第一次注册的时候，输入的是 213 (洛杉矶地区的)，然后就不行，后来又申请了一个 517 的就可以。所以最好搜索一下别人申请成功的区号有哪些，另外还好就是只要有不同的邮箱，就可以多次注册来换号码，如果遇到不行的，可以换个邮箱重新注册一下。</li>
<li>在 google voice 里面填入电话之后。google voice 会打电话给那个号码。我用 textnow 的 ios 客户端接的电话（建议不要用他们的 web，他们的 web 必须要你的浏览器支持 flash 才行，很恶心），我遇到的情况下，前几次接到的电话没有对方的声音，自己尝试直接输入号码也不行。后来多试几次就好了。</li>
<li>后面就是选号了。选好号码之后，点提交一般都会遇到一个错误，「There was an error with your request. Please try again」, 遇到这个是正常的。需要你多次点击那个按钮提交，有人用按键精灵点了几个小时搞定了。我这是打开 chrome 的 dev tools，然后看 network 里面发的请求，每次点击都会有一个 post 请求，在上面按右键，选择 「copy as curl」，然后在命令行写一个简单的程序，<code>while true; do 这里把复制的内容贴过来 ;sleep 1.5s; done</code>，复制到命令行，不停的重试就可以了，直到收到邮件说你的号码开通了。要注意的是命令行也得设置代理，一般是通过 export。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天晚上突然想申请一个 google voice 帐号。有了之后就可以作为国外的号码使用了，可以打电话收短信，想想好像还有点用。比如我就可以用他注册一个微博帐号用来关联一些无聊的服务了。。。&lt;/p&gt;
&lt;p&gt;申请的过程网上很多，不细说了。主要注意下面几点。&lt;/p&gt;
&lt;ol&gt;

    
    </summary>
    
    
      <category term="google" scheme="https://wdicc.com/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>新与旧</title>
    <link href="https://wdicc.com/new-and-old/"/>
    <id>https://wdicc.com/new-and-old/</id>
    <published>2016-11-13T05:39:18.000Z</published>
    <updated>2016-11-14T08:29:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>北京有个古北水镇，运营上据说是杭州乌镇的那拨人。乌镇没去过，去过古北水镇。在一片山里面，长城下面，一群建筑。里面还开了一些模仿古代的商店，比如酒家，染坊这些可以参观。</p>
<p>这个地方离北京大概是 2 个多小时的车程（全程高速不怎么堵车的情况下）。周末过去之后会发现停车场停满了车，还有好多旅游车，水镇上面也人山人海。</p>
<p>这里面的建筑都是后期开发商人工开辟的。景区里面的酒店基本都是1k起，并且还得提前预约。据说夜景很漂亮，不过我没看过。</p>
<p>北京是个古老的城市，如果城区里面的历史建筑都留着，现在可够你转几个月的，光就绕着北京城墙走一圈，估计一天都不一定可以。曾经在西安的城墙上面走过一圈，感觉还不错，我记得还收了门票的。</p>
<p>北京有个南锣鼓巷，过去转你会发现并没有什么能让你理解回味京味的东西，卖的也是羊肉串奶茶这些，排好长的队买一串拿着边吃边走完了，其实可能也挺没意思的。</p>
<p>都说台湾是中华传统保持比较好的地方。去了台北第一印象就是，破房子挺多的。那边房子是私产，所以拆迁很难。然后个人又不一定有能力翻盖，所以就有破烂的房子。给我们开车的台湾人还说去过北京，说羡慕那边的高楼大厦，到处都很新，很时髦的样子。</p>
<p>台湾有很多夜市，去过几个，有的比较商业化的，你会发现周边也都是高楼了。有的就是普通的，真的是一条路白天行车，晚上就堵起来开始摆摊。我记得某个夜市里面有个摊位，说是开了好多年了，现在物价高，不得已只好比早年涨了几毛钱。看着都震惊了，涨几毛钱还废什么话，况且本身人家卖的也不贵，都是良心价。</p>
<p>地价涨没那么快，可能各种基础花费都会比较稳定，否则地价涨了房租涨了，那物价必定会涨。所以10年前我在北京长椿街那上班的时候，一份盖饭，大概是 7，8 块钱。到了现在，估计是翻一倍。另外这种店还越来越少，因为卫生条件，房租这些要求导致价格底了不好赚钱。</p>
<p>台湾夜市里面也经常能碰见那种几十年的老店，那真的是几十年一直在做那个生意。几十年价格也没有变化太多。想起来前门的那个面馆前段时间关门了，没有办法，涨价没法涨，收入基本不变的情况下，地价变化太大，只好关门了。</p>
<p>就目前这个房地产的情况，北京还能有多少真正的老字号，有多少真正的老街，估计基本不会有了。后面估计会有更加多人工的景区了，费用估计还不能便宜了。</p>
<p>想起来凤凰古城了，大家不愿意拆，那就某天一把火烧了，这下都同意了吧，这可是天意。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;北京有个古北水镇，运营上据说是杭州乌镇的那拨人。乌镇没去过，去过古北水镇。在一片山里面，长城下面，一群建筑。里面还开了一些模仿古代的商店，比如酒家，染坊这些可以参观。&lt;/p&gt;
&lt;p&gt;这个地方离北京大概是 2 个多小时的车程（全程高速不怎么堵车的情况下）。周末过去之后会发现停
    
    </summary>
    
    
      <category term="heart" scheme="https://wdicc.com/tags/heart/"/>
    
  </entry>
  
  <entry>
    <title>python 的 decorator 学习</title>
    <link href="https://wdicc.com/decorator-in-python/"/>
    <id>https://wdicc.com/decorator-in-python/</id>
    <published>2016-10-21T10:50:59.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习了一下 python 的 decorator（装饰器），看的是这篇，<a href="http://coolshell.cn/articles/11265.html" target="_blank" rel="external">Python修饰器的函数式编程</a>， 觉得挺有意思的，写点东西记录一下。</p>
<p>装饰器简单讲就是返回一个函数的函数/类。看个简单的例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dec1</span><span class="params">(fn)</span>:</span></div><div class="line">    print(<span class="string">'inside dec1'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">()</span>:</span></div><div class="line">        print(<span class="string">'inside wrapper'</span>)</div><div class="line">        <span class="keyword">return</span> fn()</div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@dec1</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'inside f1'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'begin exec'</span>)</div><div class="line">    f1()</div><div class="line">    print(<span class="string">'end exec'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 执行结果:</span></div><div class="line"><span class="comment"># inside dec1</span></div><div class="line"><span class="comment"># begin exec</span></div><div class="line"><span class="comment"># inside wrapper</span></div><div class="line"><span class="comment"># inside f1</span></div><div class="line"><span class="comment"># end exec</span></div></pre></td></tr></table></figure>
<p>看上面例子能看到，装饰器生效有 2 个步骤，第一个是装饰，第二个是执行。上面装饰器的效果，和下面的代码的效果是一样。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dec1</span><span class="params">(fn)</span>:</span></div><div class="line">    print(<span class="string">'inside dec1'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">()</span>:</span></div><div class="line">        print(<span class="string">'inside wrapper'</span>)</div><div class="line">        <span class="keyword">return</span> fn()</div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># @dec1</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'inside f1'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'begin exec'</span>)</div><div class="line">    dec1(f1)()</div><div class="line">    print(<span class="string">'end exec'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 执行结果:</span></div><div class="line"><span class="comment"># begin exec</span></div><div class="line"><span class="comment"># inside dec1</span></div><div class="line"><span class="comment"># inside wrapper</span></div><div class="line"><span class="comment"># inside f1</span></div><div class="line"><span class="comment"># end exec</span></div></pre></td></tr></table></figure>
<p>可以看到除了 「begin/end exec」，其他部分执行结果是一样的。所以理解装饰器，就把 <code>@dec1</code> 换成 <code>dec1(fn)()</code> 这么理解就可以了。</p>
<p>有时候会看到类也可以作为装饰器使用。其实理解起来也类似。举个例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">dec1</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, fn)</span>:</span></div><div class="line">        print(<span class="string">'inside dec1'</span>)</div><div class="line">        self.fn = fn</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'inside wrapper'</span>)</div><div class="line">        <span class="keyword">return</span> self.fn()</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@dec1</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'inside f1'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'begin exec'</span>)</div><div class="line">    f1()</div><div class="line">    print(<span class="string">'end exec'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 执行结果:</span></div><div class="line"><span class="comment"># inside dec1</span></div><div class="line"><span class="comment"># begin exec</span></div><div class="line"><span class="comment"># inside wrapper</span></div><div class="line"><span class="comment"># inside f1</span></div><div class="line"><span class="comment"># end exec</span></div></pre></td></tr></table></figure>
<p>这里和上面类似，把 <code>@dec1</code> 理解成 <code>dec1(fn)()</code>，不过是这里的 <code>dec1</code> 是个类，那么 <code>dec1(fn)</code> 其实是调用的 <code>dec1.__init__(fn)</code>，那么后续的 <code>dec1(fn)()</code> 就是调用产生的对象的 <code>dec1.__call__()</code> 了。</p>
<p>有时候还能看到加了参数的装饰器。加了参数的是怎么回事呢。再看下面的例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dec1</span><span class="params">(name)</span>:</span></div><div class="line">    print(<span class="string">'inside dec1'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">real_dec1</span><span class="params">(fn)</span>:</span></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">()</span>:</span></div><div class="line">            print(<span class="string">'inside wrapper'</span>)</div><div class="line">            <span class="keyword">return</span> fn()</div><div class="line">        <span class="keyword">return</span> wrapper</div><div class="line">    <span class="keyword">return</span> real_dec1</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@dec1(name='1')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'inside f1'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'begin exec'</span>)</div><div class="line">    f1()</div><div class="line">    print(<span class="string">'end exec'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 执行结果:</span></div><div class="line"><span class="comment"># inside dec1</span></div><div class="line"><span class="comment"># begin exec</span></div><div class="line"><span class="comment"># inside wrapper</span></div><div class="line"><span class="comment"># inside f1</span></div><div class="line"><span class="comment"># end exec</span></div></pre></td></tr></table></figure>
<p>看懂了没有，就是多了个嵌套而已。遇到加了参数的，那就是把之前的没有参数的部分返回回来就可以了。等价的例子就不贴了，这个等价于 <code>dec1(name=&#39;1&#39;)(fn)()</code>。</p>
<p>如果是类装饰器，并且有参数，那等价于 <code>dec1(name=&#39;1&#39;)(fn)()</code>，其中 <code>__init__(self, name)</code> 先处理第一层参数，然后 <code>__call__(fn)</code> 处理第二层，然后需要在 <code>__call__</code> 里面再定义一个 wrapper 返回。</p>
<p>说明白没有？呵呵。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学习了一下 python 的 decorator（装饰器），看的是这篇，&lt;a href=&quot;http://coolshell.cn/articles/11265.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python修饰器的函数式编程&lt;/a
    
    </summary>
    
    
      <category term="python" scheme="https://wdicc.com/tags/python/"/>
    
      <category term="decorator" scheme="https://wdicc.com/tags/decorator/"/>
    
  </entry>
  
  <entry>
    <title>cookie 的一点研究</title>
    <link href="https://wdicc.com/about-http-cookie/"/>
    <id>https://wdicc.com/about-http-cookie/</id>
    <published>2016-09-16T00:59:09.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>这几天搞了一下 python 里面 cookie 相关的东西。我的目的是想要尝试用 python 登录某个网站，并且保持登录状态直到过期。因为 http 协议是无状态的，所以一般来讲，网站想要用户保持登录，那么网站在用户登录之后，必须要和用户端协商好怎么来证明这个用户已经登录过了。</p>
<p>用户端如果使用浏览器，那么网站就可以利用浏览器对 cookie 的支持来让用户在不知情的情况下，让网站在用户登录后发的一个 token 在用户后续的请求里面都包含上。</p>
<p>用户端如果不是浏览器，比如是个 python 程序，那么网站可以和用户协商每次请求里面都包含某个下发的 token（当然，甚至要求客户端每次请求都带着用户名密码也是可行的）。</p>
<p>但是如果网站本身只是给浏览器用户准备的，那么通过用程序来「模拟」浏览器行为，把必要的 token 保存并在后续的请求里面都带上，也是可行的。</p>
<p>python 里面，发送 http 请求可以简单的使用 <code>urllib.request.urlopen(url)</code>，但是如果想要定制一下请求，比如修改一些 header 信息，那么就得使用 <code>urllib.request.Request</code> 这个 class 先构造一个 Request 对象，然后传递给 urlopen 了。</p>
<p>如果要处理 cookie，那就需要使用 <code>http.cookiejar.CookieJar</code> 了，有了 Cookiejar 对象，就可以把网站下发的 cookie 保存到这个变量里面，然后在必要的时候，可以返回给服务器端了。如果想要保存到文件，那么可以使用 <code>http.cookiejar.LWPCookieJar</code> 或者 <code>http.cookiejar.MozillaCookieJar</code>，也可以基于 <code>http.cookiejar.FileCookieJar</code> 自己实现一个子类，来用自己的办法保存和加载 cookie，比如保存到数据库什么的，这样就可以多台机器之间共享 cookie 了。</p>
<p><code>urlopen</code> 本身不支持自定义 cookiejar 逻辑，得使用 <code>opener = build_opener(HTTPCookieProcessor(cookiejar=Cookiejar对象))</code> 来先构造一个自定义的 openner, 然后使用 <code>opener(Request对象)</code> 来发送请求。</p>
<p>如果不定义自己的 cookie policy，那么会使用默认的 <code>http.cookiejar.DefaultCookiePolicy</code>，也可以自己基于 <code>http.cookiejar.CookiePolicy</code> 实现自己的逻辑。只需要 override <code>set_ok</code> 和 <code>return_ok</code> 这两个方法就可以。</p>
<p>http cookie 其实有很多属性，比如 domain, expire, path 等常见属性，也有 httponly, secure 等几个不常见的。这些属性都是浏览器处理的。就是说，浏览器把 cookie 返回给服务器端的时候，如果 domain 不匹配，或者已经过了 expire 时间等等一些不符合浏览器制定的 cookie 逻辑的时候，浏览器就不会把 cookie 发送给服务器端。就比如，服务器产生 cookie 的时候，声明了 domain=a.com，那么如果是来自于 b.com 的请求，浏览器是根本不会给他发送这个 cookie。再比如，服务器端产生 cookie 的时候，声明了 1 天后过期，那么 1 天之后，浏览器也不会再给服务器端发这个 cookie 了。</p>
<p>但是如果是我们自己实现客户端模拟浏览器的时候，其实我们是可以耍流氓的，可以制定自己的 cookie 逻辑，也就是上面提到的 cookie policy。比如我可以简单的在 <code>return_ok</code> 这个方法里面 <code>return True</code>，在任何情况下都把所有的 cookie 返回给服务器，这样服务器端如果不提前想明白，它是一点都不知道的。</p>
<p>所谓提前想明白就是想明白是不是需要针对这种情况做处理。如果本身我们系统也没有那么严格要求，那么不处理也可以。但是如果是某个比如金融系统，那么是必须要考虑的。否则如果完全依赖 cookie 的话，如果我通过某些手段弄到了用户的 cookie，那么我就可以骗过服务器端，让他认为我就是那个用户。</p>
<p>我想了一下，貌似被盗窃 cookie 这种事情服务器端不太好防范，但是可以做的是防止浏览器耍流氓。比如我们把 cookie 加密，并里面增加一个发送 cookie 的时间。收到客户端发过来的 cookie 之后，我们解密看看时间有没有过期，这样就可以在服务器端让 cookie 失效了。</p>
<p>另外，也可以考虑使用 session。session 是把一些用户的状态保存在服务器端。但是 session 实际上也是依赖 cookie 的，因为前面说了 http 协议无状态，就算可以把用户状态保存在服务器端，但是总还是得识别用户才可以。那个识别的 cookie 就是所谓的 session cookie，其实就是某个用户的唯一标识。</p>
<p>对于 session cookie 被窃，好像也没有太好的办法，无非也是想办法比对之前用户的一些状态信息，比如 ip 和现在的信息是不是一致，不一致可以认为有被窃的怀疑，这个时候让用户再次验证用户信息，这都不能 100% 保证，但是至少会增加窃贼的成本。</p>
<p>上面说到这些，都可以自己测试一下，测试也并不一定需要搭一个服务器端配合，以及使用复杂的抓包专鉴，其实使用 <code>nc</code> 就可以。</p>
<p>使用 <code>nc -l 9999</code> 就可以启动一个监听在 9999 端口的 socket 服务器。之后使用 python 或者 curl 之类的程序请求，就能立刻看到请求发送过来的 http 信息，这个对于学习 http 协议其实也很方便。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ nc -l <span class="number">9999</span></div><div class="line">GET <span class="regexp">/ HTTP/</span><span class="number">1.1</span></div><div class="line">Accept-<span class="string">Encoding:</span> identity</div><div class="line"><span class="string">Connection:</span> close</div><div class="line"><span class="string">Cookie:</span> QN2=test; QN1=ClbaCVfZF5lfszBALzTIAg==</div><div class="line">User-<span class="string">Agent:</span> Mozilla<span class="regexp">/5.0 (Macintosh; Intel Mac OS X 10_11_6)  AppleWebKit/</span><span class="number">537.36</span> (KHTML, like Gecko) Chrome<span class="regexp">/52.0.2743.116 Safari/</span><span class="number">537.36</span></div><div class="line"><span class="string">Host:</span> <span class="string">localhost:</span><span class="number">9999</span></div></pre></td></tr></table></figure>
<p>收到的上面这个请求，可以看到发送过来了 2 个 cookie。</p>
<p>如果还想测试数据返回的情况，那么可以写一个 <code>test.resp</code> 文件，内容如下</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ cat test.resp</div><div class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</div><div class="line"><span class="symbol">Date:</span> Sun, <span class="number">18</span> Oct <span class="number">2009</span> <span class="number">08</span>:<span class="number">56</span>:<span class="number">53</span> GMT</div><div class="line"><span class="symbol">Server:</span> Apache/<span class="number">2.2</span><span class="number">.14</span> (Win32)</div><div class="line">Last-Modified: Sat, <span class="number">20</span> Nov <span class="number">2004</span> <span class="number">07</span>:<span class="number">16</span>:<span class="number">26</span> GMT</div><div class="line"><span class="symbol">ETag:</span> <span class="string">"10000000565a5-2c-3e94b66c2e680"</span></div><div class="line">Set-Cookie: QN1=ClbaCVfZF5lfszBALzTIAg==; expires=Thu, <span class="number">31</span>-Dec<span class="number">-37</span> <span class="number">23</span>:<span class="number">55</span>:<span class="number">55</span> GMT; path=/</div><div class="line">Set-Cookie: QN2=test; expires=Thu, <span class="number">31</span>-Dec<span class="number">-37</span> <span class="number">23</span>:<span class="number">55</span>:<span class="number">55</span> GMT; path=/; secure; httponly</div><div class="line">Accept-Ranges: bytes</div><div class="line">Content-Length: <span class="number">44</span></div><div class="line"><span class="symbol">Connection:</span> close</div><div class="line">Content-Type: text/html</div><div class="line">X-Pad: avoid browser bug</div><div class="line"></div><div class="line"><span class="params">&lt;html&gt;</span><span class="params">&lt;body&gt;</span><span class="params">&lt;h1&gt;</span>It works!<span class="params">&lt;/h1&gt;</span><span class="params">&lt;/body&gt;</span><span class="params">&lt;/html&gt;</span></div></pre></td></tr></table></figure>
<p>然后使用 <code>nc -l 9999 &lt; test.resp</code> 命令启动服务，客户端来请求的时候，就会返回上面 <code>test.resp</code> 里面的内容。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天搞了一下 python 里面 cookie 相关的东西。我的目的是想要尝试用 python 登录某个网站，并且保持登录状态直到过期。因为 http 协议是无状态的，所以一般来讲，网站想要用户保持登录，那么网站在用户登录之后，必须要和用户端协商好怎么来证明这个用户已经登
    
    </summary>
    
    
      <category term="cookie" scheme="https://wdicc.com/tags/cookie/"/>
    
      <category term="http" scheme="https://wdicc.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>从双拼讲输入法</title>
    <link href="https://wdicc.com/double-pinyin/"/>
    <id>https://wdicc.com/double-pinyin/</id>
    <published>2016-08-20T02:00:51.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>上高中的时候，就流行五笔打字，不过那会家里都没有电脑，都是去网吧（或者叫打字社）去学习的，不过那会学习这个貌似唯一的用途就是录入用。</p>
<p>当时也背过五笔的码表，王旁青头兼五一，估计很多人都很熟悉。上了大学在有更多机会接触电脑的时候，上网什么的，自然就开始使用拼音输入法，因为基本不需要练习，会盲打知道键盘按键键位就可以使用。当时用的比较多的是智能 ABC，后来 2000 年左右写书的时候，用的是紫光拼音，紫光的词库比智能 ABC 好一点，所以用起来也好用很多。此后一直使用拼音输入法。</p>
<p>直到应该是大概 2008 年左右，ssslang 在使用二笔，就开始想尝试一下码表输入法。因为本身使用了这么多年的电脑输入和拼音输入法之后，对字形其实已经失去了概念，如果学五笔的话，肯定会是很痛苦的。</p>
<p>而二笔输入法一个字 4 个码，第一个码还是拼音的第一个字母，但是大部分常用字都是 2 个码就可以出，所以这样等于每个字都至少知道了一半的编码，这个还是很赞的。</p>
<p>二笔输入法也有很多编码方案，当时选的是哲豆二笔，这个方案只用了 26 个字母键，所以也可以在手机上面使用（其他方案用了一些符号键，比如 [ ]，当时手机还都是流行硬键盘，一般都没有单独的符号键，而且貌似现在的软键盘也没有单独的符号键）。我当时用的 palm treo 650，输入还是蛮爽的。后来自己把一些词库导入了进去，用起来就更加舒服了。</p>
<p>但是后来的问题是慢慢的一些流行的智能机没有那么好的输入法自定义支持，就没法用了，慢慢切回来了拼音输入法。</p>
<p>二笔是码表输入法，就是每个字有自己的编码，联系的过程就是熟悉码表的过程，如果某个字不熟悉，那么其实你是需要轻微的思考的，想一下那个字怎么写，是哪个码。所以输入的速度取决于对这些字的熟悉程度，遇到不熟悉的会有卡顿。</p>
<p>最近看到了不少双拼的讨论，就想尝试一下双拼。因为如果反正都是用拼音输入法，那么对于 ing, eng 这些，如果可以按一个按键就输入进去，那么岂不是可以节省很多时间？并且这个还是基于拼音的，和那些需要记住字形的输入法不是一个套路，看着还不错。</p>
<p>我是这周一开始尝试的。mac 上面用的是鼠须管，ios 用的 touchpal。双拼也有很多方案，我选的方案是小鹤双拼，也没啥特别的原因，就是看用的人挺多的。</p>
<p>尝试的结果就是，输入了 4 天之后，周五我又换回了拼音输入法。。。。</p>
<p>因为我越用越发现，双拼也是个码表输入法。开始想得是节省拼音的输入时间，但是打字的时候，比如输入 hao 的时候，想到的不是输入 h 然后输入 ao 对应的字母 c，而是熟悉之后自然而然的按照 hc 来输入，下次需要输入 lao 的时候，还是需要想一下 ao 在字母 c，需要输入 lc。</p>
<p>这么看的话，和前面说的码表输入法有啥区别呢？所以我感觉双拼也是个码表输入法。既然是码表输入法，双拼的区分度那么差，何必折腾他呢，不如去用二笔呢。而且我用的时候最郁闷的是，二笔训练出来的键位记忆居然总会出来捣乱，这其实也更加说明这个就是码表输入法。。。</p>
<p>而且还有就是，普通拼音输入法里面，尤其是手机上面，容易按错键，比如 hao 输入成了 hso 的时候，手机上面会纠错，把「好」这个选项放在第一个。但是如果是双拼就没那么好搞了，如果也增加纠错，那会增加很多重码，体验不好。</p>
<p>另外还有个问题就是对于 sh, s, en, eng 这些不太清楚的人来讲，更加是个挑战，当然拼音可以用模糊音，按说双拼也可以想办法自定义模糊音。但是可能就失去了双拼的一些优势。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上高中的时候，就流行五笔打字，不过那会家里都没有电脑，都是去网吧（或者叫打字社）去学习的，不过那会学习这个貌似唯一的用途就是录入用。&lt;/p&gt;
&lt;p&gt;当时也背过五笔的码表，王旁青头兼五一，估计很多人都很熟悉。上了大学在有更多机会接触电脑的时候，上网什么的，自然就开始使用拼音输
    
    </summary>
    
    
      <category term="input" scheme="https://wdicc.com/tags/input/"/>
    
  </entry>
  
  <entry>
    <title>进化论</title>
    <link href="https://wdicc.com/evolution/"/>
    <id>https://wdicc.com/evolution/</id>
    <published>2016-08-20T01:55:17.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="回忆一些没用的"><a href="#回忆一些没用的" class="headerlink" title="回忆一些没用的"></a>回忆一些没用的</h2><p>我是 1998 年上的大学。小的时候就对各种电子产品比较感兴趣，当然其实没有什么机会的，当时主要就是游戏机，但是我家里是没有的。高中的时候曾经借同学的回家玩过，和我弟弟一起玩的挺嗨，但是对于增长知识应该是没啥用的。</p>
<p>高考完毕之后，其实最想要报的还是计算机系，记得暑假的时候在电视里面看电脑相关的讲座，讲的最多的好像就是五笔，那会 windows 用户也不多，都是用的 dos。ucdos 是最常用的。那会电脑最大的用途感觉就是打字输入，然后打印。</p>
<p>当时没有报计算机，因为闭塞的农村人认为计算机会和财经一样（当时财经类专业曾经火过一些时间，但是介于毕业的人都没啥靠谱工作，所以就认为一般了），过段时间就不行了，所以没有报这块，报的是应用物理专业（当然了，这个专业更屎）。</p>
<p>那个假期去我舅舅的办公室去玩玩电脑。我舅舅是微机专业毕业的，毕业后回我们那边做类似一个打字的工作（其实我也不知道具体做什么….）。我当时去那边就是熟悉各种 dos 命令，学习一下 foxbase。</p>
<p>当时我记得有一本 foxbase 的书，看里面东西看不懂，没有现在的论坛和方便的网络，没有人可以交流。我记得印象最深的是有一道题需要算 1+2+3+…+100 等于多少，不懂编程完全不知道怎么做这个事情，但是看了答案看不懂，因为不懂 i=i+1 是什么意思，那会不明白为什么 i 还可以在右边。现在看来，生在那个年代那个地方真的很悲哀。</p>
<p>进入大学之后，选修了一门 word 之类的课，开始接触 windows。然后宿舍同学熟悉之后，就计划一起买了一台电脑，每个人 1200，我们总共 6 个人，7200 一台电脑，包括音箱电脑桌。当时要上网只能是拨号，56k 猫，开始是用不起的，大概到了大2，3 才开始拨号。然后 6 个人轮流用。那是我们班的地一台电脑，当时辅导员要求大家写保证书，保证不玩游戏才允许买。当然，你们懂得，保证书有个卵用，所以后来某天被发现玩游戏之后，给我们把电脑格式化了。但是之后大家还是会玩。</p>
<p>上了大学之后，就有网络中心，第一次去网络中心的时候，有点懵逼，和 xh 两个人对着电脑不知道该干啥。旁边的人都在玩 mud，当时不懂，就是看着一个绿窗口觉得很神奇。当然后来我们玩 mud 到昏天黑地就不多说了。玩 mud 玩的多了，慢慢了解到了 mud 的机制，有时候自己搭一个开始研究里面的编程，不过还比较粗浅。当时学的也就是 fortrun，c 语言这些。</p>
<p>那会的搜索引擎是目录式的，就和黄页一样，除了去看一些门户，就是翻这些东西，希望发现一些有意思的东西。那会学习也基本是靠买书和看自带的文档（不如 msdn），和通过网络靠一些小论坛里面的一些交流。那会写的比较多的是 vc vb 这些，php 之类学的人不多，java 我记得好像也不多。我的毕业论文是一个 vb 的程序，现在看写的比较烂，也就是能用。</p>
<h2 id="开始讲网站开发"><a href="#开始讲网站开发" class="headerlink" title="开始讲网站开发"></a>开始讲网站开发</h2><p>前面废话太多，又不太舍得删掉，就分一下块吧，下面讲讲网站开发技术的进化。</p>
<h3 id="dreamwaver-amp-frontpage-时代"><a href="#dreamwaver-amp-frontpage-时代" class="headerlink" title="dreamwaver &amp; frontpage 时代"></a>dreamwaver &amp; frontpage 时代</h3><p>那会做网页比较多的应该是 asp，用 frontpage 写，用 iis 发布，都是图形界面的，linux 没有什么人会用。linux 下面那会各种问题，驱动输入法这些都得花费很大的精力去解决。我装的第一个 linux 应该是 xterm linux，11 张光盘，因为他把一些软件也刻录到光盘了。第一次装 linux 就把宿舍的电脑搞挂了，没选对直接重新分区了。不过也就当年折腾这些弄明白了分区表 mbr 这些东西。</p>
<p>那会还攒了一些书，有一本就是讲怎么用 dreamwaver 的，当时觉得这个东西真牛逼，抛弃了 frontpage。我还记得我用 frontpage 做的第一个自我感觉良好的网页给别人看的时候，人家的那个表情，基本就是想吐的那种。我现在想，典型的那些花背景底色，大字体，图片按钮，来回滚动的一些内容等等，都是很烂的。</p>
<p>基于对 dreamwaver 的熟悉，当时还去联想实习了一段时间，给他们解决了一些问题。</p>
<p>那会做网页一般也就是收个表单，存到数据库什么的，不会有太复杂的东西。做个论坛是最常见的了。那个年代 javascript 是忌讳的东西，一般也就是用来滚动个页面标题什么的，没人拿他做特牛逼的东西。</p>
<p>毕业之后，就进了出版社。那个时代桌面程序很流行，因为大部分电脑都不能上网的，我到了出版社凭着自己的兴趣，用 vb 做了一个库存管理的软件，其实就是入库多少，出库多少登记一下，简单的很。</p>
<p>后来也是自己的兴趣，找了一台没人用的电脑，windows 上面跑起了 java web 服务，那会还流行搞一些 java applet 跑。出版社最早的网站就是这么跑起来的。</p>
<p>在后来装了一个 linux，开始在上面跑 qmail，跑 apache，开始熟悉 linux。同时也有了 php 的网站，不是我开发的，跑在我那个 linux 机器上面。</p>
<h3 id="ajax-amp-mvc"><a href="#ajax-amp-mvc" class="headerlink" title="ajax &amp; mvc"></a>ajax &amp; mvc</h3><p>后来大概有几年没有接触这些了，大概 08 年左右接触到了 ajax，javascript 算是就那几年走上神坛。当时老何演示了一个跑在本地浏览器里面的留言本程序，服务器端不用提供任何 html 相关的服务，只需要保存数据返回数据就好，逻辑都跑在本地浏览器里面。</p>
<p>不过那个时候我写的比较多的还是那种古老的表单方式，自己没去仔细了解这种新技术。后来大概 09 年左右有机会开始写 javascript 的时候了解了一些机制，感觉这种方式很有意思，渲染逻辑跑在浏览器，这样节省了一些服务器端的压力，并不是什么操作都需要提交到服务器让服务器去判断下一步怎么办。那会用到了 jquery，感觉真的好方便，并且他还提供一些 css 的效果，让不太熟悉的人也可以很方便的搞起来。而服务器端那会用 php 比较多。</p>
<p>php 当时也接触了一些框架，名字是不记得的。我这种野路子程序员，根本不明白人家的一些设计思路，代码和模板分离，mvc 这些都不懂，不过代码看多了也能明白一些。</p>
<p>我记得 09 年写这些的时候，一个遗留的 php 网站，需要增加一点功能，发现需要我一个人在 n 个文件里面修改，楞要把一个功能分散个 n 个文件让我很不理解，不是蛋疼么。当然后来明白这么做是为了分工合作为了灵活扩展，那么如果就一个人写的时候，我们是不是也需要这么做呢？</p>
<h3 id="emberjs-amp-angular-amp-react-amp-django-amp-spring"><a href="#emberjs-amp-angular-amp-react-amp-django-amp-spring" class="headerlink" title="emberjs &amp; angular &amp; react &amp; django &amp; spring"></a>emberjs &amp; angular &amp; react &amp; django &amp; spring</h3><p>后来大概 10 年左右的时候，我写代码还是用 jquery 的方式来做，因为当时觉得很好用。再后来接触了一些 emberjs angular 的一些知识。学习到了 emberjs 里面的命名惯例，比如一个路由叫 posts 那么就有对应的 PostsController，不用你显式的去让他们产生关系。学习 angular 学到了双向绑定的概念，你在定义了一个模型之后，在模板里面用到变量的地方会自动跟着这个模型的数据变化而变化，这就比用 jquery 的时候需要你自己去替换 dom 里面的内容方便多了。然后到了现在的 react 又提出了 virtual dom 的概念，让你不需要关心 dom 结构，你只需要操作你的虚拟 view 就好了。</p>
<p>当然前端其实还有好多的进步，比如 coffee script 来解决 javascript 这个语言本身的一些问题，哪里不严谨，一些最佳实践什么的就不用你操心了，只需要写 coffee script 就好了，编译成 javascript 之后，会自动处理好。</p>
<p>还有比如 css 不能 include，import，很多方案来解决这个问题。</p>
<p>后端这块，最近接触了 django，spring 这些。程序员要分 2 类的话，那就是 java 的和非 java 的，要分三类的话，就是 java ，javascript 和其他，呵呵。看过之后感觉 spring 真是不错的东西。难怪 java 程序员不去了解其他的，入了 java 坑就不用搞其他的了，库类很方便。并且类似 spring 这种东西，好多年前就有了，可以极大的方便 web 开发（不止 web 开发可以用）。如果能很好的驾驭 java，驾驭 tomcat jvm 这些东西，那么使用 java 其实是很不错的方案。通过 java 的 oo 特性，比如继承，重载 interface abstract 这些，可以很方便的定义好一些规范，也可以很好的把大家的工作划分开，架构，定义模型定义接口的人大家协同工作。</p>
<p>以前文件路径就是网页路径，现在有了 route 的概念（这个概念在 angular, emberjs 里面也有)，做了 route mapping 之后，可以很方便的把不同的 route 映射到相同的方法上面，可以很方便复用代码逻辑。</p>
<h2 id="总结下"><a href="#总结下" class="headerlink" title="总结下"></a>总结下</h2><p>上面讲了很多，整个就是个进化史。以前弄个网站出来需要花不少时间，还很难看。现在基于 bootstrap 还有这些开发框架，做一个出来很快外观还好看。这就是进步。</p>
<p>计算机技术的颠覆是很快的，如果打算一直从事这块工作，建议还是得保持一颗持续学习的心态，也得扩展自己学习的广度，这样可以吸收到各种技术的长处。</p>
<p>现在学习的手段也多了很多，我看视频直播网站都有开始讲课的了（不一定靠谱），还有各种学习视频，更别说各种可参考的学习文档了。实在是太方便了，只要愿意花时间，进步速度绝对很快。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;回忆一些没用的&quot;&gt;&lt;a href=&quot;#回忆一些没用的&quot; class=&quot;headerlink&quot; title=&quot;回忆一些没用的&quot;&gt;&lt;/a&gt;回忆一些没用的&lt;/h2&gt;&lt;p&gt;我是 1998 年上的大学。小的时候就对各种电子产品比较感兴趣，当然其实没有什么机会的，当时主要就是
    
    </summary>
    
    
      <category term="tech" scheme="https://wdicc.com/tags/tech/"/>
    
  </entry>
  
  <entry>
    <title>LLD in zabbix</title>
    <link href="https://wdicc.com/LLD-in-zabbix/"/>
    <id>https://wdicc.com/LLD-in-zabbix/</id>
    <published>2016-07-30T06:09:58.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果需要监控的内容比较多的时候，手动管理报警信息就已经不使用了，加一批机器就需要忙活一阵子。也不能体现我们充满智慧的大脑的作用。</p>
<p>zabbix 支持 LLD(low level discovery) 方式来自动产生监控项目，包括 item, trigger 这些都可以自动添加。大概讲解一下可以利用这个东西做什么事情。</p>
<h2 id="zabbix-收集数据的方式"><a href="#zabbix-收集数据的方式" class="headerlink" title="zabbix 收集数据的方式"></a>zabbix 收集数据的方式</h2><p>zabbix 有很多收集数据的方法，这里重点讲 2 个，一个是 <code>zabbix agent</code>，一个是 <code>zabbix traper</code>。这两个方式可以和 nagios 里面的 active 和 passive 方式做类比。traaper 方式对应的就是 passive，就是 client 主动发送数据给 server。</p>
<p>对于 zabbix agent 方式，我们可以自己定义一些 <code>userParameter</code> 来添加自定义监控，这些网上很多例子。如果使用 trapper 方式，那么原则上面可以不用做任何自定义，就可以通过 zabbix-sender 或者自己模拟 sender 的协议，通过比如 python，java 等发送自己的监控信息。通过 python 发送的例子网上也有。</p>
<h2 id="LLD"><a href="#LLD" class="headerlink" title="LLD"></a>LLD</h2><p>参考<a href="https://www.zabbix.com/documentation/3.2/manual/discovery/low_level_discovery" target="_blank" rel="external">这里</a>，LLD 主要的思路就是给服务器端发送一个 json 数据格式。例如下面这个。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"data"</span>:[</div><div class="line">  </div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/"</span>,                           <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"rootfs"</span>   &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/sys"</span>,                        <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"sysfs"</span>    &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/proc"</span>,                       <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"proc"</span>     &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/dev"</span>,                        <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"devtmpfs"</span> &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/dev/pts"</span>,                    <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"devpts"</span>   &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/lib/init/rw"</span>,                <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"tmpfs"</span>    &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/dev/shm"</span>,                    <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"tmpfs"</span>    &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/home"</span>,                       <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"ext3"</span>     &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/tmp"</span>,                        <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"ext3"</span>     &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/usr"</span>,                        <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"ext3"</span>     &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/var"</span>,                        <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"ext3"</span>     &#125;,</div><div class="line">  &#123; <span class="attr">"&#123;#FSNAME&#125;"</span>:<span class="string">"/sys/fs/fuse/connections"</span>,    <span class="attr">"&#123;#FSTYPE&#125;"</span>:<span class="string">"fusectl"</span>  &#125;</div><div class="line">  </div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个数据里面，data 是必须的，里面包含里面发现的可监控数据，这可以是任何数据。例子里面是发现了可以用来监控的磁盘分区。data 是个数组，每个可监控项是一个数组元素。还有类似下面这样的数据。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"&#123;#HOST&#125;"</span>: <span class="string">"Japan 1"</span>,</div><div class="line">            <span class="attr">"&#123;#COUNT&#125;"</span>: <span class="string">"5"</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"&#123;#HOST&#125;"</span>: <span class="string">"Japan 2"</span>,</div><div class="line">            <span class="attr">"&#123;#COUNT&#125;"</span>: <span class="string">"12"</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"&#123;#HOST&#125;"</span>: <span class="string">"Latvia"</span>,</div><div class="line">            <span class="attr">"&#123;#COUNT&#125;"</span>: <span class="string">"3"</span></div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个是发现了一些可监控的 host。</p>
<p>理解没有？发现是发现可监控的服务，并不是发现监控项。比如我们可以通过发现这机器上面有没有启动 ssh，发现有启动之后，我们就可以通过服务器端配置 discovery 自动添加一些监控规则。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123; <span class="attr">"&#123;#SSH_PORT&#125;"</span>: <span class="string">"22"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#SSH_PORT&#125;"</span>: <span class="string">"8022"</span> &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>比如上面这个，我们发现了 2 个 ssh 进程，一个是 22 端口，一个是 8022 端口。</p>
<p>所以重点是发现有什么可监控的服务，并不是发现监控项。</p>
<p>BUT，其实并不是不能发现监控项，也是可以的。不过是，这种被发现的监控项，除非对应的 trigger 也都是一样的，否则你会发现无法分别添加不同的 trigger 规则。</p>
<h2 id="发现监控项"><a href="#发现监控项" class="headerlink" title="发现监控项"></a>发现监控项</h2><p>有了发现服务之后，就肯定需要对相应的服务的一些监控项做监控了。这个给 discovery 规则配置 item prototype 就可以了，不过这个里面有点坑需要填，后面会说，这里先不讲。</p>
<p>那么比如对于 ssh 服务，可以监控</p>
<ul>
<li>当前链接人数，conn.cnt</li>
<li>配置文件的 md5，conf.md5（配合 zabbix trigger 可以用来监控文件是不是被修改了）</li>
</ul>
<p>那监控数据就如下面</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"22.conn.cnt"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"22.conf.md5"</span>: <span class="string">"18492113fb263c9d0a33c9fea403eea1"</span>,</div><div class="line">    <span class="attr">"8022.conn.cnt"</span>: <span class="number">9</span>,</div><div class="line">    <span class="attr">"8022.conf.md5"</span>: <span class="string">"6cab272daa07202ccb57c4064c0dcfb8"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面就是一个 discovery 项目，filter 是 {#SSH_PORT}，和 2 个 item prototype，分别是 {#SSH_PORT}.cnn.cnt 和 {#SSH_PORT}.conf.md5。</p>
<h2 id="复杂一点的-LLD"><a href="#复杂一点的-LLD" class="headerlink" title="复杂一点的 LLD"></a>复杂一点的 LLD</h2><p>一个 LLD 还可以发现多个服务。比如下面这种。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123; <span class="attr">"&#123;#SSH_PORT&#125;"</span>: <span class="string">"22"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#SSH_PORT&#125;"</span>: <span class="string">"8022"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#PG_PORT&#125;"</span>: <span class="number">5432</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#PG_PORT&#125;"</span>: <span class="number">6432</span> &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个除了我们前面讲的 ssh 服务，还发现了两个 pg 的服务。在服务器端，只需要添加两个 discovery 规则就可以了，分别使用 {#SSH_PORT} 和 {#PG_PORT} 这两个宏来过滤数据。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123; <span class="attr">"&#123;#SSH_PORT&#125;"</span>: <span class="string">"22"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#SSH_PORT&#125;"</span>: <span class="string">"8022"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#PG_PORT&#125;"</span>: <span class="number">5432</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#PG_PORT&#125;"</span>: <span class="number">6432</span> &#125;</div><div class="line">        &#123; <span class="attr">"&#123;#MASTER_DB_PORT&#125;"</span>: <span class="number">5432</span>, <span class="attr">"&#123;#SLAVE_DB&#125;"</span>: <span class="string">"host1"</span> &#125;,</div><div class="line">        &#123; <span class="attr">"&#123;#MASTER_DB_PORT&#125;"</span>: <span class="number">5432</span>, <span class="attr">"&#123;#SLAVE_DB&#125;"</span>: <span class="string">"host2"</span> &#125;,</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面这个，除了有 2 个 db 之外，还有一个 db 是个 master，能看到他对应的 slave 有哪些。要注意，我们在新增加的这个发现项里面，不能再使用 {#PG_PORT} 这个宏了，因为如果使用了这个宏，就会和第3，4个项目无法区分了。所以我们改了一下名字。</p>
<p>到此为止，只是我们的构思，想要告诉 zabbix 我们想要监控什么。真正使用还需要走一些路。</p>
<h2 id="如何发送数据"><a href="#如何发送数据" class="headerlink" title="如何发送数据"></a>如何发送数据</h2><p>不管是 discovery 数据，还是 item 的监控数据，都可以通过 agent 和 trapper 方式发送。</p>
<p>对于 discovery 数据，使用 agent 发送就是上面讲的格式。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123; <span class="attr">"&#123;#PG.OTHER&#125;"</span>: <span class="string">"0"</span> &#125;,</div><div class="line">     ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果使用 trapper 方式发送，格式如下</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"host"</span>: <span class="string">"HOST1"</span>,</div><div class="line">            <span class="attr">"value"</span>: <span class="string">"&#123;\"data\": [&#123;\"&#123;#PG.OTHER&#125;\": \"0\"&#125;]&#125;"</span>,</div><div class="line">            <span class="attr">"key"</span>: <span class="string">"pg.discover"</span></div><div class="line">        &#125;</div><div class="line">    ],</div><div class="line">    <span class="attr">"request"</span>: <span class="string">"sender data"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面这个数据里面，data 和 request 是 zabbix sender 的固定格式。data 里面，包含了 host, value, key 三个字段。host 是被监控的 host，和将来服务器端的 host 对应。value 是发送的监控内容，可以看到也就是我们使用 agent 发送的内容。key 就是对应的监控项，这个监控项也就是 agent 方式发送对应的那个 userParameter。</p>
<p>使用 trapper 方式发送里面，是可以伪造被监控的 host 的，所以 trapper 方式并不要求一定要在被监控机器上面执行。</p>
<p>对于 item 监控数据，使用 agent 发送是下面这种格式。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"key1"</span>: <span class="number">2</span>,</div><div class="line">    <span class="attr">"key2"</span>: <span class="string">"ok"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用 trapper 方式发送，是下面的这种格式。</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"host"</span>: <span class="string">"HOST1"</span>,</div><div class="line">            <span class="attr">"value"</span>: <span class="number">1</span>,</div><div class="line">            <span class="attr">"key"</span>: <span class="string">"key1"</span></div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"host"</span>: <span class="string">"HOST1"</span>,</div><div class="line">            <span class="attr">"value"</span>: <span class="string">"ok"</span>,</div><div class="line">            <span class="attr">"key"</span>: <span class="string">"key2"</span></div><div class="line">        &#125;</div><div class="line">    ],</div><div class="line">    <span class="attr">"request"</span>: <span class="string">"sender data"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="zabbix-里面的限制"><a href="#zabbix-里面的限制" class="headerlink" title="zabbix 里面的限制"></a>zabbix 里面的限制</h2><p>上面的例子很完美，但实际上 zabbix 是有一些限制的。比如 item 定义。</p>
<p>假如对于发现的 pg 服务，有一个监控项是连接数，比如 {#PG_PORT}.conn.cnt，此时你会发现在 zabbix 新建 item 的 <code>Key</code> 那个设置里面，这么写无法提交。需要使用假装类似 userParameter 的方式来写，比如 pg.[{#PG.PORT}.conn.cnt]，假装那个 <code>pg.</code> 是个 userParameter 命令，[{#PG.PORT}.conn.cnt] 里面的内容是他的参数。当然，这个 pg. 可以基本可以是任何字符串，比如 abc，你自己觉得有意义就好了。</p>
<p>那么这个时候对于发现那块，我们基本不用动，需要动的是被发送的服务的监控项的命名上面。</p>
<p>比如以那个 ssh 的监控为例，原来发送的数据如下</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"22.conn.cnt"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"22.conf.md5"</span>: <span class="string">"18492113fb263c9d0a33c9fea403eea1"</span>,</div><div class="line">    <span class="attr">"8022.conn.cnt"</span>: <span class="number">9</span>,</div><div class="line">    <span class="attr">"8022.conf.md5"</span>: <span class="string">"6cab272daa07202ccb57c4064c0dcfb8"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>我们只需要修改成这样</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"ssh[22.conn.cnt]"</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">"ssh[22.conf.md5]"</span>: <span class="string">"18492113fb263c9d0a33c9fea403eea1"</span>,</div><div class="line">    <span class="attr">"ssh[8022.conn.cnt]"</span>: <span class="number">9</span>,</div><div class="line">    <span class="attr">"ssh[8022.conf.md5]"</span>: <span class="string">"6cab272daa07202ccb57c4064c0dcfb8"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>对应的 2 个 item prototype，key 分别修改为 ssh[{#SSH_PORT}.cnn.cnt] 和 ssh[{#SSH_PORT}.conf.md5]。那个 ssh 可以随意起。并且其实并不一定就得是这种模式，比如叫做 ssh.conf.md5[{#SSH_PORT}] 应该也可以，当然需要你发送的数据也做对应修改。</p>
<h2 id="如何发送监控数据"><a href="#如何发送监控数据" class="headerlink" title="如何发送监控数据"></a>如何发送监控数据</h2><p>咦？好像说过一次了？这次和上面不一样，呵呵。</p>
<p>设计好并写好监控之后，选择什么方式发送监控数据呢。我选择的是 discovery 数据通过 agent 方式获取，也就是在各服务器上面定义相同的一个 key，然后执行这个 key 的时候发送发现的服务信息。</p>
<p>而对于监控项数据则通过 trapper 方式发送。通过 trapper 方式发送，需要定时执行，可以通过 crontab 发送。我选择的是建立了一个 agent 类型的 item，执行这个 item 的时候发送监控数据。这样一方面可以针对这个发送动作建立一个监控，另外一方面调整很方便，zabbix 界面修改就可以。并且我把这个 item 建立到了模板上面，只要修改应用模板就可以了。</p>
<p>监控数据也可以用 agent 方式发送，如果用 agent 方式发送，对于上面的 ssh 服务，就需要真的建立那个 ssh 的 userParameter 了，然后接受比如 <code>22.conf.md5</code> 这样的参数，去返回对应的监控数据。我没有用这种方式，是因为这样做等于有多少个 item 就需要在监控周期内执行多少次那个命令，给服务器增加负担（虽然没多少）。而使用 trapper 方式的话，就可以一次把所有的监控数据都发过去了，命令只需要执行一次。</p>
<h2 id="如何应对不同的部分"><a href="#如何应对不同的部分" class="headerlink" title="如何应对不同的部分"></a>如何应对不同的部分</h2><p>到此为止，应该可以很完美的发现服务，并且监控了。但是会发现其实并不是所有服务器的服务都是一样的，比如对于 pgsql，slow query 的界定对于不同的业务可能不一样。而因为 trigger 也是自动发现添加的，这样也有可能需要不同的机器上面的服务有不同的阈值，怎么解决呢？</p>
<p>先说监控项的阈值。因为我的监控数据其实是通过建立一个 agent 类型的 item 定期发送 trapper 数据来实现的，所以只需要在调用那个 item 的时候传送不同的阈值就可以了。实际上面我的 itme key 定义是这样的 <code>pg.sendtrap[{$PG.DISCOVER.SETTINGS}]</code> 。那个 pg.sendtrap 是对应到一个 userParameter 的 <code>UserParameter=pg.sendtrap[*],/etc/zabbix/bin/zabbix_pg.py --check --sendtrap --settings $1</code>，在 zabbix_pg.py 里面，会处理 settings 参数。如果有阈值，那就定义好 <code>{$PG.DISCOVER.SETTINGS}</code> 这个宏就可以了。template 上面可以定义默认的阈值，当然默认阈值在程序里面定义也可以。然后不同 host 可以定义 host 的阈值，会覆盖模板的配置。</p>
<p>其实 trigger 的阈值和这个思路类似，也是 template 里面定义一个宏，trigger 里面使用这个宏就可以了。如果 host 有不同的阈值，那就定义一个 host 的宏覆盖他就可以了。</p>
<h2 id="目前的情况"><a href="#目前的情况" class="headerlink" title="目前的情况"></a>目前的情况</h2><p>配合 zabbix 的 auto registration 这个 action，可以做到新机器只需要执行一个 saltstack state，安装好我们的 zabbix agent，就可以自动注册 host，自动添加监控报警。</p>
<p>相当完美。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果需要监控的内容比较多的时候，手动管理报警信息就已经不使用了，加一批机器就需要忙活一阵子。也不能体现我们充满智慧的大脑的作用。&lt;/p&gt;
&lt;p&gt;zabbix 支持 LLD(low level discovery) 方式来自动产生监控项目，包括 item, trigger 这
    
    </summary>
    
    
      <category term="zabbix" scheme="https://wdicc.com/tags/zabbix/"/>
    
      <category term="monitor" scheme="https://wdicc.com/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>能不能成功取决于什么</title>
    <link href="https://wdicc.com/all-about-lazy/"/>
    <id>https://wdicc.com/all-about-lazy/</id>
    <published>2016-07-09T06:21:10.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着年龄的增长，自己对一些事情的认识在改变，一直想总结一个给年轻同学的帖子，但是总是不能总结太好怎么讲，大概从想讲到现在，已经几个月了，我感觉不讲的话可能就讲不出来了，所以乱谈一下。</p>
<h2 id="从全栈讲起"><a href="#从全栈讲起" class="headerlink" title="从全栈讲起"></a>从全栈讲起</h2><p>什么是全栈？我感觉肯定不是普通人，我觉得全栈至少得是绝顶聪明的人才可以做到，对于他们来讲，有很扎实的 CS 功底，并且知识面非常广泛，还有很多产出，并且这些产出是各个方面的。</p>
<p><img src="https://pic2.zhimg.com/3c8fbae345f5a480ee55174852f392a1_b.png" alt="某种观点"></p>
<p>上面是李笑来老师对于全栈的看法，<a href="https://www.zhihu.com/question/47359997" target="_blank" rel="external">这里</a> 有知乎用户对这个的讨论。</p>
<p>我只是关注到了他那句话里面的「不太笨」，如果他的意思是很聪明的意思，那观点就和我一致了，呵呵。</p>
<p>不得不承认，智商和你能掌握的内容是有关系的，智商不够再怎么努力也很难达到某种顶峰。当然这并不是说，智商不够的就没戏了，换句话说，如果智商不够还不努力，你还是就想想老婆孩子热炕头就算了。</p>
<h2 id="学习别人"><a href="#学习别人" class="headerlink" title="学习别人"></a>学习别人</h2><p>学习别人的成功经验，似乎是一种很好的办法，至少人家那条路是走通了。</p>
<p>这几年流行健身，是吧。看着别人一个一个健身房也好，路边跑步也好，还有奥森跑步的，是不是看着眼红但是又觉得自己周边不具备环境？健身房贵，路边有觉得没有好环境，奥森还有点远，所以我得找一个满足条件的才能去进行这个事情。</p>
<p>还有比如看到有人拿 kindle 看书，是不是觉得我要是有个 kindle 带着方便，肯定可以看好多书，比如一直想学习的 iOS 开发，还有 Java 编程思想，哎呀呀，编程能力大幅增长啊。所以一定要买个 kindle。</p>
<p>等等类似的事情吧，别的不多讲了。就是我想要干什么事情，但是呢最好满足个什么条件，会让我干的更好更有动力。</p>
<p>最后通常的结果呢？步顶多跑几次就会觉得没意思了，kindle 在家里吃灰，然后开始有其他的想法，比如看着人家的 iphone 不错唉，我要是有个，看个 pdf 什么的，比 kindle 方便啊，手机可是一直带着的，所以。。。。</p>
<h2 id="听别人讲"><a href="#听别人讲" class="headerlink" title="听别人讲"></a>听别人讲</h2><p>欧洲人在放难民进来的时候，想的可是我们可怜你们让你们进来，你们应该很满足，不要闹事老实呆着。所以实际上呢？</p>
<p>父母亲戚常见的「我都是为了你好」这种说法，大家估计都听腻了吧。有用么？</p>
<p>微信朋友圈网上各种鸡汤文，比尔盖兹为什么成功，雷军马云的奋斗，这些文章看的时候让人激动人心，看完了貌似就忘记了，是不是？。。</p>
<h2 id="关键在哪里？"><a href="#关键在哪里？" class="headerlink" title="关键在哪里？"></a>关键在哪里？</h2><p>我感觉关键就是一个字「懒」。</p>
<p><img src="http://ww1.sinaimg.cn/mw690/69a2b902jw1f1nn2v6ld1j20go0aswgl.jpg" alt="懒"></p>
<p>2004 年左右在 irc 玩的时候，就有一个网站 <a href="http://lmgtfy.com/?q=%E6%87%92" target="_blank" rel="external">let me google that for you</a>。这个网站就是鄙视那些连 google 都懒得用的，稍微有点问题就问别人。知识都是别人的，把别人当 google 用。</p>
<p>很多人都有类似习惯。我们学习的时候，别人都是引进大门，如果自己不能养成自己知识持续更新的习惯，等到自己连年轻人都跟不上的时候，就很悲哀了。</p>
<p>这个都无关智商，所谓活到老学到老，别人都给你总结好了，懒字一上来，就混吃等死吧。</p>
<p>想要客服懒字，得自己给自己洗脑，让自己能坚持的下去。<a href="http://v.youku.com/v_show/id_XMTY5NTc2MzMy.html" target="_blank" rel="external">老罗的奋斗</a> 里面，老罗讲自己决定要去新东方当老师之前，学习英语的时候，隔段时间就会学不下去，学不下去的时候，看看成功学的书，给自己打打鸡血，就又活蹦乱跳了。</p>
<p>我大概总结几项提升的方向，遇事情想想，应该有好处</p>
<ul>
<li>主动思考解决问题的最佳思路</li>
<li>主动发现问题，改进承担</li>
<li>主动推进事情进展</li>
<li>不要限定自己的范围，不停挑战难点</li>
<li>积极参与到别人的有激情的项目里面</li>
<li>对技术保持强烈的好奇心</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着年龄的增长，自己对一些事情的认识在改变，一直想总结一个给年轻同学的帖子，但是总是不能总结太好怎么讲，大概从想讲到现在，已经几个月了，我感觉不讲的话可能就讲不出来了，所以乱谈一下。&lt;/p&gt;
&lt;h2 id=&quot;从全栈讲起&quot;&gt;&lt;a href=&quot;#从全栈讲起&quot; class=&quot;he
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何不花钱建立一个支持 https 的 blog</title>
    <link href="https://wdicc.com/how-to-create-a-blog-with-https-for-free/"/>
    <id>https://wdicc.com/how-to-create-a-blog-with-https-for-free/</id>
    <published>2016-04-10T02:18:28.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>早年的时候要搞 blog 还得弄一个空间，现在，免费的东西越来越多了，感觉共产主义的实现还要靠资本家啊，不过羊毛出在羊身上。。。</p>
<p>要想弄一个免费的 blog，首先你的 blog 内容最好是纯静态网页，如果是类似 php 什么的，那就难找了。使用 jeklly, hexo 这些都可以把 markdown 文件渲染成 html。</p>
<p>然后注册一个 github 或者 gitcafe 等等支持 pages 服务的空间，搞定之后就能得到一个类似于 <a href="http://wd.github.io" target="_blank" rel="external">http://wd.github.io</a> 这样的地址。</p>
<p>然后你注册一个域名（发现标题没起好，这个还是要收费的。。），然后注册 cloudflare，把你的域名的 dns 使用 cloudflare 的，然后在 cloudflare 配置一个 cname 到 wd.github.io。然后建立一个 page rule，强制你的域名使用 ssl。</p>
<p>ok 拉，整个过程就是域名花钱了。可以访问下 <a href="http://wdicc.com">http://wdicc.com</a> 看看效果，会自动跳转到 <a href="https://wdicc.com">https://wdicc.com</a> :D</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;早年的时候要搞 blog 还得弄一个空间，现在，免费的东西越来越多了，感觉共产主义的实现还要靠资本家啊，不过羊毛出在羊身上。。。&lt;/p&gt;
&lt;p&gt;要想弄一个免费的 blog，首先你的 blog 内容最好是纯静态网页，如果是类似 php 什么的，那就难找了。使用 jeklly,
    
    </summary>
    
    
      <category term="blog" scheme="https://wdicc.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Custom Netgear r6300v2 wireless router</title>
    <link href="https://wdicc.com/Custom-Netgear-r6300v2-wireless-router/"/>
    <id>https://wdicc.com/Custom-Netgear-r6300v2-wireless-router/</id>
    <published>2016-03-27T03:50:38.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>接 <a href="/Across-the-Great-Wall-we-can-reach-every-corner-in-the-world">科学上网</a>。买了群晖之后，一直通过群晖上面跑一个 haproxy 来做转发。不过心里总觉得有点不爽，毕竟一方面多转发了一次，另外群晖在不使用的时候，还会休眠，又或多或少担心影响休眠（经过测试应该是不影响的，但是..）。所以买了 r6300v2 之后，就琢磨通过路由器做这个事情。</p>
<p>路由器上面搞就有两个选择，一是从 iptables 入手，直接转发出去，另外一个是从软件层面做。</p>
<p>开始搞了几天的 iptables，发现原有系统 iptables 条目还是挺多的，加上路由器翻墙的功能也需要加一些条目，导致尝试了好几天之后总算能够转发过去链接了，但是数据包过不去，为了调试就开始打算在路由器安装 tcpdump。然后找到了 <a href="https://github.com/Entware/entware" target="_blank" rel="external">https://github.com/Entware/entware</a> ，配置好之后可以使用 opkg 来安装包。包列表可以参考这里 <a href="http://pkg.entware.net/binaries/armv7/Packages.html" target="_blank" rel="external">http://pkg.entware.net/binaries/armv7/Packages.html</a> ，这个路由器是 armv7 版本的 cpu。</p>
<p>安装 opkg 之前先得了解下，梅林固件分两部分存储，一部分是系统区，一部分是自定义区。系统区应该是你刷的固件所在的地方，是不能修改的，自定义区是可以存放一些自己定义的脚本的。每次系统启动的时候，你的一些自定义的东西都是存在自定义区加载的。自定义区就是 /jffs 分区。想要使用，得在 系统管理 -&gt; 系统设置 里面，打开 JFFS 的配置，允许执行上面的脚本。</p>
<p>因为系统自带的 /jffs 分区只有 60M 左右，而我们装包的时候很容易就超过这个限制了，我现在已经用了 8xM 空间。所以最好还是用一个 u 盘来做这个事情。每次想要自动加载 u 盘，启动 u 盘里面的程序的话，还需要一些自定义的脚本来做这个事情。</p>
<p>先把 opkg 配置好，需要先准备好 /opt 目录。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">mkdir</span> -<span class="keyword">p</span> /tmp/<span class="keyword">opt</span></div><div class="line">mount -t ext4 -<span class="keyword">o</span> rw,noatime /dev/sda1 /<span class="keyword">opt</span></div></pre></td></tr></table></figure>
<p>上面的 /dev/sda1 是 u 盘，ext4 是文件系统类型，按照自己的修改一下。一般 u 盘插上去就会自动挂载，df 看一下就知道是哪个名字了。系统配置里面有个 dlna 的配置记得关掉，否则他会读 u 盘导致你不能 umount 之类，或者 kill 掉一个叫做 minidlna 的进程也可以。</p>
<p>然后参考 <a href="https://github.com/Entware/entware" target="_blank" rel="external">https://github.com/Entware/entware</a> 操作就可以了，可以看到他会在 /opt 给你安装一陀东西。因为这个是 u 盘，所以东西重启也不会丢失。</p>
<p>然后参考<a href="https://github.com/RMerl/asuswrt-merlin/wiki/User-scripts" target="_blank" rel="external">梅林的 wiki</a>，它允许用户在 <code>/jffs/scripts</code> 自定义一些启动脚本，来支持我们自动挂载和启动 u 盘上面的程序。</p>
<p>post-mount 内容如下，前面几个注释的是调试用的。最后一个 if 里面内容是执行一些 opkg 安装的程序的启动脚本，这个后面说。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line"><span class="comment">#echo $(date) &gt; /tmp/000service-start</span></div><div class="line"><span class="comment">#echo "$1" &gt;&gt; /tmp/000service-start</span></div><div class="line"><span class="comment">#ls /dev/sda* &gt;&gt; /tmp/000service-start</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -b /dev/sda1 ];<span class="keyword">then</span></div><div class="line">        mkdir -p /tmp/opt</div><div class="line">        mount -t ext4 -o rw,noatime /dev/sda1 /opt</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -x /opt/bin/opkg ];<span class="keyword">then</span></div><div class="line">        /opt/etc/init.d/rc.unslung start</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure></p>
<p>要记得 <code>sudo chmod +x post-mount</code>，然后可以重启路由器看看是不是启动之后就能看到 /opt 有了你上次安装的程序了。</p>
<p>上面一阶段搞定之后，就可以装一些软件了，比如我装了 vim, tcpdump，bind-dig, haproxy。opkg 的命令使用可以参考这里 <a href="https://wiki.openwrt.org/doc/techref/opkg" target="_blank" rel="external">https://wiki.openwrt.org/doc/techref/opkg</a> 。</p>
<p>接着上面的话题，本来打算装好 tcpdump 来调试的，然后发现可以比较方便的启动 haproxy 之后，就打算用 haproxy 弄了，路由表太多，分析比较麻烦，还是走简单的吧。。</p>
<p><code>/opt/etc/haproxy.cfg</code> 如下，把 IP 和 PORT 改成你自己的。</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">global</span></div><div class="line">        ulimit-n  <span class="number">331071</span></div><div class="line"></div><div class="line">defaults</div><div class="line">        log <span class="meta">global</span></div><div class="line">        mode    tcp</div><div class="line">        <span class="meta">option</span>  dontlognull</div><div class="line">        timeout connect <span class="number">1000</span></div><div class="line">        timeout client <span class="number">150000</span></div><div class="line">        timeout server <span class="number">150000</span></div><div class="line"></div><div class="line">frontend <span class="built_in">ss</span>-<span class="keyword">in</span></div><div class="line">        bind *:本机PORT</div><div class="line">        default_backend <span class="built_in">ss</span>-<span class="keyword">out</span></div><div class="line"></div><div class="line">backend <span class="built_in">ss</span>-<span class="keyword">out</span></div><div class="line">        server server1 <span class="built_in">IP</span>:远端PORT maxconn <span class="number">20480</span></div></pre></td></tr></table></figure>
<p><code>/opt/etc/init.d/S001haproxy.sh</code> 如下，<code>sudo chmod +x /etc/init.d/S001haproxy.sh</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line">haproxy_bin=/opt/sbin/haproxy</div><div class="line">haproxy_cfg=/opt/etc/haproxy.cfg</div><div class="line">pid=/opt/var/run/haproxy.pid</div><div class="line"></div><div class="line">action=<span class="variable">$1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$action</span>"</span> ];<span class="keyword">then</span></div><div class="line">        <span class="built_in">printf</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|restart&#125;\n"</span> &gt;&amp;2</div><div class="line">        <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$action</span>"</span> <span class="keyword">in</span></div><div class="line">        start)</div><div class="line">                <span class="variable">$haproxy_bin</span> <span class="_">-f</span> <span class="variable">$haproxy_cfg</span> -p <span class="variable">$pid</span> -D</div><div class="line">                ;;</div><div class="line">        stop)</div><div class="line">                <span class="built_in">kill</span> $(cat <span class="variable">$pid</span>)</div><div class="line">                ;;</div><div class="line">        restart)</div><div class="line">                <span class="built_in">kill</span> $(cat <span class="variable">$pid</span>)</div><div class="line">                <span class="variable">$haproxy_bin</span> <span class="_">-f</span> <span class="variable">$haproxy_cfg</span> -p <span class="variable">$pid</span> -D</div><div class="line">                ;;</div><div class="line"><span class="keyword">esac</span></div></pre></td></tr></table></figure>
<p>因为前面在 post-mount 最后一个 if 里面的语句，这样启动路由器就会自动启动 haproxy 了。</p>
<p>想使用这个端口转发，还需要在路由器配置界面里面增加一个到路由器 ip 的映射，然后还需要一个 <code>/jffs/scripts/firewall-start</code> 如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line">iptables -I INPUT -i ppp0 -p tcp --destination-port PORT -j ACCEPT</div></pre></td></tr></table></figure>
<p>我使用的过程中还发现一个问题，pkg.entware.net 貌似被墙了。。虽然配置了翻墙但是不太明白为什么路由器上面时好时坏，而我局域网内的 mac 访问总是 ok 的，很奇怪。路由器上面不能访问有个办法是通过 mac 代理一下。</p>
<p>mac 上面启动一个 ngx，配置如下，使用 nginx -p ./ -c nginx.conf 启动。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="section">events</span> &#123;</div><div class="line">  <span class="attribute">worker_connections</span> <span class="number">1024</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="section">http</span> &#123;</div><div class="line">  <span class="section">server</span> &#123;</div><div class="line">      <span class="attribute">listen</span> <span class="number">0.0.0.0:8000</span>;</div><div class="line">      <span class="attribute">location</span> / &#123;</div><div class="line">           <span class="attribute">proxy_pass</span> http://pkg.entware.net;</div><div class="line">      &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>然后修改路由器上面 /opt/etc/opkg.conf <code>src/gz packages http://MAC_IP:8000/binaries/armv7</code>，然后就可以了。</p>
<p>写完自己看发现这不是一份操作指南，只能算是一些提示，如果有人照着做能不能成功可能还是得看自己。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接 &lt;a href=&quot;/Across-the-Great-Wall-we-can-reach-every-corner-in-the-world&quot;&gt;科学上网&lt;/a&gt;。买了群晖之后，一直通过群晖上面跑一个 haproxy 来做转发。不过心里总觉得有点不爽，毕竟一方面多转发了一
    
    </summary>
    
    
      <category term="linux" scheme="https://wdicc.com/tags/linux/"/>
    
      <category term="gfw" scheme="https://wdicc.com/tags/gfw/"/>
    
      <category term="router" scheme="https://wdicc.com/tags/router/"/>
    
  </entry>
  
  <entry>
    <title>lua metatable</title>
    <link href="https://wdicc.com/lua-metatable/"/>
    <id>https://wdicc.com/lua-metatable/</id>
    <published>2016-03-27T02:48:26.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">t = <span class="built_in">setmetatable</span>(&#123; bar = <span class="number">4</span>, foo = <span class="number">7</span> &#125;, &#123; __index = &#123; foo = <span class="number">3</span> &#125; &#125;)</div><div class="line"></div><div class="line"><span class="built_in">print</span>(t.foo)  <span class="comment">-- 7</span></div><div class="line"><span class="built_in">print</span>(t.bar)  <span class="comment">-- 4</span></div><div class="line"></div><div class="line">t = <span class="built_in">setmetatable</span>(&#123;  &#125;, &#123; __index = &#123; foo = <span class="number">3</span>&#125; &#125;)</div><div class="line"></div><div class="line"><span class="built_in">print</span>(t.foo)  <span class="comment">-- 3</span></div><div class="line"><span class="built_in">print</span>(t.bar)  <span class="comment">-- nil</span></div><div class="line"></div><div class="line">fuc = <span class="function"><span class="keyword">function</span> <span class="params">(t,k)</span></span></div><div class="line">    <span class="keyword">if</span> k == <span class="string">'foo'</span> <span class="keyword">then</span></div><div class="line">        <span class="keyword">return</span> <span class="built_in">rawget</span>(t, <span class="string">'bar'</span>)</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> <span class="number">0</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">t = <span class="built_in">setmetatable</span>(&#123;   &#125;, &#123; __index = fuc &#125;)</div><div class="line"></div><div class="line"><span class="built_in">print</span>(t.foo)  <span class="comment">-- 3</span></div><div class="line"><span class="built_in">print</span>(t.bar)  <span class="comment">-- nil</span></div><div class="line"><span class="built_in">print</span>(t.ff)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
    
      <category term="lua" scheme="https://wdicc.com/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>Across the Great Wall, we can reach every corner in the world</title>
    <link href="https://wdicc.com/Across-the-Great-Wall-we-can-reach-every-corner-in-the-world/"/>
    <id>https://wdicc.com/Across-the-Great-Wall-we-can-reach-every-corner-in-the-world/</id>
    <published>2016-03-20T12:39:53.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>科学上网估计是每个搞 IT 的人必须要掌握的知识了。简单讲讲我目前使用的一些方法。</p>
<h2 id="国外服务"><a href="#国外服务" class="headerlink" title="国外服务"></a>国外服务</h2><p>首先肯定需要先有个国外的资源，比如买专业的 vpn ss 服务等。数据经过第三方都不一定那么可靠，我的主力邮箱在 gmail，可不想被攻破，所以我选择了自己购买和搭建服务。</p>
<p>我买的是 linode 的服务，最便宜的是 10$ 一个月。也可以买一些美国的 kvm 或者 zen 的虚拟机，有比较便宜的一个月可能才不到 1$，当然这种便宜的一般很快就会卖没，得看运气。我的 linode 是和 3 个基友一起合租的，这样大家每个人一年也就 300 来块钱，也就一顿海底捞（我这两年非常喜欢用饭钱来衡量消费，吃饭可是天天都有的，但是有些消费，比如买软件，买服务这些一般都是一年或者几年才一次，比起吃饭真的便宜多了），一般都能承担的吧。</p>
<p>早期我买过一些 ssh 服务，速度不稳定，因为很难限制超售。后来还买过云梯，他们提供的节点比较多速度还不错。</p>
<p>有了 vps 搭一个 ssserver 就是很简单的了，就不多说了。服务器上面我还配置了 ocserv 这个支持 cisco 客户端的 vpn 服务。当然并不是所有 vps 都支持，有的 vps 没有 tun 设备，跑不起来，买的时候要注意。</p>
<h2 id="ssh-方式"><a href="#ssh-方式" class="headerlink" title="ssh 方式"></a>ssh 方式</h2><p>使用 ssh 方式的时候，最早是直接 ssh 链接弄一个 socks 端口给本地，然后本地使用 pac 配合。</p>
<p>后来有段时间被断的不行，就试了 stunnel，可以把 ssh 转为 https 服务，这样就可以跑在 443 端口了，和其他 https 服务比较难区分。可以起点作用。</p>
<p>这个方式没法支持手机。</p>
<h2 id="使用-ngx"><a href="#使用-ngx" class="headerlink" title="使用 ngx"></a>使用 ngx</h2><p>有段时间还使用 hosts 文件加 ngx 反向代理还翻墙。ngx 上面配置 google.com 和 twitter.com 的反向代理，然后手机或者电脑上面配置 hosts 指向 ngx。就可以实现翻墙了。不过因为都是 https 的网站，所以服务器上面得配置 https 的服务，证书得弄到电脑或者手机上面信任才行。</p>
<p>这个手机想要支持的话，ios 比较麻烦，必须得越狱。</p>
<h2 id="vpn-方式"><a href="#vpn-方式" class="headerlink" title="vpn 方式"></a>vpn 方式</h2><p>早期用 vpn 方式的时候，pptp 可以搭配 <a href="https://github.com/fivesheep/chnroutes" target="_blank" rel="external">chnrouts</a> 来实现国外和国内走不同的路由。用起来也不错，不过问题是全局的有时候切换也不方便，并且有时候还需要连公司的 vpn 路由一乱就麻烦了。</p>
<p>pc 上面选择比较多。手机上面，试过 anyconnect，缺点就是全局翻墙（我试过让 server 只 push fb twitter 的路由，但是维护麻烦，效果也不好）。anyconnect 比较赞的地方是他的链接 cookie 可以设置比较长的有效期，这样网络切换什么的临时断开之后自动重连也不需要输入密码。哦，当然，我的 anyconnect 和后面提到的 openvpn 都是通过自己签的证书来认证的，也不需要输入密码。</p>
<p>后来用过 openvpn，openvpn 是基友维护的。他的思路很赞。</p>
<p>他买了一台 server 放家里，家里是联通 adsl 24h 联机，然后 server 上面跑一个 openvpn 的服务器端给手机连接用，服务器上面再通过 vpn 和 vps 的 vpn 链接，同时这机器配置只有国外路由才走 vps，国内都是直接链接。大概链路就是  手机 -&gt; 家里的 server -&gt; vps。如果是国内的网站，就直接通过家里的 server 访问了，比国外的 vps 访问速度快。</p>
<p>这个方法还有好处是有时候一些公开的场合链接一些 wifi 的时候，很不安全，而通过 vpn 之后，数据都是加密的，就安全多了。我在 surge 之前，在 hosts 不能用之后，基本都是用这个和 anyconnect。</p>
<h2 id="使用-ss"><a href="#使用-ss" class="headerlink" title="使用 ss"></a>使用 ss</h2><p>开始使用 ss 的时候，是使用 goagentx （貌似已经比较难找到下载了）的，这个工具异常好用，支持切换全局还是使用 pac 非常方便。pac 推荐使用 <a href="https://github.com/JinnLynn/genpac" target="_blank" rel="external">genpac</a> 来维护 pac，放到 dropbox 里面就可以四处用了。</p>
<p>我有相当长一段时间都是这么翻墙的。直到后面 ios 9 放开网络权限之后，出来了 surge。surge 现在卖的太贵了，不建议购买，最近好像看到有一些新的软件也在出现，可以考虑。</p>
<p>surge 出来之后，ios 基本就是用这个了。</p>
<p>surge 也有 mac 版本。如果没有，使用 ss mac 版本也可以，搭配 pac 可以做到透明。</p>
<h2 id="应对不稳定的网络情况"><a href="#应对不稳定的网络情况" class="headerlink" title="应对不稳定的网络情况"></a>应对不稳定的网络情况</h2><p>家里是联通 adsl，链接我的 linode 一直都比较稳定，速度不错也没有丢包。公司访问 linode 有时候丢包比较严重，不过也将就用了。去年去长沙出差，那边完全访问不能把我搞的很痛苦。回来就开始琢磨怎么搞。</p>
<p>上面基友的思路提醒了我，就是自己家里一台 server 建长链接，然后在外面翻墙先连家里。但是家里的路由器完全不能定制，后来发现我的群晖的 nas 可以装 haproxy，就搞定这个事情了。在路由器上面映射一个端口给群晖，群晖上面跑 haproxy 转发到 linode。给路由器弄了个 ddns，在外面翻墙都连接这个 dns。</p>
<p>群晖上面跑 haproxy 还不影响硬盘休眠，还挺不错。这样就彻底解决了我翻墙的问题了。</p>
<p>但是遇到家里停电断网就虾米了。。</p>
<h2 id="家里的全局翻墙方案"><a href="#家里的全局翻墙方案" class="headerlink" title="家里的全局翻墙方案"></a>家里的全局翻墙方案</h2><p>前段时间换了 Netgear R6300v2，才发现我之前错过了好多好玩的东西。刷了个国内论坛定制的梅林 rom，自带了 ss 客户端，并且配置的非常完美，支持多种翻墙策略，具体就不细说了。就说现在的效果吧。</p>
<p>直接映射了端口到 linode 的 ss，并且也支持 ddns（我用的 3322 的），这样 nas 上面的 haproxy 就彻底可以不用了。</p>
<p>路由器跑了 ss 客户端，加 redsocks2 和 dns2proxy，实现了国内网站直连，国外根据域名匹配到列表里面的服务器通过 ss 链接。这样家里所有的终端，不需要跑任何服务，就可以无缝翻墙了。我的 ps4，apple tv，ipad 上面的 yotube 都可以访问了。然后还支持黑名单，我把 nas 加进去了，防止使用 bt 下载的时候跑到国外流量。</p>
<p>这样我目前手机和 mac 都是直接通过 surge，国外流量通过 3322 的 dns 先链接到路由器，然后转发到 linode 实现翻墙。</p>
<h2 id="目前唯一的问题"><a href="#目前唯一的问题" class="headerlink" title="目前唯一的问题"></a>目前唯一的问题</h2><p>mac 版本的 surge，还不能自己配置网络，这样临时想关掉代理的时候，就比较麻烦，得去网络配置里面关。也不能很简单的配置让全部流量走 proxy，有时候需要测试下什么的，就比较麻烦。所以我现在有时候还会使用 goagentx 辅助一下。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;科学上网估计是每个搞 IT 的人必须要掌握的知识了。简单讲讲我目前使用的一些方法。&lt;/p&gt;
&lt;h2 id=&quot;国外服务&quot;&gt;&lt;a href=&quot;#国外服务&quot; class=&quot;headerlink&quot; title=&quot;国外服务&quot;&gt;&lt;/a&gt;国外服务&lt;/h2&gt;&lt;p&gt;首先肯定需要先有个国外的资
    
    </summary>
    
    
      <category term="gfw" scheme="https://wdicc.com/tags/gfw/"/>
    
  </entry>
  
  <entry>
    <title>setup proxy for emacs</title>
    <link href="https://wdicc.com/setup-proxy-for-emacs/"/>
    <id>https://wdicc.com/setup-proxy-for-emacs/</id>
    <published>2016-02-27T13:55:20.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>我在 mac 上面使用 emacs 都是使用 daemon + emacsclient 模式。使用 <code>paradox</code> 包管理(其实就是比 <code>list-package</code> 稍微多了一点功能’)，但是因为那些包什么的信息都在国外的网站，还有 github 什么的，导致速度巨慢甚至连不上，关键 emacs 单线程还得卡着别的操作，所以挺讨厌的(其实 paradox 提供了异步更新的方式，不会阻塞现在进程，但是有时候会不知道进度…)。</p>
<p>思路就是使用 <code>proxychains</code>。</p>
<p>新建一个 <code>/Library/LaunchAgents/gnu.emacs.daemon.plist</code> 文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"</span></div><div class="line">    "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</div><div class="line"> <span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>gnu.emacs.daemon<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/bin/proxychains4<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>-f<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>/Users/wd/.proxychains/proxychains.conf<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/opt/emacs-mac/bin/emacs<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>--daemon<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">true</span>/&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>ServiceDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>Gnu Emacs Daemon<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>UserName<span class="tag">&lt;/<span class="name">key</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>wd<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></div></pre></td></tr></table></figure>
<p>其中 <code>/Users/wd/.proxychains/proxychains.conf</code> 文件的内容如下</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">strict_chain</div><div class="line">proxy_dns</div><div class="line">remote_dns_subnet <span class="number">224</span></div><div class="line">tcp_read_time_out <span class="number">15000</span></div><div class="line">tcp_connect_time_out <span class="number">8000</span></div><div class="line">localnet <span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></div><div class="line">localnet <span class="number">10.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></div><div class="line">localnet <span class="number">172.16</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.240</span><span class="number">.0</span><span class="number">.0</span></div><div class="line">localnet <span class="number">192.168</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span></div><div class="line">quiet_mode</div><div class="line"></div><div class="line">[ProxyList]</div><div class="line">#socks5 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">1080</span></div><div class="line">http <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">6152</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我在 mac 上面使用 emacs 都是使用 daemon + emacsclient 模式。使用 &lt;code&gt;paradox&lt;/code&gt; 包管理(其实就是比 &lt;code&gt;list-package&lt;/code&gt; 稍微多了一点功能’)，但是因为那些包什么的信息都在国外的网站
    
    </summary>
    
    
      <category term="emacs" scheme="https://wdicc.com/tags/emacs/"/>
    
      <category term="osx" scheme="https://wdicc.com/tags/osx/"/>
    
  </entry>
  
  <entry>
    <title>use gearman to distribute you nagios check</title>
    <link href="https://wdicc.com/use-gearman-to-distribute-you-nagios-check/"/>
    <id>https://wdicc.com/use-gearman-to-distribute-you-nagios-check/</id>
    <published>2016-01-18T07:14:36.000Z</published>
    <updated>2016-10-22T04:19:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="gearman"><a href="#gearman" class="headerlink" title="gearman"></a>gearman</h2><p>需要 boost &gt; 1.39, libevent-devel, libuuid-devel, gperf<br>需要 gcc &gt;= 4.2</p>
<p>export CC=gcc44<br>export CC=g++44</p>
<h2 id="mod-gearman"><a href="#mod-gearman" class="headerlink" title="mod-gearman"></a>mod-gearman</h2><p>libtool-ltdl-devel ncurses-devel<br>–with-gearman</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>gearman 分为几个模块</p>
<ul>
<li>mod_gearman: 负责把 nagios 中的检查任务发给 gearmand job server</li>
<li>gearmand: 负责接收任务，分配给 worker 执行。这个是个通用的队列管理服务。</li>
<li>gearman_workder: 负责消费 gearmand 中的 job。</li>
</ul>
<p>其中 <code>mod_gearman</code> 的代码里面包括了上面提到的 mod_gearman 和 gearman_workder。</p>
<p>所以规划好 gearmand 启动的机器，以及你的 worker 机器。其中要注意 worker 机器上面是会执行所有[1] nagios 监控</p>
<p>需要配置的文件有几个</p>
<ul>
<li>nagios.cfg 增加 broker</li>
<li>mod-gearman/etc/mod_gearman/mod_gearman_neb.conf broker 的配置文件</li>
<li>mod-gearman/etc/mod_gearman/mod_gearman_worker.conf workder 的配置文件</li>
</ul>
<h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><ul>
<li>先启动 gearmand 使用 mod-gearman/etc/init.d/gearmand 这个脚本。</li>
<li>启动 worker 使用 mod-gearman/etc/init.d/mod_gearman_worker 这个脚本。启动之后可以用 gearman_top 看到多了一些队列。</li>
<li>重启 nagios</li>
</ul>
<p>确认 nagios.log 里面正常加载了 gearman，然后看 gearman_top 里面开始有一些 run 的 job 了。</p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>基本上使用 gearman 还算是对用户透明，需要配置的东西不多，默认配置就可以跑。</p>
<p>一般使用 gearman 的时候都是现有 nagios 遇到瓶颈了，这个时候扩展的时候需要注意下，第一步可以在 nagios 机器上面（或者弄一台新的机器）做 gearman 的 job server，然后在 nagios 的机器上面跑一个 worker，这样基本就是 0 配置都可以跑起来，不会有任何问题。</p>
<p>第一步完成之后就会需要增加 worker，这个时候就要注意了，新的 worker 机器上面，需要在相同的路径下面包括所有你用到的 nagios plugin（包括自己写的，也包括这些 plugin 依赖的其他内容，比如临时文件路径，配置文件等），否则分发过来的 job 会执行不成功。</p>
<p>这个时候有个办法，就是把原来机器的 nagios 相关目录通过 nfs 共享给其他机器（但是得注意二进制程序是兼容的）。</p>
<p>另外如果需要测试一下新的 worker，也可以通过配置只让 worker 执行某些 servicegroup 或者 hostgroup 的任务。要注意这个时候需要配置 service, eventhandler, host 都为 no，然后配置 servicegroups 或者 hostgroups。</p>
<h1 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h1><p>[1] 其实 worker 是可以被配置为只处理某些监控的，这个后面会讲。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;h2 id=&quot;gearman&quot;&gt;&lt;a href=&quot;#gearman&quot; class=&quot;headerlink&quot; title=&quot;gearman&quot;&gt;&lt;/
    
    </summary>
    
    
      <category term="nagios" scheme="https://wdicc.com/tags/nagios/"/>
    
      <category term="gearman" scheme="https://wdicc.com/tags/gearman/"/>
    
  </entry>
  
</feed>
