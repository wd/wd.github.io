<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on wd and cc</title><link>https://wdicc.com/</link><description>Recent content in Home on wd and cc</description><generator>Hugo</generator><language>en</language><copyright>wd © 2025</copyright><lastBuildDate>Fri, 27 Dec 2024 08:22:19 +0800</lastBuildDate><atom:link href="https://wdicc.com/atom.xml" rel="self" type="application/rss+xml"/><item><title>Gentoo</title><link>https://wdicc.com/gentoo/</link><pubDate>Fri, 27 Dec 2024 08:22:19 +0800</pubDate><guid>https://wdicc.com/gentoo/</guid><description>&lt;p>好久没有玩 Linux 桌面了，上次感觉还是10几年前。最近弄了一个 IBM thinkpad x1 carbon，非常轻薄，对 Linux 的支持也不错。这几天折腾了一下，安装一个 Gentoo。&lt;/p>
&lt;p>
安装之前我其实使用 LiveUSB 尝试了好几个系统。甚至还安装一个 &lt;a href="https://manjaro.org/products/download/x86">manjaro&lt;/a> 看了一下 wayland 的支持。我当时测试 Ubuntu 的时候，发现合盖之后一晚上居然消耗不到 10% 的电感觉很惊讶。就决定把 Windows 彻底干掉了。&lt;/p></description></item><item><title>Slow Is Fast 慢就是快</title><link>https://wdicc.com/slow-is-fast/</link><pubDate>Sun, 01 Dec 2024 19:37:35 +0800</pubDate><guid>https://wdicc.com/slow-is-fast/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
小步快跑
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>&lt;a href="https://www.google.com/search?q=%E5%B0%8F%E6%AD%A5%E5%BF%AB%E8%B7%91&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8">小步快跑&lt;/a>是最近一些年流传的比较广的一种理论。大致是说要快速迭代，在市场里面快速测试想法可行性，不行就换方向重新迭代。
这个乍一听似乎没问题，天下武功唯快不破。你速度够快才能在别人还没有动作的时候早日抢占市场，抢占用户。但是真的是这样吗？实际上一个产品最终如何，通常都不是抢占的那点先机决定的。要经受住市场考验，用户才会真的有黏性。而为了抢占先机做出来的功能，通常会不完善，功能不完整等等，导致前期培养的一些黏性用户失望而离开。反而可能你的竞争对手认真的学习并 copy 之后，功能做的扎实完善，吸引了用户。
在我看来，小步快跑正是一些无能的领导们想出来的东西。因为他们心中对全局也没有很好的思路，并不知道下一步的战略应该在哪个方向。所以就让大家小步快跑，不停试错。但是这样时间必然会浪费一些，那么带来的后果就是大家加班严重。
我之前体验过任何功能定好了今晚上线，就必须今晚上线的公司。即使 QA 工程师测试的时候发现产品文档写的不清不楚，也一定需要上线。最后的结果就是，QA 加开发工程师和产品经理一起在最后一刻打磨功能，大家一起加班。而这个功能上线之后，还有下一个功能等着，结果就是无穷尽的加班。半年之后回顾的时候，会发现大家忙乎了大半年，产品做的好不好不一定，反正班加了不少，每个人都很忙碌。&lt;/p></description></item><item><title>Resolve Dependency Issue for a Simple Java Program</title><link>https://wdicc.com/resolve-dependency-issue-for-a-simple-java-program/</link><pubDate>Sat, 31 Aug 2024 09:58:48 +0800</pubDate><guid>https://wdicc.com/resolve-dependency-issue-for-a-simple-java-program/</guid><description>&lt;p>最近需要把一个服务从对 Envoy 的依赖迁移到 Nginx。我们大都是 GRPC 请求，所以需要代码对 http2 + ssl 做支持。&lt;/p>
&lt;p>
GRPC 是基于 h2 的，当使用 Envoy 的时候，代码都是发 h2c 的情况给本地的 envoy。这个过程没有 ssl 握手。而 Nginx 不支持 h2c 的支持，必须处理 ssl 握手。我们的服务都是在 Nginx 后面的，Nginx 层面也做了会多 Virtual Host 的配置，所以需要通过 Host 来做匹配，这个 Host 也必须得正确，要不然就是会匹配到 default 的 server，无非是得到一个 404。&lt;/p></description></item><item><title>Open Decision Making</title><link>https://wdicc.com/open-decision-making/</link><pubDate>Sun, 14 Jul 2024 20:12:34 +0800</pubDate><guid>https://wdicc.com/open-decision-making/</guid><description>&lt;p>最近读了一篇文章（论文），关于如何通过群里智慧来做决策的。网址在这里 &lt;a href="https://web.stanford.edu/~ouster/cgi-bin/decisions.php">https://web.stanford.edu/~ouster/cgi-bin/decisions.php&lt;/a>。 作者是斯坦福大学的一个教授。下面是我自己做的一些笔记。&lt;/p>
&lt;p>
我们会遇到很多需要做决定的情况：&lt;/p>
&lt;ul>
&lt;li>technical decisions about how to build products&lt;/li>
&lt;li>personnel decisions about whom to hire&lt;/li>
&lt;li>business decisions about how to market and sell our products&lt;/li>
&lt;li>strategic decisions about company direction and financing&lt;/li>
&lt;li>and many others.&lt;/li>
&lt;/ul>
&lt;p>对于有些决定比较满意，有些对过程和结果都不满意。所以作者根据自己经验给出来了一套框架来让你持续高效的做出好的决定，能让执行的人愿意去执行他。&lt;/p></description></item><item><title>How to Improve Sleep Quality</title><link>https://wdicc.com/how-to-improve-sleep-quality/</link><pubDate>Wed, 20 Dec 2023 09:02:00 +0800</pubDate><guid>https://wdicc.com/how-to-improve-sleep-quality/</guid><description>&lt;p>在之前公司的时候，满脑子都是工作，所以经常性的半夜3，4点醒来然后就睡不着了。醒来比较常做的事情就是刷手机，希望能把自己刷睡着，但是往往事与愿违。越刷越睡不着。也尝试过褪黑素啥的，还别说好像是有点用。经过这几年的摸索，我感觉我好像摸索出来一点道道。&lt;/p></description></item><item><title>Dns Query</title><link>https://wdicc.com/dns-query/</link><pubDate>Sun, 13 Aug 2023 19:19:34 +0800</pubDate><guid>https://wdicc.com/dns-query/</guid><description>&lt;p>总结一个前段时间遇到的问题。当时的现象是 Nginx 报错误说 dns 有问题，不能正常处理一个域名（我们的 upstream 配置的是域名。）&lt;/p>
&lt;p>
但是我使用 dig 测试总是可以成功的，看了下好像应该有的进程也都在，就有点摸不着头脑。后来另一个同事使用 nslookup 可以复现 dns 查询问题，然后发现是本机的一个 dns 服务对于 TCP 的端口的监听消失了。现在问题和原因都知道了，然后我就很好奇为啥我自己 dig 测试就没测试出来问题呢？&lt;/p></description></item><item><title>Setup Tproxy on Router</title><link>https://wdicc.com/setup-tproxy-on-router/</link><pubDate>Sun, 28 May 2023 12:00:46 +0800</pubDate><guid>https://wdicc.com/setup-tproxy-on-router/</guid><description>&lt;p>使用了一段时间的 &lt;a href="https://wdicc.com/setup-policy-route-on-openwrt-x86-with-wireguard/">wireguard&lt;/a> 之后，使用的时候时不时总是会断一会，我感觉体验不是很好。所以想换回使用 v2ray 了。当然 wireguard 还是继续作为国内回家使用。和国外的 tunnel 就换 v2ray 了。&lt;/p>
&lt;p>
首先需要做的就是调整原来的那套方案里面的出国线路。&lt;/p>
&lt;ol>
&lt;li>把 ipset/dnsmasq/iptables 相关的配置删掉。&lt;/li>
&lt;li>把 hotplug 里面关于 ip rule add fwmark 的部分删掉。相关 route 还是需要留着，因为我还需要在家之外的网络连回家。&lt;/li>
&lt;li>吧 wireguard 里面和 VPS 的连接也去掉。&lt;/li>
&lt;/ol>
&lt;p>这一顿操作之后，出国应该就挂了。接下来就配置透明代理。&lt;/p></description></item><item><title>Use Rime Again</title><link>https://wdicc.com/use-rime-again/</link><pubDate>Thu, 06 Apr 2023 10:04:20 +0800</pubDate><guid>https://wdicc.com/use-rime-again/</guid><description>&lt;p>Updates: 已经放弃了。感觉没有自带输入法流畅。
Updates2: 尝试了 &lt;a href="https://github.com/Mintimate/oh-my-rime">oh-my-rime&lt;/a> 之后，我就一直用着了，这里面应该也集成了雾凇的一些东西，已经用了感觉得有一年了，感觉非常好用。&lt;/p>
&lt;p>
以前用过很久的 rime，但是后来换了原生输入法，因为现在原生输入法也很好用。最近这个&lt;a href="https://github.com/iDvel/rime-ice">雾凇拼音&lt;/a>很火，就又尝试了一下 rime。这个确实也还不错的样子。&lt;/p></description></item><item><title>Howto Build an Old Golang Project</title><link>https://wdicc.com/howto-build-an-old-golang-project/</link><pubDate>Wed, 05 Apr 2023 17:29:47 +0800</pubDate><guid>https://wdicc.com/howto-build-an-old-golang-project/</guid><description>&lt;p>我开始使用 golang 的时候，就已经进入了 go mod 时代了。这个时候就不用和 GOPATH 做斗争了。所以对于 GOPATH 时代的项目没啥经验。&lt;/p>
&lt;p>
最近需要 debug 一个 &lt;a href="https://github.com/hashicorp/consul/tree/v1.2.4">consul 的古老版本 v1.2.4&lt;/a>，项目显示支持 go 1.10+。这一定不能是支持 go mod 的版本了，我查了一下 GOPATH 似乎是在 1.17 正式 deprecate 的。所以似乎理论上 1.10 - 1.16 的版本都可以。&lt;/p></description></item><item><title>Make DNS Service in K8s Stable</title><link>https://wdicc.com/make-dns-service-in-k8s-stable/</link><pubDate>Wed, 23 Nov 2022 19:51:18 +0800</pubDate><guid>https://wdicc.com/make-dns-service-in-k8s-stable/</guid><description>&lt;p>我们用的 k8s 是通过 rancher 管理的。rancher 又是使用 rke 这个 engine 来创建集群的。我们使用的 CNI 是 calico，DNS 是 coredns。按说 DNS 服务是核心服务，如果这个玩意不稳定或者有问题，那么整个集群都不安宁。coredns 按说挺有名气来，按说没问题。。吧？&lt;/p></description></item><item><title>Use Emacs in terminal</title><link>https://wdicc.com/use-emacs-in-terminal/</link><pubDate>Tue, 22 Nov 2022 20:45:39 +0800</pubDate><guid>https://wdicc.com/use-emacs-in-terminal/</guid><description>&lt;p>I usually use the Emacs GUI to manage and edit files for each project. The GUI version looks great and works great.&lt;/p>
&lt;p>
However, I have to use Vim in the terminal since it starts much faster than Emacs. I have tried with Emacs daemon in the past, but I met some weird issues when connecting GUI Emacs to the daemon. Some of the function does not work very well.&lt;/p>
&lt;p>
I used the combination of Vim and Emacs for a very long time until yesterday. I realized why I don&amp;#39;t use Emacs daemon in the terminal while using Emacs GUI without the daemon.&lt;/p></description></item><item><title>Use Kubeconform to Validate Manifests Locally</title><link>https://wdicc.com/use-kubeconform-to-validate-manifests-locally/</link><pubDate>Sat, 29 Oct 2022 17:58:39 +0800</pubDate><guid>https://wdicc.com/use-kubeconform-to-validate-manifests-locally/</guid><description>&lt;p>
&lt;a href="https://github.com/yannh/kubeconform">kubeconform&lt;/a> is a tool that allows us to validate Kubernetes manifests.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Retrieve open API specification from Kubernetes
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
Use this command to retrieve the open API specifications from Kubernetes.&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>k get --raw &lt;span style="color:#e6db74">&amp;#39;/openapi/v2&amp;#39;&lt;/span> &amp;gt; /tmp/specs.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
Generate JSON schema file
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;p>
Use &lt;a href="https://github.com/wd/openapi2jsonschema">openapi2jsonschema&lt;/a> to generate the JSON schemas.&lt;/p>
&lt;div class="src src-bash">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python openapi2jsonschema/command.py -o /tmp/json-schemas/v1.20.11-standalone-strict &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--kubernetes --stand-alone &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--expanded --strict &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>/tmp/specs.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading schema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Parsing schema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating shared definitions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating individual schemas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing alertmanager-monitoring-v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating alertmanager-monitoring-v1.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing alertmanagerlist-monitoring-v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating alertmanagerlist-monitoring-v1.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing prometheus-monitoring-v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating prometheus-monitoring-v1.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing prometheuslist-monitoring-v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing networksetlist-crd-v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating networksetlist-crd-v1.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating schema &lt;span style="color:#66d9ef">for&lt;/span> all types&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
The command will report some errors like the one below which is fine since the tool does not support `customresourcedefinition`.&lt;/p></description></item><item><title>Webhooks in Kubernetes</title><link>https://wdicc.com/webhooks-in-kubernetes/</link><pubDate>Sun, 28 Aug 2022 09:38:59 +0800</pubDate><guid>https://wdicc.com/webhooks-in-kubernetes/</guid><description>&lt;p>
Kubernetes allows us to hook on API request chain to do some specific checks or modifies.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Kubernetes API access control
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
There are two types of control. One is to control which user(token, group) is allowed to access, the other one is to control which resource a user could access. The kube-apiserver has two arguments to allow users to define that.&lt;/p>
&lt;ul>
&lt;li>Authentication: &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication">–authentication-token-webhook-config-file&lt;/a>&lt;/li>
&lt;li>Authorization: &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/webhook/">–authorization-webhook-config-file&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Admission webhook
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>
&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#what-are-admission-webhooks">Here&lt;/a> is the definition about what admission webhook could do.&lt;/p>
&lt;blockquote>
&lt;p>Admission webhooks are HTTP callbacks that receive admission requests and do something with them. You can define two types of admission webhooks, validating admission webhook and mutating admission webhook. Mutating admission webhooks are invoked first, and can modify objects sent to the API server to enforce custom defaults. After all object modifications are complete, and after the incoming object is validated by the API server, validating admission webhooks are invoked and can reject requests to enforce custom policies.&lt;/p></description></item><item><title>Debugging Iptables</title><link>https://wdicc.com/debugging-iptables/</link><pubDate>Fri, 15 Apr 2022 14:30:46 +0800</pubDate><guid>https://wdicc.com/debugging-iptables/</guid><description>&lt;p>
iptables 是个很有用的工具。可以可以方便的操纵包的走向，作为 ops 不可避免的需要了解如何 debug 一些问题。&lt;/p>
&lt;p>
首先肯定是需要对 iptables 的包在各个 table 和 chain 的走向需要有了解。这个随便一搜就有很多的图片，不过各个图可能还是有些许差别，另外有些理解起来没那么好懂。不过想要了解 iptables 还是需要硬着头皮去看看。&lt;/p></description></item><item><title>妞妞再见</title><link>https://wdicc.com/bye-niuniu/</link><pubDate>Wed, 30 Mar 2022 18:35:22 +0800</pubDate><guid>https://wdicc.com/bye-niuniu/</guid><description>&lt;p>妞妞是我和老婆养的一只猫，前几天永远的离开了我们。享年将近 19 岁，算是大龄猫了。她比&lt;a href="https://wdicc.com/r.i.p-maomao">毛毛&lt;/a>还大一岁，不过毛毛早几年就走了。&lt;/p>
&lt;p>
妞妞是在毛毛之后来到我们家的，当时想的是再找一只给毛毛作伴，避免一只猫太孤单。妞妞是我老婆从淘宝领养的（你没看错就是淘宝，当时有人会把猫图片放上去等领养）。当时看图片的时候，是被妞妞忧郁的眼神吸引的。原生家庭特别好，原主人家里有钱，我记得应该是银行工作的。当时家里很多只猫，还有专门的阁楼阳光房给猫。因为猫有点多，所以想送人几只。我们去领养的时候，人家还送了很多东西给我们。一点也不像现在的一些领养，各种要求。&lt;/p></description></item><item><title>Year in Review 2021</title><link>https://wdicc.com/year-in-review-2021/</link><pubDate>Mon, 03 Jan 2022 15:08:31 +0800</pubDate><guid>https://wdicc.com/year-in-review-2021/</guid><description>&lt;p>2021 年结束了，照例来总结下。&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Family
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>幼幼越长越大了，1 岁生日的时候带着去了一趟澳门，那是唯一一个算是出国又不需要隔离的地区。不过即使这样，我的健康码回来之后有几天显示无法展示状态。。然后联系各种部门都无法解决。后来自己好了。。&lt;/p></description></item><item><title>Expand Yourself</title><link>https://wdicc.com/expand-yourself/</link><pubDate>Sun, 26 Dec 2021 11:09:15 +0800</pubDate><guid>https://wdicc.com/expand-yourself/</guid><description>&lt;p>刚开始工作的时候，一个常见的话题就是自己遇到领导或者老板好不好。什么是好领导或者好老板呢？平时什么都不管你，你想干什么就干什么这种？还是你做的任何事情都过问，细节也不放过，对你做的这些都要把控？也可能是上面两种的综合？&lt;/p></description></item><item><title>Add Monitor Graphs to Openwrt</title><link>https://wdicc.com/add-monitor-graphs-to-openwrt/</link><pubDate>Sat, 11 Dec 2021 19:38:12 +0800</pubDate><guid>https://wdicc.com/add-monitor-graphs-to-openwrt/</guid><description>&lt;p>
According to the docs here &lt;a href="https://openwrt.org/docs/guide-user/luci/luci_app_statistics,">https://openwrt.org/docs/guide-user/luci/luci_app_statistics,&lt;/a> OpenWrt supports us using the Collectd to collect metrics and the Rrdtool draw the graph later.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Install
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>opkg update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>opkg install luci-app-statistics&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
We can run the command &lt;code class="verbatim">opkg list | grep collectd-mod&lt;/code> to see what mertics we can collect. I have installed these modules&lt;/p>
&lt;div class="src src-text">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>collectd-mod-cpu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-curl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-exec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-interface
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-iwinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-load
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-memory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-network
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-ping
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-rrdtool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>collectd-mod-thermal&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Most of the plugins work out of the box, such as the &lt;code class="verbatim">cpu&lt;/code> one. And some of them need some configurations on the UI, such as the &lt;code class="verbatim">curl&lt;/code> one. You have to tell the plugin the URL you want to monitor.&lt;/p></description></item><item><title>DNS Request in Alpine Image</title><link>https://wdicc.com/dns-request-in-alpine-image/</link><pubDate>Thu, 25 Nov 2021 20:15:39 +0800</pubDate><guid>https://wdicc.com/dns-request-in-alpine-image/</guid><description>&lt;p>
Alpine 镜像可以带来很小的镜像体积，所以大家比较热衷于使用这个镜像做基础镜像。但是实际上因为一些系统库是阉割版本，可能会导致一些意想不到的问题。例如这里想说的 DNS 的问题。&lt;/p>
&lt;p>
有一个同事报告说在他们的应用的 container 里面使用 curl 请求一个网址的时候，有一定概率会收到 &lt;code class="verbatim">Could not resolve host:&lt;/code> 这个错误，但是也有一定概率会成功返回 200。同时在同一个 pod 的一个 sidecar container 里面使用 curl 访问相同的网址就没问题，总是会返回 200。&lt;/p></description></item><item><title>Setup Policy Route on Openwrt X86 With Wireguard</title><link>https://wdicc.com/setup-policy-route-on-openwrt-x86-with-wireguard/</link><pubDate>Sat, 06 Nov 2021 15:07:32 +0800</pubDate><guid>https://wdicc.com/setup-policy-route-on-openwrt-x86-with-wireguard/</guid><description>&lt;h1 id="刷系统">刷系统&lt;/h1>
&lt;p>选择 image，我用的是 x86_64 的硬件。如果你不确定，可以选择 generic 的试试看，如果你能用 64 的，启动的时候提示你用 64 位的性能更好。&lt;/p>
&lt;p>然后需要选择不同的包，主要是在下面两个里面选。&lt;/p>
&lt;ul>
&lt;li>squashfs-combined：类似传统路由器，可以任意重置路由器。但是磁盘大小也是固定大小。&lt;/li>
&lt;li>ext4-combined：磁盘可以 resize，如果你有超过 50G 的磁盘，都想要在路由器里面用，那就选这个。否则上面那个更好，毕竟有问题的时候重置很方便。这个恐怕只能重新刷系统了，麻烦多了。&lt;/li>
&lt;/ul>
&lt;p>准备两个 u 盘。如果你能有一个 u 盘可以启动加存放那个 img 那就更好了。&lt;/p></description></item><item><title>An Incomplete List of Skills Senior Engineers Need Beyond Coding</title><link>https://wdicc.com/an-incomplete-list-of-skills-senior-engineers-need-beyond-coding/</link><pubDate>Sat, 25 Sep 2021 17:37:11 +0800</pubDate><guid>https://wdicc.com/an-incomplete-list-of-skills-senior-engineers-need-beyond-coding/</guid><description>&lt;p>看到一篇文章，&lt;a href="https://skamille.medium.com/an-incomplete-list-of-skills-senior-engineers-need-beyond-coding-8ed4a521b29f">An incomplete list of skills senior engineers need, beyond coding&lt;/a>, 感觉挺有意思，本来想要翻译的，结果发现已经有人翻译了，直接贴这里好了。。&lt;/p>
&lt;p>
翻译参考了: &lt;a href="https://kanchengzxdfgcv.blogspot.com/2021/07/incomplete-list-of-skills-senior.html">https://kanchengzxdfgcv.blogspot.com/2021/07/incomplete-list-of-skills-senior.html&lt;/a>&lt;/p>
&lt;p>
How to run a meeting, and no, being the person who talks the most in the meeting is not the same thing as running it&lt;/p>
&lt;p>
&amp;gt; 知道如何主持会议。要注意成为会议里面说的最多的那个人并不同于主持会议。&lt;/p></description></item><item><title>Limit and Request in Kubernetes</title><link>https://wdicc.com/limit-and-request-in-kubernetes/</link><pubDate>Sun, 01 Aug 2021 17:28:00 +0800</pubDate><guid>https://wdicc.com/limit-and-request-in-kubernetes/</guid><description>&lt;p>程序跑在 K8s 里面的时候，特别要注意的是设置正确的 Request 和 limit。其中 Request 是 guaranteed 的资源是下限，如果节点上面不能给你保证这个资源，那么 pod 是不会调度上去的。而 Limit 是 burstable 资源，这部分资源有时候是会需要和节点上面其他程序竞争的。对于 CPU 来说，如果产生了竞争，那会遇到比较严重的 throttle，对于内存，那可能就会遇到 OOM kill 了。这些内容很容易查到资料，不多说了。&lt;/p></description></item><item><title>Local Persistent Volume vs HostPath</title><link>https://wdicc.com/local-persist-volume-vs-hostpath/</link><pubDate>Sun, 28 Feb 2021 14:52:23 +0800</pubDate><guid>https://wdicc.com/local-persist-volume-vs-hostpath/</guid><description>&lt;p>Kubernetes 可以用 Local persistent volume 来使用本机的磁盘。那和 hostPath volume 有啥区别呢？ &lt;a href="https://kubernetes.io/blog/2019/04/04/kubernetes-1.14-local-persistent-volumes-ga/">这篇文档&lt;/a>有说明，大致翻译下。&lt;/p>
&lt;p>
一般来说 Persistent volume 都是通过远程文件系统实现的。远程文件系统可以不依赖 kubernetes 节点而保存数据。但是远程文件系统往往不能提供本地文件系统一样的性能。&lt;/p>
&lt;p>
为了能更好的理解 Local Persistent Volume，有必要把它和 HostPath volume 比较下。HostPath volume 是挂载主机的一个文件或者目录到 pod。类似的 Local Persistent Volume 是挂载主机的一块磁盘或者分区到一个 pod。&lt;/p></description></item><item><title>Upgrade Yourself</title><link>https://wdicc.com/upgrade-yourself/</link><pubDate>Sun, 21 Feb 2021 10:37:37 +0800</pubDate><guid>https://wdicc.com/upgrade-yourself/</guid><description>&lt;p>前几年一直在做管理，之前写过一篇&lt;a href="https://wdicc.com/upgrade-myself/">成长&lt;/a>。最近开始做独立开发者，感觉可能前面忽视了一些东西。这里补充总结下。&lt;/p>
&lt;p>
对于各方面能力都很强的人来说，做管理人员可以让他成就更大的事情。毕竟一个人精力有限，即使很多方面都精通也没法说 7x24 把这些方面的事情都安排的妥妥当当的，这个时候必定会需要代理给别人，那就是组建团队和做所谓的管理了。&lt;/p></description></item><item><title>HTTPS SNI Host and Envoy</title><link>https://wdicc.com/https-sni-host-and-envoy/</link><pubDate>Sun, 14 Feb 2021 19:24:36 +0800</pubDate><guid>https://wdicc.com/https-sni-host-and-envoy/</guid><description>&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
TLS handshake
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
 TLS 握手之前需要先 TCP 三次握手，之后就是正式的 Client hello, Server hello, Cert key exchange 等等正常的 TLS 握手动作了。这期间会决定使用的加密版本，协商用来对称加密的密钥等。Cloudflare &lt;a href="https://www.cloudflare.com/zh-cn/learning/ssl/what-happens-in-a-tls-handshake/">这篇文章&lt;/a>似乎讲的很清楚。&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
HTTP2
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;p>
 http2 并不是必须使用 https 部署。但是因为主流浏览器都只支持基于 https 的 http2，所以如果服务是面向浏览器的，那还是应该使用 https。&lt;a href="https://imququ.com/post/protocol-negotiation-in-http2.html">这篇文章&lt;/a>讲的很好。&lt;/p></description></item><item><title>Year in Review 2020</title><link>https://wdicc.com/year-in-review-2020/</link><pubDate>Mon, 04 Jan 2021 19:27:00 +0800</pubDate><guid>https://wdicc.com/year-in-review-2020/</guid><description>&lt;p>
2020 ends with the pandemic. WFH is the new normal. Many thanks to my company, I was staying at home for most of last year.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Family
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>My daughter was born last year. Here name is Yoyo. Thanks for the WFH, that I could stay with her most of the time. Sometimes it was enjoyable to watch her grow up. Last winter, my wife and I have to go to the hospital to do regular checks every 2 or 3 days in the morning very early. It was tough for us. But anyway, Yoyo joins the family. She looks smart and adorable. I hope she will grow up soon. So we can travel over the world. I can&amp;#39;t wait to through her into the clean water in the Maldives and see the smiling face from here.&lt;/p></description></item><item><title>How to Write a Git Commit Message</title><link>https://wdicc.com/how-to-write-a-git-commit-message/</link><pubDate>Fri, 01 Jan 2021 09:44:57 +0800</pubDate><guid>https://wdicc.com/how-to-write-a-git-commit-message/</guid><description>&lt;p>原文这里: &lt;a href="https://chris.beams.io/posts/git-commit/,">https://chris.beams.io/posts/git-commit/,&lt;/a> 只记录下关键内容。&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
The seven rules of a great Git commit message
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
举个例子：&lt;/p>
&lt;pre class="example">
Summarize changes in around 50 characters or less

More detailed explanatory text, if necessary. Wrap it to about 72
characters or so. In some contexts, the first line is treated as the
subject of the commit and the rest of the text as the body. The
blank line separating the summary from the body is critical (unless
you omit the body entirely); various tools like `log`, `shortlog`
and `rebase` can get confused if you run the two together.

Explain the problem that this commit is solving. Focus on why you
are making this change as opposed to how (the code explains that).
Are there side effects or other unintuitive consequences of this
change? Here&amp;#39;s the place to explain them.

Further paragraphs come after blank lines.

 - Bullet points are okay, too

 - Typically a hyphen or asterisk is used for the bullet, preceded
 by a single space, with blank lines in between, but conventions
 vary here

If you use an issue tracker, put references to them at the bottom,
like this:

Resolves: #123
See also: #456, #789
&lt;/pre>
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
1. 用空行把消息标题和消息内容分开
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;p>
git 命令的帮助文档这么写：&lt;/p></description></item><item><title>English Learning</title><link>https://wdicc.com/english-learning/</link><pubDate>Sat, 26 Dec 2020 17:48:51 +0800</pubDate><guid>https://wdicc.com/english-learning/</guid><description>&lt;p>我大概算是从 2019 年中开始算是比较多的花了一些时间在英语学习上面，标志是开始认真的去背单词了。在此之前顶多算是一点零散的学习，或者都算不上什么学习。这里多少总结下自己的学习过程。&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
使用 Anki 等符合记忆曲线的工具帮助记忆单词
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
背单词是学习英语必经之路，宣传不用背单词就可以提升英语能力的都是在耍流氓。而单词学习又是一个很枯燥也基本没有捷径的事情，所以如果真的想提升自己的英语能力，先找一个能让自己坚持下来的单词记忆方式吧。&lt;/p></description></item><item><title>Kustomize Plugins</title><link>https://wdicc.com/kustomize-plugins/</link><pubDate>Sat, 12 Sep 2020 02:35:02 +0800</pubDate><guid>https://wdicc.com/kustomize-plugins/</guid><description>&lt;p>Kustomize support us to write plugins by using python, shell scripts, or any language that can create executables in your system. Here is the &lt;a href="https://kubernetes-sigs.github.io/kustomize/guides/plugins/execpluginguidedexample/">doc&lt;/a>.&lt;/p>
&lt;p>
There are two types of plugins, generators and transformers. Both of the plugin executable will receive the definition for it as arg[1]. And for transformers, it will receive all the other resource definitions also, so you can do transform works.&lt;/p>
&lt;p>
The &lt;code class="verbatim">apiVersion&lt;/code> in the plugin definition yaml file determines the location of the executable. So if you set it to &lt;code class="verbatim">apiVersion: wd/v1&lt;/code> , then kustomize will try to find the plugin at these places:&lt;/p>
&lt;ul>
&lt;li>(&amp;#39;&amp;#39;; homed in $KUSTOMIZE_PLUGIN_HOME)&lt;/li>
&lt;li>(&amp;#39;kustomize/plugin&amp;#39;; homed in $XDG_CONFIG_HOME)&lt;/li>
&lt;li>(&amp;#39;&lt;em>Users/wd&lt;/em>.config/kustomize/plugin&amp;#39;; homed in default value of $XDG_CONFIG_HOME)&lt;/li>
&lt;li>(&amp;#39;/Users/wd/kustomize/plugin&amp;#39;; homed in home directory)&lt;/li>
&lt;/ul>
&lt;p>You can put your plugin at these directories. For me, I&amp;#39;d like to put it in &lt;code class="verbatim">(pwd)/kustomize/plugin/&lt;/code>, and then run kustomize &lt;code class="verbatim">XDG_CONFIG_HOME=$(pwd) kustomize build --enable_alpha_plugins apps/base/nginx/&lt;/code> .&lt;/p></description></item><item><title>Using Cert-manager + rout53 With Kiam</title><link>https://wdicc.com/use-certmanager-with-kiam/</link><pubDate>Thu, 10 Sep 2020 10:59:41 +0800</pubDate><guid>https://wdicc.com/use-certmanager-with-kiam/</guid><description>&lt;p>
As described here: &lt;a href="https://cert-manager.io/docs/configuration/acme/dns01/route53/#set-up-an-iam-role,">https://cert-manager.io/docs/configuration/acme/dns01/route53/#set-up-an-iam-role,&lt;/a> First you need to create a role, for example `dns-manager`.&lt;/p>
&lt;div class="src src-json">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Statement&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Action&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;route53:GetChange&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Resource&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;arn:aws:route53:::change/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Action&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;route53:ChangeResourceRecordSets&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;route53:ListResourceRecordSets&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Resource&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;arn:aws:route53:::hostedzone/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Action&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;route53:ListHostedZonesByName&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Resource&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You can replace the &lt;code class="verbatim">*&lt;/code> in &lt;code class="verbatim">arn:aws:route53:::hostedzone/*&lt;/code> with a specific zone id.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Use cert-manager with out kiam
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
If you didn&amp;#39;t use kiam, you just need to allow the instance(role) to assume this role. Attach this policy to the instance role&lt;/p>
&lt;div class="src src-json">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Statement&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Action&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sts:AssumeRole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Principal&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;AWS&amp;#34;&lt;/span>: &lt;span style="color:#960050;background-color:#1e0010">&amp;lt;role-arn&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Allow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Replace the &lt;code class="verbatim">&amp;lt;role-arn&amp;gt;&lt;/code> to the instance role.&lt;/p></description></item></channel></rss>